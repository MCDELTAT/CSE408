<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="16:LedToRadioAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f4bfcc6d020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f4bfcf78a60"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f4bfcf78a60"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f4bfcf76dc0"/></to>
    </wire>
    <wire loc="17:LedToRadioAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4bfcc6d660"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4bfccb1a80"/></to>
    </wire>
    <wire loc="51:/usr/bin/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f4bfccb1a80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4bfccad400"/></to>
    </wire>
    <wire loc="18:LedToRadioAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x7f4bfcc589e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4bfc963140"/></to>
    </wire>
    <wire loc="52:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4bfc963140"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4bfcb55050"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:LedToRadioAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4bfcbb05f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4bfbd06c30"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4bfbd06c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4bfb3d3e40"/></to>
    </wire>
    <wire loc="20:LedToRadioAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4bfcb9e7e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4bfbd048b0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4bfbd048b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4bfb3d2a70"/></to>
    </wire>
    <wire loc="21:LedToRadioAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4bfcb8f8f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4bfbd06020"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4bfbd06020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4bfb3d3230"/></to>
    </wire>
    <wire loc="22:LedToRadioAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4bfcb86180"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4bfbcff910"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4bfbcff910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4bfc958800"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:LedToRadioAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7f4bfcb84a50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4bfc95d500"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4bfc95d500"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4bfc916610"/></to>
    </wire>
    <wire loc="24:LedToRadioAppC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f4bfcb807b0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f4bfbcf4e00"/></to>
    </wire>
    <wire loc="49:/usr/bin/tinyos-main/tos/platforms/micaz/DemoSensorC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f4bfbcf4e00"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f4bfb379990"/></to>
    </wire>
    <wire loc="103:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4bfcf79020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4bfb3610e0"/></to>
    </wire>
    <wire loc="96:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4bfcf79020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4bfb45b3b0"/></to>
    </wire>
    <wire loc="119:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4bfcf79020"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f4bfc1ddb60"/></to>
    </wire>
    <wire loc="52:/usr/bin/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4bfcf79020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4bfc337080"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4bfcf79020"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f4bfb54a0a0"/></to>
    </wire>
    <wire loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4bfcf79020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4bfc4a2700"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4bfcf79020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4bfb581560"/></to>
    </wire>
    <wire loc="96:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4bfcf79020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4bfb656b40"/></to>
    </wire>
    <wire loc="53:/usr/bin/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4bfcf79020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4bfcb50e60"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f4bfccd5470"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f4bfd13f020"/></to>
    </wire>
    <wire loc="53:/usr/bin/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f4bfd13f020"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f4bfcfc58a0"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f4bfccd4020"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f4bfc0c0680"/></to>
    </wire>
    <wire loc="122:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f4bfccd4020"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f4bfc1dd020"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f4bfccd4020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4bfcf75080"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4bfcf75080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4bfcf62380"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4bfccd4720"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f4bfcf79020"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f4bfcf6b020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4bfbcc3150"/></to>
    </wire>
    <wire loc="26:/usr/bin/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f4bfcf6b020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4bfbecdb50"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f4bfcf651d0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f4bfcd04690"/></to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f4bfcf61180"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4bfcd04020"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f4bfcf62a60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4bfcc75920"/></to>
    </wire>
    <wire loc="62:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f4bfcf62a60"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f4bfcf6aaf0"/></to>
    </wire>
    <wire loc="46:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f4bfcf6aaf0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f4bfcf58660"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f4bfcf5b1f0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f4bfcf6b020"/></to>
    </wire>
    <wire loc="48:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7f4bfcf51b90"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7f4bfcf46060"/></to>
    </wire>
    <wire loc="141:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f4bfcf46060"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f4bfce9dda0"/></to>
    </wire>
    <wire loc="49:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f4bfcf57e60"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f4bfcf5b1f0"/></to>
    </wire>
    <wire loc="191:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f4bfcf10cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfcd99160"/></to>
    </wire>
    <wire loc="165:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f4bfcf2c4e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f4bfce562b0"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f4bfce562b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfb972e20"/></to>
    </wire>
    <wire loc="176:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f4bfcf1f350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f4bfce368f0"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f4bfce368f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfb8fa3f0"/></to>
    </wire>
    <wire loc="185:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f4bfcf16cb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f4bfce19c10"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f4bfce19c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfb8893f0"/></to>
    </wire>
    <wire loc="196:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f4bfcf08060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfcd6d6d0"/></to>
    </wire>
    <wire loc="143:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f4bfcf43670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f4bfce9a2b0"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f4bfce9a2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfbac30a0"/></to>
    </wire>
    <wire loc="183:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f4bfcf18670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f4bfce1b8f0"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f4bfce1b8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfb892e20"/></to>
    </wire>
    <wire loc="146:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f4bfcf41cb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f4bfce8ba20"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f4bfce8ba20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfba61060"/></to>
    </wire>
    <wire loc="157:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f4bfcf35cb0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f4bfce6b020"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f4bfce6b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfb9e50a0"/></to>
    </wire>
    <wire loc="168:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f4bfcf29e40"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f4bfce4c760"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f4bfce4c760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfb9686d0"/></to>
    </wire>
    <wire loc="179:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f4bfcf1ccb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f4bfce2cda0"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f4bfce2cda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfb8f1e20"/></to>
    </wire>
    <wire loc="138:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f4bfcf4a800"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f4bfcea88f0"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f4bfcea88f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfbae20a0"/></to>
    </wire>
    <wire loc="149:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f4bfcf3d670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f4bfce87020"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f4bfce87020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfba589b0"/></to>
    </wire>
    <wire loc="160:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f4bfcf31670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f4bfce685d0"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f4bfce685d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfb9d89b0"/></to>
    </wire>
    <wire loc="171:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f4bfcf24670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f4bfce48c10"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f4bfce48c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfb95d0a0"/></to>
    </wire>
    <wire loc="188:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f4bfcf12670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f4bfce152b0"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f4bfce152b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfb880e20"/></to>
    </wire>
    <wire loc="194:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f4bfcf0cb20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfcd7d160"/></to>
    </wire>
    <wire loc="174:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f4bfcf22cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f4bfce395d0"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f4bfce395d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfb901e20"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f4bfce9dda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfbad99b0"/></to>
    </wire>
    <wire loc="152:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f4bfcf39020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f4bfce7d5d0"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f4bfce7d5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfba4d3f0"/></to>
    </wire>
    <wire loc="192:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f4bfcf0e4e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfcd95c90"/></to>
    </wire>
    <wire loc="155:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f4bfcf37670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f4bfce75d30"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f4bfce75d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfb9eca60"/></to>
    </wire>
    <wire loc="166:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f4bfcf2b800"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f4bfce55440"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f4bfce55440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfb96e0a0"/></to>
    </wire>
    <wire loc="177:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f4bfcf1e670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f4bfce35a80"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f4bfce35a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfb8f76d0"/></to>
    </wire>
    <wire loc="186:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f4bfcf14020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f4bfce18da0"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f4bfce18da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfb8866d0"/></to>
    </wire>
    <wire loc="144:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f4bfcf42990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f4bfce99440"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f4bfce99440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfbac03f0"/></to>
    </wire>
    <wire loc="147:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f4bfcf3f020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f4bfce8ac10"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f4bfce8ac10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfba5e3f0"/></to>
    </wire>
    <wire loc="158:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f4bfcf33020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f4bfce6a2b0"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f4bfce6a2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfb9e23f0"/></to>
    </wire>
    <wire loc="169:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f4bfcf26060"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f4bfce4a8f0"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f4bfce4a8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfb9659b0"/></to>
    </wire>
    <wire loc="180:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f4bfcf1a020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f4bfce2a020"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f4bfce2a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfb8ea0a0"/></to>
    </wire>
    <wire loc="139:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f4bfcf49b20"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f4bfcea6a80"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f4bfcea6a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfbadf3f0"/></to>
    </wire>
    <wire loc="150:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f4bfcf3c990"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f4bfce862b0"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f4bfce862b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfba55e20"/></to>
    </wire>
    <wire loc="161:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f4bfcf30990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f4bfce67760"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f4bfce67760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfb9d4e20"/></to>
    </wire>
    <wire loc="189:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f4bfcf11990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f4bfce0d440"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f4bfce0d440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfb87c0a0"/></to>
    </wire>
    <wire loc="164:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f4bfcf2d020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f4bfce57020"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f4bfce57020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfb975c90"/></to>
    </wire>
    <wire loc="175:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f4bfcf20020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f4bfce37760"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f4bfce37760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfb8fd0a0"/></to>
    </wire>
    <wire loc="184:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f4bfcf17990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f4bfce1aa80"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f4bfce1aa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfb88e0a0"/></to>
    </wire>
    <wire loc="195:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f4bfcf0ae40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfcd79c90"/></to>
    </wire>
    <wire loc="142:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f4bfcf45350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f4bfce9b020"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f4bfce9b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfbad5e20"/></to>
    </wire>
    <wire loc="153:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f4bfcf38350"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f4bfce7c760"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f4bfce7c760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfba4a6d0"/></to>
    </wire>
    <wire loc="182:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f4bfcf19350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f4bfce1c7a0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f4bfce1c7a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfb895c90"/></to>
    </wire>
    <wire loc="156:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f4bfcf36990"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f4bfce6de60"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f4bfce6de60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfb9e9e20"/></to>
    </wire>
    <wire loc="167:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f4bfcf2ab20"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f4bfce4d5d0"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f4bfce4d5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfb96b3f0"/></to>
    </wire>
    <wire loc="178:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f4bfcf1d990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f4bfce2dc10"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f4bfce2dc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfb8f49b0"/></to>
    </wire>
    <wire loc="187:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f4bfcf13350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f4bfce16020"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f4bfce16020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfb8839b0"/></to>
    </wire>
    <wire loc="137:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f4bfcf59540"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f4bfcea96b0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f4bfcea96b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfbae6e20"/></to>
    </wire>
    <wire loc="148:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f4bfcf3e350"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f4bfce89da0"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f4bfce89da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfba5b6d0"/></to>
    </wire>
    <wire loc="159:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f4bfcf32350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f4bfce69440"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f4bfce69440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfb9df6d0"/></to>
    </wire>
    <wire loc="170:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f4bfcf25350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f4bfce49a80"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f4bfce49a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfb962e20"/></to>
    </wire>
    <wire loc="193:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f4bfcf0d800"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfcd896d0"/></to>
    </wire>
    <wire loc="173:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f4bfcf23990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f4bfce3a3f0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f4bfce3a3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfb904c90"/></to>
    </wire>
    <wire loc="162:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f4bfcf2fcb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f4bfce668f0"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f4bfce668f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfb9d00a0"/></to>
    </wire>
    <wire loc="140:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f4bfcf48e40"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f4bfcea5c10"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f4bfcea5c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfbadc6d0"/></to>
    </wire>
    <wire loc="151:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f4bfcf3bcb0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f4bfce85440"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f4bfce85440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4bfba510a0"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f4bfd0b0e10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4bfcfc3850"/></to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f4bfcfc2dd0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f4bfd0bfa30"/></to>
    </wire>
    <wire loc="92:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f4bfcf9e690"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f4bfca6f4c0"/></to>
    </wire>
    <wire loc="53:/usr/bin/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4bfcc75920"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4bfccbfdc0"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f4bfcca7b90"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f4bfcc7e020"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f4bfcc7e020"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7f4bfcf49b20"/></to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f4bfcca6e30"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f4bfcc7d380"/></to>
    </wire>
    <wire loc="57:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f4bfcc7d380"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7f4bfcf4a800"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f4bfcca4020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f4bfcc776a0"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f4bfcc776a0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7f4bfcf59540"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f4bfcb55050"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4bfcb4dc30"/></to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f4bfcb4dc30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4bfc98a150"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4bfcb50e60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4bfcb41c80"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f4bfcb40500"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f4bfc97c790"/></to>
    </wire>
    <wire loc="35:/usr/bin/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4bfcb41c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4bfca0a980"/></to>
    </wire>
    <wire loc="62:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f4bfc984640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4bfc9d9830"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f4bfc9d4cd0"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7f4bfcb31960"/></to>
    </wire>
    <wire loc="36:/usr/bin/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7f4bfcb31960"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4bfca091d0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4bfc97ba60"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7f4bfcb2e020"/></to>
    </wire>
    <wire loc="37:/usr/bin/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7f4bfcb2e020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4bfca05650"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4bfca05650"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4bfb798650"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4bfca0a980"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4bfb79d910"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f4bfca091d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4bfb79c140"/></to>
    </wire>
    <wire loc="74:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4bfb796a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4bfca8f920"/></to>
    </wire>
    <wire loc="94:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4bfca8f920"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4bfca7a9c0"/></to>
    </wire>
    <wire loc="75:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f4bfb781c90"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f4bfca86c10"/></to>
    </wire>
    <wire loc="95:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f4bfca86c10"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f4bfca75c10"/></to>
    </wire>
    <wire loc="76:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f4bfb77f020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4bfca83060"/></to>
    </wire>
    <wire loc="96:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f4bfca83060"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4bfca72060"/></to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f4bfb77b2c0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f4bfca80580"/></to>
    </wire>
    <wire loc="97:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f4bfca80580"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f4bfca6fc00"/></to>
    </wire>
    <wire loc="74:/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f4bfc9cf020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4bfd0b0e10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f4bfc97fa00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4bfd0b0e10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4bfc916610"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4bfc8df770"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f4bfc94bbf0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f4bfc90f020"/></to>
    </wire>
    <wire loc="84:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f4bfc90f020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f4bfc8d2430"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4bfc9562b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4bfc90d020"/></to>
    </wire>
    <wire loc="89:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4bfc90d020"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f4bfc8ceba0"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4bfc959530"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4bfc913640"/></to>
    </wire>
    <wire loc="81:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4bfc913640"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4bfc8d57f0"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f4bfc957430"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f4bfc910430"/></to>
    </wire>
    <wire loc="83:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f4bfc910430"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f4bfc8d3880"/></to>
    </wire>
    <wire loc="76:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f4bfc93ecb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f4bfc904e80"/></to>
    </wire>
    <wire loc="93:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f4bfc904e80"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f4bfc8ad080"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4bfc958800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4bfc912810"/></to>
    </wire>
    <wire loc="82:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4bfc912810"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4bfc8d4b20"/></to>
    </wire>
    <wire loc="75:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4bfc942350"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4bfc9044e0"/></to>
    </wire>
    <wire loc="92:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4bfc9044e0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4bfc8b6670"/></to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f4bfc948020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f4bfc903990"/></to>
    </wire>
    <wire loc="94:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f4bfc903990"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f4bfc8adb70"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4bfc955020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4bfc90dc90"/></to>
    </wire>
    <wire loc="90:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4bfc90dc90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4bfc8cf470"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f4bfc92cc30"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f4bfc9027a0"/></to>
    </wire>
    <wire loc="95:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f4bfc9027a0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f4bfc8a6930"/></to>
    </wire>
    <wire loc="81:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7f4bfc925cd0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f4bfc8ea020"/></to>
    </wire>
    <wire loc="104:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f4bfc8ea020"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f4bfc899130"/></to>
    </wire>
    <wire loc="80:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4bfc91bdc0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4bfc8e3130"/></to>
    </wire>
    <wire loc="103:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4bfc8e3130"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4bfc8953f0"/></to>
    </wire>
    <wire loc="215:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4bfc8df770"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4bfc4240e0"/></to>
    </wire>
    <wire loc="99:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f4bfc8f66e0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f4bfc89e020"/></to>
    </wire>
    <wire loc="305:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f4bfc89e020"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f4bfc1fd3b0"/></to>
    </wire>
    <wire loc="270:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4bfc8953f0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4bfc252b00"/></to>
    </wire>
    <wire loc="124:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f4bfc8d2430"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f4bfc68c420"/></to>
    </wire>
    <wire loc="126:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f4bfc8ceba0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4bfc68f8b0"/></to>
    </wire>
    <wire loc="121:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4bfc8d57f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4bfc68e6c0"/></to>
    </wire>
    <wire loc="123:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f4bfc8d3880"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f4bfc68dc90"/></to>
    </wire>
    <wire loc="98:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f4bfc8f9210"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f4bfc8a2a90"/></to>
    </wire>
    <wire loc="303:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f4bfc8a2a90"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f4bfc201e80"/></to>
    </wire>
    <wire loc="216:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f4bfc8ad080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f4bfc422a40"/></to>
    </wire>
    <wire loc="122:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4bfc8d4b20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4bfc68d530"/></to>
    </wire>
    <wire loc="269:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f4bfc899130"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f4bfc24ea60"/></to>
    </wire>
    <wire loc="102:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f4bfc8e7a40"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f4bfc89bbb0"/></to>
    </wire>
    <wire loc="307:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f4bfc89bbb0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f4bfc1f1a40"/></to>
    </wire>
    <wire loc="97:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f4bfc8fbc40"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f4bfc8a5540"/></to>
    </wire>
    <wire loc="304:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f4bfc8a5540"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f4bfc1f5e70"/></to>
    </wire>
    <wire loc="248:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4bfc8b6670"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4bfc2ea560"/></to>
    </wire>
    <wire loc="86:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f4bfc90fc70"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f4bfc8d01d0"/></to>
    </wire>
    <wire loc="128:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f4bfc8d01d0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f4bfc68cb80"/></to>
    </wire>
    <wire loc="187:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f4bfc8adb70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f4bfc44a330"/></to>
    </wire>
    <wire loc="125:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4bfc8cf470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4bfc690280"/></to>
    </wire>
    <wire loc="224:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f4bfc8a6930"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f4bfc38e700"/></to>
    </wire>
    <wire loc="100:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4bfc8e71e0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4bfc89b350"/></to>
    </wire>
    <wire loc="306:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4bfc89b350"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4bfc1f11e0"/></to>
    </wire>
    <wire loc="87:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f4bfc90e8c0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f4bfc8d0df0"/></to>
    </wire>
    <wire loc="129:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f4bfc8d0df0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f4bfc68b3e0"/></to>
    </wire>
    <wire loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4bfc4240e0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f4bfc420630"/></to>
    </wire>
    <wire loc="88:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f4bfc1fd3b0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f4bfc1d10d0"/></to>
    </wire>
    <wire loc="160:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x7f4bfc8cb020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f4bfc5c1a10"/></to>
    </wire>
    <wire loc="148:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x7f4bfc8bd2c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4bfc5fca90"/></to>
    </wire>
    <wire loc="98:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4bfc5fca90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4bfb652210"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f4bfc68c420"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f4bfb6bab00"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4bfc68e6c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4bfb6bcd60"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f4bfc68dc90"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f4bfb6ba3e0"/></to>
    </wire>
    <wire loc="161:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7f4bfc8ae490"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f4bfc4e5c40"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7f4bfc4e5c40"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f4bfb5db2e0"/></to>
    </wire>
    <wire loc="162:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7f4bfc8b7890"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4bfc5f6ac0"/></to>
    </wire>
    <wire loc="85:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f4bfc201e80"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f4bfc1d5b90"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f4bfc422a40"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f4bfb556020"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4bfc68f8b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4bfb6bc020"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4bfc68d530"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4bfb6bbb40"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f4bfc24ea60"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f4bfb4b4bb0"/></to>
    </wire>
    <wire loc="81:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f4bfc1f1a40"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f4bfc0c4020"/></to>
    </wire>
    <wire loc="94:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f4bfc1f5e70"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f4bfc1ccc80"/></to>
    </wire>
    <wire loc="158:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x7f4bfc8bea60"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7f4bfc5c2720"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f4bfc68cb80"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f4bfb6b83e0"/></to>
    </wire>
    <wire loc="117:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f4bfc44a330"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7f4bfc446610"/></to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f4bfc38e700"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f4bfb5495f0"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4bfc690280"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4bfb6be8b0"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4bfc252b00"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4bfb4b8cb0"/></to>
    </wire>
    <wire loc="159:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x7f4bfc8cc840"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7f4bfc5c1440"/></to>
    </wire>
    <wire loc="96:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4bfc1f11e0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4bfc1c8020"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f4bfc68b3e0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f4bfb6b8b40"/></to>
    </wire>
    <wire loc="102:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f4bfc82b880"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f4bfc4e8b20"/></to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f4bfc4e8b20"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f4bfb5de100"/></to>
    </wire>
    <wire loc="103:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f4bfc8248d0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f4bfc7a69b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f4bfc823160"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f4bfc24ea60"/></to>
    </wire>
    <wire loc="105:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x7f4bfc828020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f4bfc202d90"/></to>
    </wire>
    <wire loc="79:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f4bfc202d90"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f4bfc1d6aa0"/></to>
    </wire>
    <wire loc="110:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f4bfc76cb40"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4bfc1f0dd0"/></to>
    </wire>
    <wire loc="100:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f4bfc1f0dd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4bfc0c9ac0"/></to>
    </wire>
    <wire loc="116:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f4bfc6888c0"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7f4bfc853e30"/></to>
    </wire>
    <wire loc="117:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4bfc6898f0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f4bfc67d550"/></to>
    </wire>
    <wire loc="118:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4bfc6882b0"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x7f4bfc57f770"/></to>
    </wire>
    <wire loc="119:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f4bfc68ba70"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x7f4bfc57fd80"/></to>
    </wire>
    <wire loc="137:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4bfc66e910"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4bfc5fca90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4bfc66e020"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x7f4bfc580e00"/></to>
    </wire>
    <wire loc="153:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f4bfc5c0080"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f4bfc4e8b20"/></to>
    </wire>
    <wire loc="154:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4bfc5bc120"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7f4bfc5810a0"/></to>
    </wire>
    <wire loc="155:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4bfc5bca50"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7f4bfc5819d0"/></to>
    </wire>
    <wire loc="156:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f4bfc5bd2e0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f4bfc580020"/></to>
    </wire>
    <wire loc="169:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4bfc57dc40"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4bfc463a40"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4bfc463a40"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4bfb5824a0"/></to>
    </wire>
    <wire loc="170:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4bfc57b5d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4bfc44bd30"/></to>
    </wire>
    <wire loc="114:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4bfc44bd30"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f4bfc4487c0"/></to>
    </wire>
    <wire loc="171:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f4bfc57bbe0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f4bfc4e3020"/></to>
    </wire>
    <wire loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f4bfc4e3020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f4bfb5da590"/></to>
    </wire>
    <wire loc="176:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f4bfc4e3e60"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f4bfc449020"/></to>
    </wire>
    <wire loc="115:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f4bfc449020"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f4bfc448dd0"/></to>
    </wire>
    <wire loc="181:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f4bfc461d70"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x7f4bfc86e9c0"/></to>
    </wire>
    <wire loc="182:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4bfc462c00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4bfc44b400"/></to>
    </wire>
    <wire loc="113:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4bfc44b400"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f4bfc449e60"/></to>
    </wire>
    <wire loc="191:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4bfc447ba0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4bfc2ea560"/></to>
    </wire>
    <wire loc="193:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4bfc449e60"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4bfc424ba0"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4bfc424ba0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f4bfc41f120"/></to>
    </wire>
    <wire loc="194:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4bfc4487c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4bfc4235d0"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4bfc4235d0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f4bfc41fa50"/></to>
    </wire>
    <wire loc="195:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f4bfc448dd0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f4bfc423ba0"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f4bfc423ba0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f4bfc41e0a0"/></to>
    </wire>
    <wire loc="211:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f4bfc420630"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4bfc390cc0"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4bfc390cc0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f4bfb54b590"/></to>
    </wire>
    <wire loc="212:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4bfc41f120"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4bfc38f7e0"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4bfc38f7e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4bfb54a6b0"/></to>
    </wire>
    <wire loc="213:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4bfc41fa50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4bfc38e130"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f4bfc38e130"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f4bfb549020"/></to>
    </wire>
    <wire loc="214:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f4bfc41e0a0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f4bfc24a660"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f4bfc24a660"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f4bfb4b17e0"/></to>
    </wire>
    <wire loc="221:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f4bfc38de20"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f4bfc3271d0"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f4bfc3271d0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f4bfb5083a0"/></to>
    </wire>
    <wire loc="222:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f4bfc38c730"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f4bfc462400"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f4bfc462400"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f4bfb582d90"/></to>
    </wire>
    <wire loc="223:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f4bfc38d080"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f4bfc216c20"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f4bfc216c20"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7f4bfc20f410"/></to>
    </wire>
    <wire loc="228:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4bfc4615d0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f4bfc327ac0"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f4bfc327ac0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f4bfb508c90"/></to>
    </wire>
    <wire loc="237:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f4bfc3240a0"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7f4bfc866340"/></to>
    </wire>
    <wire loc="238:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4bfc326310"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f4bfc31f470"/></to>
    </wire>
    <wire loc="239:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4bfc326c40"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f4bfc31fd60"/></to>
    </wire>
    <wire loc="240:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f4bfc325400"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f4bfc7a69b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x7f4bfc2e6e60"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f4bfc2419b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f4bfc2e80e0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f4bfc7a69b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f4bfc2e8d30"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7f4bfc873550"/></to>
    </wire>
    <wire loc="253:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4bfc2e9020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f4bfc2c6270"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f4bfc2c6270"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f4bfc2c0b00"/></to>
    </wire>
    <wire loc="254:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4bfc2e9950"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f4bfc2c6b60"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f4bfc2c6b60"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f4bfc2bf450"/></to>
    </wire>
    <wire loc="259:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f4bfc2bd2b0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7f4bfc85aa40"/></to>
    </wire>
    <wire loc="260:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4bfc2c0b00"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f4bfc215a40"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f4bfc215a40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f4bfc20e440"/></to>
    </wire>
    <wire loc="261:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4bfc2bf450"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f4bfc214400"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f4bfc214400"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f4bfc20ed70"/></to>
    </wire>
    <wire loc="262:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x7f4bfc2bfbf0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7f4bfc2025c0"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f4bfc2025c0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7f4bfc1d62d0"/></to>
    </wire>
    <wire loc="267:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f4bfc249750"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f4bfc1f1a40"/></to>
    </wire>
    <wire loc="268:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f4bfc248800"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f4bfc240590"/></to>
    </wire>
    <wire loc="271:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7f4bfc247760"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f4bfc2419b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="276:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f4bfc21d4a0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f4bfc202d90"/></to>
    </wire>
    <wire loc="286:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f4bfc20cb40"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7f4bfc85aa40"/></to>
    </wire>
    <wire loc="287:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4bfc20e440"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f4bfc203460"/></to>
    </wire>
    <wire loc="76:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f4bfc203460"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f4bfc1d7120"/></to>
    </wire>
    <wire loc="288:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4bfc20ed70"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f4bfc203dd0"/></to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f4bfc203dd0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f4bfc1d7a90"/></to>
    </wire>
    <wire loc="289:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x7f4bfc20f410"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f4bfc206610"/></to>
    </wire>
    <wire loc="75:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f4bfc206610"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f4bfc1d82e0"/></to>
    </wire>
    <wire loc="301:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f4bfc1ea1f0"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x7f4bfc882350"/></to>
    </wire>
    <wire loc="302:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f4bfc1e92e0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f4bfc24ea60"/></to>
    </wire>
    <wire loc="309:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f4bfc1e5110"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f4bfc2419b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="310:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7f4bfc1e5ca0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f4bfc2419b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="311:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f4bfc1e48d0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f4bfc2419b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="312:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f4bfc1e3470"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f4bfc7a69b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f4bfc7a69b0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f4bfb6ea8a0"/></to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f4bfb6e9830"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4bfc76cb40"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f4bfb6e5940"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f4bfc76e750"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4bfb6b40f0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4bfc6aa5a0"/></to>
    </wire>
    <wire loc="75:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f4bfb6b7310"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f4bfc68ba70"/></to>
    </wire>
    <wire loc="76:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4bfb6b6120"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f4bfc6898f0"/></to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4bfb6b6a50"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f4bfc6882b0"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f4bfb6b50a0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f4bfc6888c0"/></to>
    </wire>
    <wire loc="99:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4bfc5fb850"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f4bfb651020"/></to>
    </wire>
    <wire loc="100:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4bfc5fa020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4bfb6517a0"/></to>
    </wire>
    <wire loc="101:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4bfb6500d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4bfc5fa8f0"/></to>
    </wire>
    <wire loc="103:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f4bfb650890"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f4bfb6552b0"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f4bfb64f480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4bfd0b0e10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4bfb5d9460"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4bfc6aa5a0"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f4bfb5d8020"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f4bfc4e3e60"/></to>
    </wire>
    <wire loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7f4bfb57f7e0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7f4bfc4a31c0"/></to>
    </wire>
    <wire loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7f4bfc4a31c0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7f4bfc4a2d50"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f4bfb57e410"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f4bfb57cd40"/></to>
    </wire>
    <wire loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f4bfb57cd40"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f4bfc49e020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4bfb581bd0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f4bfc462c00"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4bfb5805d0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f4bfc4615d0"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x7f4bfb580d30"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f4bfc461d70"/></to>
    </wire>
    <wire loc="118:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7f4bfc4452f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4bfc447ba0"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f4bfb547020"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f4bfc38d080"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f4bfb547dc0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f4bfc76e750"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f4bfb546880"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f4bfc38de20"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f4bfb545270"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f4bfc38c730"/></to>
    </wire>
    <wire loc="189:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f4bfb5442f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4bfd0b0e10"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x7f4bfb544ad0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4bfd0b0e10"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x7f4bfb545a50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4bfd0b0e10"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f4bfb507520"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f4bfc326310"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f4bfb504a10"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f4bfc3240a0"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f4bfb507e50"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f4bfc326c40"/></to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f4bfb5055f0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f4bfc325400"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f4bfb504270"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f4bfc342a20"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f4bfc342a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f4bfc336a20"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x7f4bfb503610"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4bfd0b0e10"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f4bfc33f920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f4bfc337940"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4bfc3469b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4bfc337080"/></to>
    </wire>
    <wire loc="76:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4bfc2c9a00"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f4bfc2c2120"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f4bfc2c4400"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7f4bfc2bfbf0"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f4bfc2c7470"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7f4bfc2c1be0"/></to>
    </wire>
    <wire loc="74:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f4bfc2c4b60"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f4bfc2be440"/></to>
    </wire>
    <wire loc="80:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f4bfc2c3a80"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f4bfc2bd2b0"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f4bfc2c8e80"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7f4bfc2c15d0"/></to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f4bfc2c8590"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7f4bfc2c2be0"/></to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f4bfb4a94c0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f4bfc248800"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f4bfb4ae250"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f4bfc249750"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f4bfb4ad3f0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f4bfc255080"/></to>
    </wire>
    <wire loc="26:/usr/bin/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f4bfc255080"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f4bfcb40500"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7f4bfb4af640"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x7f4bfc247760"/></to>
    </wire>
    <wire loc="76:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f4bfc2172b0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f4bfc211920"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f4bfc214b60"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7f4bfc20d5a0"/></to>
    </wire>
    <wire loc="74:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f4bfc212400"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f4bfc20dd40"/></to>
    </wire>
    <wire loc="80:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f4bfc2112b0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f4bfc20cb40"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f4bfc216650"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7f4bfc210d70"/></to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f4bfc217d30"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7f4bfc210440"/></to>
    </wire>
    <wire loc="75:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f4bfc0c9ac0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4bfbe7a6e0"/></to>
    </wire>
    <wire loc="91:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4bfc1f8940"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4bfc1ce630"/></to>
    </wire>
    <wire loc="81:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f4bfc0c4020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f4bfbe723a0"/></to>
    </wire>
    <wire loc="83:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f4bfc1b3340"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f4bfc1ea1f0"/></to>
    </wire>
    <wire loc="86:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f4bfc1b2110"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f4bfc1e5110"/></to>
    </wire>
    <wire loc="89:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7f4bfc1b2ca0"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x7f4bfc1e5ca0"/></to>
    </wire>
    <wire loc="92:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f4bfc1b18d0"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f4bfc1e48d0"/></to>
    </wire>
    <wire loc="95:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f4bfc1b0780"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f4bfc1e92e0"/></to>
    </wire>
    <wire loc="98:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f4bfc1b41a0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f4bfc0c4020"/></to>
    </wire>
    <wire loc="101:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f4bfc1ab2e0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f4bfc1e3470"/></to>
    </wire>
    <wire loc="103:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7f4bfc1c8760"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x7f4bfc0d2950"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7f4bfc0d2950"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f4bfcf41cb0"/></to>
    </wire>
    <wire loc="104:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f4bfc1c6b50"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x7f4bfc0ceb50"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f4bfc0ceb50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4bfc0a0850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f4bfc1c0aa0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f4bfc0cd920"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f4bfc0cd920"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f4bfc0a1020"/></to>
    </wire>
    <wire loc="107:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7f4bfc1c4670"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x7f4bfc0cc4e0"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7f4bfc0cc4e0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7f4bfcf38350"/></to>
    </wire>
    <wire loc="108:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f4bfc1c3980"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f4bfc0cb7f0"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f4bfc0cb7f0"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7f4bfcf43670"/></to>
    </wire>
    <wire loc="110:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7f4bfc1b7550"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7f4bfc0cab10"/></to>
    </wire>
    <wire loc="57:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7f4bfc0cab10"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7f4bfc0c39d0"/></to>
    </wire>
    <wire loc="111:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f4bfc1ac6b0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f4bfc76e750"/></to>
    </wire>
    <wire loc="112:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f4bfc1b5d20"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f4bfbe179a0"/></to>
    </wire>
    <wire loc="847:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x7f4bfc113920"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4bfd0b0e10"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/usr/bin/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f4bfbe7a6e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4bfb410610"/></to>
    </wire>
    <wire loc="95:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f4bfc0a1020"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f4bfc092480"/></to>
    </wire>
    <wire loc="48:/usr/bin/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f4bfbe723a0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f4bfbe22b60"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x7f4bfc0b33d0"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7f4bfcf25350"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x7f4bfc0b1680"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7f4bfcf29e40"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f4bfc0b67f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4bfbf99530"/></to>
    </wire>
    <wire loc="91:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f4bfbf99530"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f4bfbf7e850"/></to>
    </wire>
    <wire loc="96:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f4bfc095ae0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f4bfc091020"/></to>
    </wire>
    <wire loc="94:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f4bfc09f840"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f4bfc093e00"/></to>
    </wire>
    <wire loc="92:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4bfc0a21f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4bfc0937e0"/></to>
    </wire>
    <wire loc="97:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4bfc0a0850"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4bfc091d20"/></to>
    </wire>
    <wire loc="99:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7f4bfc072430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4bfbfb4210"/></to>
    </wire>
    <wire loc="98:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4bfbfb4210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4bfb4599d0"/></to>
    </wire>
    <wire loc="100:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4bfc071130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4bfbfb37a0"/></to>
    </wire>
    <wire loc="100:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4bfbfb37a0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4bfb457020"/></to>
    </wire>
    <wire loc="101:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7f4bfc08e020"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7f4bfc0233e0"/></to>
    </wire>
    <wire loc="83:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7f4bfc0233e0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7f4bfc01d350"/></to>
    </wire>
    <wire loc="102:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f4bfc071920"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f4bfcfa1020"/></to>
    </wire>
    <wire loc="296:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7f4bfc04f190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4bfd0b0e10"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7f4bfc00ce50"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f4bfcfa1020"/></to>
    </wire>
    <wire loc="86:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7f4bfc012390"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f4bfcf41cb0"/></to>
    </wire>
    <wire loc="87:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f4bfc011650"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7f4bfcf3f020"/></to>
    </wire>
    <wire loc="88:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7f4bfc00f800"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7f4bfcf3e350"/></to>
    </wire>
    <wire loc="89:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7f4bfc00eb10"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7f4bfcf3d670"/></to>
    </wire>
    <wire loc="99:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4bfbfb3020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f4bfb458850"/></to>
    </wire>
    <wire loc="101:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4bfb457910"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4bfbfb10d0"/></to>
    </wire>
    <wire loc="103:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f4bfb456120"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f4bfb45b9c0"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f4bfb456c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4bfd0b0e10"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f4bfbf92d80"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f4bfbf7f020"/></to>
    </wire>
    <wire loc="89:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4bfbfa9b20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4bfbf87b90"/></to>
    </wire>
    <wire loc="93:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f4bfbf8c650"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f4bfbf735a0"/></to>
    </wire>
    <wire loc="94:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f4bfbf8c650"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f4bfbf6fba0"/></to>
    </wire>
    <wire loc="95:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f4bfbf8c650"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7f4bfbf6a120"/></to>
    </wire>
    <wire loc="43:/usr/bin/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f4bfb40da30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4bfbfa9b20"/></to>
    </wire>
    <wire loc="44:/usr/bin/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f4bfb408db0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4bfbf8c650"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/usr/bin/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4bfbec1410"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4bfbfa9b20"/></to>
    </wire>
    <wire loc="49:/usr/bin/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4bfbe21e40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4bfbe48cf0"/></to>
    </wire>
    <wire loc="50:/usr/bin/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f4bfbe260f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4bfbe6e200"/></to>
    </wire>
    <wire loc="31:/usr/bin/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4bfbe6e200"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4bfbe68020"/></to>
    </wire>
    <wire loc="32:/usr/bin/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4bfbe51280"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4bfbfa9b20"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4bfb3d3230"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4bfb3c7b20"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4bfb3d3e40"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4bfc9562b0"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4bfb3d2a70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4bfc955020"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f4bfbd02020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f4bfb3d0120"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f4bfb3d0120"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4bfc942350"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4bfb3c6910"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4bfbd6fc20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4bfb3c5590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4bfc955020"/></to>
    </wire>
    <wire loc="53:/usr/bin/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f4bfbd6fc20"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f4bfbd1e580"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f4bfbd1d400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f4bfc959530"/></to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4bfbd1b060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4bfc955020"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4bfbd1a720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4bfc9562b0"/></to>
    </wire>
    <wire loc="169:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f4bfbd19480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4bfd0b0e10"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f4bfbd19c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4bfd0b0e10"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f4bfbcf8020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f4bfc9562b0"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f4bfbcf8c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f4bfc955020"/></to>
    </wire>
    <wire loc="48:/usr/bin/tinyos-main/tos/platforms/mica/VoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f4bfb379990"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f4bfb375980"/></to>
    </wire>
    <wire loc="36:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f4bfb375980"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f4bfbce6e70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/usr/bin/tinyos-main/tos/platforms/mica/VoltageC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f4bfb373060"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f4bfbb38160"/></to>
    </wire>
    <wire loc="37:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f4bfbcdbc20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f4bfb373060"/></to>
    </wire>
    <wire loc="38:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4bfbcd7b50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4bfbcd3860"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4bfbcd0af0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4bfb373950"/></to>
    </wire>
    <wire loc="31:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f4bfbce6e70"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f4bfbb68150"/></to>
    </wire>
    <wire loc="32:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7f4bfbcd9e60"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7f4bfbb9a300"/></to>
    </wire>
    <wire loc="33:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4bfbb4d300"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4bfbcd7b50"/></to>
    </wire>
    <wire loc="34:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f4bfbb97b90"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f4bfbcdbc20"/></to>
    </wire>
    <wire loc="36:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f4bfbb50af0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f4bfbb9c580"/></to>
    </wire>
    <wire loc="37:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f4bfbb99b80"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f4bfbcccdd0"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f4bfbcccdd0"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f4bfbcc2020"/></to>
    </wire>
    <wire loc="38:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f4bfbb968d0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f4bfbe179a0"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f4bfbcc6c90"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f4bfbcc29c0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4bfbcd3860"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4bfbbca7f0"/></to>
    </wire>
    <wire loc="105:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4bfbbca7f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4bfb35f970"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4bfbbc73e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4bfbcd0af0"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f4bfbcc0020"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f4bfbcc4cc0"/></to>
    </wire>
    <wire loc="50:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f4bfbcc4cc0"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f4bfbc761f0"/></to>
    </wire>
    <wire loc="74:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f4bfbcaf630"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f4bfcf651d0"/></to>
    </wire>
    <wire loc="76:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4bfbbc3200"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4bfbcc37c0"/></to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4bfbbad020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4bfbbc9e40"/></to>
    </wire>
    <wire loc="107:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4bfbbc9e40"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4bfb35d020"/></to>
    </wire>
    <wire loc="51:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f4bfbc747f0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f4bfcfa1020"/></to>
    </wire>
    <wire loc="106:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4bfbbc96c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f4bfb35e850"/></to>
    </wire>
    <wire loc="108:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4bfbbc8a70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4bfb35dc30"/></to>
    </wire>
    <wire loc="109:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4bfb35c590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4bfbbc73e0"/></to>
    </wire>
    <wire loc="111:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f4bfb35cd50"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f4bfb3616f0"/></to>
    </wire>
    <wire loc="75:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f4bfb358020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4bfd0b0e10"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4bfb326ad0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4bfbbc3200"/></to>
    </wire>
    <wire loc="82:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f4bfb325270"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f4bfbbc3960"/></to>
    </wire>
    <wire loc="84:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4bfb325840"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4bfbbad020"/></to>
    </wire>
    <wire loc="85:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4bfb324590"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4bfbbadc30"/></to>
    </wire>
    <wire loc="104:/usr/bin/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x7f4bfbb84660"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4bfd0b0e10"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/usr/bin/tinyos-main/tos/system/MainC.nc">
      <documentation loc="1:/usr/bin/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/usr/bin/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/usr/bin/tinyos-main/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/usr/bin/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/usr/bin/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/usr/bin/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/usr/bin/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/usr/bin/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/usr/bin/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/usr/bin/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/usr/bin/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/usr/bin/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/usr/bin/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/usr/bin/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/usr/bin/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedToRadioC" loc="4:LedToRadioC.nc">
      <module/>
    </component>
    <component qname="LedToRadioAppC.Timer0" loc="44(LedToRadioAppC.Timer0):/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/usr/bin/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/usr/bin/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/usr/bin/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd0219b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4bfd021d20"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f4bfcb22070"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd0219b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4bfd021d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd0219b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4bfd021d20"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd0219b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4bfd021d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="37:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/usr/bin/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/usr/bin/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/usr/bin/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/usr/bin/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/usr/bin/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/usr/bin/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/usr/bin/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/usr/bin/tinyos-main/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/usr/bin/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/usr/bin/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/usr/bin/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TOne" ref="0x7f4bfcfca410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/usr/bin/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/usr/bin/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/usr/bin/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TOne" ref="0x7f4bfcfca410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4bfd01e180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4bfd01e180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4bfd01e180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/usr/bin/tinyos-main/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="LedToRadioAppC.AMSenderC" loc="47(LedToRadioAppC.AMSenderC):/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LedToRadioAppC.AMSenderC.SenderC" loc="47(LedToRadioAppC.AMSenderC.SenderC):/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LedToRadioAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(LedToRadioAppC.AMSenderC.SenderC.AMQueueEntryP):/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/usr/bin/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LedToRadioAppC.AMReceiverC" loc="43(LedToRadioAppC.AMReceiverC):/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LedToRadioAppC.Sensor" loc="41(LedToRadioAppC.Sensor):/usr/bin/tinyos-main/tos/platforms/micaz/DemoSensorC.nc">
      <documentation loc="32:/usr/bin/tinyos-main/tos/platforms/micaz/DemoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DemoSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LedToRadioAppC.Sensor.DemoChannel" loc="39(LedToRadioAppC.Sensor.DemoChannel):/usr/bin/tinyos-main/tos/platforms/mica/VoltageC.nc">
      <documentation loc="31:/usr/bin/tinyos-main/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LedToRadioAppC.Sensor.DemoChannel.AdcReadClientC" loc="21(LedToRadioAppC.Sensor.DemoChannel.AdcReadClientC):/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="17:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <documentation loc="10:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="51:/usr/bin/tinyos-main/tos/chips/atm1281/adc/Atm128AdcP.nc" safe="">
      <documentation loc="40:/usr/bin/tinyos-main/tos/chips/atm1281/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega1281 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega1281 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="47:/usr/bin/tinyos-main/tos/chips/atm1281/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="38:/usr/bin/tinyos-main/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega1281 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1281 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/usr/bin/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/usr/bin/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/usr/bin/tinyos-main/tos/chips/atm1281/adc/AdcP.nc" safe="">
      <documentation loc="39:/usr/bin/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/usr/bin/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/usr/bin/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageP" loc="38:/usr/bin/tinyos-main/tos/platforms/mica/VoltageP.nc">
      <documentation loc="31:/usr/bin/tinyos-main/tos/platforms/mica/VoltageP.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f4bfcf055a0" loc="40:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f4bfcf05910" loc="40:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f4bfcf05c80" loc="40:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f4bfcef69f0" loc="41:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f4bfcef6d80" loc="42:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f4bfcef3170" loc="43:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f4bfcef34c0" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f4bfcdfd0d0" loc="42:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f4bfcdfd460" loc="43:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f4bfcdfd7f0" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f4bfcdfdb40" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f4bfcb22070" loc="58:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f4bfcb22070"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f4bfcb22380" loc="58:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f4bfcb16d30" loc="58:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f4bfcb16d30"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f4bfcb13060" loc="58:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4bfc9ff020" loc="46:/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4bfc9ff020"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4bfc9cb230" loc="46:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4bfc9cb230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f4bfc9cb560" loc="46:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4bfc97dde0" loc="46:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4bfc97dde0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f4bfc665210" loc="83:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/usr/bin/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f4bfc657540" loc="42:/usr/bin/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/usr/bin/tinyos-main/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/usr/bin/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f4bfbecc290" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f4bfbecc290"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7f4bfbecc600" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f4bfbebad60" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f4bfbebad60"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f4bfbeb7580" loc="52:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f4bfbeb7580"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7f4bfbeb78a0" loc="53:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f4bfbe6a910" loc="42:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f4bfbe6a910"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f4bfbe67120" loc="43:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f4bfbe67120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f4bfbe47600" loc="55:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f4bfbe47600"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f4bfbe47dd0" loc="56:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f4bfbe47dd0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f4bfbe46220" loc="57:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f4bfbe46220"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f4bfbe46a00" loc="58:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f4bfbe46a00"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f4bfbe46dd0" loc="59:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f4bfbe44630" loc="60:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f4bfbe44630"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/usr/bin/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f4bfbd9f800" loc="47:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f4bfbd953a0" loc="47:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f4bfbd8e0d0" loc="43:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f4bfbd67020" loc="45:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f4bfbcfe330" loc="43:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DemoSensorC" loc="41:/usr/bin/tinyos-main/tos/platforms/micaz/DemoSensorC.nc" abstract="">
      <documentation loc="32:/usr/bin/tinyos-main/tos/platforms/micaz/DemoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VoltageC" loc="39:/usr/bin/tinyos-main/tos/platforms/mica/VoltageC.nc" abstract="">
      <documentation loc="31:/usr/bin/tinyos-main/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f4bfbc3fb50" loc="89:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f4bfbc32700" loc="42:/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/usr/bin/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f4bfbc155e0" loc="52:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/usr/bin/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/usr/bin/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/usr/bin/tinyos-main/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/usr/bin/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x7f4bfbb671f0" loc="23:/usr/bin/tinyos-main/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x7f4bfbb671f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f4bfcf79020" loc="58:/usr/bin/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f4bfcf79020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfcf793a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f4bfcf78a60" loc="57:/usr/bin/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f4bfcf78a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f4bfcf78de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f4bfcf6b020" loc="52:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f4bfcf6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfcf6b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4bfcf75080" loc="46:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4bfcf75080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfcf75400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f4bfcf651d0" loc="50:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f4bfcf651d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f4bfcf65550"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f4bfcf656e0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f4bfcf65870"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f4bfcf65a00"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f4bfcf65b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f4bfcf62a60" loc="45:/usr/bin/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f4bfcf62a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfcf62de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4bfcf62380" loc="44:/usr/bin/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4bfcf62380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfcf62700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f4bfcf61180" loc="46:/usr/bin/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f4bfcf61180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfcf61500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f4bfcf5b1f0" loc="41:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f4bfcf5b1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfcf5b570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f4bfcf6aaf0" loc="40:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f4bfcf6aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfcf6ae70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f4bfcf57e60" loc="45:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f4bfcf57e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfcf56210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7f4bfcf51b90" loc="44:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7f4bfcf51b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf57020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf571b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf57340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf574d0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf57660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf577f0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf57980"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf57b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f4bfcf58660" loc="43:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f4bfcf58660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfcf589e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f4bfcf10cb0" loc="98:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f4bfcf10cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf0f610"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf0f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf0f930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf0fac0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf0fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf0fde0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf0e020"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf0e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f4bfcf2c4e0" loc="72:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f4bfcf2c4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf2c860"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf2c9f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf2cb80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf2cd10"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf2b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf2b1b0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf2b340"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf2b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f4bfcf1f350" loc="83:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f4bfcf1f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf1f6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf1f860"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf1f9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf1fb80"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf1fd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf1e020"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf1e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf1e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f4bfcf16cb0" loc="92:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f4bfcf16cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf150a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf15230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf153c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf15550"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf156e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf15870"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf15a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf15b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f4bfcf08060" loc="103:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f4bfcf08060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf083e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf08570"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf08700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf08890"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf08a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf08bb0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf08d40"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf07020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f4bfcf43670" loc="50:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f4bfcf43670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf439f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf43b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf43d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf42020"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf421b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf42340"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf424d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf42660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f4bfcf18670" loc="90:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f4bfcf18670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf189f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf18b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf18d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf17020"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf171b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf17340"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf174d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf17660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f4bfcf41cb0" loc="53:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f4bfcf41cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf400a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf40230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf403c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf40550"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf406e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf40870"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf40a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf40b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f4bfcf35cb0" loc="64:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f4bfcf35cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf340a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf34230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf343c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf34550"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf346e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf34870"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf34a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf34b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f4bfcf29e40" loc="75:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f4bfcf29e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf271e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf27370"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf27500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf27690"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf27820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf279b0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf27b40"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf27cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f4bfcf1ccb0" loc="86:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f4bfcf1ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf1b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf1b230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf1b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf1b550"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf1b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf1b870"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf1ba00"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf1bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f4bfcf4a800" loc="45:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f4bfcf4a800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf4ab80"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf4ad10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf49020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf491b0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf49340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf494d0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf49660"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf497f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f4bfcf3d670" loc="56:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f4bfcf3d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf3d9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf3db80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf3dd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf3c020"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf3c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf3c340"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf3c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf3c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f4bfcf31670" loc="67:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f4bfcf31670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf319f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf31b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf31d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf30020"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf301b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf30340"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf304d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf30660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f4bfcf24670" loc="78:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f4bfcf24670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf249f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf24b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf24d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf23020"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf231b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf23340"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf234d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf23660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f4bfcf12670" loc="95:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f4bfcf12670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf129f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf12b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf12d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf11020"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf111b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf11340"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf114d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf11660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f4bfcf0cb20" loc="101:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f4bfcf0cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf0a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf0a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf0a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf0a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf0a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf0a7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf0a980"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf0ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f4bfcf22cb0" loc="81:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f4bfcf22cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf210a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf21230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf213c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf21550"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf216e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf21870"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf21a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf21b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f4bfcf46060" loc="48:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f4bfcf46060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf463e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf46570"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf46700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf46890"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf46a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf46bb0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf46d40"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf45020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f4bfcf39020" loc="59:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f4bfcf39020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf393a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf39530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf396c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf39850"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf399e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf39b70"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf39d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf38020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f4bfcf0e4e0" loc="99:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f4bfcf0e4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf0e860"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf0e9f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf0eb80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf0ed10"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf0d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf0d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf0d340"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf0d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f4bfcf37670" loc="62:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f4bfcf37670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf379f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf37b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf37d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf36020"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf361b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf36340"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf364d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf36660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f4bfcf2b800" loc="73:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f4bfcf2b800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf2bb80"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf2bd10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf2a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf2a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf2a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf2a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf2a660"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf2a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f4bfcf1e670" loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f4bfcf1e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf1e9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf1eb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf1ed10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf1d020"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf1d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf1d340"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf1d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf1d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f4bfcf14020" loc="93:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f4bfcf14020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf143a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf14530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf146c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf14850"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf149e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf14b70"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf14d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf13020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f4bfcf42990" loc="51:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f4bfcf42990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf42d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf41020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf411b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf41340"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf414d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf41660"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf417f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf41980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f4bfcf3f020" loc="54:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f4bfcf3f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf3f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf3f530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf3f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf3f850"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf3f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf3fb70"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf3fd00"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf3e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f4bfcf33020" loc="65:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f4bfcf33020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf333a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf33530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf336c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf33850"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf339e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf33b70"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf33d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf32020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f4bfcf26060" loc="76:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f4bfcf26060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf263e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf26570"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf26700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf26890"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf26a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf26bb0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf26d40"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf25020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f4bfcf1a020" loc="87:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f4bfcf1a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf1a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf1a530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf1a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf1a850"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf1a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf1ab70"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf1ad00"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf19020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f4bfcf49b20" loc="46:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f4bfcf49b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf48020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf481b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf48340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf484d0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf48660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf487f0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf48980"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf48b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f4bfcf3c990" loc="57:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f4bfcf3c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf3ce10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf3b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf3b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf3b340"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf3b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf3b660"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf3b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf3b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f4bfcf30990" loc="68:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f4bfcf30990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf30d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf2f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf2f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf2f340"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf2f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf2f660"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf2f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf2f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f4bfcf11990" loc="96:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f4bfcf11990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf11d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf10020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf101b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf10340"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf104d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf10660"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf107f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf10980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f4bfcf2d020" loc="71:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f4bfcf2d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf2d5a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf2d730"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf2d8c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf2da50"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf2dbe0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf2dd70"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf2c020"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf2c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f4bfcf20020" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f4bfcf20020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf203a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf20530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf206c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf20850"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf209e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf20b70"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf20d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf1f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f4bfcf17990" loc="91:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f4bfcf17990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf17d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf16020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf161b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf16340"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf164d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf16660"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf167f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf16980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f4bfcf0ae40" loc="102:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f4bfcf0ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf091e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf09370"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf09500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf09690"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf09820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf099b0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf09b40"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf09cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f4bfcf45350" loc="49:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f4bfcf45350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf456d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf45860"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf459f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf45b80"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf45d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf43020"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf431b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf43340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f4bfcf38350" loc="60:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f4bfcf38350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf386d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf38860"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf389f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf38b80"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf38d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf37020"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf371b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf37340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f4bfcf19350" loc="89:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f4bfcf19350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf196d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf19860"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf199f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf19b80"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf19d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf18020"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf181b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf18340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f4bfcf36990" loc="63:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f4bfcf36990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf36d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf35020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf351b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf35340"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf354d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf35660"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf357f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf35980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f4bfcf2ab20" loc="74:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f4bfcf2ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf29020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf291b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf29340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf294d0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf29660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf297f0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf29980"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf29b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f4bfcf1d990" loc="85:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f4bfcf1d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf1dd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf1c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf1c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf1c340"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf1c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf1c660"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf1c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf1c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f4bfcf13350" loc="94:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f4bfcf13350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf136d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf13860"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf139f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf13b80"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf13d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf12020"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf121b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf12340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f4bfcf59540" loc="44:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f4bfcf59540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf598c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf59a50"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf59be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf59d70"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf4a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf4a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf4a340"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf4a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f4bfcf3e350" loc="55:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f4bfcf3e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf3e6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf3e860"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf3e9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf3eb80"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf3ed10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf3d020"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf3d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf3d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f4bfcf32350" loc="66:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f4bfcf32350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf326d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf32860"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf329f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf32b80"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf32d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf31020"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf311b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf31340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f4bfcf25350" loc="77:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f4bfcf25350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf256d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf25860"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf259f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf25b80"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf25d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf24020"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf241b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf24340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f4bfcf0d800" loc="100:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f4bfcf0d800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf0db80"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf0dd10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf0c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf0c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf0c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf0c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf0c660"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf0c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f4bfcf23990" loc="80:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f4bfcf23990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf23d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf22020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf221b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf22340"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf224d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf22660"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf227f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf22980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f4bfcf2fcb0" loc="69:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f4bfcf2fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf2e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf2e230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf2e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf2e550"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf2e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf2e870"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf2ea00"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf2eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f4bfcf48e40" loc="47:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f4bfcf48e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf471e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf47370"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf47500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf47690"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf47820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf479b0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf47b40"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf47cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f4bfcf3bcb0" loc="58:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f4bfcf3bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcf3a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcf3a230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcf3a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcf3a550"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcf3a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcf3a870"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcf3aa00"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcf3ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f4bfcea6a80" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f4bfcea6a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcea6e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcea5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcea51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcea5340"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcea54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcea5660"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcea57f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcea5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f4bfce9b020" loc="49:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f4bfce9b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce9b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce9b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce9b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce9b850"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce9b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce9bb70"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce9bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce9a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f4bfcea96b0" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f4bfcea96b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcea9a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcea9bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcea9d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcea8020"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcea81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcea8340"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcea84d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcea8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f4bfcea5c10" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f4bfcea5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce9d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce9d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce9d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce9d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce9d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce9d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce9d980"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce9db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f4bfce9a2b0" loc="50:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f4bfce9a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce9a630"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce9a7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce9a950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce9aae0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce9ac70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce9ae00"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce99020"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce991b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f4bfcea88f0" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f4bfcea88f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcea8c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcea8e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcea6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcea61b0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcea6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcea64d0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcea6660"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcea67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f4bfce9dda0" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f4bfce9dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce9c180"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce9c310"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce9c4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce9c630"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce9c7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce9c950"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce9cae0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce9cc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f4bfce99440" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f4bfce99440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce997c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce99950"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce99ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce99c70"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce99e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce98020"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce981b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce98340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfbae6e20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfbae6e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfbae51c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfbae5350"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfbae54e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfbae5670"/>
        <function-ref name="get" scoped="" ref="0x7f4bfbae5800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfbae5990"/>
        <function-ref name="set" scoped="" ref="0x7f4bfbae5b20"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfbae5cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfbae20a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfbae20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfbae2420"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfbae25b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfbae2740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfbae28d0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfbae2a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfbae2bf0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfbae2d80"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfbae1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfbadf3f0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfbadf3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfbadf770"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfbadf900"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfbadfa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfbadfc20"/>
        <function-ref name="get" scoped="" ref="0x7f4bfbadfdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfbade020"/>
        <function-ref name="set" scoped="" ref="0x7f4bfbade1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfbade340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfbadc6d0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfbadc6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfbadca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfbadcbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfbadcd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfbadb020"/>
        <function-ref name="get" scoped="" ref="0x7f4bfbadb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfbadb340"/>
        <function-ref name="set" scoped="" ref="0x7f4bfbadb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfbadb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfbad99b0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfbad99b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfbad9d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfbad7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfbad71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfbad7340"/>
        <function-ref name="get" scoped="" ref="0x7f4bfbad74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfbad7660"/>
        <function-ref name="set" scoped="" ref="0x7f4bfbad77f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfbad7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfbad5e20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfbad5e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfbac61c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfbac6350"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfbac64e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfbac6670"/>
        <function-ref name="get" scoped="" ref="0x7f4bfbac6800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfbac6990"/>
        <function-ref name="set" scoped="" ref="0x7f4bfbac6b20"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfbac6cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfbac30a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfbac30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfbac3420"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfbac35b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfbac3740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfbac38d0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfbac3a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfbac3bf0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfbac3d80"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfbac2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfbac03f0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfbac03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfbac0770"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfbac0900"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfbac0a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfbac0c20"/>
        <function-ref name="get" scoped="" ref="0x7f4bfbac0db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfbabf020"/>
        <function-ref name="set" scoped="" ref="0x7f4bfbabf1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfbabf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f4bfce89da0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f4bfce89da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce88180"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce88310"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce884a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce88630"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce887c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce88950"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce88ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce88c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f4bfce85440" loc="49:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f4bfce85440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce857c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce85950"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce85ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce85c70"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce85e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce7d020"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce7d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce7d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f4bfce8ba20" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f4bfce8ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce8bda0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce8a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce8a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce8a340"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce8a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce8a660"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce8a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce8a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f4bfce87020" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f4bfce87020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce873a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce87530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce876c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce87850"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce879e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce87b70"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce87d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce86020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f4bfce7d5d0" loc="50:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f4bfce7d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce7d950"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce7dae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce7dc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce7de00"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce7c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce7c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce7c340"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce7c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f4bfce8ac10" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f4bfce8ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce89020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce891b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce89340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce894d0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce89660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce897f0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce89980"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce89b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f4bfce862b0" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f4bfce862b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce86630"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce867c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce86950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce86ae0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce86c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce86e00"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce85020"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce851b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f4bfce7c760" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f4bfce7c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce7cae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce7cc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce7ce00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce7b020"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce7b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce7b340"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce7b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce7b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfba61060" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfba61060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfba613e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfba61570"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfba61700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfba61890"/>
        <function-ref name="get" scoped="" ref="0x7f4bfba61a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfba61bb0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfba61d40"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfba60020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfba5e3f0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfba5e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfba5e770"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfba5e900"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfba5ea90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfba5ec20"/>
        <function-ref name="get" scoped="" ref="0x7f4bfba5edb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfba5d020"/>
        <function-ref name="set" scoped="" ref="0x7f4bfba5d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfba5d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfba5b6d0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfba5b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfba5ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfba5bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfba5bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfba5a020"/>
        <function-ref name="get" scoped="" ref="0x7f4bfba5a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfba5a340"/>
        <function-ref name="set" scoped="" ref="0x7f4bfba5a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfba5a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfba589b0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfba589b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfba58d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfba57020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfba571b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfba57340"/>
        <function-ref name="get" scoped="" ref="0x7f4bfba574d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfba57660"/>
        <function-ref name="set" scoped="" ref="0x7f4bfba577f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfba57980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfba55e20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfba55e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfba541c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfba54350"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfba544e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfba54670"/>
        <function-ref name="get" scoped="" ref="0x7f4bfba54800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfba54990"/>
        <function-ref name="set" scoped="" ref="0x7f4bfba54b20"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfba54cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfba510a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfba510a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfba51420"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfba515b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfba51740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfba518d0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfba51a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfba51bf0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfba51d80"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfba4f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfba4d3f0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfba4d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfba4d770"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfba4d900"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfba4da90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfba4dc20"/>
        <function-ref name="get" scoped="" ref="0x7f4bfba4ddb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfba4c020"/>
        <function-ref name="set" scoped="" ref="0x7f4bfba4c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfba4c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfba4a6d0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfba4a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfba4aa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfba4abe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfba4ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfba49020"/>
        <function-ref name="get" scoped="" ref="0x7f4bfba491b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfba49340"/>
        <function-ref name="set" scoped="" ref="0x7f4bfba494d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfba49660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f4bfce6b020" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f4bfce6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce6b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce6b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce6b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce6b850"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce6b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce6bb70"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce6bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce6a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f4bfce685d0" loc="49:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f4bfce685d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce68950"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce68ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce68c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce68e00"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce67020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce671b0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce67340"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce674d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f4bfce75d30" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f4bfce75d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce6d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce6d270"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce6d400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce6d590"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce6d720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce6d8b0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce6da40"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce6dbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f4bfce6a2b0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f4bfce6a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce6a630"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce6a7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce6a950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce6aae0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce6ac70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce6ae00"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce69020"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce691b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f4bfce67760" loc="50:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f4bfce67760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce67ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce67c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce67e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce66020"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce661b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce66340"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce664d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce66660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f4bfce6de60" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f4bfce6de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce6c210"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce6c3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce6c530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce6c6c0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce6c850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce6c9e0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce6cb70"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce6cd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f4bfce69440" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f4bfce69440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce697c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce69950"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce69ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce69c70"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce69e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce68020"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce681b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce68340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f4bfce668f0" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f4bfce668f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce66c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce66e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce5d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce5d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce5d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce5d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce5d660"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce5d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfb9eca60" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfb9eca60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfb9ecde0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfb9eb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfb9eb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfb9eb340"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb9eb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfb9eb660"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb9eb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfb9eb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfb9e9e20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfb9e9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfb9e81c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfb9e8350"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfb9e84e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfb9e8670"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb9e8800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfb9e8990"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb9e8b20"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfb9e8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfb9e50a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfb9e50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfb9e5420"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfb9e55b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfb9e5740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfb9e58d0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb9e5a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfb9e5bf0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb9e5d80"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfb9e4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfb9e23f0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfb9e23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfb9e2770"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfb9e2900"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfb9e2a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfb9e2c20"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb9e2db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfb9e1020"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb9e11b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfb9e1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfb9df6d0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfb9df6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfb9dfa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfb9dfbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfb9dfd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfb9de020"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb9de1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfb9de340"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb9de4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfb9de660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfb9d89b0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfb9d89b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfb9d8d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfb9d6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfb9d61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfb9d6340"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb9d64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfb9d6660"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb9d67f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfb9d6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfb9d4e20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfb9d4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfb9d31c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfb9d3350"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfb9d34e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfb9d3670"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb9d3800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfb9d3990"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb9d3b20"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfb9d3cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfb9d00a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfb9d00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfb9d0420"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfb9d05b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfb9d0740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfb9d08d0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb9d0a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfb9d0bf0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb9d0d80"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfb9cf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f4bfce55440" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f4bfce55440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce557c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce55950"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce55ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce55c70"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce55e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce4d020"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce4d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce4d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f4bfce4a8f0" loc="49:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f4bfce4a8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce4ac70"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce4ae00"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce49020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce491b0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce49340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce494d0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce49660"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce497f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f4bfce57020" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f4bfce57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce573a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce57530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce576c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce57850"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce579e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce57b70"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce57d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce56020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f4bfce4d5d0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f4bfce4d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce4d950"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce4dae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce4dc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce4de00"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce4c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce4c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce4c340"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce4c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f4bfce49a80" loc="50:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f4bfce49a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce49e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce48020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce481b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce48340"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce484d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce48660"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce487f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce48980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f4bfce562b0" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f4bfce562b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce56630"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce567c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce56950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce56ae0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce56c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce56e00"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce55020"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce551b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f4bfce4c760" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f4bfce4c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce4cae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce4cc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce4ce00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce4a020"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce4a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce4a340"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce4a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce4a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f4bfce48c10" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f4bfce48c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce47020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce471b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce47340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce474d0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce47660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce477f0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce47980"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce47b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfb975c90" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfb975c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfb9740a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfb974230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfb9743c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfb974550"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb9746e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfb974870"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb974a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfb974b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfb972e20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfb972e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfb9711c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfb971350"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfb9714e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfb971670"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb971800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfb971990"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb971b20"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfb971cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfb96e0a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfb96e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfb96e420"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfb96e5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfb96e740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfb96e8d0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb96ea60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfb96ebf0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb96ed80"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfb96d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfb96b3f0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfb96b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfb96b770"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfb96b900"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfb96ba90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfb96bc20"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb96bdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfb96a020"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb96a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfb96a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfb9686d0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfb9686d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfb968a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfb968be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfb968d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfb967020"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb9671b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfb967340"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb9674d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfb967660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfb9659b0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfb9659b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfb965d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfb964020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfb9641b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfb964340"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb9644d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfb964660"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb9647f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfb964980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfb962e20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfb962e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfb9601c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfb960350"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfb9604e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfb960670"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb960800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfb960990"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb960b20"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfb960cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfb95d0a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfb95d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfb95d420"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfb95d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfb95d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfb95d8d0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb95da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfb95dbf0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb95dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfb95c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f4bfce37760" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f4bfce37760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce37ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce37c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce37e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce36020"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce361b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce36340"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce364d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce36660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f4bfce2dc10" loc="49:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f4bfce2dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce2c020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce2c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce2c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce2c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce2c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce2c7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce2c980"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce2cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f4bfce3a3f0" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f4bfce3a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce3a770"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce3a900"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce3aa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce3ac20"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce3adb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce39020"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce391b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce39340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f4bfce368f0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f4bfce368f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce36c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce36e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce35020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce351b0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce35340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce354d0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce35660"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce357f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f4bfce2cda0" loc="50:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f4bfce2cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce2b180"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce2b310"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce2b4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce2b630"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce2b7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce2b950"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce2bae0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce2bc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f4bfce395d0" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f4bfce395d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce39950"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce39ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce39c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce39e00"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce37020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce371b0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce37340"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce374d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f4bfce35a80" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f4bfce35a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce35e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce2d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce2d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce2d340"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce2d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce2d660"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce2d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce2d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f4bfce2a020" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f4bfce2a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce2a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce2a530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce2a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce2a850"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce2a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce2ab70"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce2ad00"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce29020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfb904c90" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfb904c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfb9030a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfb903230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfb9033c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfb903550"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb9036e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfb903870"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb903a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfb903b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfb901e20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfb901e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfb9001c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfb900350"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfb9004e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfb900670"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb900800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfb900990"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb900b20"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfb900cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfb8fd0a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfb8fd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfb8fd420"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfb8fd5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfb8fd740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfb8fd8d0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb8fda60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfb8fdbf0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb8fdd80"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfb8fc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfb8fa3f0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfb8fa3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfb8fa770"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfb8fa900"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfb8faa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfb8fac20"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb8fadb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfb8f9020"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb8f91b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfb8f9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfb8f76d0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfb8f76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfb8f7a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfb8f7be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfb8f7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfb8f6020"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb8f61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfb8f6340"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb8f64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfb8f6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfb8f49b0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfb8f49b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfb8f4d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfb8f3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfb8f31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfb8f3340"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb8f34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfb8f3660"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb8f37f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfb8f3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfb8f1e20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfb8f1e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfb8ef1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfb8ef350"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfb8ef4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfb8ef670"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb8ef800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfb8ef990"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb8efb20"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfb8efcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfb8ea0a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfb8ea0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfb8ea420"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfb8ea5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfb8ea740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfb8ea8d0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb8eaa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfb8eabf0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb8ead80"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfb8e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f4bfce1aa80" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f4bfce1aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce1ae00"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce19020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce191b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce19340"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce194d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce19660"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce197f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce19980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f4bfce16020" loc="49:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f4bfce16020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce163a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce16530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce166c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce16850"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce169e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce16b70"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce16d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce15020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f4bfce1c7a0" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f4bfce1c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce1cb20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce1ccb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce1ce40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce1b020"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce1b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce1b340"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce1b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce1b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f4bfce19c10" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f4bfce19c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce18020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce181b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce18340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce184d0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce18660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce187f0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce18980"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce18b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f4bfce152b0" loc="50:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f4bfce152b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce15630"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce157c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce15950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce15ae0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce15c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce15e00"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce0d020"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce0d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f4bfce1b8f0" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f4bfce1b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce1bc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce1be00"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce1a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce1a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce1a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce1a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce1a660"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce1a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f4bfce18da0" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f4bfce18da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce17180"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce17310"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce174a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce17630"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce177c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce17950"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce17ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce17c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f4bfce0d440" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f4bfce0d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce0d7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfce0d950"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfce0dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfce0dc70"/>
        <function-ref name="get" scoped="" ref="0x7f4bfce0de00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfce0c020"/>
        <function-ref name="set" scoped="" ref="0x7f4bfce0c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfce0c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfb895c90" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfb895c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfb8940a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfb894230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfb8943c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfb894550"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb8946e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfb894870"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb894a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfb894b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfb892e20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfb892e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfb8911c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfb891350"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfb8914e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfb891670"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb891800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfb891990"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb891b20"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfb891cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfb88e0a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfb88e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfb88e420"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfb88e5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfb88e740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfb88e8d0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb88ea60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfb88ebf0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb88ed80"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfb88d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfb8893f0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfb8893f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfb889770"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfb889900"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfb889a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfb889c20"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb889db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfb888020"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb8881b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfb888340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfb8866d0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfb8866d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfb886a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfb886be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfb886d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfb885020"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb8851b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfb885340"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb8854d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfb885660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfb8839b0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfb8839b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfb883d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfb882020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfb8821b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfb882340"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb8824d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfb882660"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb8827f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfb882980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfb880e20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfb880e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfb87f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfb87f350"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfb87f4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfb87f670"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb87f800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfb87f990"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb87fb20"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfb87fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfb87c0a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfb87c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfb87c420"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfb87c5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfb87c740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfb87c8d0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb87ca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfb87cbf0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb87cd80"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfb87a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfce05a20" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfce05a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfce05da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcddb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcddb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcddb340"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcddb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcddb660"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcddb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcddb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfcdd76d0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfcdd76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcdd7a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcdd7be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcdd7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcdd6020"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcdd61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcdd6340"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcdd64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcdd6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfcdcb160" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfcdcb160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcdcb4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcdcb670"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcdcb800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcdcb990"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcdcbb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcdcbcb0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcdcbe40"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcdca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfcdc6c90" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfcdc6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcdc50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcdc5230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcdc53c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcdc5550"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcdc56e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcdc5870"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcdc5a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcdc5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfcdbb6d0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfcdbb6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcdbba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcdbbbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcdbbd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcdba020"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcdba1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcdba340"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcdba4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcdba660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfcdb5160" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfcdb5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcdb54e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcdb5670"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcdb5800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcdb5990"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcdb5b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcdb5cb0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcdb5e40"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcdae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfcdabc90" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfcdabc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcda90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcda9230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcda93c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcda9550"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcda96e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcda9870"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcda9a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcda9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfcda56d0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfcda56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcda5a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcda5be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcda5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcd9e020"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcd9e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcd9e340"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcd9e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcd9e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfcd99160" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfcd99160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcd994e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcd99670"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcd99800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcd99990"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcd99b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcd99cb0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcd99e40"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcd98020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfcd95c90" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfcd95c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcd8d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcd8d230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcd8d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcd8d550"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcd8d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcd8d870"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcd8da00"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcd8db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfcd896d0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfcd896d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcd89a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcd89be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcd89d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcd88020"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcd881b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcd88340"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcd884d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcd88660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfcd7d160" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfcd7d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcd7d4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcd7d670"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcd7d800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcd7d990"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcd7db20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcd7dcb0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcd7de40"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcd7c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfcd79c90" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfcd79c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcd780a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcd78230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcd783c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcd78550"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcd786e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcd78870"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcd78a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcd78b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4bfcd6d6d0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4bfcd6d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcd6da50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcd6dbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcd6dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcd6c020"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcd6c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcd6c340"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcd6c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcd6c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4bfcd04020" loc="61:/usr/bin/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4bfcd04020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f4bfd100d40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f4bfd100d40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfcd043a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f4bfcd04690" loc="62:/usr/bin/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f4bfcd04690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f4bfcd04a10"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f4bfcd04ba0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f4bfcd04d30"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f4bfcd03020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f4bfcd031b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f4bfccd4720" loc="60:/usr/bin/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f4bfccd4720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfccd4aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f4bfcf76dc0" loc="57:/usr/bin/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f4bfcf76dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f4bfccd5180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f4bfccd4020" loc="59:/usr/bin/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f4bfccd4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfccd43a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f4bfccd5470" loc="58:/usr/bin/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f4bfccd5470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfccd57f0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f4bfccd5980"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f4bfccd5b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f4bfd0b0e10" loc="48:/usr/bin/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f4bfd0b0e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4bfd0c11c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4bfd0c1350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f4bfd13f020" loc="47:/usr/bin/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f4bfd13f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfd13f3a0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f4bfd13f530"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f4bfd13f6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f4bfcfc3850" loc="56:/usr/bin/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f4bfcfc3850"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4bfcfc3bd0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4bfcfc3d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f4bfcfc2dd0" loc="57:/usr/bin/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f4bfcfc2dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f4bfcfc1180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f4bfcfc58a0" loc="55:/usr/bin/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f4bfcfc58a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfcfc5c20"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f4bfcfc5db0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f4bfcfc3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f4bfcf9e690" loc="88:/usr/bin/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f4bfcf9e690"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f4bfcf9ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f4bfd0bfa30" loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f4bfd0bfa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f4bfd0bfdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f4bfcfa1020" loc="85:/usr/bin/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f4bfcfa1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f4bfcfa13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f4bfccb1a80" loc="46:/usr/bin/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f4bfccb1a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4bfccb1e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4bfccc0020"/>
        <function-ref name="led1On" scoped="" ref="0x7f4bfccc01b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4bfccc0340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4bfccc04d0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfccc0660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4bfccc07f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4bfccc0e30"/>
        <function-ref name="set" scoped="" ref="0x7f4bfccc0980"/>
        <function-ref name="led0On" scoped="" ref="0x7f4bfccc0b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f4bfccc0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f4bfcca7b90" loc="50:/usr/bin/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f4bfcca7b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcca6020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcca61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcca6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcca64d0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcca6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcca67f0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcca6980"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcca6b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4bfccbfdc0" loc="46:/usr/bin/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4bfccbfdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfccad180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f4bfcca6e30" loc="51:/usr/bin/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f4bfcca6e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcca51e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcca5370"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcca5500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcca5690"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcca5820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcca59b0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcca5b40"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcca5cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f4bfccad400" loc="47:/usr/bin/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f4bfccad400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4bfccad780"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4bfccad910"/>
        <function-ref name="led1On" scoped="" ref="0x7f4bfccadaa0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4bfccadc30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4bfccaddc0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcca7020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4bfcca71b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4bfcca77f0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcca7340"/>
        <function-ref name="led0On" scoped="" ref="0x7f4bfcca74d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f4bfcca7660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f4bfcca4020" loc="52:/usr/bin/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f4bfcca4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcca43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcca4530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcca46c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcca4850"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcca49e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcca4b70"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcca4d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcca3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f4bfcc7e020" loc="44:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f4bfcc7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcc7e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcc7e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcc7e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcc7e850"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcc7e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcc7eb70"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcc7ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcc7d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f4bfcc7d380" loc="45:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f4bfcc7d380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcc7d700"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcc7d890"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcc7da20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcc7dbb0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcc7dd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcc77020"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcc771b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcc77340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f4bfcc75920" loc="47:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4bfcc75920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfcc75ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f4bfcc776a0" loc="46:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f4bfcc776a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfcc77a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfcc77bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfcc77d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfcc75020"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcc751b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfcc75340"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcc754d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfcc75660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x7f4bfcc589e0" loc="7:LedToRadioC.nc">
      <component-ref qname="LedToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x7f4bfcc589e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd0219b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4bfd021d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4bfcc55020"/>
        <function-ref name="fired" scoped="" ref="0x7f4bfcc64510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4bfcc56300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4bfcc64e10"/>
        <function-ref name="getdt" scoped="" ref="0x7f4bfcc55920"/>
        <function-ref name="gett0" scoped="" ref="0x7f4bfcc554a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4bfcc64990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4bfcc65670"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4bfcc56910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4bfcc65b40"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfcc64090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7f4bfcb84a50" loc="12:LedToRadioC.nc">
      <component-ref qname="LedToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0x7f4bfcb84a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4bfcb84dd0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4bfcb98020"/>
        <function-ref name="start" scoped="" ref="0x7f4bfcb981b0"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfcb98340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f4bfcc6d020" loc="5:LedToRadioC.nc">
      <component-ref qname="LedToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f4bfcc6d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f4bfcc6d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f4bfcbb05f0" loc="8:LedToRadioC.nc">
      <component-ref qname="LedToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f4bfcbb05f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfcbb0970"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfcbb0b00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4bfcbb0c90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfcbb0e20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfcc52020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f4bfcb8f8f0" loc="10:LedToRadioC.nc">
      <component-ref qname="LedToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f4bfcb8f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfcb8fc70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4bfcb8fe00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfcb99020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfcb991b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfcb99340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0x7f4bfcb807b0" loc="13:LedToRadioC.nc">
      <component-ref qname="LedToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f4bfcb807b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4bfcb90400"/>
        <function-ref name="readDone" scoped="" ref="0x7f4bfcb90880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f4bfcb86180" loc="11:LedToRadioC.nc">
      <component-ref qname="LedToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f4bfcb86180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfcb86500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4bfcc6d660" loc="6:LedToRadioC.nc">
      <component-ref qname="LedToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f4bfcc6d660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4bfcc6d9e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4bfcc6db70"/>
        <function-ref name="led1On" scoped="" ref="0x7f4bfcc6dd00"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4bfcc67020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4bfcc671b0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfcc67340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4bfcc674d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4bfcc67b10"/>
        <function-ref name="set" scoped="" ref="0x7f4bfcc67660"/>
        <function-ref name="led0On" scoped="" ref="0x7f4bfcc677f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f4bfcc67980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f4bfcb9e7e0" loc="9:LedToRadioC.nc">
      <component-ref qname="LedToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f4bfcb9e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4bfcb9eb60"/>
        <function-ref name="source" scoped="" ref="0x7f4bfcb9ecf0"/>
        <function-ref name="address" scoped="" ref="0x7f4bfcb9ee80"/>
        <function-ref name="destination" scoped="" ref="0x7f4bfcc51030"/>
        <function-ref name="setSource" scoped="" ref="0x7f4bfcc511c0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4bfcc51350"/>
        <function-ref name="type" scoped="" ref="0x7f4bfcc514e0"/>
        <function-ref name="setType" scoped="" ref="0x7f4bfcc51670"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4bfcc51800"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4bfcc51990"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4bfcc51b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4bfc963140" loc="45:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="LedToRadioAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f4bfc963140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd0219b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4bfd021d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4bfc95f630"/>
        <function-ref name="fired" scoped="" ref="0x7f4bfc961b70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4bfc960920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4bfc9604a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4bfc95e020"/>
        <function-ref name="gett0" scoped="" ref="0x7f4bfc95fab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4bfc960020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4bfc963d30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4bfc95f020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4bfc961220"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfc9616f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f4bfcb55050" loc="49:/usr/bin/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f4bfcb55050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd0219b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4bfd021d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4bfcb52630"/>
        <function-ref name="fired" scoped="" ref="0x7f4bfcb54ac0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4bfcb53920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4bfcb534a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4bfcb50020"/>
        <function-ref name="gett0" scoped="" ref="0x7f4bfcb52ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4bfcb53020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4bfcb55c40"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4bfcb52020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4bfcb54170"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfcb54640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f4bfcb4dc30" loc="46:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f4bfcb4dc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd0219b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4bfd021d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4bfcb45110"/>
        <function-ref name="fired" scoped="" ref="0x7f4bfcb476a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4bfcb464a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4bfcb46020"/>
        <function-ref name="getdt" scoped="" ref="0x7f4bfcb45a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f4bfcb45590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4bfcb47b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4bfcb49860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4bfcb46ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4bfcb49d30"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfcb47220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f4bfcb40500" loc="47:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f4bfcb40500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd0219b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4bfd021d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4bfcb42170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4bfcb50e60" loc="45:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4bfcb50e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfcb4d210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7f4bfcb2e020" loc="29:/usr/bin/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7f4bfcb2e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd0219b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4bfd021d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4bfcb2ee30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4bfcb26800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4bfcb26340"/>
        <function-ref name="overflow" scoped="" ref="0x7f4bfcb26cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4bfcb41c80" loc="27:/usr/bin/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4bfcb41c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfcb3d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7f4bfcb31960" loc="28:/usr/bin/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7f4bfcb31960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd0219b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4bfd021d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4bfcb301b0"/>
        <function-ref name="fired" scoped="" ref="0x7f4bfcb371b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f4bfcb37b30"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4bfcb37670"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4bfcb30670"/>
        <function-ref name="start" scoped="" ref="0x7f4bfcb387c0"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfcb38cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4bfca091d0" loc="61:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f4bfca091d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd0219b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4bfd021d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4bfca07b30"/>
        <function-ref name="fired" scoped="" ref="0x7f4bfca089f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f4bfca074e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4bfca07020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4bfca05020"/>
        <function-ref name="start" scoped="" ref="0x7f4bfca08020"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfca08530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4bfca0a980" loc="60:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4bfca0a980"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f4bfd1009c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f4bfd1009c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfca0ad00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4bfca05650" loc="62:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f4bfca05650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd0219b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4bfd021d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4bfca045b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4bfca03020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4bfca04a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f4bfca034e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7f4bfb781c90" loc="66:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f4bfb781c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f4bfb7800a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f4bfb780230"/>
        <function-ref name="getControlA" scoped="" ref="0x7f4bfb7803c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f4bfb780550"/>
        <function-ref name="setControlB" scoped="" ref="0x7f4bfb7806e0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f4bfb780870"/>
        <function-ref name="getControlB" scoped="" ref="0x7f4bfb780a00"/>
        <function-ref name="setControlA" scoped="" ref="0x7f4bfb780b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4bfb79c140" loc="61:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f4bfb79c140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd0219b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4bfd021d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4bfb79ab30"/>
        <function-ref name="fired" scoped="" ref="0x7f4bfb79b9f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f4bfb79a4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4bfb79a020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4bfb798020"/>
        <function-ref name="start" scoped="" ref="0x7f4bfb79b020"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfb79b530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4bfb79d910" loc="60:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4bfb79d910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfb79dc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4bfb798650" loc="62:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f4bfb798650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd0219b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4bfd021d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4bfb7975b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4bfb796020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4bfb797a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f4bfb7964e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7f4bfb77b2c0" loc="68:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f4bfb77b2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f4bfb77b640"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f4bfb77b7d0"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f4bfb77b960"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f4bfb77baf0"/>
        <function-ref name="countBusy" scoped="" ref="0x7f4bfb77bc80"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f4bfb77be10"/>
        <function-ref name="getAssr" scoped="" ref="0x7f4bfb77a020"/>
        <function-ref name="setAssr" scoped="" ref="0x7f4bfb77a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7f4bfb77f020" loc="67:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f4bfb77f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f4bfb77c9a0"/>
        <function-ref name="fired" scoped="" ref="0x7f4bfb77d660"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb77fc50"/>
        <function-ref name="reset" scoped="" ref="0x7f4bfb77db20"/>
        <function-ref name="isOn" scoped="" ref="0x7f4bfb77ce60"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb77d150"/>
        <function-ref name="start" scoped="" ref="0x7f4bfb77c020"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfb77c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4bfb796a90" loc="65:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f4bfb796a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f4bfb782e60"/>
        <function-ref name="test" scoped="" ref="0x7f4bfb7824e0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb7956f0"/>
        <function-ref name="setScale" scoped="" ref="0x7f4bfb781350"/>
        <function-ref name="getScale" scoped="" ref="0x7f4bfb781860"/>
        <function-ref name="reset" scoped="" ref="0x7f4bfb7835d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4bfb783110"/>
        <function-ref name="isOn" scoped="" ref="0x7f4bfb7829a0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb795bb0"/>
        <function-ref name="start" scoped="" ref="0x7f4bfb783a90"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfb782020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f4bfca86c10" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f4bfca86c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f4bfca85020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f4bfca851b0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f4bfca85340"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f4bfca854d0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f4bfca85660"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f4bfca857f0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f4bfca85980"/>
        <function-ref name="setControlA" scoped="" ref="0x7f4bfca85b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f4bfca80580" loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f4bfca80580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f4bfca80900"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f4bfca80a90"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f4bfca80c20"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f4bfca80db0"/>
        <function-ref name="countBusy" scoped="" ref="0x7f4bfca7f020"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f4bfca7f1b0"/>
        <function-ref name="getAssr" scoped="" ref="0x7f4bfca7f340"/>
        <function-ref name="setAssr" scoped="" ref="0x7f4bfca7f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4bfca83060" loc="83:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f4bfca83060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f4bfca81a10"/>
        <function-ref name="fired" scoped="" ref="0x7f4bfca826c0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfca83c90"/>
        <function-ref name="reset" scoped="" ref="0x7f4bfca82b80"/>
        <function-ref name="isOn" scoped="" ref="0x7f4bfca80020"/>
        <function-ref name="set" scoped="" ref="0x7f4bfca821b0"/>
        <function-ref name="start" scoped="" ref="0x7f4bfca81090"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfca81550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4bfca8f920" loc="81:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f4bfca8f920"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f4bfca87cd0"/>
        <function-ref name="test" scoped="" ref="0x7f4bfca87350"/>
        <function-ref name="get" scoped="" ref="0x7f4bfca8a5a0"/>
        <function-ref name="setScale" scoped="" ref="0x7f4bfca861b0"/>
        <function-ref name="getScale" scoped="" ref="0x7f4bfca866c0"/>
        <function-ref name="reset" scoped="" ref="0x7f4bfca884e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4bfca88020"/>
        <function-ref name="isOn" scoped="" ref="0x7f4bfca87810"/>
        <function-ref name="set" scoped="" ref="0x7f4bfca8aa60"/>
        <function-ref name="start" scoped="" ref="0x7f4bfca889a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfca88e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f4bfca75c10" loc="83:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f4bfca75c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f4bfca73020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f4bfca731b0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f4bfca73340"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f4bfca734d0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f4bfca73660"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f4bfca737f0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f4bfca73980"/>
        <function-ref name="setControlA" scoped="" ref="0x7f4bfca73b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f4bfca6f4c0" loc="85:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f4bfca6f4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f4bfca6f840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f4bfca6fc00" loc="86:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f4bfca6fc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f4bfca6d020"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f4bfca6d1b0"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f4bfca6d340"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f4bfca6d4d0"/>
        <function-ref name="countBusy" scoped="" ref="0x7f4bfca6d660"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f4bfca6d7f0"/>
        <function-ref name="getAssr" scoped="" ref="0x7f4bfca6d980"/>
        <function-ref name="setAssr" scoped="" ref="0x7f4bfca6db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4bfca72060" loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f4bfca72060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f4bfca70a10"/>
        <function-ref name="fired" scoped="" ref="0x7f4bfca716c0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfca72c90"/>
        <function-ref name="reset" scoped="" ref="0x7f4bfca71b80"/>
        <function-ref name="isOn" scoped="" ref="0x7f4bfca6f020"/>
        <function-ref name="set" scoped="" ref="0x7f4bfca711b0"/>
        <function-ref name="start" scoped="" ref="0x7f4bfca70090"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfca70550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4bfca7a9c0" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f4bfca7a9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f4bfca76cd0"/>
        <function-ref name="test" scoped="" ref="0x7f4bfca76350"/>
        <function-ref name="get" scoped="" ref="0x7f4bfca78630"/>
        <function-ref name="setScale" scoped="" ref="0x7f4bfca751b0"/>
        <function-ref name="getScale" scoped="" ref="0x7f4bfca756c0"/>
        <function-ref name="reset" scoped="" ref="0x7f4bfca774e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4bfca77020"/>
        <function-ref name="isOn" scoped="" ref="0x7f4bfca76810"/>
        <function-ref name="set" scoped="" ref="0x7f4bfca78af0"/>
        <function-ref name="start" scoped="" ref="0x7f4bfca779a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfca77e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f4bfc9cf020" loc="74:/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7f4bfc9cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4bfc9cf3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4bfc9cf530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f4bfc9d4cd0" loc="49:/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f4bfc9d4cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd0219b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4bfd021d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4bfc9d0670"/>
        <function-ref name="fired" scoped="" ref="0x7f4bfc9d2550"/>
        <function-ref name="startAt" scoped="" ref="0x7f4bfc9d0020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4bfc9d2a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4bfc9d0b30"/>
        <function-ref name="start" scoped="" ref="0x7f4bfc9d3b60"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfc9d2090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4bfc9d9830" loc="48:/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f4bfc9d9830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd0219b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4bfd021d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4bfc9d5cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f4bfc9d7300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4bfc9d50d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4bfc9d7c00"/>
        <function-ref name="getdt" scoped="" ref="0x7f4bfc9d4660"/>
        <function-ref name="gett0" scoped="" ref="0x7f4bfc9d41e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4bfc9d7780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4bfc9d8480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4bfc9d56e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4bfc9d8950"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfc9d8e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f4bfc97fa00" loc="71:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7f4bfc97fa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4bfc97fd80"/>
        <function-ref name="runTask" scoped="" ref="0x7f4bfc97e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f4bfc984640" loc="49:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f4bfc984640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd0219b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4bfd021d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4bfc980c40"/>
        <function-ref name="fired" scoped="" ref="0x7f4bfc9821e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4bfc980020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4bfc982ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4bfc97f590"/>
        <function-ref name="gett0" scoped="" ref="0x7f4bfc97f110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4bfc982660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4bfc983390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4bfc980630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4bfc983860"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfc983d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4bfc98a150" loc="48:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f4bfc98a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd0219b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4bfd021d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4bfc986700"/>
        <function-ref name="fired" scoped="" ref="0x7f4bfc989c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4bfc987a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4bfc9875b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4bfc984090"/>
        <function-ref name="gett0" scoped="" ref="0x7f4bfc986ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4bfc987110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4bfc98ad60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4bfc9860d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4bfc9892a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfc989790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f4bfc97c790" loc="48:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f4bfc97c790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd0219b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4bfd021d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4bfc97b3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f4bfc97ba60" loc="49:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f4bfc97ba60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd0219b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4bfd021d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4bfc971890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4bfc96f260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4bfc971d50"/>
        <function-ref name="overflow" scoped="" ref="0x7f4bfc96f720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4bfc95d500" loc="41:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f4bfc95d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4bfc95d880"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4bfc95da10"/>
        <function-ref name="start" scoped="" ref="0x7f4bfc95dba0"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfc95dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f4bfc94bbf0" loc="46:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f4bfc94bbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f4bfc956020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4bfc9562b0" loc="48:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f4bfc9562b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc956630"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfc9567c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4bfc956950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc956ae0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfc956c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4bfc959530" loc="43:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f4bfc959530"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc9598b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4bfc959a40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc959bd0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfc959d60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc958020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f4bfc957430" loc="45:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f4bfc957430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc9577b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f4bfc93ecb0" loc="52:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f4bfc93ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f4bfc9490a0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f4bfc949230"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f4bfc9493c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f4bfc949550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4bfc958800" loc="44:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f4bfc958800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc958b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f4bfc942350" loc="51:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4bfc942350"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4bfc9426d0"/>
        <function-ref name="noAck" scoped="" ref="0x7f4bfc942860"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4bfc9429f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f4bfc948020" loc="53:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f4bfc948020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f4bfc9483a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f4bfc948530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f4bfc9486c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f4bfc948850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f4bfc9489e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4bfc955020" loc="49:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f4bfc955020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4bfc9553a0"/>
        <function-ref name="source" scoped="" ref="0x7f4bfc955530"/>
        <function-ref name="address" scoped="" ref="0x7f4bfc9556c0"/>
        <function-ref name="destination" scoped="" ref="0x7f4bfc955850"/>
        <function-ref name="setSource" scoped="" ref="0x7f4bfc9559e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4bfc955b70"/>
        <function-ref name="type" scoped="" ref="0x7f4bfc955d00"/>
        <function-ref name="setType" scoped="" ref="0x7f4bfc94c020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4bfc94c1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4bfc94c340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4bfc94c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f4bfc92cc30" loc="54:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f4bfc92cc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f4bfc93d020"/>
        <function-ref name="setChannel" scoped="" ref="0x7f4bfc93d1b0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4bfc93d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x7f4bfc925cd0" loc="56:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7f4bfc925cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4bfd01e180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4bfc91c2e0"/>
        <function-ref name="clear" scoped="" ref="0x7f4bfc91ca10"/>
        <function-ref name="isValid" scoped="" ref="0x7f4bfc92bb60"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc91b170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f4bfc91bdc0" loc="57:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4bfc91bdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd0219b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4bfd021d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4bfc918500"/>
        <function-ref name="clear" scoped="" ref="0x7f4bfc918c30"/>
        <function-ref name="isValid" scoped="" ref="0x7f4bfc91ada0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc9173b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4bfc916610" loc="45:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f4bfc916610"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4bfc916990"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4bfc916b20"/>
        <function-ref name="start" scoped="" ref="0x7f4bfc916cb0"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfc916e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f4bfc8f66e0" loc="66:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f4bfc8f66e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc8f5e70"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc8f5920"/>
        <function-ref name="isSet" scoped="" ref="0x7f4bfc8f53d0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc8ec3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f4bfc8e3130" loc="71:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4bfc8e3130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd0219b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4bfd021d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4bfc8e2750"/>
        <function-ref name="clear" scoped="" ref="0x7f4bfc8e2e80"/>
        <function-ref name="isValid" scoped="" ref="0x7f4bfc8e2020"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc8e15d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f4bfc90f020" loc="50:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f4bfc90f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f4bfc90f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4bfc90d020" loc="56:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f4bfc90d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc90d3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfc90d530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4bfc90d6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc90d850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfc90d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4bfc913640" loc="47:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f4bfc913640"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc9139c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4bfc913b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc913ce0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfc913e70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc912030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f4bfc910430" loc="49:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f4bfc910430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc9107b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f4bfc8f9210" loc="65:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f4bfc8f9210"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc8f7910"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc8f73c0"/>
        <function-ref name="isSet" scoped="" ref="0x7f4bfc8f9e40"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc8f7e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f4bfc904e80" loc="60:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f4bfc904e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f4bfc903220"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f4bfc9033b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f4bfc903540"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f4bfc9036d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4bfc912810" loc="48:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f4bfc912810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc912b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f4bfc8ea020" loc="70:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f4bfc8ea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f4bfcc02d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4bfc8e85a0"/>
        <function-ref name="clear" scoped="" ref="0x7f4bfc8e8cd0"/>
        <function-ref name="isValid" scoped="" ref="0x7f4bfc8eae30"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc8e4460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f4bfc8e7a40" loc="69:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f4bfc8e7a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f4bfcc02d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4bfc8eb6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f4bfc8fbc40" loc="64:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f4bfc8fbc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc8fa3c0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc900df0"/>
        <function-ref name="isSet" scoped="" ref="0x7f4bfc9008a0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc8fa910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f4bfc9044e0" loc="59:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4bfc9044e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4bfc904860"/>
        <function-ref name="noAck" scoped="" ref="0x7f4bfc9049f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4bfc904b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f4bfc90fc70" loc="53:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f4bfc90fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc90e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f4bfc903990" loc="61:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f4bfc903990"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f4bfc903d10"/>
        <function-ref name="setRetries" scoped="" ref="0x7f4bfc902020"/>
        <function-ref name="getRetries" scoped="" ref="0x7f4bfc9021b0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f4bfc902340"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f4bfc9024d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4bfc90dc90" loc="57:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f4bfc90dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4bfc9050a0"/>
        <function-ref name="source" scoped="" ref="0x7f4bfc905230"/>
        <function-ref name="address" scoped="" ref="0x7f4bfc9053c0"/>
        <function-ref name="destination" scoped="" ref="0x7f4bfc905550"/>
        <function-ref name="setSource" scoped="" ref="0x7f4bfc9056e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4bfc905870"/>
        <function-ref name="type" scoped="" ref="0x7f4bfc905a00"/>
        <function-ref name="setType" scoped="" ref="0x7f4bfc905b90"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4bfc905d20"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4bfc904020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4bfc9041b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f4bfc9027a0" loc="62:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f4bfc9027a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f4bfc902c20"/>
        <function-ref name="setChannel" scoped="" ref="0x7f4bfc902db0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4bfc901020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f4bfc8e71e0" loc="67:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4bfc8e71e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f4bfc8e7560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f4bfc90e8c0" loc="54:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f4bfc90e8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc90ec40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4bfc8df770" loc="41:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f4bfc8df770"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4bfc8dfaf0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4bfc8dfc80"/>
        <function-ref name="start" scoped="" ref="0x7f4bfc8dfe10"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfc8d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f4bfc89e020" loc="80:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f4bfc89e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc89d740"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc89d1f0"/>
        <function-ref name="isSet" scoped="" ref="0x7f4bfc89ec50"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc89dc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x7f4bfc8cb020" loc="60:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x7f4bfc8cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f4bfc8cb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x7f4bfc8bd2c0" loc="62:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x7f4bfc8bd2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4bfc8bd740"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4bfc8bd8d0"/>
        <function-ref name="request" scoped="" ref="0x7f4bfc8bda60"/>
        <function-ref name="granted" scoped="" ref="0x7f4bfc8bdbf0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4bfc8bdd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f4bfc8d2430" loc="47:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f4bfc8d2430"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f4bfc8d27b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4bfc8d57f0" loc="44:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f4bfc8d57f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc8d5b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4bfc8d5d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc8d4020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfc8d41b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc8d4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f4bfc8d3880" loc="46:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f4bfc8d3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc8d3c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f4bfc8ae490" loc="64:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f4bfc8ae490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f4bfc8ae810"/>
        <function-ref name="address" scoped="" ref="0x7f4bfc8ae9a0"/>
        <function-ref name="destination" scoped="" ref="0x7f4bfc8aeb30"/>
        <function-ref name="setSource" scoped="" ref="0x7f4bfc8aecc0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4bfc8aee50"/>
        <function-ref name="pan" scoped="" ref="0x7f4bfc8b7020"/>
        <function-ref name="setPan" scoped="" ref="0x7f4bfc8b71b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4bfc8b7340"/>
        <function-ref name="localPan" scoped="" ref="0x7f4bfc8b74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x7f4bfc8b7890" loc="65:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7f4bfc8b7890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc8b7c10"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfc8b7da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4bfc8b6020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc8b61b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfc8b6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f4bfc8a2a90" loc="79:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f4bfc8a2a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc89f1f0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc8a1c40"/>
        <function-ref name="isSet" scoped="" ref="0x7f4bfc8a16f0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc89f740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f4bfc8ad080" loc="69:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f4bfc8ad080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f4bfc8ad400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f4bfc8ad590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f4bfc8ad720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f4bfc8ad8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x7f4bfc8ceba0" loc="54:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f4bfc8ceba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc8cd020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfc8cd1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4bfc8cd340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc8cd4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfc8cd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4bfc8d4b20" loc="45:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f4bfc8d4b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc8d3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f4bfc899130" loc="84:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f4bfc899130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f4bfcc02d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4bfc8978a0"/>
        <function-ref name="clear" scoped="" ref="0x7f4bfc896020"/>
        <function-ref name="isValid" scoped="" ref="0x7f4bfc897170"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc896750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f4bfc89bbb0" loc="83:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f4bfc89bbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f4bfcc02d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4bfc89a820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f4bfc8a5540" loc="78:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f4bfc8a5540"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc8a4c50"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc8a4700"/>
        <function-ref name="isSet" scoped="" ref="0x7f4bfc8a41b0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc8a21f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f4bfc8b6670" loc="68:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4bfc8b6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4bfc8b69f0"/>
        <function-ref name="noAck" scoped="" ref="0x7f4bfc8b6b80"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4bfc8b6d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f4bfc8bea60" loc="58:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f4bfc8bea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc8bede0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4bfc8cc020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc8cc1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfc8cc340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc8cc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f4bfc8d01d0" loc="50:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f4bfc8d01d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc8d0550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f4bfc8adb70" loc="70:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f4bfc8adb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f4bfc8a6020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f4bfc8a61b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f4bfc8a6340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f4bfc8a64d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f4bfc8a6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f4bfc8a6930" loc="76:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f4bfc8a6930"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f4bfc8a6cb0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f4bfc8a6e40"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4bfc8a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4bfc8cf470" loc="53:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f4bfc8cf470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4bfc8cf7f0"/>
        <function-ref name="source" scoped="" ref="0x7f4bfc8cf980"/>
        <function-ref name="address" scoped="" ref="0x7f4bfc8cfb10"/>
        <function-ref name="destination" scoped="" ref="0x7f4bfc8cfca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4bfc8cfe30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4bfc8ce020"/>
        <function-ref name="type" scoped="" ref="0x7f4bfc8ce1b0"/>
        <function-ref name="setType" scoped="" ref="0x7f4bfc8ce340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4bfc8ce4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4bfc8ce660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4bfc8ce7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f4bfc8953f0" loc="85:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4bfc8953f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd0219b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4bfd021d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4bfc88d970"/>
        <function-ref name="clear" scoped="" ref="0x7f4bfc88c0d0"/>
        <function-ref name="isValid" scoped="" ref="0x7f4bfc88d240"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc88c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f4bfc8cc840" loc="59:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f4bfc8cc840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc8ccbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f4bfc89b350" loc="81:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4bfc89b350"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f4bfc89b6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f4bfc8d0df0" loc="51:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f4bfc8d0df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc8cf1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x7f4bfc85aa40" loc="51:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x7f4bfc85aa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f4bfc85adc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x7f4bfc86bc80" loc="47:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x7f4bfc86bc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x7f4bfc8720a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x7f4bfc853e30" loc="50:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7f4bfc853e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4bfc8651e0"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f4bfc865370"/>
        <function-ref name="source" scoped="" ref="0x7f4bfc865500"/>
        <function-ref name="destination" scoped="" ref="0x7f4bfc865690"/>
        <function-ref name="setSource" scoped="" ref="0x7f4bfc865820"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4bfc8659b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4bfc865b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x7f4bfc85b8e0" loc="49:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x7f4bfc85b8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x7f4bfc85bc60"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x7f4bfc85bdf0"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x7f4bfc869020"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x7f4bfc8691b0"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x7f4bfc869340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f4bfc8248d0" loc="61:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f4bfc8248d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4bfc824c50"/>
        <function-ref name="wait" scoped="" ref="0x7f4bfc824de0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfc829020"/>
        <function-ref name="isFree" scoped="" ref="0x7f4bfc8291b0"/>
        <function-ref name="getNow" scoped="" ref="0x7f4bfc829340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x7f4bfc828020" loc="62:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x7f4bfc828020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc8283a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfc828530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc8286c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfc828850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f4bfc8289e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f4bfc828b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f4bfc823160" loc="64:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f4bfc823160"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f4bfcc02d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4bfc81d7c0"/>
        <function-ref name="clear" scoped="" ref="0x7f4bfc816020"/>
        <function-ref name="isValid" scoped="" ref="0x7f4bfc81d090"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc816750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x7f4bfc882350" loc="43:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x7f4bfc882350"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc8826d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f4bfc882860"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f4bfc8829f0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f4bfc882b80"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f4bfc882d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x7f4bfc86c640" loc="46:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x7f4bfc86c640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x7f4bfc86c9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x7f4bfc873550" loc="44:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7f4bfc873550"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7f4bfc8738d0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7f4bfc873a60"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f4bfc873bf0"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7f4bfc873d80"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7f4bfc887020"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7f4bfc8871b0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f4bfc887340"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f4bfc8874d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7f4bfc82b880" loc="60:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f4bfc82b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f4bfc82bc00"/>
        <function-ref name="getDSN" scoped="" ref="0x7f4bfc82bd90"/>
        <function-ref name="setFCF" scoped="" ref="0x7f4bfc851020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f4bfc8511b0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f4bfc851340"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f4bfc8514d0"/>
        <function-ref name="setDSN" scoped="" ref="0x7f4bfc851660"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f4bfc8517f0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f4bfc851980"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f4bfc851b10"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f4bfc851ca0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f4bfc851e30"/>
        <function-ref name="localAddr" scoped="" ref="0x7f4bfc850020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f4bfc8502b0"/>
        <function-ref name="localPan" scoped="" ref="0x7f4bfc850440"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f4bfc8505d0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f4bfc850760"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f4bfc8508f0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f4bfc850a80"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4bfc850c10"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f4bfc850da0"/>
        <function-ref name="getFCF" scoped="" ref="0x7f4bfc82a020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f4bfc82a1b0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f4bfc82a340"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f4bfc82a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x7f4bfc86e9c0" loc="45:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7f4bfc86e9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f4bfc86ed40"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f4bfc881020"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f4bfc8811b0"/>
        <function-ref name="getSender" scoped="" ref="0x7f4bfc881340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x7f4bfc866340" loc="48:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7f4bfc866340"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f4bfc8666c0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f4bfc866850"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f4bfc8669e0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f4bfc866b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7f4bfc7a69b0" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f4bfc7a69b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4bfc7a6d50"/>
        <function-ref name="wait" scoped="" ref="0x7f4bfc76c020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfc76c1b0"/>
        <function-ref name="isFree" scoped="" ref="0x7f4bfc76c340"/>
        <function-ref name="getNow" scoped="" ref="0x7f4bfc76c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f4bfc76cb40" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f4bfc76cb40"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f4bfd100d40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f4bfd100d40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f4bfcc02d20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f4bfcc01180"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4bfc75d390"/>
        <function-ref name="fired" scoped="" ref="0x7f4bfc75e360"/>
        <function-ref name="startAt" scoped="" ref="0x7f4bfc75ece0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4bfc75e820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4bfc75d850"/>
        <function-ref name="start" scoped="" ref="0x7f4bfc75f970"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfc75fe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7f4bfb6ea8a0" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f4bfb6ea8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4bfb6eac40"/>
        <function-ref name="wait" scoped="" ref="0x7f4bfb6eadd0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfb6e9020"/>
        <function-ref name="isFree" scoped="" ref="0x7f4bfb6e91b0"/>
        <function-ref name="getNow" scoped="" ref="0x7f4bfb6e9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f4bfb6e9830" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f4bfb6e9830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f4bfcc02d20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f4bfcc01180"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4bfb6e5090"/>
        <function-ref name="fired" scoped="" ref="0x7f4bfb6e6090"/>
        <function-ref name="startAt" scoped="" ref="0x7f4bfb6e6a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4bfb6e6550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4bfb6e5550"/>
        <function-ref name="start" scoped="" ref="0x7f4bfb6e76a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfb6e7bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f4bfb6e5940" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f4bfb6e5940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f4bfb6e5cc0"/>
        <function-ref name="suspend" scoped="" ref="0x7f4bfb6e5e50"/>
        <function-ref name="resume" scoped="" ref="0x7f4bfb6d5020"/>
        <function-ref name="run" scoped="" ref="0x7f4bfb6d51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x7f4bfc76e750" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f4bfc76e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f4bfc76ead0"/>
        <function-ref name="suspend" scoped="" ref="0x7f4bfc76ec60"/>
        <function-ref name="resume" scoped="" ref="0x7f4bfc76edf0"/>
        <function-ref name="run" scoped="" ref="0x7f4bfc76b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4bfc6898f0" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f4bfc6898f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc689c70"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfc689e00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc688020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4bfc6882b0" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f4bfc6882b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc688630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f4bfc68c420" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f4bfc68c420"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f4bfc68c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4bfc68f8b0" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f4bfc68f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc68fc30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfc68fdc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4bfc68e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc68e1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfc68e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4bfc68e6c0" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f4bfc68e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc68ea60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4bfc68ebf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc68ed80"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfc68d020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc68d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f4bfc68dc90" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f4bfc68dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc68c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f4bfc68ba70" loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f4bfc68ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc68bdf0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfc689020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc6891b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfc689340"/>
        <function-ref name="headerLength" scoped="" ref="0x7f4bfc6894d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f4bfc689660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f4bfc6888c0" loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f4bfc6888c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4bfc688c40"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f4bfc688dd0"/>
        <function-ref name="source" scoped="" ref="0x7f4bfc687020"/>
        <function-ref name="destination" scoped="" ref="0x7f4bfc6871b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4bfc687340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4bfc6874d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4bfc687660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4bfc68d530" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f4bfc68d530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc68d8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f4bfc68cb80" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f4bfc68cb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc68b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4bfc690280" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f4bfc690280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4bfc690600"/>
        <function-ref name="source" scoped="" ref="0x7f4bfc690790"/>
        <function-ref name="address" scoped="" ref="0x7f4bfc690920"/>
        <function-ref name="destination" scoped="" ref="0x7f4bfc690ab0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4bfc690c40"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4bfc690dd0"/>
        <function-ref name="type" scoped="" ref="0x7f4bfc68f020"/>
        <function-ref name="setType" scoped="" ref="0x7f4bfc68f1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4bfc68f340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4bfc68f4d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4bfc68f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f4bfc68b3e0" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f4bfc68b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc68b780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4bfb6b6a50" loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f4bfb6b6a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfb6b6dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4bfb6b6120" loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f4bfb6b6120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfb6b64a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfb6b6630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfb6b67c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f4bfb6bab00" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f4bfb6bab00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f4bfb6b8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4bfb6bc020" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f4bfb6bc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfb6bc3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfb6bc530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4bfb6bc6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfb6bc850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfb6bc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4bfb6bcd60" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f4bfb6bcd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfb6bb180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4bfb6bb310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfb6bb4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfb6bb630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfb6bb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f4bfb6ba3e0" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f4bfb6ba3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfb6ba780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f4bfb6bfad0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f4bfb6bfad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfb6bfe50"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfb6be020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfb6be1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfb6be340"/>
        <function-ref name="headerLength" scoped="" ref="0x7f4bfb6be4d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f4bfb6be660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f4bfb6b50a0" loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f4bfb6b50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4bfb6b5520"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f4bfb6b56b0"/>
        <function-ref name="source" scoped="" ref="0x7f4bfb6b5840"/>
        <function-ref name="destination" scoped="" ref="0x7f4bfb6b59d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4bfb6b5b60"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4bfb6b5cf0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4bfb6b5e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f4bfb6b40f0" loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4bfb6b40f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f4bfb6b4470"/>
        <function-ref name="changed" scoped="" ref="0x7f4bfb6b4600"/>
        <function-ref name="amGroup" scoped="" ref="0x7f4bfb6b4790"/>
        <function-ref name="setAddress" scoped="" ref="0x7f4bfb6b4920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f4bfb6b7310" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f4bfb6b7310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfb6b7690"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfb6b7820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfb6b79b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfb6b7b40"/>
        <function-ref name="headerLength" scoped="" ref="0x7f4bfb6b7cd0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f4bfb6b7e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4bfb6bbb40" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f4bfb6bbb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfb6ba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f4bfb6b83e0" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f4bfb6b83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfb6b8780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4bfb6be8b0" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f4bfb6be8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4bfb6bec30"/>
        <function-ref name="source" scoped="" ref="0x7f4bfb6bedc0"/>
        <function-ref name="address" scoped="" ref="0x7f4bfb6bd020"/>
        <function-ref name="destination" scoped="" ref="0x7f4bfb6bd1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4bfb6bd340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4bfb6bd4d0"/>
        <function-ref name="type" scoped="" ref="0x7f4bfb6bd660"/>
        <function-ref name="setType" scoped="" ref="0x7f4bfb6bd7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4bfb6bd980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4bfb6bdb10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4bfb6bdca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f4bfb6b8b40" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f4bfb6b8b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfb6b7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f4bfc6aa5a0" loc="54:/usr/bin/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4bfc6aa5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f4bfc6aa920"/>
        <function-ref name="changed" scoped="" ref="0x7f4bfc6aaab0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f4bfc6aac40"/>
        <function-ref name="setAddress" scoped="" ref="0x7f4bfc6aadd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4bfc66e020" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f4bfc66e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc66e3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfc66e530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc66e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f4bfc66e910" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f4bfc66e910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4bfc66ec90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4bfc66ee20"/>
        <function-ref name="request" scoped="" ref="0x7f4bfc66d020"/>
        <function-ref name="granted" scoped="" ref="0x7f4bfc66d1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4bfc66d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f4bfc67d550" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f4bfc67d550"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc67d8d0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfc67da60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc67dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4bfc5fb850" loc="86:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4bfc5fb850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4bfc5fbbf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4bfc5fbd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4bfc5fa8f0" loc="89:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4bfc5fa8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4bfc5fac90"/>
        <function-ref name="configure" scoped="" ref="0x7f4bfc5fae20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4bfc5fca90" loc="85:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f4bfc5fca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4bfc5fce30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4bfc5fb020"/>
        <function-ref name="request" scoped="" ref="0x7f4bfc5fb1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f4bfc5fb340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4bfc5fb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4bfc5fa020" loc="87:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4bfc5fa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4bfc5fa3a0"/>
        <function-ref name="userId" scoped="" ref="0x7f4bfc5fa530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4bfb656b40" loc="44:/usr/bin/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4bfb656b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfb655020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f4bfb6552b0" loc="45:/usr/bin/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f4bfb6552b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f4bfb655630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f4bfb6557c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f4bfb655950"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4bfb655ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4bfb651020" loc="52:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4bfb651020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4bfb6513c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4bfb651550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4bfb6500d0" loc="56:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4bfb6500d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4bfb650470"/>
        <function-ref name="configure" scoped="" ref="0x7f4bfb650600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f4bfb650890" loc="57:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f4bfb650890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f4bfb650c10"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f4bfb650da0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f4bfb64f020"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4bfb64f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4bfb652210" loc="51:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f4bfb652210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4bfb6525b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4bfb652740"/>
        <function-ref name="request" scoped="" ref="0x7f4bfb6528d0"/>
        <function-ref name="granted" scoped="" ref="0x7f4bfb652a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4bfb652bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4bfb6517a0" loc="53:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4bfb6517a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4bfb651b20"/>
        <function-ref name="userId" scoped="" ref="0x7f4bfb651cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f4bfb64f480" loc="69:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f4bfb64f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4bfb64f800"/>
        <function-ref name="runTask" scoped="" ref="0x7f4bfb64f990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4bfc5bc120" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f4bfc5bc120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc5bc4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfc5bc630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc5bc7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4bfc5bca50" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f4bfc5bca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc5bcdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f4bfc5c1a10" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f4bfc5c1a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f4bfc5c1d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4bfc5f6ac0" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f4bfc5f6ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc5f6e40"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfc5c2020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4bfc5c21b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc5c2340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfc5c24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7f4bfc5bd2e0" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f4bfc5bd2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc5bd660"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfc5bd7f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc5bd980"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfc5bdb10"/>
        <function-ref name="headerLength" scoped="" ref="0x7f4bfc5bdca0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f4bfc5bde30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7f4bfc5c0080" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f4bfc5c0080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f4bfc5c0400"/>
        <function-ref name="getDSN" scoped="" ref="0x7f4bfc5c0590"/>
        <function-ref name="setFCF" scoped="" ref="0x7f4bfc5c0720"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f4bfc5c08b0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f4bfc5c0a40"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f4bfc5c0bd0"/>
        <function-ref name="setDSN" scoped="" ref="0x7f4bfc5c0d60"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f4bfc5bf020"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f4bfc5bf1b0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f4bfc5bf340"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f4bfc5bf4d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f4bfc5bf660"/>
        <function-ref name="localAddr" scoped="" ref="0x7f4bfc5bf7f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f4bfc5bfa80"/>
        <function-ref name="localPan" scoped="" ref="0x7f4bfc5bfc10"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f4bfc5bfda0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f4bfc5be020"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f4bfc5be1b0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f4bfc5be340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4bfc5be4d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f4bfc5be660"/>
        <function-ref name="getFCF" scoped="" ref="0x7f4bfc5be7f0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f4bfc5be980"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f4bfc5beb10"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f4bfc5beca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f4bfc5c2720" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f4bfc5c2720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc5c2aa0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4bfc5c2c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc5c2dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfc5c1020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc5c11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f4bfc5c1440" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f4bfc5c1440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc5c17c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4bfc57dc40" loc="69:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f4bfc57dc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc57b020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfc57b1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc57b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4bfc57b5d0" loc="70:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f4bfc57b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc57b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f4bfc580020" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f4bfc580020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc5803a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfc580530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc5806c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfc580850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f4bfc5809e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f4bfc580b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x7f4bfc57f770" loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x7f4bfc57f770"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc57faf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f4bfc57bbe0" loc="71:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f4bfc57bbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc57a020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfc57a1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc57a340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfc57a4d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f4bfc57a660"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f4bfc57a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x7f4bfc580e00" loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x7f4bfc580e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc57f1c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfc57f350"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc57f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f4bfc5810a0" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f4bfc5810a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc581420"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfc5815b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc581740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f4bfc5819d0" loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f4bfc5819d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc581d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x7f4bfc57fd80" loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x7f4bfc57fd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc57d180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfc57d310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc57d4a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfc57d630"/>
        <function-ref name="headerLength" scoped="" ref="0x7f4bfc57d7c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f4bfc57d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f4bfc4e5c40" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f4bfc4e5c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f4bfc4e4020"/>
        <function-ref name="address" scoped="" ref="0x7f4bfc4e41b0"/>
        <function-ref name="destination" scoped="" ref="0x7f4bfc4e4340"/>
        <function-ref name="setSource" scoped="" ref="0x7f4bfc4e44d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4bfc4e4660"/>
        <function-ref name="pan" scoped="" ref="0x7f4bfc4e47f0"/>
        <function-ref name="setPan" scoped="" ref="0x7f4bfc4e4980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4bfc4e4b10"/>
        <function-ref name="localPan" scoped="" ref="0x7f4bfc4e4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f4bfc4e3020" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f4bfc4e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc4e33a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfc4e3530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc4e36c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfc4e3850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f4bfc4e39e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f4bfc4e3b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7f4bfc4e8b20" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f4bfc4e8b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f4bfc4e7020"/>
        <function-ref name="getDSN" scoped="" ref="0x7f4bfc4e71b0"/>
        <function-ref name="setFCF" scoped="" ref="0x7f4bfc4e7340"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f4bfc4e74d0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f4bfc4e7660"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f4bfc4e77f0"/>
        <function-ref name="setDSN" scoped="" ref="0x7f4bfc4e7980"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f4bfc4e7b10"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f4bfc4e7ca0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f4bfc4e7e30"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f4bfc4e6020"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f4bfc4e61b0"/>
        <function-ref name="localAddr" scoped="" ref="0x7f4bfc4e6340"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f4bfc4e65d0"/>
        <function-ref name="localPan" scoped="" ref="0x7f4bfc4e6760"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f4bfc4e68f0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f4bfc4e6a80"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f4bfc4e6c10"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f4bfc4e6da0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4bfc4e5020"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f4bfc4e51b0"/>
        <function-ref name="getFCF" scoped="" ref="0x7f4bfc4e5340"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f4bfc4e54d0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f4bfc4e5660"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f4bfc4e57f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f4bfc4e3e60" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f4bfc4e3e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc4e2210"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfc4e23a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc4e2530"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfc4e26c0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f4bfc4e2850"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f4bfc4e29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f4bfb5db2e0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f4bfb5db2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f4bfb5db660"/>
        <function-ref name="address" scoped="" ref="0x7f4bfb5db7f0"/>
        <function-ref name="destination" scoped="" ref="0x7f4bfb5db980"/>
        <function-ref name="setSource" scoped="" ref="0x7f4bfb5dbb10"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4bfb5dbca0"/>
        <function-ref name="pan" scoped="" ref="0x7f4bfb5dbe30"/>
        <function-ref name="setPan" scoped="" ref="0x7f4bfb5da020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4bfb5da1b0"/>
        <function-ref name="localPan" scoped="" ref="0x7f4bfb5da340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f4bfb5da590" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f4bfb5da590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfb5da910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfb5daaa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfb5dac30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfb5dadc0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f4bfb5d9020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f4bfb5d91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7f4bfb5de100" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f4bfb5de100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f4bfb5de480"/>
        <function-ref name="getDSN" scoped="" ref="0x7f4bfb5de610"/>
        <function-ref name="setFCF" scoped="" ref="0x7f4bfb5de7a0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f4bfb5de930"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f4bfb5deac0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f4bfb5dec50"/>
        <function-ref name="setDSN" scoped="" ref="0x7f4bfb5dede0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f4bfb5dd020"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f4bfb5dd1b0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f4bfb5dd340"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f4bfb5dd4d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f4bfb5dd660"/>
        <function-ref name="localAddr" scoped="" ref="0x7f4bfb5dd7f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f4bfb5dda80"/>
        <function-ref name="localPan" scoped="" ref="0x7f4bfb5ddc10"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f4bfb5ddda0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f4bfb5dc020"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f4bfb5dc1b0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f4bfb5dc340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4bfb5dc4d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f4bfb5dc660"/>
        <function-ref name="getFCF" scoped="" ref="0x7f4bfb5dc7f0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f4bfb5dc980"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f4bfb5dcb10"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f4bfb5dcca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f4bfb5d9460" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f4bfb5d9460"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f4bfb5d97e0"/>
        <function-ref name="changed" scoped="" ref="0x7f4bfb5d9970"/>
        <function-ref name="amGroup" scoped="" ref="0x7f4bfb5d9b00"/>
        <function-ref name="setAddress" scoped="" ref="0x7f4bfb5d9c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f4bfb5d8020" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f4bfb5d8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfb5d83a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfb5d8530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfb5d86c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfb5d8850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f4bfb5d89e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f4bfb5d8b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4bfc462c00" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f4bfc462c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc461020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfc4611b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc461340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4bfc4615d0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f4bfc4615d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc461950"/>
        <function-ref name="header" scoped="" ref="0x7f4bfc461ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4bfc463a40" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f4bfc463a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc463dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfc462020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc4621b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f4bfc461d70" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f4bfc461d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f4bfc460180"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f4bfc460310"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f4bfc4604a0"/>
        <function-ref name="getSender" scoped="" ref="0x7f4bfc460630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f4bfc462400" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f4bfc462400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc462780"/>
        <function-ref name="header" scoped="" ref="0x7f4bfc462910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4bfb581bd0" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f4bfb581bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfb580020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfb5801b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfb580340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4bfb5805d0" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f4bfb5805d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfb580950"/>
        <function-ref name="header" scoped="" ref="0x7f4bfb580ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x7f4bfb57e410" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f4bfb57e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfb57e790"/>
        <function-ref name="clearAll" scoped="" ref="0x7f4bfb57e920"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb57eab0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb57ec40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4bfb5824a0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f4bfb5824a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfb582820"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfb5829b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfb582b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x7f4bfb57f7e0" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f4bfb57f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f4bfb57fb60"/>
        <function-ref name="insertNode" scoped="" ref="0x7f4bfb57fcf0"/>
        <function-ref name="getNode" scoped="" ref="0x7f4bfb57fe80"/>
        <function-ref name="evicted" scoped="" ref="0x7f4bfb57e030"/>
        <function-ref name="getIndex" scoped="" ref="0x7f4bfb57e1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f4bfb582d90" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f4bfb582d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfb581180"/>
        <function-ref name="header" scoped="" ref="0x7f4bfb581310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4bfb581560" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4bfb581560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfb5818e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x7f4bfb580d30" loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7f4bfb580d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f4bfb57f0e0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f4bfb57f270"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f4bfb57f400"/>
        <function-ref name="getSender" scoped="" ref="0x7f4bfb57f590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7f4bfc4a31c0" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f4bfc4a31c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f4bfc4a3540"/>
        <function-ref name="insertNode" scoped="" ref="0x7f4bfc4a36d0"/>
        <function-ref name="getNode" scoped="" ref="0x7f4bfc4a3860"/>
        <function-ref name="evicted" scoped="" ref="0x7f4bfc4a39f0"/>
        <function-ref name="getIndex" scoped="" ref="0x7f4bfc4a3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7f4bfc49e020" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f4bfc49e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc49e3a0"/>
        <function-ref name="clearAll" scoped="" ref="0x7f4bfc49e530"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc49e6c0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc49e850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7f4bfc4a2d50" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f4bfc4a2d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f4bfc49f100"/>
        <function-ref name="insertNode" scoped="" ref="0x7f4bfc49f290"/>
        <function-ref name="getNode" scoped="" ref="0x7f4bfc49f420"/>
        <function-ref name="evicted" scoped="" ref="0x7f4bfc49f5b0"/>
        <function-ref name="getIndex" scoped="" ref="0x7f4bfc49f740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4bfc4a2700" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4bfc4a2700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfc4a2a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7f4bfb57cd40" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f4bfb57cd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfb57a0e0"/>
        <function-ref name="clearAll" scoped="" ref="0x7f4bfb57a270"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb57a400"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb57a590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4bfc449e60" loc="85:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f4bfc449e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc448210"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfc4483a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc448530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4bfc4487c0" loc="86:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f4bfc4487c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc448b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x7f4bfc4452f0" loc="93:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7f4bfc4452f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4bfc445670"/>
        <function-ref name="noAck" scoped="" ref="0x7f4bfc445800"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4bfc445990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4bfc44b400" loc="77:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f4bfc44b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc44b780"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfc44b910"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc44baa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f4bfc449020" loc="80:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f4bfc449020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc4493a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfc449530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc4496c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfc449850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f4bfc4499e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f4bfc449b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f4bfc448dd0" loc="87:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f4bfc448dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc447180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfc447310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc4474a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfc447630"/>
        <function-ref name="headerLength" scoped="" ref="0x7f4bfc4477c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f4bfc447950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x7f4bfc446610" loc="92:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7f4bfc446610"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f4bfc446990"/>
        <function-ref name="setRetries" scoped="" ref="0x7f4bfc446b20"/>
        <function-ref name="getRetries" scoped="" ref="0x7f4bfc446cb0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f4bfc446e40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f4bfc445020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4bfc44bd30" loc="78:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f4bfc44bd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc44a0e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f4bfc447ba0" loc="88:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4bfc447ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4bfc446020"/>
        <function-ref name="noAck" scoped="" ref="0x7f4bfc4461b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4bfc446340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f4bfc44a330" loc="79:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f4bfc44a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f4bfc44a6b0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f4bfc44a840"/>
        <function-ref name="getRetries" scoped="" ref="0x7f4bfc44a9d0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f4bfc44ab60"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f4bfc44acf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4bfc4240e0" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f4bfc4240e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4bfc424460"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4bfc4245f0"/>
        <function-ref name="start" scoped="" ref="0x7f4bfc424780"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfc424910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4bfc41f120" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f4bfc41f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc41f4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfc41f630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc41f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4bfc41fa50" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f4bfc41fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc41fdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4bfc424ba0" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f4bfc424ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc423020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfc4231b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc423340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f4bfc423ba0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f4bfc423ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc422020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfc4221b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc422340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfc4224d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f4bfc422660"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f4bfc4227f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f4bfc422a40" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f4bfc422a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f4bfc422dc0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f4bfc420020"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f4bfc4201b0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f4bfc420340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f4bfc420630" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f4bfc420630"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4bfc4209b0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4bfc420b40"/>
        <function-ref name="start" scoped="" ref="0x7f4bfc420cd0"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfc420e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4bfc4235d0" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f4bfc4235d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc423950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f4bfc41e0a0" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f4bfc41e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc41e420"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfc41e5b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc41e740"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfc41e8d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f4bfc41ea60"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f4bfc41ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f4bfb556020" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f4bfb556020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f4bfb5563a0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f4bfb556530"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f4bfb5566c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f4bfb556850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4bfc390cc0" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f4bfc390cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4bfc38f0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4bfc38f230"/>
        <function-ref name="start" scoped="" ref="0x7f4bfc38f3c0"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfc38f550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7f4bfc38d080" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f4bfc38d080"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f4bfc38d400"/>
        <function-ref name="turnOn" scoped="" ref="0x7f4bfc38d590"/>
        <function-ref name="setChannel" scoped="" ref="0x7f4bfc38d720"/>
        <function-ref name="done" scoped="" ref="0x7f4bfc38d8b0"/>
        <function-ref name="standby" scoped="" ref="0x7f4bfc38da40"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4bfc38dbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4bfc38f7e0" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f4bfc38f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc38fb60"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfc38fcf0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc38fe80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f4bfc38c730" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f4bfc38c730"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc38cab0"/>
        <function-ref name="header" scoped="" ref="0x7f4bfc38cc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4bfc38e130" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f4bfc38e130"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc38e4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f4bfc38de20" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f4bfc38de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc38c1c0"/>
        <function-ref name="ready" scoped="" ref="0x7f4bfc38c350"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc38c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f4bfc38e700" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f4bfc38e700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f4bfc38ea80"/>
        <function-ref name="setChannel" scoped="" ref="0x7f4bfc38ec10"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4bfc38eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4bfb54b590" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f4bfb54b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4bfb54b910"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4bfb54baa0"/>
        <function-ref name="start" scoped="" ref="0x7f4bfb54bc30"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfb54bdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7f4bfb54a0a0" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f4bfb54a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfb54a420"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7f4bfb547020" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f4bfb547020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f4bfb5473a0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f4bfb547530"/>
        <function-ref name="setChannel" scoped="" ref="0x7f4bfb5476c0"/>
        <function-ref name="done" scoped="" ref="0x7f4bfb547850"/>
        <function-ref name="standby" scoped="" ref="0x7f4bfb5479e0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4bfb547b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4bfb54a6b0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f4bfb54a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfb54aa30"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfb54abc0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfb54ad50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f4bfb5442f0" loc="189:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7f4bfb5442f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4bfb544670"/>
        <function-ref name="runTask" scoped="" ref="0x7f4bfb544800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f4bfb545270" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f4bfb545270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfb5455f0"/>
        <function-ref name="header" scoped="" ref="0x7f4bfb545780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x7f4bfb544ad0" loc="144:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x7f4bfb544ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4bfb544e50"/>
        <function-ref name="runTask" scoped="" ref="0x7f4bfb543020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4bfb549020" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f4bfb549020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfb5493a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x7f4bfb545a50" loc="322:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x7f4bfb545a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4bfb545dd0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4bfb544020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f4bfb546880" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f4bfb546880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfb546c00"/>
        <function-ref name="ready" scoped="" ref="0x7f4bfb546d90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfb545020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f4bfb5495f0" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f4bfb5495f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f4bfb549970"/>
        <function-ref name="setChannel" scoped="" ref="0x7f4bfb549b00"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4bfb549c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f4bfb547dc0" loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f4bfb547dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f4bfb546180"/>
        <function-ref name="suspend" scoped="" ref="0x7f4bfb546310"/>
        <function-ref name="resume" scoped="" ref="0x7f4bfb5464a0"/>
        <function-ref name="run" scoped="" ref="0x7f4bfb546630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4bfc326310" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f4bfc326310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc326690"/>
        <function-ref name="ready" scoped="" ref="0x7f4bfc326820"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc3269b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4bfc326c40" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f4bfc326c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc325020"/>
        <function-ref name="header" scoped="" ref="0x7f4bfc3251b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f4bfc325400" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f4bfc325400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4bfc325780"/>
        <function-ref name="wait" scoped="" ref="0x7f4bfc325910"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfc325aa0"/>
        <function-ref name="isFree" scoped="" ref="0x7f4bfc325c30"/>
        <function-ref name="getNow" scoped="" ref="0x7f4bfc325dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f4bfc3240a0" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f4bfc3240a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f4bfc324420"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f4bfc3245b0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f4bfc324740"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f4bfc3248d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f4bfc327ac0" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f4bfc327ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc327e40"/>
        <function-ref name="header" scoped="" ref="0x7f4bfc326020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f4bfc3271d0" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f4bfc3271d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc327550"/>
        <function-ref name="ready" scoped="" ref="0x7f4bfc3276e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc327870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4bfb507520" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f4bfb507520"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfb5078a0"/>
        <function-ref name="ready" scoped="" ref="0x7f4bfb507a30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfb507bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4bfb507e50" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f4bfb507e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfb505210"/>
        <function-ref name="header" scoped="" ref="0x7f4bfb5053a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f4bfb5055f0" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f4bfb5055f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4bfb505970"/>
        <function-ref name="wait" scoped="" ref="0x7f4bfb505b00"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfb505c90"/>
        <function-ref name="isFree" scoped="" ref="0x7f4bfb505e20"/>
        <function-ref name="getNow" scoped="" ref="0x7f4bfb504020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f4bfb504270" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f4bfb504270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f4bfb5045f0"/>
        <function-ref name="rand32" scoped="" ref="0x7f4bfb504780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f4bfb504a10" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f4bfb504a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f4bfb504d90"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f4bfb503020"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f4bfb5031b0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f4bfb503340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f4bfb508c90" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f4bfb508c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfb5070a0"/>
        <function-ref name="header" scoped="" ref="0x7f4bfb507230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f4bfb5083a0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f4bfb5083a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfb508720"/>
        <function-ref name="ready" scoped="" ref="0x7f4bfb5088b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfb508a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x7f4bfb503610" loc="78:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x7f4bfb503610"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4bfb503990"/>
        <function-ref name="runTask" scoped="" ref="0x7f4bfb503b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f4bfc342a20" loc="46:/usr/bin/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f4bfc342a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f4bfc342da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f4bfc341020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f4bfc33f920" loc="45:/usr/bin/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f4bfc33f920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfc342560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4bfc3469b0" loc="44:/usr/bin/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4bfc3469b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfc346d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f4bfc336a20" loc="48:/usr/bin/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f4bfc336a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f4bfc336da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f4bfc335020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f4bfc337940" loc="47:/usr/bin/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f4bfc337940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfc336560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4bfc337080" loc="46:/usr/bin/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4bfc337080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfc337400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4bfc2e9020" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f4bfc2e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc2e93a0"/>
        <function-ref name="ready" scoped="" ref="0x7f4bfc2e9530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc2e96c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4bfc2e9950" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f4bfc2e9950"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc2e9cd0"/>
        <function-ref name="header" scoped="" ref="0x7f4bfc2e9e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f4bfc2e80e0" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f4bfc2e80e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4bfc2e8460"/>
        <function-ref name="wait" scoped="" ref="0x7f4bfc2e85f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfc2e8780"/>
        <function-ref name="isFree" scoped="" ref="0x7f4bfc2e8910"/>
        <function-ref name="getNow" scoped="" ref="0x7f4bfc2e8aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x7f4bfc2e6e60" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x7f4bfc2e6e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc2e5210"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc2e53a0"/>
        <function-ref name="setValue" scoped="" ref="0x7f4bfc2e5530"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc2e56c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f4bfc2e8d30" loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f4bfc2e8d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7f4bfc2e60e0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7f4bfc2e6270"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f4bfc2e6400"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7f4bfc2e6590"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7f4bfc2e6720"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7f4bfc2e68b0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f4bfc2e6a40"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f4bfc2e6bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f4bfc31fd60" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f4bfc31fd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc2ea180"/>
        <function-ref name="header" scoped="" ref="0x7f4bfc2ea310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f4bfc31f470" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f4bfc31f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc31f7f0"/>
        <function-ref name="ready" scoped="" ref="0x7f4bfc31f980"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc31fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f4bfc2ea560" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f4bfc2ea560"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4bfc2ea8e0"/>
        <function-ref name="noAck" scoped="" ref="0x7f4bfc2eaa70"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4bfc2eac00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4bfc2c9a00" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f4bfc2c9a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4bfc2c9d80"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4bfc2c8020"/>
        <function-ref name="start" scoped="" ref="0x7f4bfc2c81b0"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfc2c8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f4bfc2c4400" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f4bfc2c4400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f4bfc2c4780"/>
        <function-ref name="request" scoped="" ref="0x7f4bfc2c4910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4bfc2c0b00" loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f4bfc2c0b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc2c0e80"/>
        <function-ref name="ready" scoped="" ref="0x7f4bfc2bf030"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc2bf1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4bfc2bf450" loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f4bfc2bf450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc2bf7d0"/>
        <function-ref name="header" scoped="" ref="0x7f4bfc2bf960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f4bfc2c7470" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f4bfc2c7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f4bfc2c77f0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f4bfc2c7980"/>
        <function-ref name="setChannel" scoped="" ref="0x7f4bfc2c7b10"/>
        <function-ref name="done" scoped="" ref="0x7f4bfc2c7ca0"/>
        <function-ref name="standby" scoped="" ref="0x7f4bfc2c7e30"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4bfc2c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f4bfc2c4b60" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f4bfc2c4b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc2c3020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfc2c31b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc2c3340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfc2c34d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f4bfc2c3660"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f4bfc2c37f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7f4bfc2c1be0" loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7f4bfc2c1be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f4bfc2c00a0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f4bfc2c0230"/>
        <function-ref name="setChannel" scoped="" ref="0x7f4bfc2c03c0"/>
        <function-ref name="done" scoped="" ref="0x7f4bfc2c0550"/>
        <function-ref name="standby" scoped="" ref="0x7f4bfc2c06e0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4bfc2c0870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7f4bfc2c3a80" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f4bfc2c3a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f4bfc2c3e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f4bfc2c6b60" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f4bfc2c6b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc2c4020"/>
        <function-ref name="header" scoped="" ref="0x7f4bfc2c41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7f4bfc2c15d0" loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7f4bfc2c15d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc2c1950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f4bfc2c2120" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f4bfc2c2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4bfc2c24a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4bfc2c2630"/>
        <function-ref name="start" scoped="" ref="0x7f4bfc2c27c0"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfc2c2950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f4bfc2be440" loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f4bfc2be440"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc2be7c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfc2be950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc2beae0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfc2bec70"/>
        <function-ref name="headerLength" scoped="" ref="0x7f4bfc2bee00"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f4bfc2bd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f4bfc2c8e80" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f4bfc2c8e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc2c7220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f4bfc2bd2b0" loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f4bfc2bd2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f4bfc2bd630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7f4bfc2c2be0" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7f4bfc2c2be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc2c1020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfc2c11b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc2c1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f4bfc2c6270" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f4bfc2c6270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc2c65f0"/>
        <function-ref name="ready" scoped="" ref="0x7f4bfc2c6780"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc2c6910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7f4bfc2bfbf0" loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7f4bfc2bfbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f4bfc2be020"/>
        <function-ref name="request" scoped="" ref="0x7f4bfc2be1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f4bfc2c8590" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f4bfc2c8590"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc2c8910"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfc2c8aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc2c8c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7f4bfc247760" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7f4bfc247760"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc247ae0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc247c70"/>
        <function-ref name="setValue" scoped="" ref="0x7f4bfc247e00"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc246020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f4bfc24a660" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f4bfc24a660"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc24a9e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfc24ab70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc24ad00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfc249020"/>
        <function-ref name="headerLength" scoped="" ref="0x7f4bfc2491b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f4bfc249340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f4bfc248800" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f4bfc248800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc248b80"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfc248d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc247020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfc2471b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f4bfc247340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f4bfc2474d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f4bfc24ea60" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f4bfc24ea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f4bfcc02d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4bfc24c020"/>
        <function-ref name="clear" scoped="" ref="0x7f4bfc24c750"/>
        <function-ref name="isValid" scoped="" ref="0x7f4bfc24d890"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc24ce80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7f4bfc249750" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f4bfc249750"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f4bfcc02d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4bfc2483d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f4bfc252b00" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4bfc252b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd0219b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4bfd021d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4bfc24f0d0"/>
        <function-ref name="clear" scoped="" ref="0x7f4bfc24f800"/>
        <function-ref name="isValid" scoped="" ref="0x7f4bfc251970"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc24e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7f4bfb4af640" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7f4bfb4af640"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfb4af9c0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb4afb50"/>
        <function-ref name="setValue" scoped="" ref="0x7f4bfb4afce0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb4afe70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f4bfb4b17e0" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f4bfb4b17e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfb4b1b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfb4b1cf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfb4b1e80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfb4af030"/>
        <function-ref name="headerLength" scoped="" ref="0x7f4bfb4af1c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f4bfb4af350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f4bfb4a94c0" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f4bfb4a94c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfb4a9840"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfb4a99d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfb4a9b60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfb4a9cf0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f4bfb4a9e80"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f4bfb4a8030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f4bfb4b4bb0" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f4bfb4b4bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f4bfcc02d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4bfb4b2170"/>
        <function-ref name="clear" scoped="" ref="0x7f4bfb4b28a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f4bfb4b3a00"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb4b1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7f4bfb4ae250" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f4bfb4ae250"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f4bfcc02d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4bfb4aee80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f4bfb4ad3f0" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f4bfb4ad3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd0219b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4bfd021d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4bfb4a9090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f4bfb4b8cb0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f4bfb4b8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd0219b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4bfd021d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4bfb4b62e0"/>
        <function-ref name="clear" scoped="" ref="0x7f4bfb4b6a10"/>
        <function-ref name="isValid" scoped="" ref="0x7f4bfb4b7b60"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb4b4170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f4bfc255080" loc="20:/usr/bin/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f4bfc255080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd0219b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4bfd021d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4bfc255cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f4bfc240590" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f4bfc240590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc240910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfc240aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc240c30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfc240dc0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f4bfc21d020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f4bfc21d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f4bfc21d4a0" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f4bfc21d4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc21d820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfc21d9b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc21db40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfc21dcd0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f4bfc21de60"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f4bfc219020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x7f4bfc2419b0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x7f4bfc2419b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc241d50"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc240020"/>
        <function-ref name="setValue" scoped="" ref="0x7f4bfc2401b0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc240340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f4bfc2172b0" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f4bfc2172b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4bfc217630"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4bfc2177c0"/>
        <function-ref name="start" scoped="" ref="0x7f4bfc217950"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfc217ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f4bfc214b60" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f4bfc214b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f4bfc212020"/>
        <function-ref name="request" scoped="" ref="0x7f4bfc2121b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f4bfc20e440" loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f4bfc20e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc20e7c0"/>
        <function-ref name="ready" scoped="" ref="0x7f4bfc20e950"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc20eae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f4bfc20ed70" loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f4bfc20ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc20d180"/>
        <function-ref name="header" scoped="" ref="0x7f4bfc20d310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f4bfc216c20" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f4bfc216c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f4bfc215020"/>
        <function-ref name="turnOn" scoped="" ref="0x7f4bfc2151b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f4bfc215340"/>
        <function-ref name="done" scoped="" ref="0x7f4bfc2154d0"/>
        <function-ref name="standby" scoped="" ref="0x7f4bfc215660"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4bfc2157f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f4bfc212400" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f4bfc212400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc212780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfc212910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc212aa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfc212c30"/>
        <function-ref name="headerLength" scoped="" ref="0x7f4bfc212dc0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f4bfc211020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7f4bfc20f410" loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7f4bfc20f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f4bfc20f890"/>
        <function-ref name="turnOn" scoped="" ref="0x7f4bfc20fa20"/>
        <function-ref name="setChannel" scoped="" ref="0x7f4bfc20fbb0"/>
        <function-ref name="done" scoped="" ref="0x7f4bfc20fd40"/>
        <function-ref name="standby" scoped="" ref="0x7f4bfc20e020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4bfc20e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7f4bfc2112b0" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f4bfc2112b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f4bfc211630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f4bfc214400" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f4bfc214400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc214780"/>
        <function-ref name="header" scoped="" ref="0x7f4bfc214910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7f4bfc210d70" loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7f4bfc210d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc20f180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f4bfc211920" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f4bfc211920"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4bfc211ca0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4bfc211e30"/>
        <function-ref name="start" scoped="" ref="0x7f4bfc210020"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfc2101b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f4bfc20dd40" loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f4bfc20dd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc20c0e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfc20c270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc20c400"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfc20c590"/>
        <function-ref name="headerLength" scoped="" ref="0x7f4bfc20c720"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f4bfc20c8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f4bfc216650" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f4bfc216650"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc2169d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f4bfc20cb40" loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f4bfc20cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f4bfc20b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7f4bfc210440" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7f4bfc210440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc2107c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfc210950"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc210ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f4bfc215a40" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f4bfc215a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc215dc0"/>
        <function-ref name="ready" scoped="" ref="0x7f4bfc214020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc2141b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7f4bfc20d5a0" loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7f4bfc20d5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f4bfc20d920"/>
        <function-ref name="request" scoped="" ref="0x7f4bfc20dab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f4bfc217d30" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f4bfc217d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc2160e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfc216270"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc216400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f4bfc2025c0" loc="45:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f4bfc2025c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f4bfc202940"/>
        <function-ref name="request" scoped="" ref="0x7f4bfc202ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f4bfc1fd3b0" loc="49:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f4bfc1fd3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc1f9ac0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc1f9570"/>
        <function-ref name="isSet" scoped="" ref="0x7f4bfc1f9020"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc1f8090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7f4bfc1e5ca0" loc="64:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7f4bfc1e5ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc1e40a0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc1e4230"/>
        <function-ref name="setValue" scoped="" ref="0x7f4bfc1e43c0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc1e4550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f4bfc1e92e0" loc="61:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f4bfc1e92e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f4bfcc02d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4bfc1e8840"/>
        <function-ref name="clear" scoped="" ref="0x7f4bfc1e7020"/>
        <function-ref name="isValid" scoped="" ref="0x7f4bfc1e8110"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc1e7750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f4bfc206610" loc="42:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f4bfc206610"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f4bfc206990"/>
        <function-ref name="turnOn" scoped="" ref="0x7f4bfc206b20"/>
        <function-ref name="setChannel" scoped="" ref="0x7f4bfc206cb0"/>
        <function-ref name="done" scoped="" ref="0x7f4bfc206e40"/>
        <function-ref name="standby" scoped="" ref="0x7f4bfc203020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4bfc2031b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f4bfc1e3470" loc="66:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f4bfc1e3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4bfc1e37f0"/>
        <function-ref name="wait" scoped="" ref="0x7f4bfc1e3980"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfc1e3b10"/>
        <function-ref name="isFree" scoped="" ref="0x7f4bfc1e3ca0"/>
        <function-ref name="getNow" scoped="" ref="0x7f4bfc1e3e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f4bfc201e80" loc="48:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f4bfc201e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc1ff5e0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc1ff090"/>
        <function-ref name="isSet" scoped="" ref="0x7f4bfc200ad0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc1ffb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f4bfc202d90" loc="46:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f4bfc202d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc201180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfc201310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc2014a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfc201630"/>
        <function-ref name="headerLength" scoped="" ref="0x7f4bfc2017c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f4bfc201950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f4bfc1ea1f0" loc="60:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f4bfc1ea1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc1ea670"/>
        <function-ref name="headerLength" scoped="" ref="0x7f4bfc1ea800"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f4bfc1ea990"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f4bfc1eab20"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f4bfc1eacb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f4bfc203dd0" loc="44:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f4bfc203dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc202180"/>
        <function-ref name="header" scoped="" ref="0x7f4bfc202310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4bfc1f0dd0" loc="55:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f4bfc1f0dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f4bfcc02d20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f4bfcc01180"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4bfc1ec6e0"/>
        <function-ref name="fired" scoped="" ref="0x7f4bfc1ed6b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f4bfc1ec090"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4bfc1edb70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4bfc1ecba0"/>
        <function-ref name="start" scoped="" ref="0x7f4bfc1eeca0"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfc1ed1f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f4bfc1f8940" loc="50:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4bfc1f8940"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc1f5090"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc1f6af0"/>
        <function-ref name="isSet" scoped="" ref="0x7f4bfc1f65a0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc1f55e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f4bfc1f1a40" loc="54:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f4bfc1f1a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f4bfcc02d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4bfc1f06b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f4bfc203460" loc="43:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f4bfc203460"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc2037e0"/>
        <function-ref name="ready" scoped="" ref="0x7f4bfc203970"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc203b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f4bfc1f5e70" loc="51:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f4bfc1f5e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc1f25e0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc1f2090"/>
        <function-ref name="isSet" scoped="" ref="0x7f4bfc1f3ad0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc1f2b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7f4bfc1e48d0" loc="65:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f4bfc1e48d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc1e4c50"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc1e4de0"/>
        <function-ref name="setValue" scoped="" ref="0x7f4bfc1e3020"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc1e31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7f4bfc1e5110" loc="63:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f4bfc1e5110"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc1e5490"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc1e5620"/>
        <function-ref name="setValue" scoped="" ref="0x7f4bfc1e57b0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc1e5940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f4bfc1f11e0" loc="52:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4bfc1f11e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f4bfc1f1560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f4bfc1d62d0" loc="52:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f4bfc1d62d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f4bfc1d6650"/>
        <function-ref name="request" scoped="" ref="0x7f4bfc1d67e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f4bfc1b5d20" loc="74:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f4bfc1b5d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4bfd01e180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f4bfc1bdb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f4bfc1d10d0" loc="56:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f4bfc1d10d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc1d07f0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc1d02a0"/>
        <function-ref name="isSet" scoped="" ref="0x7f4bfc1d1d00"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc1d0d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7f4bfc1b2ca0" loc="80:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7f4bfc1b2ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc1b10a0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc1b1230"/>
        <function-ref name="setValue" scoped="" ref="0x7f4bfc1b13c0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc1b1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7f4bfc1ddb60" loc="47:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f4bfc1ddb60"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f4bfd100d40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f4bfd100d40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfc1d8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f4bfc1b0780" loc="83:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f4bfc1b0780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f4bfcc02d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f4bfc1ae020"/>
        <function-ref name="clear" scoped="" ref="0x7f4bfc1ae750"/>
        <function-ref name="isValid" scoped="" ref="0x7f4bfc1af7c0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc1aee80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f4bfc1c3980" loc="70:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f4bfc1c3980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfc1c3d00"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfc1bf020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfc1bf1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfc1bf340"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc1bf4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfc1bf660"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc1bf7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfc1bf980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f4bfc1ab2e0" loc="86:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f4bfc1ab2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f4bfc1ab660"/>
        <function-ref name="wait" scoped="" ref="0x7f4bfc1ab7f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfc1ab980"/>
        <function-ref name="isFree" scoped="" ref="0x7f4bfc1abb10"/>
        <function-ref name="getNow" scoped="" ref="0x7f4bfc1abca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f4bfc1d82e0" loc="49:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f4bfc1d82e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f4bfc1d8660"/>
        <function-ref name="turnOn" scoped="" ref="0x7f4bfc1d87f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f4bfc1d8980"/>
        <function-ref name="done" scoped="" ref="0x7f4bfc1d8b10"/>
        <function-ref name="standby" scoped="" ref="0x7f4bfc1d8ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4bfc1d8e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7f4bfc1b41a0" loc="75:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f4bfc1b41a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f4bfcc02d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4bfc1b4dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f4bfc1d5b90" loc="55:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f4bfc1d5b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc1d32e0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc1d4d40"/>
        <function-ref name="isSet" scoped="" ref="0x7f4bfc1d47f0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc1d3830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f4bfc1d6aa0" loc="53:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f4bfc1d6aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc1d6e20"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfc1d5020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc1d51b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfc1d5340"/>
        <function-ref name="headerLength" scoped="" ref="0x7f4bfc1d54d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f4bfc1d5660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x7f4bfc1c4670" loc="69:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7f4bfc1c4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfc1c49f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfc1c4b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfc1c4d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfc1c3020"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc1c31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfc1c3340"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc1c34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfc1c3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f4bfc1b3340" loc="77:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f4bfc1b3340"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfc1b36c0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f4bfc1b3850"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f4bfc1b39e0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f4bfc1b3b70"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f4bfc1b3d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f4bfc1d7a90" loc="51:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f4bfc1d7a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfc1d7e10"/>
        <function-ref name="header" scoped="" ref="0x7f4bfc1d6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x7f4bfc113920" loc="847:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x7f4bfc113920"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4bfc113ca0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4bfc113e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f4bfc1ce630" loc="57:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f4bfc1ce630"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc1cde70"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc1cd920"/>
        <function-ref name="isSet" scoped="" ref="0x7f4bfc1cd3d0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc1cc3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f4bfc1dd020" loc="46:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f4bfc1dd020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f4bfd100d40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f4bfd100d40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfc1dd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f4bfc1c6b50" loc="65:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f4bfc1c6b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4bfc1c5020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4bfc1c51b0"/>
        <function-ref name="request" scoped="" ref="0x7f4bfc1c5340"/>
        <function-ref name="granted" scoped="" ref="0x7f4bfc1c54d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4bfc1c5660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x7f4bfc1c8760" loc="64:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7f4bfc1c8760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfc1c8be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfc1c8d70"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfc1c6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfc1c61b0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc1c6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfc1c64d0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc1c6660"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfc1c67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f4bfc1ccc80" loc="58:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f4bfc1ccc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc1c93c0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc1cae30"/>
        <function-ref name="isSet" scoped="" ref="0x7f4bfc1ca8e0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc1c9910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f4bfc1d7120" loc="50:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f4bfc1d7120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc1d74a0"/>
        <function-ref name="ready" scoped="" ref="0x7f4bfc1d7630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc1d77c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x7f4bfc1b7550" loc="72:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f4bfc1b7550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f4bfc1b78d0"/>
        <function-ref name="disable" scoped="" ref="0x7f4bfc1b7a60"/>
        <function-ref name="captured" scoped="" ref="0x7f4bfc1b7bf0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f4bfc1b7d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x7f4bfc1c0aa0" loc="67:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f4bfc1c0aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f4bfc1c0e20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f4bfc1c4020"/>
        <function-ref name="splitRead" scoped="" ref="0x7f4bfc1c41b0"/>
        <function-ref name="write" scoped="" ref="0x7f4bfc1c4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7f4bfc1b18d0" loc="81:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f4bfc1b18d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc1b1c50"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc1b1de0"/>
        <function-ref name="setValue" scoped="" ref="0x7f4bfc1b0020"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc1b01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7f4bfc1b2110" loc="79:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f4bfc1b2110"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfc1b2490"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc1b2620"/>
        <function-ref name="setValue" scoped="" ref="0x7f4bfc1b27b0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc1b2940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f4bfc1c8020" loc="59:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f4bfc1c8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f4bfc1c83a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f4bfc1ac6b0" loc="85:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f4bfc1ac6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f4bfc1aca30"/>
        <function-ref name="suspend" scoped="" ref="0x7f4bfc1acbc0"/>
        <function-ref name="resume" scoped="" ref="0x7f4bfc1acd50"/>
        <function-ref name="run" scoped="" ref="0x7f4bfc1ab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f4bfc0cb7f0" loc="46:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f4bfc0cb7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfc0cbb70"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfc0cbd00"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfc0ca020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfc0ca1b0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc0ca340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfc0ca4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc0ca660"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfc0ca7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x7f4bfc0cc4e0" loc="45:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7f4bfc0cc4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfc0cc860"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfc0cc9f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfc0ccb80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfc0ccd10"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc0cb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfc0cb1b0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc0cb340"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfc0cb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4bfc0c9ac0" loc="49:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f4bfc0c9ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f4bfcc02d20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4bfc0c5390"/>
        <function-ref name="fired" scoped="" ref="0x7f4bfc0c7360"/>
        <function-ref name="startAt" scoped="" ref="0x7f4bfc0c7ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4bfc0c7820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4bfc0c5850"/>
        <function-ref name="start" scoped="" ref="0x7f4bfc0c8970"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfc0c8e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x7f4bfc0ceb50" loc="42:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f4bfc0ceb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4bfc0cd020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4bfc0cd1b0"/>
        <function-ref name="request" scoped="" ref="0x7f4bfc0cd340"/>
        <function-ref name="granted" scoped="" ref="0x7f4bfc0cd4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4bfc0cd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x7f4bfc0d2950" loc="41:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7f4bfc0d2950"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfc0d2cd0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfc0d2e60"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfc0ce020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfc0ce1b0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc0ce340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfc0ce4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc0ce660"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfc0ce7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7f4bfc0cab10" loc="48:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f4bfc0cab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f4bfc0c9020"/>
        <function-ref name="disable" scoped="" ref="0x7f4bfc0c91b0"/>
        <function-ref name="captured" scoped="" ref="0x7f4bfc0c9340"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f4bfc0c94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f4bfc0cd920" loc="43:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f4bfc0cd920"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f4bfc0cdca0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f4bfc0cde30"/>
        <function-ref name="splitRead" scoped="" ref="0x7f4bfc0cc020"/>
        <function-ref name="write" scoped="" ref="0x7f4bfc0cc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f4bfc0c4020" loc="50:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f4bfc0c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f4bfcc02d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4bfc0c4c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x7f4bfc0b33d0" loc="46:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x7f4bfc0b33d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfc0b3750"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfc0b38e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfc0b3a70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfc0b3c00"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc0b3d90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfc0b1020"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc0b11b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfc0b1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x7f4bfc0b67f0" loc="45:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f4bfc0b67f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f4bfc0b4e60"/>
        <function-ref name="test" scoped="" ref="0x7f4bfc0b44e0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc0bd4c0"/>
        <function-ref name="captured" scoped="" ref="0x7f4bfc0b5020"/>
        <function-ref name="reset" scoped="" ref="0x7f4bfc0b5530"/>
        <function-ref name="isOn" scoped="" ref="0x7f4bfc0b49a0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc0bd980"/>
        <function-ref name="start" scoped="" ref="0x7f4bfc0b59f0"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfc0b4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x7f4bfc0b1680" loc="47:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x7f4bfc0b1680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfc0b1a00"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfc0b1b90"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfc0b1d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfc0b0020"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc0b01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfc0b0340"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc0b04d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfc0b0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f4bfc0c0680" loc="40:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f4bfc0c0680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfc0c0a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7f4bfc0c39d0" loc="39:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f4bfc0c39d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f4bfc0c3d50"/>
        <function-ref name="disable" scoped="" ref="0x7f4bfc0c0020"/>
        <function-ref name="captured" scoped="" ref="0x7f4bfc0c01b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f4bfc0c0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f4bfc095ae0" loc="84:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f4bfc095ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc095e60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc0a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f4bfc09f840" loc="82:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f4bfc09f840"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f4bfc09fbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4bfc0a21f0" loc="81:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4bfc0a21f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfc0a2570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f4bfc0a1020" loc="83:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f4bfc0a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f4bfc0a13a0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f4bfc0a1530"/>
        <function-ref name="splitRead" scoped="" ref="0x7f4bfc0a16c0"/>
        <function-ref name="write" scoped="" ref="0x7f4bfc0a1850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4bfc0a0850" loc="85:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f4bfc0a0850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4bfc0a0bd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4bfc0a0d60"/>
        <function-ref name="request" scoped="" ref="0x7f4bfc09e020"/>
        <function-ref name="granted" scoped="" ref="0x7f4bfc09e1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4bfc09e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7f4bfc04f190" loc="296:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7f4bfc04f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4bfc04f510"/>
        <function-ref name="runTask" scoped="" ref="0x7f4bfc04f6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f4bfc091020" loc="94:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f4bfc091020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfc0913a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfc091530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7f4bfc072430" loc="99:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7f4bfc072430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4bfc0727b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4bfc072940"/>
        <function-ref name="request" scoped="" ref="0x7f4bfc072ad0"/>
        <function-ref name="granted" scoped="" ref="0x7f4bfc072c60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4bfc072df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f4bfc093e00" loc="92:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f4bfc093e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f4bfc0921c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4bfc0937e0" loc="91:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4bfc0937e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfc093b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7f4bfc08e020" loc="98:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7f4bfc08e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f4bfc08e3a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f4bfc073980"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f4bfc08e6c0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f4bfc073b10"/>
        <function-ref name="initMaster" scoped="" ref="0x7f4bfc08e9e0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f4bfc08eb70"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f4bfc08ed00"/>
        <function-ref name="read" scoped="" ref="0x7f4bfc08d020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f4bfc08d1b0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f4bfc08d340"/>
        <function-ref name="setClock" scoped="" ref="0x7f4bfc08d4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4bfc08d660"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f4bfc08d7f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f4bfc08da80"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f4bfc08dc10"/>
        <function-ref name="write" scoped="" ref="0x7f4bfc08dda0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4bfc073020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f4bfc0731b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f4bfc073340"/>
        <function-ref name="getClock" scoped="" ref="0x7f4bfc0734d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f4bfc073660"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f4bfc08e530"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f4bfc08e850"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f4bfc0737f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f4bfc092480" loc="93:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f4bfc092480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f4bfc092800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f4bfc092990"/>
        <function-ref name="splitRead" scoped="" ref="0x7f4bfc092b20"/>
        <function-ref name="write" scoped="" ref="0x7f4bfc092cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4bfc091d20" loc="95:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f4bfc091d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4bfc0900e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4bfc090270"/>
        <function-ref name="request" scoped="" ref="0x7f4bfc090400"/>
        <function-ref name="granted" scoped="" ref="0x7f4bfc090590"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4bfc090720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f4bfc071130" loc="100:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4bfc071130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4bfc0714b0"/>
        <function-ref name="userId" scoped="" ref="0x7f4bfc071640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f4bfc071920" loc="101:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f4bfc071920"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f4bfc071ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7f4bfc0233e0" loc="76:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7f4bfc0233e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f4bfc023760"/>
        <function-ref name="sleep" scoped="" ref="0x7f4bfc021ca0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f4bfc023a80"/>
        <function-ref name="dataReady" scoped="" ref="0x7f4bfc021e30"/>
        <function-ref name="initMaster" scoped="" ref="0x7f4bfc023da0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f4bfc022020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f4bfc0221b0"/>
        <function-ref name="read" scoped="" ref="0x7f4bfc022340"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f4bfc0224d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f4bfc022660"/>
        <function-ref name="setClock" scoped="" ref="0x7f4bfc0227f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4bfc022980"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f4bfc022b10"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f4bfc022da0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f4bfc021020"/>
        <function-ref name="write" scoped="" ref="0x7f4bfc0211b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4bfc021340"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f4bfc0214d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f4bfc021660"/>
        <function-ref name="getClock" scoped="" ref="0x7f4bfc0217f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f4bfc021980"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f4bfc0238f0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f4bfc023c10"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f4bfc021b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7f4bfc00eb10" loc="81:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7f4bfc00eb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfc00c020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfc00c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfc00c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfc00c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc00c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfc00c7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc00c980"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfc00cb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7f4bfc011650" loc="79:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7f4bfc011650"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfc0119d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfc011b60"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfc011cf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfc011e80"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc00f030"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfc00f1c0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc00f350"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfc00f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7f4bfc012390" loc="78:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7f4bfc012390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfc012710"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfc0128a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfc012a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfc012bc0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc012d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfc011020"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc0111b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfc011340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f4bfc010ac0" loc="75:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4bfc010ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4bfc010e40"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfc012020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7f4bfc00ce50" loc="82:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7f4bfc00ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f4bfc00b210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7f4bfc01d350" loc="74:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7f4bfc01d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f4bfc01d6d0"/>
        <function-ref name="sleep" scoped="" ref="0x7f4bfc014ca0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f4bfc01d9f0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f4bfc014e30"/>
        <function-ref name="initMaster" scoped="" ref="0x7f4bfc01dd10"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f4bfc015020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f4bfc0151b0"/>
        <function-ref name="read" scoped="" ref="0x7f4bfc015340"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f4bfc0154d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f4bfc015660"/>
        <function-ref name="setClock" scoped="" ref="0x7f4bfc0157f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4bfc015980"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f4bfc015b10"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f4bfc015da0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f4bfc014020"/>
        <function-ref name="write" scoped="" ref="0x7f4bfc0141b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f4bfc014340"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f4bfc0144d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f4bfc014660"/>
        <function-ref name="getClock" scoped="" ref="0x7f4bfc0147f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f4bfc014980"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f4bfc01d860"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f4bfc01db80"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f4bfc014b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7f4bfc00f800" loc="80:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7f4bfc00f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4bfc00fb80"/>
        <function-ref name="isInput" scoped="" ref="0x7f4bfc00fd10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4bfc00e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4bfc00e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfc00e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4bfc00e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfc00e660"/>
        <function-ref name="clr" scoped="" ref="0x7f4bfc00e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4bfbfb3020" loc="86:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4bfbfb3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4bfbfb33c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4bfbfb3550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4bfbfb10d0" loc="89:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4bfbfb10d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4bfbfb1470"/>
        <function-ref name="configure" scoped="" ref="0x7f4bfbfb1600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4bfbfb4210" loc="85:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f4bfbfb4210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4bfbfb45b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4bfbfb4740"/>
        <function-ref name="request" scoped="" ref="0x7f4bfbfb48d0"/>
        <function-ref name="granted" scoped="" ref="0x7f4bfbfb4a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4bfbfb4bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4bfbfb37a0" loc="87:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4bfbfb37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4bfbfb3b20"/>
        <function-ref name="userId" scoped="" ref="0x7f4bfbfb3cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4bfb45b3b0" loc="44:/usr/bin/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4bfb45b3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfb45b730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f4bfb45b9c0" loc="45:/usr/bin/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f4bfb45b9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f4bfb45bd40"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f4bfb45a020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f4bfb45a1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4bfb45a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4bfb458850" loc="52:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4bfb458850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4bfb458bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4bfb458d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4bfb457910" loc="56:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4bfb457910"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4bfb457cb0"/>
        <function-ref name="configure" scoped="" ref="0x7f4bfb457e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f4bfb456120" loc="57:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f4bfb456120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f4bfb4564a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f4bfb456630"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f4bfb4567c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4bfb456950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4bfb4599d0" loc="51:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f4bfb4599d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4bfb459d70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4bfb458020"/>
        <function-ref name="request" scoped="" ref="0x7f4bfb4581b0"/>
        <function-ref name="granted" scoped="" ref="0x7f4bfb458340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4bfb4584d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4bfb457020" loc="53:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4bfb457020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4bfb4573a0"/>
        <function-ref name="userId" scoped="" ref="0x7f4bfb457530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f4bfb456c20" loc="69:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f4bfb456c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4bfb454020"/>
        <function-ref name="runTask" scoped="" ref="0x7f4bfb4541b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f4bfbf92d80" loc="80:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f4bfbf92d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f4bfbf9a180"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f4bfbf9a310"/>
        <function-ref name="getControlA" scoped="" ref="0x7f4bfbf9a4a0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f4bfbf9a630"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f4bfbf9a7c0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f4bfbf9a950"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f4bfbf9aae0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f4bfbf9ac70"/>
        <function-ref name="setControlC" scoped="" ref="0x7f4bfbf9ae00"/>
        <function-ref name="setControlA" scoped="" ref="0x7f4bfbf99020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4bfbf99530" loc="81:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f4bfbf99530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f4bfbf8e9a0"/>
        <function-ref name="test" scoped="" ref="0x7f4bfbf8e020"/>
        <function-ref name="get" scoped="" ref="0x7f4bfbf901b0"/>
        <function-ref name="captured" scoped="" ref="0x7f4bfbf90b80"/>
        <function-ref name="reset" scoped="" ref="0x7f4bfbf8f0d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f4bfbf8e4e0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfbf90670"/>
        <function-ref name="start" scoped="" ref="0x7f4bfbf8f590"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfbf8fa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4bfbf8c650" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f4bfbf8c650"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f4bfbf89110"/>
        <function-ref name="fired" scoped="" ref="0x7f4bfbf8bda0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfbf8b3d0"/>
        <function-ref name="reset" scoped="" ref="0x7f4bfbf8a2a0"/>
        <function-ref name="isOn" scoped="" ref="0x7f4bfbf895d0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfbf8b890"/>
        <function-ref name="start" scoped="" ref="0x7f4bfbf8a760"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfbf8ac20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4bfbfa9b20" loc="79:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f4bfbfa9b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f4bfbf9de60"/>
        <function-ref name="test" scoped="" ref="0x7f4bfbf9d4e0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfbfa6790"/>
        <function-ref name="setScale" scoped="" ref="0x7f4bfbf9b350"/>
        <function-ref name="getScale" scoped="" ref="0x7f4bfbf9b860"/>
        <function-ref name="reset" scoped="" ref="0x7f4bfbfa5670"/>
        <function-ref name="overflow" scoped="" ref="0x7f4bfbfa51b0"/>
        <function-ref name="isOn" scoped="" ref="0x7f4bfbf9d9a0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfbfa6c50"/>
        <function-ref name="start" scoped="" ref="0x7f4bfbfa5b30"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfbf9d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f4bfbf7f020" loc="80:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f4bfbf7f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f4bfbf7f3a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f4bfbf7f530"/>
        <function-ref name="getControlA" scoped="" ref="0x7f4bfbf7f6c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f4bfbf7f850"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f4bfbf7f9e0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f4bfbf7fb70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f4bfbf7fd00"/>
        <function-ref name="getControlB" scoped="" ref="0x7f4bfbf7e020"/>
        <function-ref name="setControlC" scoped="" ref="0x7f4bfbf7e1b0"/>
        <function-ref name="setControlA" scoped="" ref="0x7f4bfbf7e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f4bfbf735a0" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f4bfbf735a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f4bfbf6f020"/>
        <function-ref name="fired" scoped="" ref="0x7f4bfbf72c10"/>
        <function-ref name="get" scoped="" ref="0x7f4bfbf72240"/>
        <function-ref name="reset" scoped="" ref="0x7f4bfbf70110"/>
        <function-ref name="isOn" scoped="" ref="0x7f4bfbf6f4e0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfbf72700"/>
        <function-ref name="start" scoped="" ref="0x7f4bfbf705d0"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfbf70a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f4bfbf7e850" loc="81:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f4bfbf7e850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f4bfbf74e60"/>
        <function-ref name="test" scoped="" ref="0x7f4bfbf744e0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfbf7d4c0"/>
        <function-ref name="captured" scoped="" ref="0x7f4bfbf76020"/>
        <function-ref name="reset" scoped="" ref="0x7f4bfbf76530"/>
        <function-ref name="isOn" scoped="" ref="0x7f4bfbf749a0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfbf7d980"/>
        <function-ref name="start" scoped="" ref="0x7f4bfbf769f0"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfbf74020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f4bfbf6fba0" loc="83:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f4bfbf6fba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f4bfbf6b550"/>
        <function-ref name="fired" scoped="" ref="0x7f4bfbf6d1f0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfbf6e7f0"/>
        <function-ref name="reset" scoped="" ref="0x7f4bfbf6d6b0"/>
        <function-ref name="isOn" scoped="" ref="0x7f4bfbf6ba10"/>
        <function-ref name="set" scoped="" ref="0x7f4bfbf6ecb0"/>
        <function-ref name="start" scoped="" ref="0x7f4bfbf6db70"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfbf6b090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7f4bfbf6a120" loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7f4bfbf6a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f4bfbf67a90"/>
        <function-ref name="fired" scoped="" ref="0x7f4bfbf69770"/>
        <function-ref name="get" scoped="" ref="0x7f4bfbf6ad50"/>
        <function-ref name="reset" scoped="" ref="0x7f4bfbf69c30"/>
        <function-ref name="isOn" scoped="" ref="0x7f4bfbf66020"/>
        <function-ref name="set" scoped="" ref="0x7f4bfbf69260"/>
        <function-ref name="start" scoped="" ref="0x7f4bfbf67110"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfbf675d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4bfbf87b90" loc="79:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f4bfbf87b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f4bfbf80020"/>
        <function-ref name="test" scoped="" ref="0x7f4bfbf81550"/>
        <function-ref name="get" scoped="" ref="0x7f4bfbf847f0"/>
        <function-ref name="setScale" scoped="" ref="0x7f4bfbf804e0"/>
        <function-ref name="getScale" scoped="" ref="0x7f4bfbf809f0"/>
        <function-ref name="reset" scoped="" ref="0x7f4bfbf836b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4bfbf831f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f4bfbf81a10"/>
        <function-ref name="set" scoped="" ref="0x7f4bfbf84cb0"/>
        <function-ref name="start" scoped="" ref="0x7f4bfbf83b70"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfbf81090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4bfbe7a6e0" loc="30:/usr/bin/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f4bfbe7a6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TOne" ref="0x7f4bfcfca410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4bfbe76020"/>
        <function-ref name="fired" scoped="" ref="0x7f4bfbe77020"/>
        <function-ref name="startAt" scoped="" ref="0x7f4bfbe779a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4bfbe774e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4bfbe764e0"/>
        <function-ref name="start" scoped="" ref="0x7f4bfbe795b0"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfbe79ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4bfbecdb50" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4bfbecdb50"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f4bfd1009c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f4bfd1009c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfbec1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4bfbec1410" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f4bfbec1410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f4bfbebd810"/>
        <function-ref name="test" scoped="" ref="0x7f4bfbebee60"/>
        <function-ref name="get" scoped="" ref="0x7f4bfbec0090"/>
        <function-ref name="setScale" scoped="" ref="0x7f4bfbebdcd0"/>
        <function-ref name="getScale" scoped="" ref="0x7f4bfbebc260"/>
        <function-ref name="reset" scoped="" ref="0x7f4bfbebe020"/>
        <function-ref name="overflow" scoped="" ref="0x7f4bfbec0a60"/>
        <function-ref name="isOn" scoped="" ref="0x7f4bfbebd350"/>
        <function-ref name="set" scoped="" ref="0x7f4bfbec0550"/>
        <function-ref name="start" scoped="" ref="0x7f4bfbebe4e0"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfbebe9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4bfb410610" loc="55:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f4bfb410610"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f4bfd100640"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f4bfd100640"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TOne" ref="0x7f4bfcfca410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4bfb40d020"/>
        <function-ref name="fired" scoped="" ref="0x7f4bfb40e020"/>
        <function-ref name="startAt" scoped="" ref="0x7f4bfb40e9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4bfb40e4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4bfb40d4e0"/>
        <function-ref name="start" scoped="" ref="0x7f4bfb40f5b0"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfb40fac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7f4bfb408db0" loc="58:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f4bfb408db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f4bfb4049a0"/>
        <function-ref name="fired" scoped="" ref="0x7f4bfb405530"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb406a10"/>
        <function-ref name="reset" scoped="" ref="0x7f4bfb4059f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f4bfb404e60"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb405020"/>
        <function-ref name="start" scoped="" ref="0x7f4bfb404020"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfb4044e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7f4bfb40da30" loc="57:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f4bfb40da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f4bfb409e60"/>
        <function-ref name="test" scoped="" ref="0x7f4bfb4094e0"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb40b6b0"/>
        <function-ref name="setScale" scoped="" ref="0x7f4bfb408350"/>
        <function-ref name="getScale" scoped="" ref="0x7f4bfb408860"/>
        <function-ref name="reset" scoped="" ref="0x7f4bfb40a590"/>
        <function-ref name="overflow" scoped="" ref="0x7f4bfb40a0d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f4bfb4099a0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb40bb70"/>
        <function-ref name="start" scoped="" ref="0x7f4bfb40aa50"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfb409020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f4bfbe723a0" loc="39:/usr/bin/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f4bfbe723a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4bfd01e180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4bfbe71020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4bfbe6e200" loc="24:/usr/bin/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f4bfbe6e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TOne" ref="0x7f4bfcfca410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4bfbe6c090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4bfbe6ca10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4bfbe6c550"/>
        <function-ref name="overflow" scoped="" ref="0x7f4bfbe6b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4bfbe68020" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f4bfbe68020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TOne" ref="0x7f4bfcfca410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4bfbe68e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4bfbe52800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4bfbe52340"/>
        <function-ref name="overflow" scoped="" ref="0x7f4bfbe52cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4bfbe51280" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f4bfbe51280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f4bfbe4d810"/>
        <function-ref name="test" scoped="" ref="0x7f4bfbe4ee60"/>
        <function-ref name="get" scoped="" ref="0x7f4bfbe4f020"/>
        <function-ref name="setScale" scoped="" ref="0x7f4bfbe4dcd0"/>
        <function-ref name="getScale" scoped="" ref="0x7f4bfbe4b260"/>
        <function-ref name="reset" scoped="" ref="0x7f4bfbe4e020"/>
        <function-ref name="overflow" scoped="" ref="0x7f4bfbe4f9f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f4bfbe4d350"/>
        <function-ref name="set" scoped="" ref="0x7f4bfbe4f4e0"/>
        <function-ref name="start" scoped="" ref="0x7f4bfbe4e4e0"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfbe4e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f4bfbe260f0" loc="63:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f4bfbe260f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4bfd01e180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4bfbe25020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4bfbe259a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4bfbe254e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4bfbe25e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4bfbe48cf0" loc="62:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f4bfbe48cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4bfd01e180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4bfbe29b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4bfbe27550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4bfbe27090"/>
        <function-ref name="overflow" scoped="" ref="0x7f4bfbe27a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f4bfbe22b60" loc="48:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f4bfbe22b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4bfd01e180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4bfbe217d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f4bfbe21e40" loc="49:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f4bfbe21e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4bfd01e180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4bfbe20ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4bfbe1f670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4bfbe1f1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4bfbe1fb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f4bfbe179a0" loc="36:/usr/bin/tinyos-main/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f4bfbe179a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4bfd01e180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f4bfbe107e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4bfbd06020" loc="49:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="LedToRadioAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f4bfbd06020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfbd063a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4bfbd06530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfbd066c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfbd06850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfbd069e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4bfbd06c30" loc="50:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="LedToRadioAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f4bfbd06c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfbd04020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfbd041b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4bfbd04340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfbd044d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfbd04660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4bfbd048b0" loc="51:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="LedToRadioAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f4bfbd048b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4bfbd04c30"/>
        <function-ref name="source" scoped="" ref="0x7f4bfbd04dc0"/>
        <function-ref name="address" scoped="" ref="0x7f4bfbd03020"/>
        <function-ref name="destination" scoped="" ref="0x7f4bfbd031b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4bfbd03340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4bfbd034d0"/>
        <function-ref name="type" scoped="" ref="0x7f4bfbd03660"/>
        <function-ref name="setType" scoped="" ref="0x7f4bfbd037f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4bfbd03980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4bfbd03b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4bfbd03ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f4bfbd02020" loc="52:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="LedToRadioAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f4bfbd02020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4bfbd023a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f4bfbd02530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4bfbd026c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4bfb3d3230" loc="49:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="LedToRadioAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f4bfb3d3230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfb3d35b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4bfb3d3740"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfb3d38d0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfb3d3a60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfb3d3bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4bfb3d3e40" loc="50:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="LedToRadioAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f4bfb3d3e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfb3d21e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfb3d2370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4bfb3d2500"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfb3d2690"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfb3d2820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4bfb3d2a70" loc="51:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="LedToRadioAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f4bfb3d2a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4bfb3d2df0"/>
        <function-ref name="source" scoped="" ref="0x7f4bfb3d1020"/>
        <function-ref name="address" scoped="" ref="0x7f4bfb3d11b0"/>
        <function-ref name="destination" scoped="" ref="0x7f4bfb3d1340"/>
        <function-ref name="setSource" scoped="" ref="0x7f4bfb3d14d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4bfb3d1660"/>
        <function-ref name="type" scoped="" ref="0x7f4bfb3d17f0"/>
        <function-ref name="setType" scoped="" ref="0x7f4bfb3d1980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4bfb3d1b10"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4bfb3d1ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4bfb3d1e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f4bfb3d0120" loc="52:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="LedToRadioAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f4bfb3d0120"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f4bfb3d04a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f4bfb3d0630"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f4bfb3d07c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f4bfb3c7b20" loc="44:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="LedToRadioAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f4bfb3c7b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfb3c6020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4bfb3c61b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfb3c6340"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfb3c64d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfb3c6660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f4bfb3c6910" loc="46:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="LedToRadioAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f4bfb3c6910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfb3c6c90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4bfb3c6e20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfb3c5020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfb3c51b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfb3c5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f4bfb3c5590" loc="47:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="LedToRadioAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f4bfb3c5590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4bfb3c5910"/>
        <function-ref name="source" scoped="" ref="0x7f4bfb3c5aa0"/>
        <function-ref name="address" scoped="" ref="0x7f4bfb3c5c30"/>
        <function-ref name="destination" scoped="" ref="0x7f4bfb3c5dc0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4bfb3c4020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4bfb3c41b0"/>
        <function-ref name="type" scoped="" ref="0x7f4bfb3c4340"/>
        <function-ref name="setType" scoped="" ref="0x7f4bfb3c44d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4bfb3c4660"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4bfb3c47f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4bfb3c4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4bfbd6fc20" loc="43:/usr/bin/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f4bfbd6fc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfbd6c020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4bfbd6c1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfbd6c340"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfbd6c4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfbd6c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f4bfbd1d400" loc="48:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f4bfbd1d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfbd1d7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4bfbd1d930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfbd1dac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfbd1dc50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfbd1dde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f4bfbd1e580" loc="46:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f4bfbd1e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4bfbd1e920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4bfbd1eab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfbd1ec40"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfbd1edd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4bfbd1d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f4bfbd1a720" loc="50:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f4bfbd1a720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfbd1aaa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfbd1ac30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4bfbd1adc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfbd19020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfbd191b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f4bfbd19480" loc="169:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7f4bfbd19480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4bfbd19800"/>
        <function-ref name="runTask" scoped="" ref="0x7f4bfbd19990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f4bfbd19c60" loc="126:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7f4bfbd19c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4bfbd18020"/>
        <function-ref name="runTask" scoped="" ref="0x7f4bfbd181b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f4bfbd1b060" loc="49:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f4bfbd1b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4bfbd1b3e0"/>
        <function-ref name="source" scoped="" ref="0x7f4bfbd1b570"/>
        <function-ref name="address" scoped="" ref="0x7f4bfbd1b700"/>
        <function-ref name="destination" scoped="" ref="0x7f4bfbd1b890"/>
        <function-ref name="setSource" scoped="" ref="0x7f4bfbd1ba20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4bfbd1bbb0"/>
        <function-ref name="type" scoped="" ref="0x7f4bfbd1bd40"/>
        <function-ref name="setType" scoped="" ref="0x7f4bfbd1a020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4bfbd1a1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4bfbd1a340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4bfbd1a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f4bfbcf8020" loc="46:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="LedToRadioAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f4bfbcf8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4bfbcf83a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f4bfbcf8530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f4bfbcf86c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f4bfbcf8850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f4bfbcf89e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f4bfbcff910" loc="45:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="LedToRadioAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f4bfbcff910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f4bfbcffc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f4bfbcf8c30" loc="47:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="LedToRadioAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f4bfbcf8c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f4bfbcf7020"/>
        <function-ref name="source" scoped="" ref="0x7f4bfbcf71b0"/>
        <function-ref name="address" scoped="" ref="0x7f4bfbcf7340"/>
        <function-ref name="destination" scoped="" ref="0x7f4bfbcf74d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f4bfbcf7660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f4bfbcf77f0"/>
        <function-ref name="type" scoped="" ref="0x7f4bfbcf7980"/>
        <function-ref name="setType" scoped="" ref="0x7f4bfbcf7b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f4bfbcf7ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f4bfbcf7e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f4bfbcf6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f4bfbcf4e00" loc="43:/usr/bin/tinyos-main/tos/platforms/micaz/DemoSensorC.nc">
      <component-ref qname="LedToRadioAppC.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f4bfbcf4e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4bfbcf3a80"/>
        <function-ref name="readDone" scoped="" ref="0x7f4bfbb32020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f4bfb379990" loc="41:/usr/bin/tinyos-main/tos/platforms/mica/VoltageC.nc">
      <component-ref qname="LedToRadioAppC.Sensor.DemoChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f4bfb379990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4bfb3785a0"/>
        <function-ref name="readDone" scoped="" ref="0x7f4bfb378a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4bfb373950" loc="25:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="LedToRadioAppC.Sensor.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4bfb373950"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4bfb373cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f4bfb373e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f4bfb375980" loc="22:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="LedToRadioAppC.Sensor.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f4bfb375980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4bfb3745a0"/>
        <function-ref name="readDone" scoped="" ref="0x7f4bfb374a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f4bfb373060" loc="24:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="LedToRadioAppC.Sensor.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f4bfb373060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f4bfb3733e0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4bfb373570"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f4bfb373700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f4bfbce6e70" loc="19:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f4bfbce6e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4bfbcdfa90"/>
        <function-ref name="readDone" scoped="" ref="0x7f4bfbcde020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f4bfbcd9e60" loc="20:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f4bfbcd9e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4bfbcdcac0"/>
        <function-ref name="readDone" scoped="" ref="0x7f4bfbcdb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f4bfbcdbc20" loc="23:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f4bfbcdbc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f4bfbcd7020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4bfbcd71b0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f4bfbcd7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f4bfbcd7b50" loc="24:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f4bfbcd7b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4bfbcd6020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4bfbcd61b0"/>
        <function-ref name="request" scoped="" ref="0x7f4bfbcd6340"/>
        <function-ref name="granted" scoped="" ref="0x7f4bfbcd64d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4bfbcd6660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4bfbcd0af0" loc="58:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4bfbcd0af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4bfbcd0e70"/>
        <function-ref name="configure" scoped="" ref="0x7f4bfbccb030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7f4bfbcc6c90" loc="56:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f4bfbcc6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f4bfbcd00a0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f4bfbcd0230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7f4bfbcccdd0" loc="55:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f4bfbcccdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f4bfbcd1180"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfbcd1310"/>
        <function-ref name="dataReady" scoped="" ref="0x7f4bfbcd14a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4bfbcd3860" loc="54:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f4bfbcd3860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4bfbcd3be0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4bfbcd3d70"/>
        <function-ref name="request" scoped="" ref="0x7f4bfbcd2020"/>
        <function-ref name="granted" scoped="" ref="0x7f4bfbcd21b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4bfbcd2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4bfbcc3150" loc="54:/usr/bin/tinyos-main/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4bfbcc3150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfbcc34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7f4bfbcc29c0" loc="57:/usr/bin/tinyos-main/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f4bfbcc29c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f4bfbcc2d40"/>
        <function-ref name="dataReady" scoped="" ref="0x7f4bfbcc1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7f4bfbcc2020" loc="56:/usr/bin/tinyos-main/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f4bfbcc2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f4bfbcc23a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfbcc2530"/>
        <function-ref name="dataReady" scoped="" ref="0x7f4bfbcc26c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x7f4bfbcc0020" loc="60:/usr/bin/tinyos-main/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f4bfbcc0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f4bfbcc03a0"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f4bfbcc0530"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f4bfbcc06c0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f4bfbcc0850"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f4bfbcc09e0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f4bfbcc0b70"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f4bfbcc0d00"/>
        <function-ref name="isComplete" scoped="" ref="0x7f4bfbcbf020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfbcbf1b0"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f4bfbcbf340"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f4bfbcbf4d0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f4bfbcbf660"/>
        <function-ref name="startConversion" scoped="" ref="0x7f4bfbcbf7f0"/>
        <function-ref name="isStarted" scoped="" ref="0x7f4bfbcbfa80"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f4bfbcbfc10"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f4bfbcbfda0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f4bfbcaf020"/>
        <function-ref name="getValue" scoped="" ref="0x7f4bfbcaf1b0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f4bfbcaf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f4bfbcc37c0" loc="55:/usr/bin/tinyos-main/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4bfbcc37c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4bfbcc3b40"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfbcc3cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7f4bfbcaf630" loc="61:/usr/bin/tinyos-main/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f4bfbcaf630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f4bfbcaf9b0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f4bfbcafb40"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f4bfbcafcd0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f4bfbcafe60"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f4bfbcae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7f4bfbcc4cc0" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f4bfbcc4cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f4bfbc7b0a0"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f4bfbc7b230"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f4bfbc7b3c0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f4bfbc7b550"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f4bfbc7b6e0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f4bfbc7b870"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f4bfbc7ba00"/>
        <function-ref name="isComplete" scoped="" ref="0x7f4bfbc7bb90"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfbc7bd20"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f4bfbc7a020"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f4bfbc7a1b0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f4bfbc7a340"/>
        <function-ref name="startConversion" scoped="" ref="0x7f4bfbc7a4d0"/>
        <function-ref name="isStarted" scoped="" ref="0x7f4bfbc7a760"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f4bfbc7a8f0"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f4bfbc7aa80"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f4bfbc7ac10"/>
        <function-ref name="getValue" scoped="" ref="0x7f4bfbc7ada0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f4bfbc79020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7f4bfbc761f0" loc="48:/usr/bin/tinyos-main/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f4bfbc761f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f4bfbc76570"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f4bfbc76700"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f4bfbc76890"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f4bfbc76a20"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f4bfbc76bb0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f4bfbc76d40"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f4bfbc75020"/>
        <function-ref name="isComplete" scoped="" ref="0x7f4bfbc751b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfbc75340"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f4bfbc754d0"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f4bfbc75660"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f4bfbc757f0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f4bfbc75980"/>
        <function-ref name="isStarted" scoped="" ref="0x7f4bfbc75c10"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f4bfbc75da0"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f4bfbc74020"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f4bfbc741b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4bfbc74340"/>
        <function-ref name="dataReady" scoped="" ref="0x7f4bfbc744d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f4bfbc747f0" loc="49:/usr/bin/tinyos-main/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f4bfbc747f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f4bfbc74b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4bfbbc96c0" loc="92:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4bfbbc96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4bfbbc9a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4bfbbc9bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4bfbbc73e0" loc="96:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4bfbbc73e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4bfbbc7780"/>
        <function-ref name="configure" scoped="" ref="0x7f4bfbbc7910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f4bfbbc9e40" loc="93:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4bfbbc9e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4bfbbc81e0"/>
        <function-ref name="requested" scoped="" ref="0x7f4bfbbc8370"/>
        <function-ref name="granted" scoped="" ref="0x7f4bfbbc8500"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4bfbbc8690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4bfbbc8820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4bfbbca7f0" loc="91:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f4bfbbca7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4bfbbcab90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4bfbbcad20"/>
        <function-ref name="request" scoped="" ref="0x7f4bfbbc9020"/>
        <function-ref name="granted" scoped="" ref="0x7f4bfbbc91b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4bfbbc9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4bfbbc8a70" loc="94:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4bfbbc8a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4bfbbc8df0"/>
        <function-ref name="userId" scoped="" ref="0x7f4bfbbc7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4bfb3610e0" loc="44:/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4bfb3610e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4bfb361460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f4bfb3616f0" loc="45:/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f4bfb3616f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f4bfb361a70"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f4bfb361c00"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f4bfb361d90"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4bfb360020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4bfb35e850" loc="55:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4bfb35e850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4bfb35ebf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4bfb35ed80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4bfb35c590" loc="60:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4bfb35c590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4bfb35c930"/>
        <function-ref name="configure" scoped="" ref="0x7f4bfb35cac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f4bfb35cd50" loc="61:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f4bfb35cd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f4bfb35a100"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f4bfb35a290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f4bfb35a420"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4bfb35a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f4bfb35d020" loc="56:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4bfb35d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4bfb35d3a0"/>
        <function-ref name="requested" scoped="" ref="0x7f4bfb35d530"/>
        <function-ref name="granted" scoped="" ref="0x7f4bfb35d6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4bfb35d850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4bfb35d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f4bfb35a800" loc="62:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f4bfb35a800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4bfb35ab80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4bfb35ad10"/>
        <function-ref name="led1On" scoped="" ref="0x7f4bfb359020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4bfb3591b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4bfb359340"/>
        <function-ref name="get" scoped="" ref="0x7f4bfb3594d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4bfb359660"/>
        <function-ref name="led0On" scoped="" ref="0x7f4bfb359ca0"/>
        <function-ref name="set" scoped="" ref="0x7f4bfb359980"/>
        <function-ref name="led2On" scoped="" ref="0x7f4bfb3597f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4bfb359b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4bfb35f970" loc="54:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f4bfb35f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4bfb35fd10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4bfb35e020"/>
        <function-ref name="request" scoped="" ref="0x7f4bfb35e1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f4bfb35e340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4bfb35e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4bfb35dc30" loc="57:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4bfb35dc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4bfb35c020"/>
        <function-ref name="userId" scoped="" ref="0x7f4bfb35c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f4bfb358020" loc="75:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f4bfb358020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4bfb3583a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4bfb358530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f4bfbbc3960" loc="72:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f4bfbbc3960"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f4bfbbc3ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f4bfbbad020" loc="73:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4bfbbad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4bfbbad3a0"/>
        <function-ref name="requested" scoped="" ref="0x7f4bfbbad530"/>
        <function-ref name="granted" scoped="" ref="0x7f4bfbbad6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4bfbbad850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4bfbbad9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f4bfbbc3200" loc="70:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4bfbbc3200"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4bfbbc3580"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfbbc3710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f4bfbbadc30" loc="74:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4bfbbadc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4bfbbac020"/>
        <function-ref name="userId" scoped="" ref="0x7f4bfbbac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f4bfb325270" loc="62:/usr/bin/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f4bfb325270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f4bfb3255f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f4bfb325840" loc="63:/usr/bin/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4bfb325840"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4bfb325bc0"/>
        <function-ref name="requested" scoped="" ref="0x7f4bfb325d50"/>
        <function-ref name="granted" scoped="" ref="0x7f4bfb324020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4bfb3241b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4bfb324340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f4bfb326ad0" loc="60:/usr/bin/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4bfb326ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4bfb326e50"/>
        <function-ref name="stop" scoped="" ref="0x7f4bfb325020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f4bfb324590" loc="64:/usr/bin/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4bfb324590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4bfb324910"/>
        <function-ref name="userId" scoped="" ref="0x7f4bfb324aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f4bfbb968d0" loc="54:/usr/bin/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f4bfbb968d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4bfd01fd50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4bfd01e180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f4bfbb95780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f4bfbb9c580" loc="48:/usr/bin/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f4bfbb9c580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4bfbb9b1b0"/>
        <function-ref name="readDone" scoped="" ref="0x7f4bfbb9b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f4bfbb9a300" loc="49:/usr/bin/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f4bfbb9a300"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4bfbb99020"/>
        <function-ref name="readDone" scoped="" ref="0x7f4bfbb994e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f4bfbb97b90" loc="53:/usr/bin/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f4bfbb97b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f4bfbb96020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4bfbb961b0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f4bfbb96340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x7f4bfbb99b80" loc="52:/usr/bin/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f4bfbb99b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f4bfbb97020"/>
        <function-ref name="cancel" scoped="" ref="0x7f4bfbb971b0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f4bfbb97340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x7f4bfbb84660" loc="104:/usr/bin/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x7f4bfbb84660"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4bfbb849e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4bfbb84b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f4bfbb68150" loc="24:/usr/bin/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f4bfbb68150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4bfbb68d60"/>
        <function-ref name="readDone" scoped="" ref="0x7f4bfbb50260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f4bfbb50af0" loc="26:/usr/bin/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f4bfbb50af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4bfbb4e750"/>
        <function-ref name="readDone" scoped="" ref="0x7f4bfbb4ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f4bfbb4d300" loc="27:/usr/bin/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f4bfbb4d300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4bfbb4d6a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4bfbb4d830"/>
        <function-ref name="request" scoped="" ref="0x7f4bfbb4d9c0"/>
        <function-ref name="granted" scoped="" ref="0x7f4bfbb4db50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4bfbb4dce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7f4bfbb38160" loc="40:/usr/bin/tinyos-main/tos/platforms/mica/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f4bfbb38160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f4bfbb384e0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4bfbb38670"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f4bfbb38800"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/usr/bin/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f4bfcf7aa60" loc="62:/usr/bin/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/usr/bin/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/usr/bin/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f4bfcf78690" loc="60:/usr/bin/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/usr/bin/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f4bfcf66e00" loc="60:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f4bfcf66b80" loc="60:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f4bfcf693e0" loc="31:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f4bfcf69e60" loc="39:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f4bfcf69be0" loc="39:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f4bfcf679a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f4bfcf67720" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f4bfcf662b0" loc="53:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f4bfcf52270" loc="44:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f4bfcf529a0" loc="45:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f4bfcf54420" loc="42:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f4bfcf51820" loc="47:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f4bfcf54b20" loc="43:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f4bfcf510e0" loc="46:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4bfcf55610" loc="40:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f4bfcf55ce0" loc="41:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/usr/bin/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/usr/bin/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f4bfe02dc40" loc="57:/usr/bin/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/usr/bin/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f4bfd0c0bf0" loc="72:/usr/bin/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/usr/bin/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f4bfd0c03e0" loc="65:/usr/bin/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/usr/bin/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f4bfd0b5c50" loc="67:/usr/bin/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f4bfd0b04f0" loc="75:/usr/bin/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/usr/bin/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/usr/bin/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/usr/bin/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f4bfcfc2ab0" loc="76:/usr/bin/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/usr/bin/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/usr/bin/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/usr/bin/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f4bfcf9e1f0" loc="62:/usr/bin/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/usr/bin/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f4bfd05e470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/usr/bin/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f4bfcfdeb80" loc="52:/usr/bin/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f4bfccb7a60" loc="61:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f4bfccb6270" loc="67:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f4bfccb6a50" loc="72:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f4bfccb4a20" loc="83:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f4bfccb21f0" loc="100:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f4bfccb2a00" loc="117:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f4bfccb4270" loc="77:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4bfccb15a0" loc="134:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f4bfccb1320" loc="134:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f4bfccb72d0" loc="56:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f4bfccb3270" loc="89:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f4bfccb3a00" loc="94:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4bfcc665d0" loc="53:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4bfcc665d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f4bfcc5d420" loc="136:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f4bfcc62d60" loc="83:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f4bfcc5fb10" loc="114:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f4bfcc5f540" loc="114:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f4bfcc5f880" loc="114:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f4bfcc60d60" loc="98:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f4bfcc58460" loc="151:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f4bfcc5dbb0" loc="144:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f4bfcc60570" loc="92:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f4bfcc632a0" loc="64:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f4bfcc63020" loc="64:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f4bfcc5eaa0" loc="129:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f4bfcc5e4d0" loc="129:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f4bfcc5e810" loc="129:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f4bfcc63d60" loc="73:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f4bfcc63ae0" loc="73:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4bfcc62650" loc="78:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f4bfcb85110" loc="113:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f4bfcb89e40" loc="113:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f4bfcb84600" loc="138:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f4bfcb84380" loc="138:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f4bfcb89460" loc="104:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4bfcb85960" loc="130:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x7f4bfcbb7020" loc="65:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfcbbdc20" loc="65:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f4bfcbb6110" loc="78:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfcbb7e10" loc="78:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f4bfcbb2490" loc="126:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfcbb3e50" loc="126:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4bfcbb21c0" loc="126:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f4bfcbb3560" loc="106:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f4bfcbb55e0" loc="94:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfcbb5020" loc="94:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4bfcbb5350" loc="94:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f4bfcb962c0" loc="80:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4bfcbdd1d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f4bfcbc4800" loc="80:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4bfcbdd1d0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f4bfcbc4b80" loc="80:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4bfcb96020" loc="80:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f4bfcb92970" loc="135:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfcb92370" loc="135:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4bfcb926a0" loc="135:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f4bfcb91a60" loc="123:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f4bfcb95630" loc="96:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfcb953b0" loc="96:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4bfcb94b80" loc="110:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfcb945a0" loc="110:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f4bfcb948f0" loc="110:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/usr/bin/tinyos-main/tos/interfaces/Read.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f4bfcb98c50" loc="49:/usr/bin/tinyos-main/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f4bfcb98c50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f4bfcb82540" loc="55:/usr/bin/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="50:/usr/bin/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f4bfcb802b0" loc="63:/usr/bin/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f4bfcb98c50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f4bfcb82cc0" loc="63:/usr/bin/tinyos-main/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f4bfcb80020" loc="63:/usr/bin/tinyos-main/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f4bfcb98c50"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/usr/bin/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f4bfcb8d9c0" loc="78:/usr/bin/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/usr/bin/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
              <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfcb8d060" loc="78:/usr/bin/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f4bfcb8d3b0" loc="78:/usr/bin/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4bfcb8d6e0" loc="78:/usr/bin/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f4bfcba1040" loc="177:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f4bfcbdedc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4bfcba4d90" loc="177:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f4bfcbadbc0" loc="88:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f4bfcbdd1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4bfcbad940" loc="88:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f4bfcbb1020" loc="68:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f4bfcbdd1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f4bfcbb1ae0" loc="78:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f4bfcbdd1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4bfcbb1860" loc="78:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f4bfcba7600" loc="121:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4bfcbdd1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4bfcba7020" loc="121:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f4bfcba7370" loc="121:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4bfcbdd1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f4bfcbae020" loc="103:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4bfcbdd1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4bfcba99e0" loc="103:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f4bfcba9d30" loc="103:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4bfcbdd1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f4bfcba3ae0" loc="147:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4bfcba3860" loc="147:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f4bfcba2e60" loc="162:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4bfcba28b0" loc="162:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f4bfcba2bd0" loc="162:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f4bfcbde9e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f4bfcba5890" loc="136:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4bfcba5610" loc="136:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f4bfcb9f600" loc="187:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f4bfcbdedc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f4bfcb9f020" loc="187:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f4bfcb9f370" loc="187:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f4bfcbdedc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f4bfcb9e490" loc="195:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f4bfcbdedc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/usr/bin/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4bfcb436d0" loc="53:/usr/bin/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4bfcb436d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f4bfcb40020" loc="61:/usr/bin/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/usr/bin/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4bfcb29410" loc="57:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4bfcb29410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f4bfcb29650" loc="57:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4bfcb29650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f4bfcb28020" loc="64:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4bfcb29650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f4bfcb27120" loc="76:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f4bfcb288a0" loc="71:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f4bfcb27880" loc="82:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4bfcb3dba0" loc="56:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4bfcb3dba0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f4bfcb3dde0" loc="56:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4bfcb3dde0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f4bfcb339c0" loc="109:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4bfcb3dde0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f4bfcb359b0" loc="78:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f4bfcb33020" loc="103:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4bfcb3dde0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4bfcb3dde0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f4bfcb34a10" loc="103:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4bfcb3dde0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f4bfcb34d50" loc="103:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4bfcb3dde0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f4bfcb341f0" loc="88:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f4bfcb311f0" loc="116:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4bfcb3dde0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f4bfcb36960" loc="66:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4bfcb3dde0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f4bfcb366e0" loc="66:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4bfcb3dde0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4bfcb351f0" loc="73:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f4bfcaf3b20" loc="89:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f4bfcaf48e0" loc="85:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f4bfcaf75a0" loc="79:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f4bfcaf3350" loc="86:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f4bfcaf30d0" loc="86:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f4bfcaf4110" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f4bfcaf5e30" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f4bfcaf15c0" loc="90:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f4bfcaf1340" loc="90:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f4bfcaf7d40" loc="80:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f4bfcaf5710" loc="81:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f4bfcaf5490" loc="81:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x7f4bfcade0e0" loc="92:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x7f4bfcae1020" loc="68:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7f4bfcae17a0" loc="74:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7f4bfcae0020" loc="80:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f4bfcade8f0" loc="98:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7f4bfcae0850" loc="86:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f4bfcae5d00" loc="57:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f4bfcffdda0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f4bfcffa230"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f4bfcae2770" loc="63:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f4bfcffdda0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f4bfcffa230"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f4bfcae24f0" loc="63:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f4bfcffdda0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f4bfcffa230"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f4bfcaef0d0" loc="41:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4bfcaef0d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f4bfcaea9f0" loc="74:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f4bfcaeebf0" loc="58:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f4bfcaefa10" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4bfcaef0d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f4bfcaed390" loc="62:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f4bfcae81f0" loc="80:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4bfcaee440" loc="54:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4bfcaef0d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f4bfcaee1c0" loc="54:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4bfcaef0d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f4bfcaedb00" loc="65:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4bfcaea270" loc="68:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f4bfcb06430" loc="55:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f4bfcb06430"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f4bfcb00020" loc="98:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f4bfcb01020" loc="87:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f4bfcb06d60" loc="61:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f4bfcb06430"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f4bfcb00a00" loc="104:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f4bfcb00780" loc="104:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f4bfcaff270" loc="110:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f4bfcb047b0" loc="75:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f4bfcb04020" loc="70:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f4bfcb017e0" loc="93:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4bfcb05760" loc="67:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f4bfcb06430"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f4bfcb054e0" loc="67:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f4bfcb06430"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f4bfcb03020" loc="78:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4bfcb03770" loc="81:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/usr/bin/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/usr/bin/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f4bfc94dd40" loc="59:/usr/bin/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/usr/bin/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4bfcbdd1d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f4bfc94d730" loc="59:/usr/bin/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4bfcbdd1d0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f4bfc94dab0" loc="59:/usr/bin/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f4bfc9402b0" loc="65:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc941bd0" loc="65:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f4bfc940020" loc="65:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f4bfc93e430" loc="71:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc93e1b0" loc="71:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f4bfc9413e0" loc="57:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f4bfc9459e0" loc="52:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f4bfc945760" loc="52:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f4bfc9475f0" loc="59:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc947370" loc="59:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f4bfc9467d0" loc="71:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc946550" loc="71:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f4bfc944940" loc="85:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc9446c0" loc="85:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f4bfc9316c0" loc="65:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc931440" loc="65:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f4bfc935790" loc="46:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc935170" loc="46:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f4bfc935500" loc="46:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f4bfc932680" loc="59:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc932400" loc="59:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f4bfc934b90" loc="53:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc934570" loc="53:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f4bfc934900" loc="53:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f4bfc9306c0" loc="71:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc930440" loc="71:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x7f4bfc92c0e0" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f4bfc92d880" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f4bfc92d600" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f4bfc92c930" loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f4bfc93dac0" loc="35:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4bfc93dac0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f4bfc93dd00" loc="35:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4bfc93dd00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f4bfc927b40" loc="63:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4bfc93dd00"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc9278c0" loc="63:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f4bfc926cc0" loc="70:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc926a40" loc="70:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f4bfc9298e0" loc="49:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc929660" loc="49:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4bfc925020" loc="78:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4bfc93dd00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc91d9e0" loc="78:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f4bfc91dd40" loc="78:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4bfc93dd00"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x7f4bfc901720" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f4bfc901720"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x7f4bfc8fc8c0" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc8fc640" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f4bfc8fddd0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f4bfc901720"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc8fdb50" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f4bfc8fd350" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc8fd0d0" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4bfc8fb660" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f4bfc901720"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc8fb060" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f4bfc8fb3d0" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f4bfc901720"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/usr/bin/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/usr/bin/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f4bfc8e97c0" loc="47:/usr/bin/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc8e9540" loc="47:/usr/bin/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f4bfc8b9bf0" loc="120:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f4bfc8bbbe0" loc="97:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f4bfc8bb270" loc="88:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f4bfc8b9420" loc="102:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f4bfc8b88b0" loc="128:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x7f4bfc8b5e80" loc="41:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f4bfcbfd630"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc8b5c00" loc="41:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f4bfc8bca30" loc="37:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f4bfcbfd630"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f4bfc8b5490" loc="39:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f4bfcbfd630"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc8b5210" loc="39:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f4bfc8b2990" loc="45:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f4bfcbfd630"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc8b2370" loc="45:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f4bfc8b2700" loc="45:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f4bfcbfd630"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f4bfc8b3be0" loc="43:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f4bfcbfd630"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc8b35c0" loc="43:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f4bfc8b3950" loc="43:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f4bfcbfd630"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x7f4bfc8b1d20" loc="49:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f4bfcbfd210"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc8b1aa0" loc="49:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x7f4bfc8afa50" loc="51:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7f4bfcbfd210"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc8af440" loc="51:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f4bfc8af7c0" loc="51:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7f4bfcbfd210"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f4bfc8b1350" loc="47:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc8b10d0" loc="47:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7f4bfc8ae1f0" loc="53:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f4bfcbfd210"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f4bfc8c9cd0" loc="67:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f4bfcbfd630"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f4bfc8c9380" loc="67:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f4bfcbfd630"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f4bfc8c9700" loc="67:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4bfc8c9a30" loc="67:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f4bfc8be660" loc="122:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc8be060" loc="122:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4bfc8be390" loc="122:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f4bfc8c5790" loc="110:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f4bfc8c8c00" loc="83:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc8c8980" loc="83:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4bfc8c7de0" loc="97:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc8c7800" loc="97:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f4bfc8c7b50" loc="97:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x7f4bfc85a750" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x7f4bfc86b9b0" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc86b730" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x7f4bfc8552a0" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f4bfcbdedc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc855020" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x7f4bfc853a30" loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc8537b0" loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f4bfc857a50" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f4bfcbdd1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc8577d0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f4bfc8592e0" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f4bfcbdd1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc859060" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f4bfc856790" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4bfcbdd1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc8561b0" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f4bfc856500" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4bfcbdd1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f4bfc857050" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4bfcbdd1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc859a40" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f4bfc859d90" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4bfcbdd1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f4bfc853020" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f4bfcbdedc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc8559d0" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f4bfc855d20" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f4bfcbdedc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x7f4bfc86d960" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x7f4bfc85d350" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x7f4bfc85b5f0" loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc85b370" loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x7f4bfc85de60" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc85dbe0" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x7f4bfc85c9a0" loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc85c720" loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x7f4bfc826d60" loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x7f4bfc827e10" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7f4bfcc01180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x7f4bfc827b90" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7f4bfcc01180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f4bfc8265f0" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x7f4bfc827350" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x7f4bfc8245b0" loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f4bfcc01180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x7f4bfc81ea90" loc="70:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc81e810" loc="70:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f4bfc822e00" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc822b80" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f4bfc8204d0" loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f4bfc821c70" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc821690" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f4bfc8219e0" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7f4bfc8222a0" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc822020" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7f4bfc81e020" loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc820ce0" loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f4bfc884020" loc="46:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7f4bfc8866c0" loc="40:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc886440" loc="40:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7f4bfc884b50" loc="52:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc8848d0" loc="52:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x7f4bfc883420" loc="59:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x7f4bfc882020" loc="65:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc883d20" loc="65:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x7f4bfc86c2a0" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc86c020" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x7f4bfc8731f0" loc="86:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x7f4bfc8749d0" loc="80:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4bfc8743c0" loc="80:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f4bfc874740" loc="80:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7f4bfc87e3f0" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc87e170" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x7f4bfc87d020" loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc87ec80" loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x7f4bfc876020" loc="69:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4bfc87d910" loc="69:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f4bfc87dc90" loc="69:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x7f4bfc888a80" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7f4bfc880910" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc880370" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f4bfc880680" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7f4bfc876b90" loc="75:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc876910" loc="75:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x7f4bfc83a0b0" loc="131:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc83cdd0" loc="131:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x7f4bfc83d680" loc="120:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc83d400" loc="120:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x7f4bfc84fdf0" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc84f820" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x7f4bfc84fb60" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x7f4bfc845020" loc="75:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc846ca0" loc="75:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x7f4bfc835050" loc="156:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc836a40" loc="156:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f4bfc836d90" loc="156:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x7f4bfc846430" loc="69:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc8461b0" loc="69:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x7f4bfc83c5e0" loc="125:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc83c020" loc="125:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x7f4bfc83c350" loc="125:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x7f4bfc8439d0" loc="88:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4bfc8433c0" loc="88:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f4bfc843740" loc="88:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x7f4bfc8362a0" loc="151:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc836020" loc="151:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x7f4bfc84d920" loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc84d6a0" loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x7f4bfc8413f0" loc="99:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc841170" loc="99:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x7f4bfc8428b0" loc="94:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4bfc8422a0" loc="94:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f4bfc842620" loc="94:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x7f4bfc82c820" loc="178:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f4bfcbfd630"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7f4bfc835ad0" loc="162:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc835850" loc="162:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7f4bfc82c020" loc="173:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f4bfcbfd210"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x7f4bfc8386b0" loc="146:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc8380d0" loc="146:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f4bfc838420" loc="146:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x7f4bfc845b20" loc="81:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc8458a0" loc="81:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x7f4bfc83ebf0" loc="115:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc83e620" loc="115:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x7f4bfc83e960" loc="115:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x7f4bfc83ae40" loc="136:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc83a870" loc="136:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x7f4bfc83abb0" loc="136:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f4bfc82b2a0" loc="185:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc82b020" loc="185:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7f4bfc83f2b0" loc="105:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc841bf0" loc="105:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f4bfc83f020" loc="105:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x7f4bfc84f040" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc852da0" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7f4bfc82e680" loc="168:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc82e400" loc="168:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x7f4bfc839910" loc="141:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc839690" loc="141:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x7f4bfc83fdb0" loc="110:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc83fb30" loc="110:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x7f4bfc86fe00" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc86f820" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x7f4bfc86fb70" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x7f4bfc86e620" loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7f4bfc871430" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc8711b0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x7f4bfc86f020" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f4bfcbdd1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc871c40" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x7f4bfc868c50" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc8689d0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x7f4bfc868110" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc872e20" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x7f4bfc8674d0" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x7f4bfc866020" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc867d20" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x7f4bfc78fb40" loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x7f4bfc78e470" loc="72:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x7f4bfc78edf0" loc="79:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x7f4bfc78f3e0" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x7f4bfc748350" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc7480d0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f4bfc747dd0" loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc747b50" loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4bfc7472b0" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc748c70" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f4bfc747020" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7f4bfc7458d0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
              <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc745610" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f4bfc72d1f0" loc="50:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f4bfcbdd1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f4bfc728190" loc="60:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f4bfc72d9d0" loc="55:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f4bfcbdedc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f4bfc72e940" loc="45:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f4bfcbdedc0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4bfcbdd1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f4bfc72e360" loc="45:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f4bfcbdedc0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f4bfc72e6b0" loc="45:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4bfcbdd1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/usr/bin/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f4bfc660540" loc="53:/usr/bin/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f4bfc660e70" loc="61:/usr/bin/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/usr/bin/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/usr/bin/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/usr/bin/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f4bfc65b660" loc="65:/usr/bin/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f4bfc661db0" loc="59:/usr/bin/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/usr/bin/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/usr/bin/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/usr/bin/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f4bfc662c80" loc="90:/usr/bin/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/usr/bin/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f4bfc65d530" loc="98:/usr/bin/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/usr/bin/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f4bfc64c020" loc="79:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f4bfc657020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f4bfc64ed20" loc="79:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f4bfc657020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f4bfc64f020" loc="53:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f4bfc64fb20" loc="62:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f4bfc657020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f4bfc64f8a0" loc="62:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f4bfc657020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f4bfc64e470" loc="70:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f4bfc657020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7f4bfc4d87f0" loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
              <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc4d8530" loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x7f4bfc4dbb60" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc4db8e0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f4bfc4c65e0" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f4bfc4c6360" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x7f4bfc4c6dc0" loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f4bfc4c82a0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f4bfc4c8020" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4bfc4c8c20" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f4bfc4c89a0" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x7f4bfc4cc0b0" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f4bfc4cedf0" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x7f4bfc4cb680" loc="71:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4bfcbdd1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f4bfc4cb400" loc="71:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4bfcbdd1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x7f4bfc4ccbc0" loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f4bfcbdd1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f4bfc4cc940" loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x7f4bfc4ca2a0" loc="80:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f4bfc4ca020" loc="80:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x7f4bfc4ce5b0" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4bfcbdd1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f4bfc4ce330" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f4bfcbdd1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x7f4bfc40ea90" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x7f4bfc40bbb0" loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f4bfc4096a0" loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f4bfc409420" loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x7f4bfc409e60" loc="69:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x7f4bfc40b350" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f4bfc408740" loc="74:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x7f4bfc406510" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc406290" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x7f4bfc405980" loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4bfc405110" loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f4bfc406e50" loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/usr/bin/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f4bfc373350" loc="52:/usr/bin/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f4bfc376ad0" loc="46:/usr/bin/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/usr/bin/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4bfdfc5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/usr/bin/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f4bfc343600" loc="53:/usr/bin/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f4bfc343600"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f4bfc33f2a0" loc="64:/usr/bin/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/usr/bin/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f4bfc343600"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f4bfc33f020" loc="64:/usr/bin/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f4bfc343600"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x7f4bfc30fa00" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc30f780" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f4bfc311810" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc311590" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x7f4bfc3105e0" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc310020" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f4bfc310350" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4bfc30f020" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfc310d70" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x7f4bfc2d4ce0" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f4bfc2d4a60" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f4bfc2d4270" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/usr/bin/tinyos-main/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4bfc1be910" loc="59:/usr/bin/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4bfc1be910"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f4bfc1beb50" loc="59:/usr/bin/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4bfc1beb50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f4bfc1b56b0" loc="66:/usr/bin/tinyos-main/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4bfc1beb50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f4bfc1b5430" loc="66:/usr/bin/tinyos-main/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4bfc1beb50"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f4bfc1b8020" loc="54:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f4bfc1b71f0" loc="66:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f4bfc1b89c0" loc="61:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f4bfc1b8740" loc="61:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f4bfc1ba760" loc="53:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f4bfc1c2810" loc="62:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4bfc1c2590" loc="62:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f4bfc1c1bf0" loc="74:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4bfc1c1970" loc="74:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f4bfc1c10e0" loc="68:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f4bfc1c06c0" loc="81:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4bfc1c0440" loc="81:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f4bfc0bf350" loc="40:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4bfc0bf350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7f4bfc0b62a0" loc="88:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7f4bfc0b6020" loc="88:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f4bfc0b7020" loc="76:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f4bfc0bfc90" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4bfc0bf350"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f4bfc0b9110" loc="60:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4bfc0bf350"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f4bfc0bbe10" loc="60:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4bfc0bf350"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f4bfc0b98c0" loc="64:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f4bfc0b77e0" loc="82:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4bfc0bb670" loc="53:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4bfc0bf350"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f4bfc0bb3f0" loc="53:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4bfc0bf350"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f4bfc0b8070" loc="67:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4bfc0b87c0" loc="70:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f4bfc09b2c0" loc="70:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f4bfc09d8b0" loc="70:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f4bfc09dc40" loc="70:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4bfc09b020" loc="70:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4bfc099800" loc="82:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f4bfc098ae0" loc="82:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f4bfc098e70" loc="82:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4bfc0991e0" loc="82:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f4bfc099550" loc="83:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/usr/bin/tinyos-main/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f4bfc09f4c0" loc="45:/usr/bin/tinyos-main/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/usr/bin/tinyos-main/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f4bfc09f240" loc="45:/usr/bin/tinyos-main/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7f4bfc084560" loc="86:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7f4bfc07a4d0" loc="126:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7f4bfc07fdd0" loc="117:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7f4bfc078020" loc="128:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7f4bfc07ac70" loc="128:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7f4bfc085d80" loc="83:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7f4bfc07c9e0" loc="122:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7f4bfc07c760" loc="122:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f4bfc080510" loc="113:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7f4bfc080290" loc="113:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f4bfc0824e0" loc="97:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7f4bfc075c20" loc="141:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f4bfc0759a0" loc="141:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f4bfc080cb0" loc="114:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7f4bfc0772a0" loc="131:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7f4bfc077020" loc="131:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f4bfc076270" loc="136:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7f4bfc07bc80" loc="125:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7f4bfc07ba00" loc="125:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7f4bfc075270" loc="140:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7f4bfc07d7d0" loc="119:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7f4bfc07d550" loc="119:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f4bfc081020" loc="103:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4bfc082c40" loc="103:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f4bfc07f670" loc="116:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7f4bfc07f3f0" loc="116:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7f4bfc07b270" loc="123:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7f4bfc078790" loc="129:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7f4bfc077a00" loc="132:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f4bfc076a20" loc="138:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7f4bfc07c020" loc="120:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f4bfc084cf0" loc="89:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f4bfc081a20" loc="109:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4bfc0817a0" loc="109:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/usr/bin/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/usr/bin/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f4bfc013e10" loc="95:/usr/bin/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/usr/bin/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4bfc0106a0" loc="105:/usr/bin/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/usr/bin/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x7f4bfbf97850" loc="81:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f4bfbf94de0" loc="87:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f4bfbf988f0" loc="79:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f4bfbf92020" loc="91:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f4bfbf93810" loc="88:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f4bfbf93590" loc="88:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f4bfbf96c40" loc="83:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f4bfbf969c0" loc="83:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f4bfbf92a20" loc="92:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f4bfbf927a0" loc="92:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f4bfbf970e0" loc="80:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x7f4bfbf94610" loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f4bfbf94390" loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f4bfbf962a0" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f4bfbf96020" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f4bfbd8a5e0" loc="75:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfbd8a020" loc="75:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4bfbd8a350" loc="75:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f4bfbd85bb0" loc="125:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfbd855b0" loc="125:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4bfbd858e0" loc="125:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f4bfbd88d20" loc="112:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f4bfbd87900" loc="89:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfbd87680" loc="89:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4bfbd86e00" loc="100:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f4bfbd86820" loc="100:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f4bfcbbfe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f4bfcbbd470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f4bfbd86b70" loc="100:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x7f4bfbce20e0" loc="32:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f4bfbce5830" loc="25:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x7f4bfbce2930" loc="39:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/usr/bin/tinyos-main/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f4bfbcded30" loc="52:/usr/bin/tinyos-main/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f4bfbcded30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f4bfbcda660" loc="58:/usr/bin/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f4bfbcd9400" loc="66:/usr/bin/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/usr/bin/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f4bfbcded30"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f4bfbcdae20" loc="66:/usr/bin/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f4bfbcd9170" loc="66:/usr/bin/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f4bfbcded30"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f4bfbcc9830" loc="100:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f4bfbccaad0" loc="100:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f4bfbccae50" loc="100:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f4bfbcc9210" loc="101:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f4bfbcc9580" loc="101:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f4bfbcc66c0" loc="119:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4bfbcc84b0" loc="119:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f4bfbcc87f0" loc="119:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7f4bfbcc8b50" loc="119:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x7f4bfbcc6020" loc="120:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x7f4bfbcc6400" loc="120:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f4bfbccd020" loc="70:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f4bfbccf1a0" loc="70:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f4bfbccf520" loc="70:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f4bfbccf8a0" loc="71:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f4bfbccfc10" loc="71:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f4bfbccc9a0" loc="91:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f4bfbccc0c0" loc="81:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4bfbccda90" loc="81:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f4bfbccddd0" loc="81:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x7f4bfbcb4480" loc="114:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x7f4bfbcbd020" loc="53:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4bfd0316c0"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x7f4bfd031b90"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x7f4bfbcb2850" loc="140:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f4bfbcb25d0" loc="140:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4bfdfd5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f4bfbcb4d20" loc="122:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x7f4bfbcb9de0" loc="82:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x7f4bfbcbda80" loc="58:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4bfd0316c0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7f4bfd031b90"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x7f4bfbcbd800" loc="58:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4bfd0316c0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7f4bfd031b90"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x7f4bfbcb8d20" loc="91:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x7f4bfbcb3d40" loc="133:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f4bfbcb0070" loc="150:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x7f4bfbcb8570" loc="86:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x7f4bfbcb7ca0" loc="99:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x7f4bfbcb7520" loc="95:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7f4bfbcb54c0" loc="106:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x7f4bfbcb3530" loc="127:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x7f4bfbcbadb0" loc="69:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4bfd028590"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f4bfd028c70"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x7f4bfbcbab30" loc="69:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4bfd028590"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f4bfd028c70"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x7f4bfbcb5cf0" loc="110:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x7f4bfbcba350" loc="64:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4bfd028590"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f4bfd028c70"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f4bfbcb9620" loc="75:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f4bfbcb0c00" loc="156:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4bfbcb0980" loc="156:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4bfdfcd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f4bfbc36420" loc="56:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f4bfd0b7600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f4bfbc35500" loc="73:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f4bfbc39b50" loc="46:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f4bfbc36c90" loc="65:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f4bfd101020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f4bfbc35e30" loc="81:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/usr/bin/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/usr/bin/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f4bfbbbe020" loc="62:/usr/bin/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/usr/bin/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
