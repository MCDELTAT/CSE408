<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="37:AntiTheftRootAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f5ce537ec30"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f5ce537fbf0"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f5ce537fbf0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f5ce529ddc0"/></to>
    </wire>
    <wire loc="38:AntiTheftRootAppC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f5ce5376720"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5ce41a7710"/></to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5ce41a7710"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5ce412b4e0"/></to>
    </wire>
    <wire loc="39:AntiTheftRootAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f5ce537b3b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5ce4f85b50"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5ce4f85b50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5ce4f2e300"/></to>
    </wire>
    <wire loc="40:AntiTheftRootAppC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f5ce52f72a0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f5ce4f587e0"/></to>
    </wire>
    <wire loc="76:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f5ce4f587e0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f5ce4f22b40"/></to>
    </wire>
    <wire loc="41:AntiTheftRootAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5ce52cfa80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5ce52a2c30"/></to>
    </wire>
    <wire loc="51:/usr/bin/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5ce52a2c30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5ce4fb7620"/></to>
    </wire>
    <wire loc="44:AntiTheftRootAppC.nc">
      <from><interface-ref name="DisseminationControl" scoped="" ref="0x7f5ce52f5240"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5ce3d7b940"/></to>
    </wire>
    <wire loc="51:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f5ce3d7b940"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5ce3d7ac00"/></to>
    </wire>
    <wire loc="50:AntiTheftRootAppC.nc">
      <from><interface-ref name="SettingsReceive" scoped="" ref="0x7f5ce52f0940"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ce3b47020"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5ce3b47020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ce41a3b20"/>
      <arguments>
        <value cst="I:54">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:AntiTheftRootAppC.nc">
      <from><interface-ref name="SettingsUpdate" scoped="" ref="0x7f5ce52faa60"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x7f5ce3b51330"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x7f5ce3b51330"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x7f5ce2d9b570"/></to>
    </wire>
    <wire loc="57:AntiTheftRootAppC.nc">
      <from><interface-ref name="CollectionControl" scoped="" ref="0x7f5ce52ee910"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5ce3b39850"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f5ce3b39850"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5ce3af4170"/></to>
    </wire>
    <wire loc="58:AntiTheftRootAppC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f5ce52eb510"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f5ce3b0d7f0"/></to>
    </wire>
    <wire loc="83:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f5ce3b0d7f0"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f5ce3ae2470"/></to>
    </wire>
    <wire loc="59:AntiTheftRootAppC.nc">
      <from><interface-ref name="AlertsReceive" scoped="" ref="0x7f5ce52f1020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ce3b36850"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:AntiTheftRootAppC.nc">
      <from><interface-ref name="AlertsForward" scoped="" ref="0x7f5ce52e11c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5ce361b870"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5ce361b870"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5ce2ae5a20"/></to>
    </wire>
    <wire loc="46:/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ce529f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ce2bec540"/></to>
    </wire>
    <wire loc="48:/usr/bin/tinyos-main/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ce529f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ce2c0aaf0"/></to>
    </wire>
    <wire loc="48:/usr/bin/tinyos-main/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ce529f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ce2c1dbd0"/></to>
    </wire>
    <wire loc="150:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ce529f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ce36ab020"/></to>
    </wire>
    <wire loc="175:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ce529f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ce3976550"/></to>
    </wire>
    <wire loc="226:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ce529f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ce38972a0"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ce529f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ce2d7baa0"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ce529f160"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x7f5ce3f03d80"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ce529f160"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x7f5ce3efece0"/></to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ce529f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ce3f33020"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ce529f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ce412ee60"/></to>
    </wire>
    <wire loc="96:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ce529f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ce2f74420"/></to>
    </wire>
    <wire loc="119:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ce529f160"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ce45e6b60"/></to>
    </wire>
    <wire loc="53:/usr/bin/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ce529f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ce4885540"/></to>
    </wire>
    <wire loc="52:/usr/bin/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ce529f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ce495a200"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ce529f160"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ce30da0a0"/></to>
    </wire>
    <wire loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ce529f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ce4a96700"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ce529f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ce3111560"/></to>
    </wire>
    <wire loc="96:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ce529f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ce31ddb40"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f5ce4fd3470"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f5ce5546020"/></to>
    </wire>
    <wire loc="53:/usr/bin/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f5ce5546020"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f5ce53cb8a0"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f5ce4fd2020"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f5ce44ca680"/></to>
    </wire>
    <wire loc="122:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f5ce4fd2020"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f5ce45e6020"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f5ce4fd2020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ce528d080"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5ce528d080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ce527d380"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ce4fd2720"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ce529f160"/></to>
    </wire>
    <wire loc="26:/usr/bin/tinyos-main/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f5ce528c020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ce3db9c60"/></to>
    </wire>
    <wire loc="26:/usr/bin/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f5ce528c020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ce42d7b50"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f5ce52861d0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f5ce4fff690"/></to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f5ce527c180"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ce4fff020"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f5ce527da60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ce4f8d2e0"/></to>
    </wire>
    <wire loc="62:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f5ce527da60"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f5ce528bcf0"/></to>
    </wire>
    <wire loc="46:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f5ce528bcf0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f5ce5276820"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f5ce52773f0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f5ce528c020"/></to>
    </wire>
    <wire loc="48:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7f5ce526b020"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7f5ce524c670"/></to>
    </wire>
    <wire loc="141:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f5ce524c670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f5ce5167a80"/></to>
    </wire>
    <wire loc="49:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f5ce526a370"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f5ce52773f0"/></to>
    </wire>
    <wire loc="191:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f5ce51ec350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce507e160"/></to>
    </wire>
    <wire loc="165:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f5ce521db20"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f5ce5125e60"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f5ce5125e60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce346ee20"/></to>
    </wire>
    <wire loc="176:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f5ce520a990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f5ce51085d0"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f5ce51085d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce33f73f0"/></to>
    </wire>
    <wire loc="185:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f5ce51f9350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f5ce50ef8f0"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f5ce50ef8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce33893f0"/></to>
    </wire>
    <wire loc="196:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f5ce51e6670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce505b6d0"/></to>
    </wire>
    <wire loc="143:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f5ce524acb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f5ce5165da0"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f5ce5165da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce35b29b0"/></to>
    </wire>
    <wire loc="183:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f5ce51fccb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f5ce50f65d0"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f5ce50f65d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce3390e20"/></to>
    </wire>
    <wire loc="146:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f5ce5247350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f5ce51567a0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f5ce51567a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce3556a60"/></to>
    </wire>
    <wire loc="157:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f5ce522d350"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f5ce5139da0"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f5ce5139da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce34dc0a0"/></to>
    </wire>
    <wire loc="168:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f5ce5219350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f5ce511b440"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f5ce511b440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce34636d0"/></to>
    </wire>
    <wire loc="179:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f5ce5206350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f5ce5105a80"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f5ce5105a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce33ede20"/></to>
    </wire>
    <wire loc="138:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f5ce5258cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f5ce516a5d0"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f5ce516a5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce35c39b0"/></to>
    </wire>
    <wire loc="149:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f5ce523dcb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f5ce514dc10"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f5ce514dc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce35473f0"/></to>
    </wire>
    <wire loc="160:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f5ce522acb0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f5ce5135440"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f5ce5135440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce34ce9b0"/></to>
    </wire>
    <wire loc="171:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f5ce5216cb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f5ce51188f0"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f5ce51188f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce34590a0"/></to>
    </wire>
    <wire loc="188:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f5ce51f6cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f5ce50ecda0"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f5ce50ecda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce337fe20"/></to>
    </wire>
    <wire loc="194:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f5ce51e8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce5069160"/></to>
    </wire>
    <wire loc="174:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f5ce520c350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f5ce510a2b0"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f5ce510a2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce33fee20"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f5ce5167a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce35b83f0"/></to>
    </wire>
    <wire loc="152:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f5ce5239670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f5ce51492b0"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f5ce51492b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce353ee20"/></to>
    </wire>
    <wire loc="192:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f5ce51eb990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce5079c90"/></to>
    </wire>
    <wire loc="155:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f5ce5237cb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f5ce513ba20"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f5ce513ba20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce34e3c90"/></to>
    </wire>
    <wire loc="166:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f5ce521ce40"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f5ce511e020"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f5ce511e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce346a0a0"/></to>
    </wire>
    <wire loc="177:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f5ce5209cb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f5ce5107760"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f5ce5107760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce33f46d0"/></to>
    </wire>
    <wire loc="186:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f5ce51f8670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f5ce50eea80"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f5ce50eea80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce33866d0"/></to>
    </wire>
    <wire loc="144:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f5ce5248020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f5ce515d020"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f5ce515d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce35afe20"/></to>
    </wire>
    <wire loc="147:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f5ce5246670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f5ce51558f0"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f5ce51558f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce354fe20"/></to>
    </wire>
    <wire loc="158:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f5ce522c670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f5ce5137020"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f5ce5137020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce34d93f0"/></to>
    </wire>
    <wire loc="169:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f5ce5218670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f5ce511a5d0"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f5ce511a5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce34609b0"/></to>
    </wire>
    <wire loc="180:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f5ce5205670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f5ce50ffc10"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f5ce50ffc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce33e90a0"/></to>
    </wire>
    <wire loc="139:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f5ce5255020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f5ce5169760"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f5ce5169760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce35c0e20"/></to>
    </wire>
    <wire loc="150:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f5ce523b020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f5ce514cda0"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f5ce514cda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce35446d0"/></to>
    </wire>
    <wire loc="161:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f5ce5228020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f5ce512d5d0"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f5ce512d5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce34cbe20"/></to>
    </wire>
    <wire loc="189:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f5ce51ed020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f5ce50ea020"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f5ce50ea020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce337b0a0"/></to>
    </wire>
    <wire loc="164:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f5ce5226670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f5ce5126d30"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f5ce5126d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce3471c90"/></to>
    </wire>
    <wire loc="175:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f5ce520b670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f5ce5109440"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f5ce5109440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce33fa0a0"/></to>
    </wire>
    <wire loc="184:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f5ce51fa020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f5ce50f5760"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f5ce50f5760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce338c0a0"/></to>
    </wire>
    <wire loc="195:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f5ce51e7350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce5060c90"/></to>
    </wire>
    <wire loc="142:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f5ce524b990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f5ce5166c10"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f5ce5166c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce35b56d0"/></to>
    </wire>
    <wire loc="153:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f5ce5238990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f5ce5148440"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f5ce5148440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce353a0a0"/></to>
    </wire>
    <wire loc="182:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f5ce51fd990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f5ce50f73f0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f5ce50f73f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce3393c90"/></to>
    </wire>
    <wire loc="156:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f5ce5235020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f5ce513ac10"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f5ce513ac10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce34e0e20"/></to>
    </wire>
    <wire loc="167:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f5ce521a060"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f5ce511c2b0"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f5ce511c2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce34673f0"/></to>
    </wire>
    <wire loc="178:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f5ce5207020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f5ce51068f0"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f5ce51068f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce33f09b0"/></to>
    </wire>
    <wire loc="187:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f5ce51f7990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f5ce50edc10"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f5ce50edc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce33829b0"/></to>
    </wire>
    <wire loc="137:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f5ce5275a70"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f5ce516b3f0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f5ce516b3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce35c66d0"/></to>
    </wire>
    <wire loc="148:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f5ce5245990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f5ce514ea80"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f5ce514ea80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce354b0a0"/></to>
    </wire>
    <wire loc="159:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f5ce522b990"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f5ce51362b0"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f5ce51362b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce34d56d0"/></to>
    </wire>
    <wire loc="170:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f5ce5217990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f5ce5119760"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f5ce5119760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce345de20"/></to>
    </wire>
    <wire loc="193:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f5ce51eacb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce506f6d0"/></to>
    </wire>
    <wire loc="173:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f5ce520d020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f5ce510b020"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f5ce510b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce3401c90"/></to>
    </wire>
    <wire loc="162:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f5ce5227350"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f5ce512c760"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f5ce512c760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce34c70a0"/></to>
    </wire>
    <wire loc="140:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f5ce524d350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f5ce51688f0"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f5ce51688f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce35bb0a0"/></to>
    </wire>
    <wire loc="151:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f5ce523a350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f5ce514a020"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f5ce514a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5ce35419b0"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f5ce54b7e10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ce53ca850"/></to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f5ce53c9dd0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f5ce54c6a30"/></to>
    </wire>
    <wire loc="92:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f5ce53a5690"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f5ce47964c0"/></to>
    </wire>
    <wire loc="53:/usr/bin/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5ce4f8d2e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ce4fb7020"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f5ce4fb6d20"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f5ce4fb89e0"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f5ce4fb89e0"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7f5ce5255020"/></to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f5ce4fb4020"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f5ce4f90ce0"/></to>
    </wire>
    <wire loc="57:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f5ce4f90ce0"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7f5ce5258cb0"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f5ce4fb3340"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f5ce4f8e020"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f5ce4f8e020"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7f5ce5275a70"/></to>
    </wire>
    <wire loc="79:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5ce4f2e300"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5ce4efecf0"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f5ce4f7d2e0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f5ce4f27d60"/></to>
    </wire>
    <wire loc="84:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f5ce4f27d60"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f5ce4ef6830"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5ce4f6eae0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ce4f25cd0"/></to>
    </wire>
    <wire loc="89:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5ce4f25cd0"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f5ce4ef1140"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5ce4f82ca0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5ce4f2d320"/></to>
    </wire>
    <wire loc="81:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5ce4f2d320"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5ce4ef9d20"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f5ce4f7fc00"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f5ce4f271d0"/></to>
    </wire>
    <wire loc="83:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f5ce4f271d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f5ce4ef7c00"/></to>
    </wire>
    <wire loc="93:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f5ce4f22b40"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f5ce4ed3080"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5ce4f7f020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ce4f29510"/></to>
    </wire>
    <wire loc="82:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5ce4f29510"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ce4ef7020"/></to>
    </wire>
    <wire loc="75:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ce4f52e00"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ce4f221a0"/></to>
    </wire>
    <wire loc="92:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ce4f221a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ce4ede670"/></to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f5ce4f46b40"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f5ce4f21790"/></to>
    </wire>
    <wire loc="94:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f5ce4f21790"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f5ce4ed3b70"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ce4f57af0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ce4f24990"/></to>
    </wire>
    <wire loc="90:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ce4f24990"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ce4ef3800"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f5ce4f428e0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f5ce4f20480"/></to>
    </wire>
    <wire loc="95:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f5ce4f20480"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f5ce4ed2930"/></to>
    </wire>
    <wire loc="81:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7f5ce4f369e0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f5ce4f08130"/></to>
    </wire>
    <wire loc="104:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f5ce4f08130"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f5ce4ec3130"/></to>
    </wire>
    <wire loc="80:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5ce4f35af0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5ce4f02270"/></to>
    </wire>
    <wire loc="103:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5ce4f02270"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5ce4ebf3f0"/></to>
    </wire>
    <wire loc="215:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5ce4efecf0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5ce4a3b880"/></to>
    </wire>
    <wire loc="99:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f5ce4f113b0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f5ce4ec8020"/></to>
    </wire>
    <wire loc="305:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f5ce4ec8020"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f5ce46073b0"/></to>
    </wire>
    <wire loc="270:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5ce4ebf3f0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5ce4660d00"/></to>
    </wire>
    <wire loc="124:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f5ce4ef6830"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f5ce4ccd420"/></to>
    </wire>
    <wire loc="126:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f5ce4ef1140"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ce4cd78b0"/></to>
    </wire>
    <wire loc="121:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5ce4ef9d20"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5ce4cd66c0"/></to>
    </wire>
    <wire loc="123:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f5ce4ef7c00"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f5ce4cd5c90"/></to>
    </wire>
    <wire loc="98:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f5ce4f15e80"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f5ce4ecea90"/></to>
    </wire>
    <wire loc="303:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f5ce4ecea90"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f5ce460be80"/></to>
    </wire>
    <wire loc="216:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f5ce4ed3080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f5ce4a22270"/></to>
    </wire>
    <wire loc="122:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5ce4ef7020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ce4cd5530"/></to>
    </wire>
    <wire loc="269:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f5ce4ec3130"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f5ce465cbb0"/></to>
    </wire>
    <wire loc="102:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5ce4f07b50"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5ce4ec5bb0"/></to>
    </wire>
    <wire loc="307:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5ce4ec5bb0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5ce45fea40"/></to>
    </wire>
    <wire loc="97:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f5ce4f168d0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f5ce4ed1540"/></to>
    </wire>
    <wire loc="304:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f5ce4ed1540"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f5ce4602e70"/></to>
    </wire>
    <wire loc="248:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ce4ede670"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ce4916780"/></to>
    </wire>
    <wire loc="86:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f5ce4f26a50"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f5ce4ef44d0"/></to>
    </wire>
    <wire loc="128:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f5ce4ef44d0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f5ce4ccdb80"/></to>
    </wire>
    <wire loc="187:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f5ce4ed3b70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f5ce4a48ba0"/></to>
    </wire>
    <wire loc="125:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ce4ef3800"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ce4cd8280"/></to>
    </wire>
    <wire loc="224:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f5ce4ed2930"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f5ce49a6d90"/></to>
    </wire>
    <wire loc="100:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5ce4f09e60"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5ce4ec5350"/></to>
    </wire>
    <wire loc="306:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5ce4ec5350"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5ce45fe1e0"/></to>
    </wire>
    <wire loc="87:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f5ce4f256c0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f5ce4ef31d0"/></to>
    </wire>
    <wire loc="129:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f5ce4ef31d0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f5ce4ccb3e0"/></to>
    </wire>
    <wire loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5ce4a3b880"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f5ce4a22d90"/></to>
    </wire>
    <wire loc="88:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f5ce46073b0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f5ce45de0d0"/></to>
    </wire>
    <wire loc="160:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x7f5ce4eee1a0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f5ce4bded30"/></to>
    </wire>
    <wire loc="148:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x7f5ce4ee52c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ce4c22390"/></to>
    </wire>
    <wire loc="98:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5ce4c22390"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ce31da210"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f5ce4ccd420"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f5ce324a740"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5ce4cd66c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5ce324c9e0"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f5ce4cd5c90"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f5ce324a020"/></to>
    </wire>
    <wire loc="161:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7f5ce4ed4490"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f5ce4ad8c40"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7f5ce4ad8c40"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f5ce31672e0"/></to>
    </wire>
    <wire loc="162:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7f5ce4edf890"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ce4c1ce00"/></to>
    </wire>
    <wire loc="85:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f5ce460be80"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f5ce45e2b90"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f5ce4a22270"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f5ce30e2020"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5ce4cd78b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ce324dbd0"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5ce4cd5530"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ce324b850"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f5ce465cbb0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f5ce3045bb0"/></to>
    </wire>
    <wire loc="81:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5ce45fea40"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5ce44ce020"/></to>
    </wire>
    <wire loc="94:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f5ce4602e70"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f5ce45d9c80"/></to>
    </wire>
    <wire loc="158:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x7f5ce4ee6c90"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7f5ce4bdfa50"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f5ce4ccdb80"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f5ce3249020"/></to>
    </wire>
    <wire loc="117:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f5ce4a48ba0"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7f5ce4a43020"/></to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f5ce49a6d90"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f5ce30d95f0"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ce4cd8280"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ce324e590"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5ce4660d00"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5ce3048cb0"/></to>
    </wire>
    <wire loc="159:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x7f5ce4eefa50"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7f5ce4bde760"/></to>
    </wire>
    <wire loc="96:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5ce45fe1e0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5ce45d1020"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f5ce4ccb3e0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f5ce3249780"/></to>
    </wire>
    <wire loc="102:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f5ce4e69880"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f5ce4adeb20"/></to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f5ce4adeb20"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f5ce316b100"/></to>
    </wire>
    <wire loc="103:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f5ce4e628d0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f5ce4df7ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f5ce4e60160"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f5ce465cbb0"/></to>
    </wire>
    <wire loc="105:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x7f5ce4e66020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f5ce460cd90"/></to>
    </wire>
    <wire loc="79:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f5ce460cd90"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f5ce45e3aa0"/></to>
    </wire>
    <wire loc="110:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f5ce4dc5cd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5ce45fcdd0"/></to>
    </wire>
    <wire loc="100:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f5ce45fcdd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5ce44d3ac0"/></to>
    </wire>
    <wire loc="116:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f5ce4cc98c0"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7f5ce4e87e30"/></to>
    </wire>
    <wire loc="117:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5ce4cca8f0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f5ce4cc1550"/></to>
    </wire>
    <wire loc="118:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5ce4cc92b0"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x7f5ce4b8f770"/></to>
    </wire>
    <wire loc="119:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f5ce4ccba70"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x7f5ce4b8fd80"/></to>
    </wire>
    <wire loc="137:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5ce4cac910"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ce4c22390"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5ce4cac020"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x7f5ce4b90e00"/></to>
    </wire>
    <wire loc="153:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f5ce4bdd390"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f5ce4adeb20"/></to>
    </wire>
    <wire loc="154:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5ce4bd92b0"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7f5ce4b910a0"/></to>
    </wire>
    <wire loc="155:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5ce4bd9be0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7f5ce4b919d0"/></to>
    </wire>
    <wire loc="156:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f5ce4bda470"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f5ce4b90020"/></to>
    </wire>
    <wire loc="169:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5ce4b8dc40"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5ce4a5ca40"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5ce4a5ca40"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5ce31124a0"/></to>
    </wire>
    <wire loc="170:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5ce4b8c5d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ce4a485d0"/></to>
    </wire>
    <wire loc="114:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5ce4a485d0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f5ce4a45120"/></to>
    </wire>
    <wire loc="171:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f5ce4b8cbe0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f5ce4ad6020"/></to>
    </wire>
    <wire loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f5ce4ad6020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f5ce3166590"/></to>
    </wire>
    <wire loc="176:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f5ce4ad6e60"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f5ce4a478b0"/></to>
    </wire>
    <wire loc="115:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f5ce4a478b0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f5ce4a45730"/></to>
    </wire>
    <wire loc="181:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f5ce4a5ad70"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x7f5ce4ea09c0"/></to>
    </wire>
    <wire loc="182:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5ce4a5bc00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5ce4a55bb0"/></to>
    </wire>
    <wire loc="113:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5ce4a55bb0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f5ce4a467c0"/></to>
    </wire>
    <wire loc="191:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ce4a44590"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ce4916780"/></to>
    </wire>
    <wire loc="193:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5ce4a467c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5ce4a25440"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5ce4a25440"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f5ce4a218c0"/></to>
    </wire>
    <wire loc="194:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5ce4a45120"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ce4a25d70"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5ce4a25d70"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f5ce4a202b0"/></to>
    </wire>
    <wire loc="195:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f5ce4a45730"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f5ce4a233d0"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f5ce4a233d0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f5ce4a208c0"/></to>
    </wire>
    <wire loc="211:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f5ce4a22d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5ce49a73a0"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5ce49a73a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5ce30db590"/></to>
    </wire>
    <wire loc="212:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5ce4a218c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5ce49a7e60"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5ce49a7e60"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5ce30da6b0"/></to>
    </wire>
    <wire loc="213:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5ce4a202b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ce49a67c0"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5ce49a67c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ce30d9020"/></to>
    </wire>
    <wire loc="214:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f5ce4a208c0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f5ce46587e0"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f5ce46587e0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f5ce30417e0"/></to>
    </wire>
    <wire loc="221:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f5ce49a3590"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f5ce494a3f0"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f5ce494a3f0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f5ce30983a0"/></to>
    </wire>
    <wire loc="222:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f5ce49a3e80"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f5ce4a5b400"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f5ce4a5b400"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f5ce3112d90"/></to>
    </wire>
    <wire loc="223:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f5ce49a5750"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f5ce4623c20"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f5ce4623c20"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7f5ce461c410"/></to>
    </wire>
    <wire loc="228:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5ce4a5a5d0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f5ce494ace0"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f5ce494ace0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f5ce3098c90"/></to>
    </wire>
    <wire loc="237:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f5ce49472b0"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7f5ce4e96340"/></to>
    </wire>
    <wire loc="238:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5ce4949520"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f5ce49415e0"/></to>
    </wire>
    <wire loc="239:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5ce4949e50"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f5ce4916020"/></to>
    </wire>
    <wire loc="240:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f5ce49485f0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f5ce4df7ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x7f5ce49112b0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f5ce464b9b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f5ce4914270"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f5ce4df7ba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f5ce4912020"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7f5ce4ea5550"/></to>
    </wire>
    <wire loc="253:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5ce4915140"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f5ce48f6720"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f5ce48f6720"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f5ce48ef020"/></to>
    </wire>
    <wire loc="254:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5ce4915a70"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f5ce48f4060"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f5ce48f4060"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f5ce48ef950"/></to>
    </wire>
    <wire loc="259:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f5ce48ec760"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7f5ce4e90a40"/></to>
    </wire>
    <wire loc="260:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5ce48ef020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f5ce4622a40"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f5ce4622a40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f5ce461b440"/></to>
    </wire>
    <wire loc="261:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5ce48ef950"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f5ce4621400"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f5ce4621400"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f5ce461bd70"/></to>
    </wire>
    <wire loc="262:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x7f5ce48ee120"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7f5ce460c5c0"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f5ce460c5c0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7f5ce45e32d0"/></to>
    </wire>
    <wire loc="267:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5ce4657760"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5ce45fea40"/></to>
    </wire>
    <wire loc="268:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f5ce4656800"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f5ce464a590"/></to>
    </wire>
    <wire loc="271:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7f5ce4655760"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f5ce464b9b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="276:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f5ce46274a0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f5ce460cd90"/></to>
    </wire>
    <wire loc="286:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f5ce4619b40"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7f5ce4e90a40"/></to>
    </wire>
    <wire loc="287:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5ce461b440"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f5ce460d460"/></to>
    </wire>
    <wire loc="76:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f5ce460d460"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f5ce45e4120"/></to>
    </wire>
    <wire loc="288:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5ce461bd70"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f5ce460ddd0"/></to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f5ce460ddd0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f5ce45e4a90"/></to>
    </wire>
    <wire loc="289:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x7f5ce461c410"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f5ce4610610"/></to>
    </wire>
    <wire loc="75:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f5ce4610610"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f5ce45e52e0"/></to>
    </wire>
    <wire loc="301:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f5ce45f71f0"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x7f5ce4eb0350"/></to>
    </wire>
    <wire loc="302:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f5ce45f62e0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f5ce465cbb0"/></to>
    </wire>
    <wire loc="309:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f5ce45ef110"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f5ce464b9b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="310:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7f5ce45efca0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f5ce464b9b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="311:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f5ce45ee8d0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f5ce464b9b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="312:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f5ce45ed470"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f5ce4df7ba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f5ce4df7ba0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f5ce326b020"/></to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f5ce326a020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5ce4dc5cd0"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f5ce3266150"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f5ce4dc7be0"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5ce3245c50"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5ce4cf65a0"/></to>
    </wire>
    <wire loc="75:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f5ce3249e10"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f5ce4ccba70"/></to>
    </wire>
    <wire loc="76:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5ce3247c20"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f5ce4cca8f0"/></to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5ce32465d0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f5ce4cc92b0"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f5ce3246be0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f5ce4cc98c0"/></to>
    </wire>
    <wire loc="99:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f5ce4c21150"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f5ce31d9020"/></to>
    </wire>
    <wire loc="100:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5ce4c218d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5ce31d97a0"/></to>
    </wire>
    <wire loc="101:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5ce31d70d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5ce4c201f0"/></to>
    </wire>
    <wire loc="103:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f5ce31d7890"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f5ce31dc2b0"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f5ce31d6480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ce54b7e10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5ce3165460"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5ce4cf65a0"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f5ce3164020"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f5ce4ad6e60"/></to>
    </wire>
    <wire loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7f5ce310f7e0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7f5ce4a971c0"/></to>
    </wire>
    <wire loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7f5ce4a971c0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7f5ce4a96d50"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f5ce310e410"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f5ce3108d40"/></to>
    </wire>
    <wire loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f5ce3108d40"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f5ce4a8f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5ce3111bd0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f5ce4a5bc00"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5ce31105d0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f5ce4a5a5d0"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x7f5ce3110d30"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f5ce4a5ad70"/></to>
    </wire>
    <wire loc="118:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7f5ce4a43cb0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ce4a44590"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f5ce30d8020"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f5ce49a5750"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f5ce30d8dc0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f5ce4dc7be0"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f5ce30d6880"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f5ce49a3590"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f5ce30d5270"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f5ce49a3e80"/></to>
    </wire>
    <wire loc="189:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f5ce30d42f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ce54b7e10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x7f5ce30d4ad0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ce54b7e10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x7f5ce30d5a50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ce54b7e10"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5ce3097520"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f5ce4949520"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f5ce3095a10"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f5ce49472b0"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5ce3097e50"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f5ce4949e50"/></to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f5ce30965f0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f5ce49485f0"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f5ce3095270"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f5ce4960c50"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f5ce4960c50"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f5ce4959c10"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x7f5ce3093610"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ce54b7e10"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f5ce495eb70"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f5ce495aac0"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5ce4964d30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ce495a200"/></to>
    </wire>
    <wire loc="76:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5ce48f9d60"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f5ce48f24b0"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f5ce48f47c0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7f5ce48ee120"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f5ce48f7840"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7f5ce48f0020"/></to>
    </wire>
    <wire loc="74:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f5ce48f3020"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f5ce48ee8c0"/></to>
    </wire>
    <wire loc="80:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f5ce48f3e00"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f5ce48ec760"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f5ce48f7270"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7f5ce48f1950"/></to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f5ce48f8880"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7f5ce48f1020"/></to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f5ce303c4c0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f5ce4656800"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5ce303e250"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5ce4657760"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f5ce303d3f0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f5ce4889a60"/></to>
    </wire>
    <wire loc="26:/usr/bin/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f5ce4889a60"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f5ce486b160"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7f5ce3040640"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x7f5ce4655760"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f5ce486b160"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f5ce4680790"/></to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f5ce4877d60"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5ce468f150"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5ce4885540"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ce4869920"/></to>
    </wire>
    <wire loc="35:/usr/bin/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5ce4869920"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ce4724980"/></to>
    </wire>
    <wire loc="62:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f5ce4689640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5ce46ea830"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f5ce46e5cd0"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7f5ce4866350"/></to>
    </wire>
    <wire loc="36:/usr/bin/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7f5ce4866350"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5ce47231d0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5ce4675a60"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7f5ce485c910"/></to>
    </wire>
    <wire loc="37:/usr/bin/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7f5ce485c910"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5ce471f650"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5ce471f650"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5ce3014d50"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5ce4724980"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ce30171b0"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f5ce47231d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5ce30179c0"/></to>
    </wire>
    <wire loc="74:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5ce3010020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5ce47b8920"/></to>
    </wire>
    <wire loc="94:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5ce47b8920"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5ce47a19c0"/></to>
    </wire>
    <wire loc="75:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f5ce300b190"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f5ce47abc10"/></to>
    </wire>
    <wire loc="95:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f5ce47abc10"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f5ce479cc10"/></to>
    </wire>
    <wire loc="76:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f5ce300a3e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5ce47a9060"/></to>
    </wire>
    <wire loc="96:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f5ce47a9060"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5ce479a060"/></to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f5ce3006780"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f5ce47a5580"/></to>
    </wire>
    <wire loc="97:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f5ce47a5580"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f5ce4796c00"/></to>
    </wire>
    <wire loc="74:/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f5ce46e0020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ce54b7e10"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f5ce4684a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ce54b7e10"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f5ce46682e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5ce4877d60"/></to>
    </wire>
    <wire loc="76:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5ce46242b0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f5ce461e920"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f5ce4621b60"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7f5ce461a5a0"/></to>
    </wire>
    <wire loc="74:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f5ce461f400"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f5ce461ad40"/></to>
    </wire>
    <wire loc="80:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f5ce461e2b0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f5ce4619b40"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f5ce4623650"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7f5ce461dd70"/></to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f5ce4624d30"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7f5ce461d440"/></to>
    </wire>
    <wire loc="75:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f5ce44d3ac0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5ce42846e0"/></to>
    </wire>
    <wire loc="91:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f5ce4605940"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f5ce45db630"/></to>
    </wire>
    <wire loc="81:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5ce44ce020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f5ce42773a0"/></to>
    </wire>
    <wire loc="83:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f5ce45bf340"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f5ce45f71f0"/></to>
    </wire>
    <wire loc="86:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f5ce45be110"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f5ce45ef110"/></to>
    </wire>
    <wire loc="89:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7f5ce45beca0"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x7f5ce45efca0"/></to>
    </wire>
    <wire loc="92:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f5ce45bd8d0"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f5ce45ee8d0"/></to>
    </wire>
    <wire loc="95:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f5ce45bc780"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f5ce45f62e0"/></to>
    </wire>
    <wire loc="98:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f5ce45c01a0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5ce44ce020"/></to>
    </wire>
    <wire loc="101:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f5ce45b72e0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f5ce45ed470"/></to>
    </wire>
    <wire loc="103:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7f5ce45d1760"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x7f5ce44dc950"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7f5ce44dc950"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f5ce5247350"/></to>
    </wire>
    <wire loc="104:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f5ce45d0b50"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x7f5ce44d9b50"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f5ce44d9b50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ce44ab850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f5ce45caaa0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f5ce44d8920"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f5ce44d8920"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f5ce44ac020"/></to>
    </wire>
    <wire loc="107:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7f5ce45ce670"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x7f5ce44d74e0"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7f5ce44d74e0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7f5ce5238990"/></to>
    </wire>
    <wire loc="108:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f5ce45cd980"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f5ce44d67f0"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f5ce44d67f0"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7f5ce524acb0"/></to>
    </wire>
    <wire loc="110:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7f5ce45c3550"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7f5ce44d5b10"/></to>
    </wire>
    <wire loc="57:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7f5ce44d5b10"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7f5ce44cd9d0"/></to>
    </wire>
    <wire loc="111:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f5ce45b86b0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f5ce4dc7be0"/></to>
    </wire>
    <wire loc="112:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f5ce45c1d20"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f5ce421c9a0"/></to>
    </wire>
    <wire loc="847:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x7f5ce451e920"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ce54b7e10"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/usr/bin/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f5ce42846e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5ce2f2a610"/></to>
    </wire>
    <wire loc="95:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f5ce44ac020"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f5ce449d480"/></to>
    </wire>
    <wire loc="48:/usr/bin/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f5ce42773a0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f5ce4227b60"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x7f5ce44be3d0"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7f5ce5217990"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x7f5ce44bc680"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7f5ce5219350"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f5ce44c17f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5ce43a4530"/></to>
    </wire>
    <wire loc="91:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f5ce43a4530"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5ce4383850"/></to>
    </wire>
    <wire loc="96:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f5ce44a0ae0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f5ce449c020"/></to>
    </wire>
    <wire loc="94:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f5ce44aa840"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f5ce449ee00"/></to>
    </wire>
    <wire loc="92:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5ce44ad1f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ce449e7e0"/></to>
    </wire>
    <wire loc="97:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5ce44ab850"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ce449cd20"/></to>
    </wire>
    <wire loc="99:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7f5ce447d430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ce43bf210"/></to>
    </wire>
    <wire loc="98:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5ce43bf210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5ce2f729d0"/></to>
    </wire>
    <wire loc="100:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5ce447c130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5ce43bd7a0"/></to>
    </wire>
    <wire loc="100:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5ce43bd7a0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5ce2f70020"/></to>
    </wire>
    <wire loc="101:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7f5ce4499020"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7f5ce44273e0"/></to>
    </wire>
    <wire loc="83:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7f5ce44273e0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7f5ce4421350"/></to>
    </wire>
    <wire loc="102:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f5ce447c920"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f5ce53a8020"/></to>
    </wire>
    <wire loc="296:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7f5ce445a190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ce54b7e10"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7f5ce4417e50"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f5ce53a8020"/></to>
    </wire>
    <wire loc="86:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7f5ce441d390"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f5ce5247350"/></to>
    </wire>
    <wire loc="87:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f5ce441c650"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7f5ce5246670"/></to>
    </wire>
    <wire loc="88:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7f5ce4419800"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7f5ce5245990"/></to>
    </wire>
    <wire loc="89:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7f5ce4418b10"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7f5ce523dcb0"/></to>
    </wire>
    <wire loc="99:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f5ce43bd020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f5ce2f71850"/></to>
    </wire>
    <wire loc="101:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5ce2f70910"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5ce43b50d0"/></to>
    </wire>
    <wire loc="103:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f5ce2f6f120"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f5ce2f74a30"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f5ce2f6fc20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ce54b7e10"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f5ce439dd80"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f5ce4384020"/></to>
    </wire>
    <wire loc="89:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5ce43adb20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5ce438cb90"/></to>
    </wire>
    <wire loc="93:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f5ce4397650"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f5ce437e5a0"/></to>
    </wire>
    <wire loc="94:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f5ce4397650"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f5ce437aba0"/></to>
    </wire>
    <wire loc="95:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f5ce4397650"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7f5ce4375120"/></to>
    </wire>
    <wire loc="43:/usr/bin/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f5ce2f27a30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5ce43adb20"/></to>
    </wire>
    <wire loc="44:/usr/bin/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f5ce2f22db0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5ce4397650"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/usr/bin/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5ce42c6410"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5ce43adb20"/></to>
    </wire>
    <wire loc="49:/usr/bin/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5ce4226e40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5ce424dcf0"/></to>
    </wire>
    <wire loc="50:/usr/bin/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f5ce422f0f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5ce4272200"/></to>
    </wire>
    <wire loc="31:/usr/bin/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5ce4272200"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5ce426d020"/></to>
    </wire>
    <wire loc="32:/usr/bin/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5ce4259280"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5ce43adb20"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5ce412b4e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5ce4100b70"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5ce41a47f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5ce4198b40"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5ce41a22b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ce4132720"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5ce41a3b20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ce41349e0"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ce41a0800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ce4131400"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ce41a1020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ce4133020"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5ce412ee60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5ce4100520"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5ce4127940"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5ce419f300"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5ce4131d90"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5ce4129020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5ce4130a50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ce412a4c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f5ce4127020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f5ce3d901e0"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5ce4129020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5ce3fcacc0"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5ce412a4c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ce3fca5a0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f5ce3fc9b00"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f5ce4127020"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5ce40f7430"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5ce4127940"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5ce3fc7920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5ce4127940"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5ce3fbecc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5ce4127940"/></to>
    </wire>
    <wire loc="74:/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f5ce3fc8590"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f5ce40fd080"/></to>
    </wire>
    <wire loc="75:/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f5ce3fc8e80"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f5ce40f8a40"/></to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f5ce40ed410"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f5ce3fc3e10"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f5ce40f3b80"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5ce3f91150"/></to>
    </wire>
    <wire loc="48:/usr/bin/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f5ce3f91150"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5ce3f83020"/></to>
    </wire>
    <wire loc="80:/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f5ce3faed20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f5ce3f91960"/></to>
    </wire>
    <wire loc="49:/usr/bin/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f5ce3f91960"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f5ce3f81080"/></to>
    </wire>
    <wire loc="332:/usr/bin/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f5ce40956e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ce54b7e10"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/usr/bin/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f5ce40ce660"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ce54b7e10"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/usr/bin/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f5ce4099c70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ce54b7e10"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/usr/bin/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f5ce4092a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ce54b7e10"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f5ce3fc5020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ce54b7e10"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f5ce3fc5800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ce54b7e10"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/usr/bin/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f5ce3f85d50"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f5ce3f83820"/></to>
    </wire>
    <wire loc="51:/usr/bin/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f5ce3f83820"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f5ce3f33dd0"/></to>
    </wire>
    <wire loc="52:/usr/bin/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f5ce3f81080"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f5ce3f315a0"/></to>
    </wire>
    <wire loc="50:/usr/bin/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f5ce3f83020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5ce3f33630"/></to>
    </wire>
    <wire loc="53:/usr/bin/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5ce3f80360"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5ce3e81bb0"/></to>
    </wire>
    <wire loc="33:/usr/bin/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5ce3e81bb0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5ce3da5cd0"/></to>
    </wire>
    <wire loc="53:/usr/bin/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5ce3f2ecc0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5ce3f80360"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x7f5ce3f30610"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7f5ce3f09480"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x7f5ce3f09480"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7f5ce3f00550"/></to>
    </wire>
    <wire loc="57:/usr/bin/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x7f5ce3f30df0"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7f5ce3f09d20"/></to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x7f5ce3f09d20"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7f5ce3f00e30"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x7f5ce3f2f620"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7f5ce3f085f0"/></to>
    </wire>
    <wire loc="62:/usr/bin/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x7f5ce3f085f0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7f5ce3eff730"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x7f5ce3f05dd0"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x7f5ce3eee650"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x7f5ce3f07b80"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x7f5ce3efd470"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x7f5ce3f05540"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x7f5ce3efdd50"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f5ce3eedb30"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f5ce52861d0"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f5ce3eec980"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f5ce53a8020"/></to>
    </wire>
    <wire loc="34:/usr/bin/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f5ce3d9d0f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5ce3e7ac50"/></to>
    </wire>
    <wire loc="31:/usr/bin/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5ce3e7ac50"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5ce3db13c0"/></to>
    </wire>
    <wire loc="32:/usr/bin/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5ce3dae660"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5ce3e75b30"/></to>
    </wire>
    <wire loc="89:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5ce3e75b30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5ce3e5cb90"/></to>
    </wire>
    <wire loc="90:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f5ce3e6edc0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f5ce3e54020"/></to>
    </wire>
    <wire loc="91:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f5ce3e6b530"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5ce3e53850"/></to>
    </wire>
    <wire loc="93:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f5ce3e66650"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f5ce3e4e5a0"/></to>
    </wire>
    <wire loc="94:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f5ce3e66650"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f5ce3e4aba0"/></to>
    </wire>
    <wire loc="95:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f5ce3e66650"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7f5ce3e45120"/></to>
    </wire>
    <wire loc="27:/usr/bin/tinyos-main/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5ce3db8410"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5ce3e75b30"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f5ce3d7ac00"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5ce3d642c0"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x7f5ce3d631d0"/></from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x7f5ce3d6dc80"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x7f5ce3d62570"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x7f5ce3d68c00"/></to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x7f5ce3d61930"/></from>
      <to><interface-ref name="DisseminatorControl" scoped="" ref="0x7f5ce3d67020"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5ce3d5f100"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5ce3c77020"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5ce3c77020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5ce2e3a420"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5ce3d5fd60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ce3c6a0e0"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5ce3c6a0e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ce4f7f020"/>
      <arguments>
        <value cst="I:96">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeAMSend" scoped="" ref="0x7f5ce3d5e4c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5ce3c65df0"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5ce3c65df0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5ce2dcc540"/></to>
    </wire>
    <wire loc="74:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeReceive" scoped="" ref="0x7f5ce3d5d200"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ce3c5e020"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5ce3c5e020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ce4f7f020"/>
      <arguments>
        <value cst="I:97">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5ce3d5d800"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5ce3c579c0"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5ce2e3a420"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5ce2e2c660"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5ce3c77c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ce2e38060"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5ce2e38060"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ce4f6eae0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ce3c758b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ce2e38c70"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ce2e38c70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ce4f57af0"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f5ce3c73020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f5ce2e362b0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f5ce2e362b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ce4f52e00"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5ce2e2b460"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5ce3ce7940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ce2e2a0e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ce4f57af0"/></to>
    </wire>
    <wire loc="53:/usr/bin/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5ce3ce7940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5ce3c8f4b0"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5ce3c8e400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5ce4f82ca0"/></to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ce3c8d060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ce4f57af0"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5ce3c8b720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ce4f6eae0"/></to>
    </wire>
    <wire loc="169:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f5ce3c8a480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ce54b7e10"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f5ce3c8ac60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ce54b7e10"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5ce3c6a6b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ce4f6eae0"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ce3c68400"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ce4f57af0"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5ce2dcc540"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5ce2db9940"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5ce3c64a50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ce2dcb270"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5ce2dcb270"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ce4f6eae0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ce3c63720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ce2dcbe80"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ce2dcbe80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ce4f57af0"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f5ce3c62da0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f5ce2dc95d0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f5ce2dc95d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ce4f52e00"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5ce2db85f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5ce3ce7940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ce2db7270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ce4f57af0"/></to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5ce3c5e5f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ce4f6eae0"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ce3c5d270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ce4f57af0"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationValue" scoped="" ref="0x7f5ce3b54730"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x7f5ce2d9d8e0"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x7f5ce3d6dc80"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x7f5ce2d99830"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x7f5ce3d67020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5ce2d9d020"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x7f5ce3d68c00"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x7f5ce3c05af0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5ce2d98760"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5ce52a2c30"/></to>
    </wire>
    <wire loc="62:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <from><interface-ref name="changedTask" scoped="" ref="0x7f5ce2d97de0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ce54b7e10"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationTimerP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x7f5ce3c05af0"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x7f5ce3b5f780"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x7f5ce3b5f780"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x7f5ce2d7a210"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5ce2d79020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5ce2d66990"/></to>
    </wire>
    <wire loc="52:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5ce2d66990"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5ce46682e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f5ce2d6c720"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f5ce4960c50"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Changed" scoped="" ref="0x7f5ce2d6d5d0"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7f5ce2d5c630"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Pending" scoped="" ref="0x7f5ce2d6e450"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7f5ce2d5f7a0"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5ce2d6ce80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5ce52a2c30"/></to>
    </wire>
    <wire loc="154:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <from><interface-ref name="timerTask" scoped="" ref="0x7f5ce2d69610"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ce54b7e10"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5ce3b475f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ce41a22b0"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ce3b46270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ce41a1020"/></to>
    </wire>
    <wire loc="149:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f5ce3ae2470"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f5ce36af7a0"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x7f5ce3b273d0"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x7f5ce3af0ce0"/></to>
    </wire>
    <wire loc="121:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x7f5ce3af0ce0"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x7f5ce3971720"/></to>
    </wire>
    <wire loc="75:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x7f5ce3b344a0"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x7f5ce3af19c0"/></to>
    </wire>
    <wire loc="118:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x7f5ce3af19c0"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x7f5ce39733a0"/></to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5ce3b34ab0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ce3af0020"/></to>
    </wire>
    <wire loc="119:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5ce3af0020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ce3973990"/></to>
    </wire>
    <wire loc="74:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f5ce3b354c0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f5ce3af2da0"/></to>
    </wire>
    <wire loc="117:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f5ce3af2da0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f5ce3974b00"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5ce3b37580"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5ce3af4e60"/></to>
    </wire>
    <wire loc="114:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5ce3af4e60"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5ce3975530"/></to>
    </wire>
    <wire loc="81:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x7f5ce3b042c0"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x7f5ce3aeda00"/></to>
    </wire>
    <wire loc="165:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x7f5ce3aeda00"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x7f5ce36ae0e0"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5ce3b36850"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ce3af21d0"/></to>
    </wire>
    <wire loc="116:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5ce3af21d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ce39743a0"/></to>
    </wire>
    <wire loc="82:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x7f5ce3b0d020"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x7f5ce3ae3c60"/></to>
    </wire>
    <wire loc="123:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x7f5ce3ae3c60"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x7f5ce396e400"/></to>
    </wire>
    <wire loc="79:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x7f5ce3b0f140"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x7f5ce3aefb20"/></to>
    </wire>
    <wire loc="122:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x7f5ce3aefb20"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x7f5ce3970590"/></to>
    </wire>
    <wire loc="115:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f5ce3af4170"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5ce3976b20"/></to>
    </wire>
    <wire loc="147:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f5ce3af4170"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5ce36ad720"/></to>
    </wire>
    <wire loc="148:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f5ce3af4170"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5ce389a640"/></to>
    </wire>
    <wire loc="85:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x7f5ce3ada410"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x7f5ce3afe670"/></to>
    </wire>
    <wire loc="86:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x7f5ce3adab80"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x7f5ce3af79c0"/></to>
    </wire>
    <wire loc="190:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x7f5ce3adba30"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x7f5ce3898180"/></to>
    </wire>
    <wire loc="120:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x7f5ce394e530"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x7f5ce3ada410"/></to>
    </wire>
    <wire loc="127:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="QEntryPool" scoped="" ref="0x7f5ce395b9f0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f5ce39101e0"/></to>
    </wire>
    <wire loc="49:/usr/bin/tinyos-main/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f5ce39101e0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f5ce2c08210"/></to>
    </wire>
    <wire loc="128:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="MessagePool" scoped="" ref="0x7f5ce3957400"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f5ce393ecd0"/></to>
    </wire>
    <wire loc="49:/usr/bin/tinyos-main/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f5ce393ecd0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f5ce2c1c390"/></to>
    </wire>
    <wire loc="131:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x7f5ce3960410"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f5ce390ab70"/></to>
    </wire>
    <wire loc="134:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SentCache" scoped="" ref="0x7f5ce3955d40"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x7f5ce38b4360"/></to>
    </wire>
    <wire loc="44:/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="Cache" scoped="" ref="0x7f5ce38b4360"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x7f5ce2becc70"/></to>
    </wire>
    <wire loc="139:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x7f5ce3967890"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x7f5ce3898180"/></to>
    </wire>
    <wire loc="151:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconSend" scoped="" ref="0x7f5ce36ab690"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5ce389ae50"/></to>
    </wire>
    <wire loc="152:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconReceive" scoped="" ref="0x7f5ce36a9440"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ce3899af0"/></to>
    </wire>
    <wire loc="153:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x7f5ce36a9a10"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x7f5ce3898180"/></to>
    </wire>
    <wire loc="155:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CompareBit" scoped="" ref="0x7f5ce3699600"/></from>
      <to><interface-ref name="CompareBit" scoped="" ref="0x7f5ce38926b0"/></to>
    </wire>
    <wire loc="157:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ce36a8bd0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ce4f57af0"/></to>
    </wire>
    <wire loc="158:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f5ce36a62b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5ce4f85b50"/></to>
    </wire>
    <wire loc="159:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconTimer" scoped="" ref="0x7f5ce36a5020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5ce38b1560"/></to>
    </wire>
    <wire loc="52:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5ce38b1560"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5ce46682e0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RouteTimer" scoped="" ref="0x7f5ce36a0570"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5ce38a9020"/></to>
    </wire>
    <wire loc="52:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5ce38a9020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5ce46682e0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x7f5ce369a270"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x7f5ce3adab80"/></to>
    </wire>
    <wire loc="162:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x7f5ce394a270"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x7f5ce3adab80"/></to>
    </wire>
    <wire loc="163:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x7f5ce39513d0"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x7f5ce36ae0e0"/></to>
    </wire>
    <wire loc="164:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x7f5ce369ae80"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x7f5ce396e400"/></to>
    </wire>
    <wire loc="169:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RetxmitTimer" scoped="" ref="0x7f5ce396c3d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5ce368e8c0"/></to>
    </wire>
    <wire loc="52:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5ce368e8c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5ce46682e0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f5ce369b980"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f5ce4960c50"/></to>
    </wire>
    <wire loc="173:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f5ce394ba40"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f5ce4960c50"/></to>
    </wire>
    <wire loc="176:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5ce396ec00"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5ce37d14b0"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5ce37d14b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5ce2bbc220"/></to>
    </wire>
    <wire loc="177:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5ce3952780"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ce37cbdc0"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5ce37cbdc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ce4f7f020"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x7f5ce3952d90"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ce37bf530"/></to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/system/AMSnooperC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5ce37bf530"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f5ce4f7fc00"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f5ce39655d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ce37d00f0"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5ce37d00f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ce2bbce30"/></to>
    </wire>
    <wire loc="180:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f5ce3950a40"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f5ce36af7a0"/></to>
    </wire>
    <wire loc="181:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x7f5ce3966a40"/></from>
      <to><interface-ref name="Routing" scoped="" ref="0x7f5ce36b0cf0"/></to>
    </wire>
    <wire loc="182:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f5ce3949020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5ce4f85b50"/></to>
    </wire>
    <wire loc="183:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ce396d8b0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f5ce37cd440"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f5ce37cd440"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f5ce2bb9120"/></to>
    </wire>
    <wire loc="184:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ce394ed20"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ce37d0d00"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ce37d0d00"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ce2bbba70"/></to>
    </wire>
    <wire loc="185:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5ce394c400"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5ce52a2c30"/></to>
    </wire>
    <wire loc="192:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f5ce388fcc0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f5ce4960c50"/></to>
    </wire>
    <wire loc="194:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5ce3892d40"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5ce3684b30"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5ce3684b30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5ce2b11d90"/></to>
    </wire>
    <wire loc="195:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5ce388f020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ce367e6a0"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5ce367e6a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5ce4f7f020"/>
      <arguments>
        <value cst="I:112">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f5ce38901a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ce36838b0"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5ce36838b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ce2b10a10"/></to>
    </wire>
    <wire loc="197:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x7f5ce3895a80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ce3682590"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ce3682590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ce2b0f720"/></to>
    </wire>
    <wire loc="221:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5ce388f6b0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5ce4f09e60"/></to>
    </wire>
    <wire loc="234:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f5ce3949b20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ce54b7e10"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x7f5ce2bea6f0"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x7f5ce3aefb20"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5ce2bbc220"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5ce2bb0900"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5ce2bbce30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ce4f6eae0"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ce2bbba70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ce4f57af0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f5ce2bb9120"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ce4f52e00"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5ce2baf5f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5ce3ce7940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ce2bae270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ce4f57af0"/></to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5ce37ca3d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ce4f6eae0"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ce37c9020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ce4f57af0"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/system/AMSnooperC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5ce37bfb00"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ce4f6eae0"/></to>
    </wire>
    <wire loc="57:/usr/bin/tinyos-main/tos/system/AMSnooperC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ce37be730"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ce4f57af0"/></to>
    </wire>
    <wire loc="271:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <from><interface-ref name="updateRouteTask" scoped="" ref="0x7f5ce3698480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ce54b7e10"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="390:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <from><interface-ref name="sendBeaconTask" scoped="" ref="0x7f5ce3699c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ce54b7e10"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5ce2b11d90"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5ce2b047f0"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5ce2b10a10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ce4f6eae0"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ce2b0f720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ce4f57af0"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f5ce3681c10"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f5ce2b0eda0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f5ce2b0eda0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ce4f52e00"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5ce2b035f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5ce3ce7940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ce2b02270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ce4f57af0"/></to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5ce367ec70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ce4f6eae0"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ce367d8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ce4f57af0"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5ce361a590"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ce41a22b0"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ce3619270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ce41a1020"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f5ce36188f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ce41a0800"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5ce2ae4780"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5ce3645a00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ce2ae3400"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ce41a1020"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5ce3645a00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5ce363f4b0"/></to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5ce363e400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5ce41a47f0"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5ce363d060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5ce41a1020"/></to>
    </wire>
    <wire loc="57:/usr/bin/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5ce3626720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5ce41a22b0"/></to>
    </wire>
    <wire loc="169:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f5ce3625480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ce54b7e10"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f5ce3625c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5ce54b7e10"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="AntiTheftRootC" loc="19:AntiTheftRootC.nc">
      <documentation loc="11:AntiTheftRootC.nc">
        <short>&#10; Root node code for the antitheft demo app, just acts as a bridge with the PC:&#10; - disseminates settings received from the PC&#10; - acts as a root forthe theft alert collection tree&#10; - forwards theft alerts received from the collection tree to the PC&#10;&#10; </short>
        <long>&#10; Root node code for the antitheft demo app, just acts as a bridge with the PC:&#10; - disseminates settings received from the PC&#10; - acts as a root forthe theft alert collection tree&#10; - forwards theft alerts received from the collection tree to the PC&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MainC" loc="56:/usr/bin/tinyos-main/tos/system/MainC.nc">
      <documentation loc="1:/usr/bin/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/usr/bin/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/usr/bin/tinyos-main/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/usr/bin/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/usr/bin/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/usr/bin/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/usr/bin/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/usr/bin/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/usr/bin/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/usr/bin/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/usr/bin/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/usr/bin/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/usr/bin/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/usr/bin/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/usr/bin/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="37:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/usr/bin/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/usr/bin/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/usr/bin/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/usr/bin/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/usr/bin/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/usr/bin/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/usr/bin/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/usr/bin/tinyos-main/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/usr/bin/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/usr/bin/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f5ce485b9f0"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP" loc="48:/usr/bin/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/usr/bin/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/usr/bin/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/usr/bin/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TOne" ref="0x7f5ce53d1410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/usr/bin/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/usr/bin/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/usr/bin/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TOne" ref="0x7f5ce53d1410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5ce5425180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5ce5425180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5ce5425180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/usr/bin/tinyos-main/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/usr/bin/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/usr/bin/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/usr/bin/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/usr/bin/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/usr/bin/tinyos-main/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/usr/bin/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/usr/bin/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/usr/bin/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/usr/bin/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/usr/bin/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/usr/bin/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/usr/bin/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/usr/bin/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/usr/bin/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/usr/bin/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="102:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/usr/bin/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/usr/bin/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/usr/bin/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/usr/bin/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TThree" ref="0x7f5ce53d17b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5ce5425180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TThree" ref="0x7f5ce53d17b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x7f5ce53cf0d0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/usr/bin/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/usr/bin/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DisseminationC" loc="46:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationC.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationC.nc">
        <short>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol.</short>
        <long>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol. StdControl controls all of the trickle&#10; timers used for all of the keys. &#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP" loc="47:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
        <short>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.</short>
        <long>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.&#10;&#10; TODO: Hook DisseminationProbe up to the serial instead of the radio.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineImplP" loc="45:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
        <short>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.</short>
        <long>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC" loc="47(DisseminationEngineP.DisseminationSendC):/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC" loc="47(DisseminationEngineP.DisseminationSendC.SenderC):/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP):/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/usr/bin/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationReceiveC" loc="43(DisseminationEngineP.DisseminationReceiveC):/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC" loc="47(DisseminationEngineP.DisseminationProbeSendC):/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC" loc="47(DisseminationEngineP.DisseminationProbeSendC.SenderC):/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP):/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeReceiveC" loc="43(DisseminationEngineP.DisseminationProbeReceiveC):/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:/usr/bin/tinyos-main/tos/system/NoLedsC.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AntiTheftRootAppC.DisseminatorC" loc="49(AntiTheftRootAppC.DisseminatorC):/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="settings" ref="0x7f5ce5383bc0"/>
            <typename><typedef-ref name="settings_t" ref="0x7f5ce5382670"/></typename>
          </type-tag>
          <value cst="I:42">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AntiTheftRootAppC.DisseminatorC.DisseminatorP" loc="45(AntiTheftRootAppC.DisseminatorC.DisseminatorP):/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008-02-16 01:31:50 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5ce3d80b40"/></type-var>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP" loc="44:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationTimerP.nc">
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC" loc="51(DisseminationTimerP.TrickleTimerMilliC):/usr/bin/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerMilliC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP" loc="51(DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP):/usr/bin/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerImplP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC" loc="44(DisseminationTimerP.TrickleTimerMilliC.TimerMilliC):/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.PendingVector):/usr/bin/tinyos-main/tos/system/BitVectorC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.ChangeVector):/usr/bin/tinyos-main/tos/system/BitVectorC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AntiTheftRootAppC.SettingsReceiver" loc="43(AntiTheftRootAppC.SettingsReceiver):/usr/bin/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMReceiverC"/>
        <arguments>
          <value cst="I:54">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CollectionC" loc="45:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP" loc="77:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <documentation loc="66:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP.Forwarder" loc="107(CtpP.Forwarder):/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <instance number="0">
        <component-ref qname="CtpForwardingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.MessagePoolP" loc="41(CtpP.MessagePoolP):/usr/bin/tinyos-main/tos/system/PoolC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
            <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.MessagePoolP.PoolP" loc="53(CtpP.MessagePoolP.PoolP):/usr/bin/tinyos-main/tos/system/PoolP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f5ce393d020"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.QEntryPoolP" loc="41(CtpP.QEntryPoolP):/usr/bin/tinyos-main/tos/system/PoolC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f5ce3ad0db0"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f5ce3acf2e0"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.QEntryPoolP.PoolP" loc="53(CtpP.QEntryPoolP.PoolP):/usr/bin/tinyos-main/tos/system/PoolP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f5ce393d020"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SendQueueP" loc="42(CtpP.SendQueueP):/usr/bin/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f5ce3ad0db0"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f5ce3acf2e0"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SentCacheP" loc="38(CtpP.SentCacheP):/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <documentation loc="32:/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SentCacheP.CacheP" loc="43(CtpP.SentCacheP.CacheP):/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <documentation loc="32:/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RoutingBeaconTimer" loc="44(CtpP.RoutingBeaconTimer):/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.RouteUpdateTimer" loc="44(CtpP.RouteUpdateTimer):/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkEstimatorP" loc="42:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <module/>
    </component>
    <component qname="CtpP.AMSenderC" loc="47(CtpP.AMSenderC):/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC" loc="47(CtpP.AMSenderC.SenderC):/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC.AMQueueEntryP" loc="43(CtpP.AMSenderC.SenderC.AMQueueEntryP):/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.AMReceiverC" loc="43(CtpP.AMReceiverC):/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSnooperC" loc="44(CtpP.AMSnooperC):/usr/bin/tinyos-main/tos/system/AMSnooperC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSnooperC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.Router" loc="107(CtpP.Router):/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <documentation loc="38:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CtpRoutingEngineP"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:128">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:512000">
            <type-int cname="long" size="I:4" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RetxmitTimer" loc="44(CtpP.RetxmitTimer):/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl" loc="47(CtpP.SendControl):/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC" loc="47(CtpP.SendControl.SenderC):/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC.AMQueueEntryP" loc="43(CtpP.SendControl.SenderC.AMQueueEntryP):/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.ReceiveControl" loc="43(CtpP.ReceiveControl):/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AntiTheftRootAppC.AlertsForwarder" loc="47(AntiTheftRootAppC.AlertsForwarder):/usr/bin/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/usr/bin/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:22">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AntiTheftRootAppC.AlertsForwarder.AMQueueEntryP" loc="43(AntiTheftRootAppC.AlertsForwarder.AMQueueEntryP):/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/usr/bin/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/usr/bin/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f5ce51ddc10" loc="40:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f5ce51da020" loc="40:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f5ce51da390" loc="40:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f5ce51c6020" loc="41:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f5ce51c63b0" loc="42:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f5ce51c6740" loc="43:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f5ce51c6a90" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f5ce50dfe30" loc="42:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f5ce50dc200" loc="43:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f5ce50dc590" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f5ce50dc8e0" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f5ce4ca6210" loc="83:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/usr/bin/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f5ce4c97cc0" loc="42:/usr/bin/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f5ce485b9f0" loc="58:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f5ce485b9f0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f5ce485bd00" loc="58:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f5ce4846600" loc="58:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f5ce4846600"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f5ce4846910" loc="58:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5ce4718020" loc="46:/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5ce4718020"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5ce46dc230" loc="46:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5ce46dc230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f5ce46dc560" loc="46:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5ce4681de0" loc="46:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5ce4681de0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/usr/bin/tinyos-main/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/usr/bin/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f5ce42d6290" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f5ce42d6290"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7f5ce42d6600" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f5ce42bfd60" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f5ce42bfd60"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f5ce42bc580" loc="52:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f5ce42bc580"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7f5ce42bc8a0" loc="53:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f5ce426f910" loc="42:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f5ce426f910"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f5ce426c120" loc="43:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f5ce426c120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f5ce424c600" loc="55:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f5ce424c600"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f5ce424cdd0" loc="56:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f5ce424cdd0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f5ce424b220" loc="57:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f5ce424b220"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f5ce424ba00" loc="58:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f5ce424ba00"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f5ce424bdd0" loc="59:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f5ce4249630" loc="60:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f5ce4249630"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/usr/bin/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/usr/bin/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/usr/bin/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/usr/bin/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/usr/bin/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f5ce3d0b8a0" loc="47:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f5ce3d046b0" loc="47:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f5ce3cfb320" loc="43:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f5ce3cd9c80" loc="45:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f5ce3c719f0" loc="43:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorC" loc="49:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorC.nc" abstract="">
      <documentation loc="35:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f5ce3d80b40" loc="49:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5ce3d80b40"/></type-var>
        </typedef>
        <constant name="key" ref="0x7f5ce3d80e80" loc="49:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorP" loc="45:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorP.nc" abstract="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008-02-16 01:31:50 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f5ce3c34120" loc="45:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
          <component-ref qname="DisseminatorP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5ce3c34120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TrickleTimerMilliC" loc="51:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x7f5ce3c00a50" loc="51:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x7f5ce3c00dc0" loc="52:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x7f5ce3bfd120" loc="53:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x7f5ce3bfd490" loc="54:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TrickleTimerImplP" loc="51:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerImplP.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x7f5ce3bfb9f0" loc="51:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x7f5ce3bfbd60" loc="52:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x7f5ce3bf80d0" loc="53:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x7f5ce3bf8440" loc="54:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </constant>
        <constant name="scale" ref="0x7f5ce3bf87b0" loc="55:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BitVectorC" loc="44:/usr/bin/tinyos-main/tos/system/BitVectorC.nc" abstract="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="max_bits" ref="0x7f5ce3b86020" loc="44:/usr/bin/tinyos-main/tos/system/BitVectorC.nc">
          <component-ref qname="BitVectorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMReceiverC" loc="43:/usr/bin/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc" abstract="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f5ce3b4e7d0" loc="43:/usr/bin/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc">
          <component-ref qname="SerialAMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CtpForwardingEngineP" loc="107:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/usr/bin/tinyos-main/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7f5ce393d020" loc="41:/usr/bin/tinyos-main/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f5ce393d020"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x7f5ce393d390" loc="41:/usr/bin/tinyos-main/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/usr/bin/tinyos-main/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7f5ce39354e0" loc="53:/usr/bin/tinyos-main/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f5ce39354e0"/></type-var>
        </typedef>
        <constant name="size" ref="0x7f5ce3935820" loc="53:/usr/bin/tinyos-main/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/usr/bin/tinyos-main/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f5ce390b410" loc="42:/usr/bin/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f5ce390b410"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f5ce390b790" loc="42:/usr/bin/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="LruCtpMsgCacheC" loc="38:/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc" abstract="">
      <documentation loc="32:/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="CACHE_SIZE" ref="0x7f5ce38e85f0" loc="38:/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
          <component-ref qname="LruCtpMsgCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LruCtpMsgCacheP" loc="43:/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc" abstract="">
      <documentation loc="32:/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f5ce38e2540" loc="43:/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
          <component-ref qname="LruCtpMsgCacheP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSnooperC" loc="44:/usr/bin/tinyos-main/tos/system/AMSnooperC.nc" abstract="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f5ce37c7d90" loc="44:/usr/bin/tinyos-main/tos/system/AMSnooperC.nc">
          <component-ref qname="AMSnooperC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CtpRoutingEngineP" loc="107:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc" abstract="">
      <documentation loc="38:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="routingTableSize" ref="0x7f5ce37b1250" loc="107:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </constant>
        <constant name="minInterval" ref="0x7f5ce37b15e0" loc="107:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
        </constant>
        <constant name="maxInterval" ref="0x7f5ce37b1970" loc="107:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/usr/bin/tinyos-main/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/usr/bin/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f5ce3651c00" loc="47:/usr/bin/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SettingsReceive" ref="0x7f5ce52f0940" loc="29:AntiTheftRootC.nc">
      <component-ref qname="AntiTheftRootC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SettingsReceive" scoped="" ref="0x7f5ce52f0940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce52f0cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x7f5ce52eb510" loc="33:AntiTheftRootC.nc">
      <component-ref qname="AntiTheftRootC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x7f5ce52eb510"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f5ce52eb890"/>
        <function-ref name="setRoot" scoped="" ref="0x7f5ce52eba20"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f5ce52ebbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f5ce537ec30" loc="23:AntiTheftRootC.nc">
      <component-ref qname="AntiTheftRootC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f5ce537ec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f5ce537d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f5ce5376720" loc="24:AntiTheftRootC.nc">
      <component-ref qname="AntiTheftRootC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x7f5ce5376720"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5ce5376aa0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5ce5376c30"/>
        <function-ref name="start" scoped="" ref="0x7f5ce5376dc0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce537b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f5ce537b3b0" loc="25:AntiTheftRootC.nc">
      <component-ref qname="AntiTheftRootC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7f5ce537b3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5ce537b730"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5ce537b8c0"/>
        <function-ref name="start" scoped="" ref="0x7f5ce537ba50"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce537bbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LowPowerListening" ref="0x7f5ce52f72a0" loc="26:AntiTheftRootC.nc">
      <component-ref qname="AntiTheftRootC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f5ce52f72a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f5ce52f7620"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f5ce52f77b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f5ce52f7940"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f5ce52f7ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SettingsUpdate" ref="0x7f5ce52faa60" loc="28:AntiTheftRootC.nc">
      <component-ref qname="AntiTheftRootC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SettingsUpdate" scoped="" ref="0x7f5ce52faa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="settings" ref="0x7f5ce5383bc0"/>
            <typename><typedef-ref name="settings_t" ref="0x7f5ce5382670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x7f5ce5373670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionControl" ref="0x7f5ce52ee910" loc="31:AntiTheftRootC.nc">
      <component-ref qname="AntiTheftRootC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionControl" scoped="" ref="0x7f5ce52ee910"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ce52eec90"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce52eee20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationControl" ref="0x7f5ce52f5240" loc="32:AntiTheftRootC.nc">
      <component-ref qname="AntiTheftRootC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationControl" scoped="" ref="0x7f5ce52f5240"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ce52f55c0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce52f5750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlertsReceive" ref="0x7f5ce52f1020" loc="34:AntiTheftRootC.nc">
      <component-ref qname="AntiTheftRootC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlertsReceive" scoped="" ref="0x7f5ce52f1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce52f13a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5ce52cfa80" loc="37:AntiTheftRootC.nc">
      <component-ref qname="AntiTheftRootC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f5ce52cfa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5ce52cfe00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5ce52ea020"/>
        <function-ref name="led1On" scoped="" ref="0x7f5ce52ea1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5ce52ea340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5ce52ea4d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce52ea660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5ce52ea7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5ce52eae30"/>
        <function-ref name="set" scoped="" ref="0x7f5ce52ea980"/>
        <function-ref name="led0On" scoped="" ref="0x7f5ce52eab10"/>
        <function-ref name="led2On" scoped="" ref="0x7f5ce52eaca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlertsForward" ref="0x7f5ce52e11c0" loc="35:AntiTheftRootC.nc">
      <component-ref qname="AntiTheftRootC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlertsForward" scoped="" ref="0x7f5ce52e11c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce52e1540"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce52e16d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce52e1860"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce52e19f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce52e1b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f5ce529f160" loc="58:/usr/bin/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ce529f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce529f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f5ce537fbf0" loc="57:/usr/bin/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f5ce537fbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f5ce52a0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f5ce528c020" loc="52:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f5ce528c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce528c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ce528d080" loc="46:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5ce528d080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce528d400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f5ce52861d0" loc="50:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f5ce52861d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f5ce5286550"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f5ce52866e0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f5ce5286870"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f5ce5286a00"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f5ce5286b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f5ce527da60" loc="45:/usr/bin/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f5ce527da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce527dde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ce527d380" loc="44:/usr/bin/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5ce527d380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce527d700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f5ce527c180" loc="46:/usr/bin/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f5ce527c180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce527c500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f5ce52773f0" loc="41:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f5ce52773f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce5277770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f5ce528bcf0" loc="40:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f5ce528bcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce52770a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f5ce526a370" loc="45:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f5ce526a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce526a6f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7f5ce526b020" loc="44:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7f5ce526b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce526b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce526b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce526b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce526b850"/>
        <function-ref name="get" scoped="" ref="0x7f5ce526b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce526bb70"/>
        <function-ref name="set" scoped="" ref="0x7f5ce526bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce526a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f5ce5276820" loc="43:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f5ce5276820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce5276ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f5ce51ec350" loc="98:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f5ce51ec350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce51ecad0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce51ecc60"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce51ecdf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce51eb020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce51eb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce51eb340"/>
        <function-ref name="set" scoped="" ref="0x7f5ce51eb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce51eb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f5ce521db20" loc="72:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f5ce521db20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce521c020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce521c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce521c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce521c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce521c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce521c7f0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce521c980"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce521cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f5ce520a990" loc="83:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f5ce520a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce520ad10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5209020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce52091b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5209340"/>
        <function-ref name="get" scoped="" ref="0x7f5ce52094d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5209660"/>
        <function-ref name="set" scoped="" ref="0x7f5ce52097f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5209980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f5ce51f9350" loc="92:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f5ce51f9350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce51f96d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce51f9860"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce51f99f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce51f9b80"/>
        <function-ref name="get" scoped="" ref="0x7f5ce51f9d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce51f8020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce51f81b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce51f8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f5ce51e6670" loc="103:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f5ce51e6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce51e69f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce51e6b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce51e6d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce51e5020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce51e51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce51e5340"/>
        <function-ref name="set" scoped="" ref="0x7f5ce51e54d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce51e5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f5ce524acb0" loc="50:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f5ce524acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce52490a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5249230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce52493c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5249550"/>
        <function-ref name="get" scoped="" ref="0x7f5ce52496e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5249870"/>
        <function-ref name="set" scoped="" ref="0x7f5ce5249a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5249b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f5ce51fccb0" loc="90:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f5ce51fccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce51fb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce51fb230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce51fb3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce51fb550"/>
        <function-ref name="get" scoped="" ref="0x7f5ce51fb6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce51fb870"/>
        <function-ref name="set" scoped="" ref="0x7f5ce51fba00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce51fbb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f5ce5247350" loc="53:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f5ce5247350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce52476d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5247860"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce52479f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5247b80"/>
        <function-ref name="get" scoped="" ref="0x7f5ce5247d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5246020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce52461b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5246340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f5ce522d350" loc="64:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f5ce522d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce522d6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce522d860"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce522d9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce522db80"/>
        <function-ref name="get" scoped="" ref="0x7f5ce522dd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce522c020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce522c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce522c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f5ce5219350" loc="75:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f5ce5219350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce52196d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5219860"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce52199f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5219b80"/>
        <function-ref name="get" scoped="" ref="0x7f5ce5219d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5218020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce52181b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5218340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f5ce5206350" loc="86:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f5ce5206350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce52066d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5206860"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce52069f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5206b80"/>
        <function-ref name="get" scoped="" ref="0x7f5ce5206d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5205020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce52051b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5205340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f5ce5258cb0" loc="45:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f5ce5258cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce52560a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5256230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce52563c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5256550"/>
        <function-ref name="get" scoped="" ref="0x7f5ce52566e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5256870"/>
        <function-ref name="set" scoped="" ref="0x7f5ce5256a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5256b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f5ce523dcb0" loc="56:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f5ce523dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce523c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce523c230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce523c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce523c550"/>
        <function-ref name="get" scoped="" ref="0x7f5ce523c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce523c870"/>
        <function-ref name="set" scoped="" ref="0x7f5ce523ca00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce523cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f5ce522acb0" loc="67:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f5ce522acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce52290a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5229230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce52293c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5229550"/>
        <function-ref name="get" scoped="" ref="0x7f5ce52296e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5229870"/>
        <function-ref name="set" scoped="" ref="0x7f5ce5229a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5229b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f5ce5216cb0" loc="78:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f5ce5216cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce52150a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5215230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce52153c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5215550"/>
        <function-ref name="get" scoped="" ref="0x7f5ce52156e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5215870"/>
        <function-ref name="set" scoped="" ref="0x7f5ce5215a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5215b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f5ce51f6cb0" loc="95:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f5ce51f6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce51f50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce51f5230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce51f53c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce51f5550"/>
        <function-ref name="get" scoped="" ref="0x7f5ce51f56e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce51f5870"/>
        <function-ref name="set" scoped="" ref="0x7f5ce51f5a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce51f5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f5ce51e8020" loc="101:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f5ce51e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce51e83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce51e8530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce51e86c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce51e8850"/>
        <function-ref name="get" scoped="" ref="0x7f5ce51e89e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce51e8b70"/>
        <function-ref name="set" scoped="" ref="0x7f5ce51e8d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce51e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f5ce520c350" loc="81:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f5ce520c350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce520c6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce520c860"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce520c9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce520cb80"/>
        <function-ref name="get" scoped="" ref="0x7f5ce520cd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce520b020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce520b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce520b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f5ce524c670" loc="48:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f5ce524c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce524c9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce524cb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce524cd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce524b020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce524b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce524b340"/>
        <function-ref name="set" scoped="" ref="0x7f5ce524b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce524b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f5ce5239670" loc="59:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f5ce5239670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce52399f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5239b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce5239d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5238020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce52381b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5238340"/>
        <function-ref name="set" scoped="" ref="0x7f5ce52384d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5238660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f5ce51eb990" loc="99:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f5ce51eb990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce51ebd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce51ea020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce51ea1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce51ea340"/>
        <function-ref name="get" scoped="" ref="0x7f5ce51ea4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce51ea660"/>
        <function-ref name="set" scoped="" ref="0x7f5ce51ea7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce51ea980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f5ce5237cb0" loc="62:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f5ce5237cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce52360a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5236230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce52363c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5236550"/>
        <function-ref name="get" scoped="" ref="0x7f5ce52366e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5236870"/>
        <function-ref name="set" scoped="" ref="0x7f5ce5236a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5236b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f5ce521ce40" loc="73:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f5ce521ce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce521b1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce521b370"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce521b500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce521b690"/>
        <function-ref name="get" scoped="" ref="0x7f5ce521b820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce521b9b0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce521bb40"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce521bcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f5ce5209cb0" loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f5ce5209cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce52080a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5208230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce52083c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5208550"/>
        <function-ref name="get" scoped="" ref="0x7f5ce52086e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5208870"/>
        <function-ref name="set" scoped="" ref="0x7f5ce5208a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5208b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f5ce51f8670" loc="93:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f5ce51f8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce51f89f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce51f8b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce51f8d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce51f7020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce51f71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce51f7340"/>
        <function-ref name="set" scoped="" ref="0x7f5ce51f74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce51f7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f5ce5248020" loc="51:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f5ce5248020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce52483a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5248530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce52486c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5248850"/>
        <function-ref name="get" scoped="" ref="0x7f5ce52489e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5248b70"/>
        <function-ref name="set" scoped="" ref="0x7f5ce5248d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5247020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f5ce5246670" loc="54:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f5ce5246670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce52469f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5246b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce5246d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5245020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce52451b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5245340"/>
        <function-ref name="set" scoped="" ref="0x7f5ce52454d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5245660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f5ce522c670" loc="65:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f5ce522c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce522c9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce522cb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce522cd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce522b020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce522b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce522b340"/>
        <function-ref name="set" scoped="" ref="0x7f5ce522b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce522b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f5ce5218670" loc="76:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f5ce5218670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce52189f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5218b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce5218d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5217020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce52171b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5217340"/>
        <function-ref name="set" scoped="" ref="0x7f5ce52174d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5217660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f5ce5205670" loc="87:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f5ce5205670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce52059f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5205b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce5205d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce51fd020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce51fd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce51fd340"/>
        <function-ref name="set" scoped="" ref="0x7f5ce51fd4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce51fd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f5ce5255020" loc="46:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f5ce5255020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce52553a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5255530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce52556c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5255850"/>
        <function-ref name="get" scoped="" ref="0x7f5ce52559e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5255b70"/>
        <function-ref name="set" scoped="" ref="0x7f5ce5255d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce524d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f5ce523b020" loc="57:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f5ce523b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce523b4a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce523b630"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce523b7c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce523b950"/>
        <function-ref name="get" scoped="" ref="0x7f5ce523bae0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce523bc70"/>
        <function-ref name="set" scoped="" ref="0x7f5ce523be00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce523a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f5ce5228020" loc="68:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f5ce5228020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce52283a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5228530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce52286c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5228850"/>
        <function-ref name="get" scoped="" ref="0x7f5ce52289e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5228b70"/>
        <function-ref name="set" scoped="" ref="0x7f5ce5228d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5227020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f5ce51ed020" loc="96:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f5ce51ed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce51ed3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce51ed530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce51ed6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce51ed850"/>
        <function-ref name="get" scoped="" ref="0x7f5ce51ed9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce51edb70"/>
        <function-ref name="set" scoped="" ref="0x7f5ce51edd00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce51ec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f5ce5226670" loc="71:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f5ce5226670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce5226bf0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5226d80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce521d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce521d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce521d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce521d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce521d660"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce521d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f5ce520b670" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f5ce520b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce520b9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce520bb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce520bd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce520a020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce520a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce520a340"/>
        <function-ref name="set" scoped="" ref="0x7f5ce520a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce520a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f5ce51fa020" loc="91:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f5ce51fa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce51fa3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce51fa530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce51fa6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce51fa850"/>
        <function-ref name="get" scoped="" ref="0x7f5ce51fa9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce51fab70"/>
        <function-ref name="set" scoped="" ref="0x7f5ce51fad00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce51f9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f5ce51e7350" loc="102:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f5ce51e7350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce51e76d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce51e7860"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce51e79f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce51e7b80"/>
        <function-ref name="get" scoped="" ref="0x7f5ce51e7d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce51e6020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce51e61b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce51e6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f5ce524b990" loc="49:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f5ce524b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce524bd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce524a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce524a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce524a340"/>
        <function-ref name="get" scoped="" ref="0x7f5ce524a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce524a660"/>
        <function-ref name="set" scoped="" ref="0x7f5ce524a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce524a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f5ce5238990" loc="60:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f5ce5238990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce5238d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5237020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce52371b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5237340"/>
        <function-ref name="get" scoped="" ref="0x7f5ce52374d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5237660"/>
        <function-ref name="set" scoped="" ref="0x7f5ce52377f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5237980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f5ce51fd990" loc="89:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f5ce51fd990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce51fdd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce51fc020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce51fc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce51fc340"/>
        <function-ref name="get" scoped="" ref="0x7f5ce51fc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce51fc660"/>
        <function-ref name="set" scoped="" ref="0x7f5ce51fc7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce51fc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f5ce5235020" loc="63:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f5ce5235020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce52353a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5235530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce52356c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5235850"/>
        <function-ref name="get" scoped="" ref="0x7f5ce52359e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5235b70"/>
        <function-ref name="set" scoped="" ref="0x7f5ce5235d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce522d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f5ce521a060" loc="74:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f5ce521a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce521a3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce521a570"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce521a700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce521a890"/>
        <function-ref name="get" scoped="" ref="0x7f5ce521aa20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce521abb0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce521ad40"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5219020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f5ce5207020" loc="85:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f5ce5207020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce52073a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5207530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce52076c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5207850"/>
        <function-ref name="get" scoped="" ref="0x7f5ce52079e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5207b70"/>
        <function-ref name="set" scoped="" ref="0x7f5ce5207d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5206020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f5ce51f7990" loc="94:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f5ce51f7990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce51f7d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce51f6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce51f61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce51f6340"/>
        <function-ref name="get" scoped="" ref="0x7f5ce51f64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce51f6660"/>
        <function-ref name="set" scoped="" ref="0x7f5ce51f67f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce51f6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f5ce5275a70" loc="44:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f5ce5275a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce5275df0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5258020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce52581b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5258340"/>
        <function-ref name="get" scoped="" ref="0x7f5ce52584d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5258660"/>
        <function-ref name="set" scoped="" ref="0x7f5ce52587f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5258980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f5ce5245990" loc="55:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f5ce5245990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce5245d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce523d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce523d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce523d340"/>
        <function-ref name="get" scoped="" ref="0x7f5ce523d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce523d660"/>
        <function-ref name="set" scoped="" ref="0x7f5ce523d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce523d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f5ce522b990" loc="66:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f5ce522b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce522bd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce522a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce522a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce522a340"/>
        <function-ref name="get" scoped="" ref="0x7f5ce522a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce522a660"/>
        <function-ref name="set" scoped="" ref="0x7f5ce522a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce522a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f5ce5217990" loc="77:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f5ce5217990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce5217d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5216020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce52161b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5216340"/>
        <function-ref name="get" scoped="" ref="0x7f5ce52164d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5216660"/>
        <function-ref name="set" scoped="" ref="0x7f5ce52167f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5216980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f5ce51eacb0" loc="100:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f5ce51eacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce51e90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce51e9230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce51e93c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce51e9550"/>
        <function-ref name="get" scoped="" ref="0x7f5ce51e96e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce51e9870"/>
        <function-ref name="set" scoped="" ref="0x7f5ce51e9a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce51e9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f5ce520d020" loc="80:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f5ce520d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce520d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce520d530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce520d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce520d850"/>
        <function-ref name="get" scoped="" ref="0x7f5ce520d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce520db70"/>
        <function-ref name="set" scoped="" ref="0x7f5ce520dd00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce520c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f5ce5227350" loc="69:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f5ce5227350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce52276d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5227860"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce52279f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5227b80"/>
        <function-ref name="get" scoped="" ref="0x7f5ce5227d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5226020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce52261b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5226340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f5ce524d350" loc="47:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f5ce524d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce524d6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce524d860"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce524d9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce524db80"/>
        <function-ref name="get" scoped="" ref="0x7f5ce524dd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce524c020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce524c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce524c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f5ce523a350" loc="58:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f5ce523a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce523a6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce523a860"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce523a9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce523ab80"/>
        <function-ref name="get" scoped="" ref="0x7f5ce523ad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5239020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce52391b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5239340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f5ce5169760" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f5ce5169760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce5169ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5169c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce5169e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5168020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce51681b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5168340"/>
        <function-ref name="set" scoped="" ref="0x7f5ce51684d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5168660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f5ce5166c10" loc="49:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f5ce5166c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce5165020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce51651b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce5165340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce51654d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce5165660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce51657f0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce5165980"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5165b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f5ce516b3f0" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f5ce516b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce516b770"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce516b900"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce516ba90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce516bc20"/>
        <function-ref name="get" scoped="" ref="0x7f5ce516bdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce516a020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce516a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce516a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f5ce51688f0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f5ce51688f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce5168c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5168e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce5167020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce51671b0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce5167340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce51674d0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce5167660"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce51677f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f5ce5165da0" loc="50:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f5ce5165da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce515e180"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce515e310"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce515e4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce515e630"/>
        <function-ref name="get" scoped="" ref="0x7f5ce515e7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce515e950"/>
        <function-ref name="set" scoped="" ref="0x7f5ce515eae0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce515ec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f5ce516a5d0" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f5ce516a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce516a950"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce516aae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce516ac70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce516ae00"/>
        <function-ref name="get" scoped="" ref="0x7f5ce5169020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce51691b0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce5169340"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce51694d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f5ce5167a80" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f5ce5167a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce5167e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5166020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce51661b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5166340"/>
        <function-ref name="get" scoped="" ref="0x7f5ce51664d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5166660"/>
        <function-ref name="set" scoped="" ref="0x7f5ce51667f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5166980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f5ce515d020" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f5ce515d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce515d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce515d530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce515d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce515d850"/>
        <function-ref name="get" scoped="" ref="0x7f5ce515d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce515db70"/>
        <function-ref name="set" scoped="" ref="0x7f5ce515dd00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce515c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce35c66d0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce35c66d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce35c6a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce35c6be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce35c6d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce35c5020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce35c51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce35c5340"/>
        <function-ref name="set" scoped="" ref="0x7f5ce35c54d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce35c5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce35c39b0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce35c39b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce35c3d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce35c2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce35c21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce35c2340"/>
        <function-ref name="get" scoped="" ref="0x7f5ce35c24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce35c2660"/>
        <function-ref name="set" scoped="" ref="0x7f5ce35c27f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce35c2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce35c0e20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce35c0e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce35be1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce35be350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce35be4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce35be670"/>
        <function-ref name="get" scoped="" ref="0x7f5ce35be800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce35be990"/>
        <function-ref name="set" scoped="" ref="0x7f5ce35beb20"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce35becb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce35bb0a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce35bb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce35bb420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce35bb5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce35bb740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce35bb8d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce35bba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce35bbbf0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce35bbd80"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce35ba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce35b83f0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce35b83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce35b8770"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce35b8900"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce35b8a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce35b8c20"/>
        <function-ref name="get" scoped="" ref="0x7f5ce35b8db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce35b7020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce35b71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce35b7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce35b56d0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce35b56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce35b5a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce35b5be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce35b5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce35b4020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce35b41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce35b4340"/>
        <function-ref name="set" scoped="" ref="0x7f5ce35b44d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce35b4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce35b29b0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce35b29b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce35b2d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce35b1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce35b11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce35b1340"/>
        <function-ref name="get" scoped="" ref="0x7f5ce35b14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce35b1660"/>
        <function-ref name="set" scoped="" ref="0x7f5ce35b17f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce35b1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce35afe20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce35afe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce35ae1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce35ae350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce35ae4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce35ae670"/>
        <function-ref name="get" scoped="" ref="0x7f5ce35ae800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce35ae990"/>
        <function-ref name="set" scoped="" ref="0x7f5ce35aeb20"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce35aecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f5ce514ea80" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f5ce514ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce514ee00"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce514d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce514d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce514d340"/>
        <function-ref name="get" scoped="" ref="0x7f5ce514d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce514d660"/>
        <function-ref name="set" scoped="" ref="0x7f5ce514d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce514d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f5ce514a020" loc="49:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f5ce514a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce514a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce514a530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce514a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce514a850"/>
        <function-ref name="get" scoped="" ref="0x7f5ce514a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce514ab70"/>
        <function-ref name="set" scoped="" ref="0x7f5ce514ad00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5149020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f5ce51567a0" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f5ce51567a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce5156b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5156cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce5156e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5155020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce51551b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5155340"/>
        <function-ref name="set" scoped="" ref="0x7f5ce51554d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5155660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f5ce514dc10" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f5ce514dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce514c020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce514c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce514c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce514c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce514c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce514c7f0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce514c980"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce514cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f5ce51492b0" loc="50:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f5ce51492b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce5149630"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce51497c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce5149950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5149ae0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce5149c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5149e00"/>
        <function-ref name="set" scoped="" ref="0x7f5ce5148020"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce51481b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f5ce51558f0" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f5ce51558f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce5155c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5155e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce514e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce514e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce514e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce514e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce514e660"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce514e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f5ce514cda0" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f5ce514cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce514b180"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce514b310"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce514b4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce514b630"/>
        <function-ref name="get" scoped="" ref="0x7f5ce514b7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce514b950"/>
        <function-ref name="set" scoped="" ref="0x7f5ce514bae0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce514bc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f5ce5148440" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f5ce5148440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce51487c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5148950"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce5148ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5148c70"/>
        <function-ref name="get" scoped="" ref="0x7f5ce5148e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5147020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce51471b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5147340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce3556a60" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce3556a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce3556de0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce3555020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce35551b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce3555340"/>
        <function-ref name="get" scoped="" ref="0x7f5ce35554d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce3555660"/>
        <function-ref name="set" scoped="" ref="0x7f5ce35557f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce3555980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce354fe20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce354fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce354e1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce354e350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce354e4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce354e670"/>
        <function-ref name="get" scoped="" ref="0x7f5ce354e800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce354e990"/>
        <function-ref name="set" scoped="" ref="0x7f5ce354eb20"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce354ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce354b0a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce354b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce354b420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce354b5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce354b740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce354b8d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce354ba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce354bbf0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce354bd80"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce3549020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce35473f0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce35473f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce3547770"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce3547900"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce3547a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce3547c20"/>
        <function-ref name="get" scoped="" ref="0x7f5ce3547db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce3546020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce35461b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce3546340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce35446d0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce35446d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce3544a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce3544be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce3544d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce3543020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce35431b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce3543340"/>
        <function-ref name="set" scoped="" ref="0x7f5ce35434d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce3543660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce35419b0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce35419b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce3541d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce3540020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce35401b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce3540340"/>
        <function-ref name="get" scoped="" ref="0x7f5ce35404d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce3540660"/>
        <function-ref name="set" scoped="" ref="0x7f5ce35407f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce3540980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce353ee20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce353ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce353d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce353d350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce353d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce353d670"/>
        <function-ref name="get" scoped="" ref="0x7f5ce353d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce353d990"/>
        <function-ref name="set" scoped="" ref="0x7f5ce353db20"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce353dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce353a0a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce353a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce353a420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce353a5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce353a740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce353a8d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce353aa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce353abf0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce353ad80"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce3539020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f5ce5139da0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f5ce5139da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce5138180"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5138310"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce51384a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5138630"/>
        <function-ref name="get" scoped="" ref="0x7f5ce51387c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5138950"/>
        <function-ref name="set" scoped="" ref="0x7f5ce5138ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5138c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f5ce5135440" loc="49:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f5ce5135440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce51357c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5135950"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce5135ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5135c70"/>
        <function-ref name="get" scoped="" ref="0x7f5ce5135e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce512d020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce512d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce512d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f5ce513ba20" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f5ce513ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce513bda0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce513a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce513a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce513a340"/>
        <function-ref name="get" scoped="" ref="0x7f5ce513a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce513a660"/>
        <function-ref name="set" scoped="" ref="0x7f5ce513a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce513a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f5ce5137020" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f5ce5137020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce51373a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5137530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce51376c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5137850"/>
        <function-ref name="get" scoped="" ref="0x7f5ce51379e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5137b70"/>
        <function-ref name="set" scoped="" ref="0x7f5ce5137d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5136020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f5ce512d5d0" loc="50:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f5ce512d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce512d950"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce512dae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce512dc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce512de00"/>
        <function-ref name="get" scoped="" ref="0x7f5ce512c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce512c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce512c340"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce512c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f5ce513ac10" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f5ce513ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce5139020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce51391b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce5139340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce51394d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce5139660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce51397f0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce5139980"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5139b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f5ce51362b0" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f5ce51362b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce5136630"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce51367c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce5136950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5136ae0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce5136c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5136e00"/>
        <function-ref name="set" scoped="" ref="0x7f5ce5135020"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce51351b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f5ce512c760" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f5ce512c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce512cae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce512cc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce512ce00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce512b020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce512b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce512b340"/>
        <function-ref name="set" scoped="" ref="0x7f5ce512b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce512b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce34e3c90" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce34e3c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce34e20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce34e2230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce34e23c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce34e2550"/>
        <function-ref name="get" scoped="" ref="0x7f5ce34e26e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce34e2870"/>
        <function-ref name="set" scoped="" ref="0x7f5ce34e2a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce34e2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce34e0e20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce34e0e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce34df1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce34df350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce34df4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce34df670"/>
        <function-ref name="get" scoped="" ref="0x7f5ce34df800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce34df990"/>
        <function-ref name="set" scoped="" ref="0x7f5ce34dfb20"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce34dfcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce34dc0a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce34dc0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce34dc420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce34dc5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce34dc740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce34dc8d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce34dca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce34dcbf0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce34dcd80"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce34db020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce34d93f0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce34d93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce34d9770"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce34d9900"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce34d9a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce34d9c20"/>
        <function-ref name="get" scoped="" ref="0x7f5ce34d9db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce34d7020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce34d71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce34d7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce34d56d0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce34d56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce34d5a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce34d5be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce34d5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce34d0020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce34d01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce34d0340"/>
        <function-ref name="set" scoped="" ref="0x7f5ce34d04d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce34d0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce34ce9b0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce34ce9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce34ced30"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce34cd020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce34cd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce34cd340"/>
        <function-ref name="get" scoped="" ref="0x7f5ce34cd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce34cd660"/>
        <function-ref name="set" scoped="" ref="0x7f5ce34cd7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce34cd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce34cbe20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce34cbe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce34ca1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce34ca350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce34ca4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce34ca670"/>
        <function-ref name="get" scoped="" ref="0x7f5ce34ca800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce34ca990"/>
        <function-ref name="set" scoped="" ref="0x7f5ce34cab20"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce34cacb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce34c70a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce34c70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce34c7420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce34c75b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce34c7740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce34c78d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce34c7a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce34c7bf0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce34c7d80"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce34c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f5ce511e020" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f5ce511e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce511e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce511e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce511e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce511e850"/>
        <function-ref name="get" scoped="" ref="0x7f5ce511e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce511eb70"/>
        <function-ref name="set" scoped="" ref="0x7f5ce511ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce511c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f5ce511a5d0" loc="49:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f5ce511a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce511a950"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce511aae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce511ac70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce511ae00"/>
        <function-ref name="get" scoped="" ref="0x7f5ce5119020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce51191b0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce5119340"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce51194d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f5ce5126d30" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f5ce5126d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce51250e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5125270"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce5125400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5125590"/>
        <function-ref name="get" scoped="" ref="0x7f5ce5125720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce51258b0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce5125a40"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5125bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f5ce511c2b0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f5ce511c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce511c630"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce511c7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce511c950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce511cae0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce511cc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce511ce00"/>
        <function-ref name="set" scoped="" ref="0x7f5ce511b020"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce511b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f5ce5119760" loc="50:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f5ce5119760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce5119ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5119c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce5119e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5118020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce51181b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5118340"/>
        <function-ref name="set" scoped="" ref="0x7f5ce51184d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5118660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f5ce5125e60" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f5ce5125e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce511f210"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce511f3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce511f530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce511f6c0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce511f850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce511f9e0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce511fb70"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce511fd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f5ce511b440" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f5ce511b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce511b7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce511b950"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce511bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce511bc70"/>
        <function-ref name="get" scoped="" ref="0x7f5ce511be00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce511a020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce511a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce511a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f5ce51188f0" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f5ce51188f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce5118c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5118e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce5117020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce51171b0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce5117340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce51174d0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce5117660"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce51177f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce3471c90" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce3471c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce34700a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce3470230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce34703c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce3470550"/>
        <function-ref name="get" scoped="" ref="0x7f5ce34706e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce3470870"/>
        <function-ref name="set" scoped="" ref="0x7f5ce3470a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce3470b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce346ee20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce346ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce346d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce346d350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce346d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce346d670"/>
        <function-ref name="get" scoped="" ref="0x7f5ce346d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce346d990"/>
        <function-ref name="set" scoped="" ref="0x7f5ce346db20"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce346dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce346a0a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce346a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce346a420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce346a5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce346a740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce346a8d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce346aa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce346abf0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce346ad80"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce3469020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce34673f0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce34673f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce3467770"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce3467900"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce3467a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce3467c20"/>
        <function-ref name="get" scoped="" ref="0x7f5ce3467db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce3465020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce34651b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce3465340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce34636d0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce34636d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce3463a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce3463be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce3463d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce3462020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce34621b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce3462340"/>
        <function-ref name="set" scoped="" ref="0x7f5ce34624d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce3462660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce34609b0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce34609b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce3460d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce345f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce345f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce345f340"/>
        <function-ref name="get" scoped="" ref="0x7f5ce345f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce345f660"/>
        <function-ref name="set" scoped="" ref="0x7f5ce345f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce345f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce345de20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce345de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce345c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce345c350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce345c4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce345c670"/>
        <function-ref name="get" scoped="" ref="0x7f5ce345c800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce345c990"/>
        <function-ref name="set" scoped="" ref="0x7f5ce345cb20"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce345ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce34590a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce34590a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce3459420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce34595b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce3459740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce34598d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce3459a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce3459bf0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce3459d80"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce3458020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f5ce5109440" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f5ce5109440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce51097c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5109950"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce5109ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5109c70"/>
        <function-ref name="get" scoped="" ref="0x7f5ce5109e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5108020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce51081b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5108340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f5ce51068f0" loc="49:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f5ce51068f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce5106c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5106e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce5105020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce51051b0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce5105340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce51054d0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce5105660"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce51057f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f5ce510b020" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f5ce510b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce510b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce510b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce510b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce510b850"/>
        <function-ref name="get" scoped="" ref="0x7f5ce510b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce510bb70"/>
        <function-ref name="set" scoped="" ref="0x7f5ce510bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce510a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f5ce51085d0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f5ce51085d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce5108950"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5108ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce5108c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5108e00"/>
        <function-ref name="get" scoped="" ref="0x7f5ce5107020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce51071b0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce5107340"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce51074d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f5ce5105a80" loc="50:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f5ce5105a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce5105e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce50ff020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce50ff1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce50ff340"/>
        <function-ref name="get" scoped="" ref="0x7f5ce50ff4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce50ff660"/>
        <function-ref name="set" scoped="" ref="0x7f5ce50ff7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce50ff980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f5ce510a2b0" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f5ce510a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce510a630"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce510a7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce510a950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce510aae0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce510ac70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce510ae00"/>
        <function-ref name="set" scoped="" ref="0x7f5ce5109020"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce51091b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f5ce5107760" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f5ce5107760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce5107ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5107c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce5107e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5106020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce51061b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5106340"/>
        <function-ref name="set" scoped="" ref="0x7f5ce51064d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5106660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f5ce50ffc10" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f5ce50ffc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce50fe020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce50fe1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce50fe340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce50fe4d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce50fe660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce50fe7f0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce50fe980"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce50feb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce3401c90" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce3401c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce34000a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce3400230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce34003c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce3400550"/>
        <function-ref name="get" scoped="" ref="0x7f5ce34006e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce3400870"/>
        <function-ref name="set" scoped="" ref="0x7f5ce3400a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce3400b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce33fee20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce33fee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce33fd1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce33fd350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce33fd4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce33fd670"/>
        <function-ref name="get" scoped="" ref="0x7f5ce33fd800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce33fd990"/>
        <function-ref name="set" scoped="" ref="0x7f5ce33fdb20"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce33fdcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce33fa0a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce33fa0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce33fa420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce33fa5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce33fa740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce33fa8d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce33faa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce33fabf0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce33fad80"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce33f9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce33f73f0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce33f73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce33f7770"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce33f7900"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce33f7a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce33f7c20"/>
        <function-ref name="get" scoped="" ref="0x7f5ce33f7db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce33f6020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce33f61b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce33f6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce33f46d0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce33f46d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce33f4a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce33f4be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce33f4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce33f2020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce33f21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce33f2340"/>
        <function-ref name="set" scoped="" ref="0x7f5ce33f24d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce33f2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce33f09b0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce33f09b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce33f0d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce33ef020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce33ef1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce33ef340"/>
        <function-ref name="get" scoped="" ref="0x7f5ce33ef4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce33ef660"/>
        <function-ref name="set" scoped="" ref="0x7f5ce33ef7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce33ef980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce33ede20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce33ede20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce33ec1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce33ec350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce33ec4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce33ec670"/>
        <function-ref name="get" scoped="" ref="0x7f5ce33ec800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce33ec990"/>
        <function-ref name="set" scoped="" ref="0x7f5ce33ecb20"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce33eccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce33e90a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce33e90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce33e9420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce33e95b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce33e9740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce33e98d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce33e9a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce33e9bf0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce33e9d80"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce33e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f5ce50f5760" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f5ce50f5760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce50f5ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce50f5c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce50f5e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce50ef020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce50ef1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce50ef340"/>
        <function-ref name="set" scoped="" ref="0x7f5ce50ef4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce50ef660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f5ce50edc10" loc="49:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f5ce50edc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce50ec020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce50ec1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce50ec340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce50ec4d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce50ec660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce50ec7f0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce50ec980"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce50ecb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f5ce50f73f0" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f5ce50f73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce50f7770"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce50f7900"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce50f7a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce50f7c20"/>
        <function-ref name="get" scoped="" ref="0x7f5ce50f7db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce50f6020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce50f61b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce50f6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f5ce50ef8f0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f5ce50ef8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce50efc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce50efe00"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce50ee020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce50ee1b0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce50ee340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce50ee4d0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce50ee660"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce50ee7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f5ce50ecda0" loc="50:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f5ce50ecda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce50eb180"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce50eb310"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce50eb4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce50eb630"/>
        <function-ref name="get" scoped="" ref="0x7f5ce50eb7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce50eb950"/>
        <function-ref name="set" scoped="" ref="0x7f5ce50ebae0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce50ebc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f5ce50f65d0" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f5ce50f65d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce50f6950"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce50f6ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce50f6c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce50f6e00"/>
        <function-ref name="get" scoped="" ref="0x7f5ce50f5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce50f51b0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce50f5340"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce50f54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f5ce50eea80" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f5ce50eea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce50eee00"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce50ed020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce50ed1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce50ed340"/>
        <function-ref name="get" scoped="" ref="0x7f5ce50ed4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce50ed660"/>
        <function-ref name="set" scoped="" ref="0x7f5ce50ed7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce50ed980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f5ce50ea020" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f5ce50ea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce50ea3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce50ea530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce50ea6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce50ea850"/>
        <function-ref name="get" scoped="" ref="0x7f5ce50ea9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce50eab70"/>
        <function-ref name="set" scoped="" ref="0x7f5ce50ead00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce50e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce3393c90" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce3393c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce33920a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce3392230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce33923c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce3392550"/>
        <function-ref name="get" scoped="" ref="0x7f5ce33926e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce3392870"/>
        <function-ref name="set" scoped="" ref="0x7f5ce3392a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce3392b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce3390e20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce3390e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce338f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce338f350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce338f4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce338f670"/>
        <function-ref name="get" scoped="" ref="0x7f5ce338f800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce338f990"/>
        <function-ref name="set" scoped="" ref="0x7f5ce338fb20"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce338fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce338c0a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce338c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce338c420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce338c5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce338c740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce338c8d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce338ca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce338cbf0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce338cd80"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce338b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce33893f0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce33893f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce3389770"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce3389900"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce3389a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce3389c20"/>
        <function-ref name="get" scoped="" ref="0x7f5ce3389db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce3388020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce33881b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce3388340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce33866d0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce33866d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce3386a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce3386be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce3386d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce3384020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce33841b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce3384340"/>
        <function-ref name="set" scoped="" ref="0x7f5ce33844d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce3384660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce33829b0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce33829b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce3382d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce3381020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce33811b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce3381340"/>
        <function-ref name="get" scoped="" ref="0x7f5ce33814d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce3381660"/>
        <function-ref name="set" scoped="" ref="0x7f5ce33817f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce3381980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce337fe20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce337fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce337e1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce337e350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce337e4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce337e670"/>
        <function-ref name="get" scoped="" ref="0x7f5ce337e800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce337e990"/>
        <function-ref name="set" scoped="" ref="0x7f5ce337eb20"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce337ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce337b0a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce337b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce337b420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce337b5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce337b740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce337b8d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce337ba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce337bbf0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce337bd80"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce337a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce50dda20" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce50dda20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce50ddda0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce50bc020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce50bc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce50bc340"/>
        <function-ref name="get" scoped="" ref="0x7f5ce50bc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce50bc660"/>
        <function-ref name="set" scoped="" ref="0x7f5ce50bc7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce50bc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce50b86d0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce50b86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce50b8a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce50b8be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce50b8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce50b7020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce50b71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce50b7340"/>
        <function-ref name="set" scoped="" ref="0x7f5ce50b74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce50b7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce50ad160" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce50ad160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce50ad4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce50ad670"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce50ad800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce50ad990"/>
        <function-ref name="get" scoped="" ref="0x7f5ce50adb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce50adcb0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce50ade40"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce50ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce50a8c90" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce50a8c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce50a70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce50a7230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce50a73c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce50a7550"/>
        <function-ref name="get" scoped="" ref="0x7f5ce50a76e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce50a7870"/>
        <function-ref name="set" scoped="" ref="0x7f5ce50a7a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce50a7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce509e6d0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce509e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce509ea50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce509ebe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce509ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce509d020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce509d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce509d340"/>
        <function-ref name="set" scoped="" ref="0x7f5ce509d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce509d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce5098160" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce5098160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce50984e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5098670"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce5098800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5098990"/>
        <function-ref name="get" scoped="" ref="0x7f5ce5098b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5098cb0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce5098e40"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5097020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce508ec90" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce508ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce508d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce508d230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce508d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce508d550"/>
        <function-ref name="get" scoped="" ref="0x7f5ce508d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce508d870"/>
        <function-ref name="set" scoped="" ref="0x7f5ce508da00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce508db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce50896d0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce50896d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce5089a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5089be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce5089d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5088020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce50881b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5088340"/>
        <function-ref name="set" scoped="" ref="0x7f5ce50884d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5088660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce507e160" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce507e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce507e4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce507e670"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce507e800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce507e990"/>
        <function-ref name="get" scoped="" ref="0x7f5ce507eb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce507ecb0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce507ee40"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce507d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce5079c90" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce5079c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce50780a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5078230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce50783c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5078550"/>
        <function-ref name="get" scoped="" ref="0x7f5ce50786e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5078870"/>
        <function-ref name="set" scoped="" ref="0x7f5ce5078a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5078b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce506f6d0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce506f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce506fa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce506fbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce506fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce506e020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce506e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce506e340"/>
        <function-ref name="set" scoped="" ref="0x7f5ce506e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce506e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce5069160" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce5069160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce50694e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce5069670"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce5069800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce5069990"/>
        <function-ref name="get" scoped="" ref="0x7f5ce5069b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce5069cb0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce5069e40"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce5068020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce5060c90" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce5060c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce505f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce505f230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce505f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce505f550"/>
        <function-ref name="get" scoped="" ref="0x7f5ce505f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce505f870"/>
        <function-ref name="set" scoped="" ref="0x7f5ce505fa00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce505fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5ce505b6d0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5ce505b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce505ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce505bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce505bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce505a020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce505a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce505a340"/>
        <function-ref name="set" scoped="" ref="0x7f5ce505a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce505a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ce4fff020" loc="61:/usr/bin/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5ce4fff020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f5ce5507d40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f5ce5507d40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce4fff3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f5ce4fff690" loc="62:/usr/bin/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f5ce4fff690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f5ce4fffa10"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f5ce4fffba0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f5ce4fffd30"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f5ce4ffe020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f5ce4ffe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f5ce4fd2720" loc="60:/usr/bin/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ce4fd2720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce4fd2aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f5ce529ddc0" loc="57:/usr/bin/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f5ce529ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f5ce4fd3180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f5ce4fd2020" loc="59:/usr/bin/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f5ce4fd2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce4fd23a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f5ce4fd3470" loc="58:/usr/bin/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f5ce4fd3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce4fd37f0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f5ce4fd3980"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f5ce4fd3b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f5ce54b7e10" loc="48:/usr/bin/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f5ce54b7e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ce54c81c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ce54c8350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f5ce5546020" loc="47:/usr/bin/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f5ce5546020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce55463a0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f5ce5546530"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f5ce55466c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f5ce53ca850" loc="56:/usr/bin/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f5ce53ca850"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ce53cabd0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ce53cad60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f5ce53c9dd0" loc="57:/usr/bin/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f5ce53c9dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f5ce53c8180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f5ce53cb8a0" loc="55:/usr/bin/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f5ce53cb8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce53cbc20"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f5ce53cbdb0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f5ce53ca020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f5ce53a5690" loc="88:/usr/bin/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f5ce53a5690"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f5ce53a5a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f5ce54c6a30" loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f5ce54c6a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f5ce54c6db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f5ce53a8020" loc="85:/usr/bin/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f5ce53a8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f5ce53a83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f5ce52a2c30" loc="46:/usr/bin/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f5ce52a2c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5ce4fbf020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5ce4fbf1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f5ce4fbf340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5ce4fbf4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5ce4fbf660"/>
        <function-ref name="get" scoped="" ref="0x7f5ce4fbf7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5ce4fbf980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5ce4fbe020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4fbfb10"/>
        <function-ref name="led0On" scoped="" ref="0x7f5ce4fbfca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f5ce4fbfe30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f5ce4fb6d20" loc="50:/usr/bin/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f5ce4fb6d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce4fb50e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce4fb5270"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce4fb5400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce4fb5590"/>
        <function-ref name="get" scoped="" ref="0x7f5ce4fb5720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce4fb58b0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4fb5a40"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce4fb5bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ce4fb7020" loc="46:/usr/bin/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5ce4fb7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce4fb73a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f5ce4fb4020" loc="51:/usr/bin/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f5ce4fb4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce4fb43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce4fb4530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce4fb46c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce4fb4850"/>
        <function-ref name="get" scoped="" ref="0x7f5ce4fb49e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce4fb4b70"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4fb4d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce4fb3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f5ce4fb7620" loc="47:/usr/bin/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f5ce4fb7620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5ce4fb79a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5ce4fb7b30"/>
        <function-ref name="led1On" scoped="" ref="0x7f5ce4fb7cc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5ce4fb7e50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5ce4fb6020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce4fb61b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5ce4fb6340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5ce4fb6980"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4fb64d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f5ce4fb6660"/>
        <function-ref name="led2On" scoped="" ref="0x7f5ce4fb67f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f5ce4fb3340" loc="52:/usr/bin/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f5ce4fb3340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce4fb36c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce4fb3850"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce4fb39e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce4fb3b70"/>
        <function-ref name="get" scoped="" ref="0x7f5ce4fb3d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce4fb1020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4fb11b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce4fb1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f5ce4fb89e0" loc="44:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f5ce4fb89e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce4fb8d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce4f90020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce4f901b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce4f90340"/>
        <function-ref name="get" scoped="" ref="0x7f5ce4f904d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce4f90660"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4f907f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce4f90980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f5ce4f90ce0" loc="45:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f5ce4f90ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce4f8f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce4f8f230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce4f8f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce4f8f550"/>
        <function-ref name="get" scoped="" ref="0x7f5ce4f8f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce4f8f870"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4f8fa00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce4f8fb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f5ce4f8d2e0" loc="47:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5ce4f8d2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce4f8d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f5ce4f8e020" loc="46:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f5ce4f8e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce4f8e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce4f8e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce4f8e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce4f8e850"/>
        <function-ref name="get" scoped="" ref="0x7f5ce4f8e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce4f8eb70"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4f8ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce4f8d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5ce4f85b50" loc="41:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f5ce4f85b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5ce4f82020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5ce4f821b0"/>
        <function-ref name="start" scoped="" ref="0x7f5ce4f82340"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce4f824d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f5ce4f7d2e0" loc="46:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f5ce4f7d2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f5ce4f7d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ce4f6eae0" loc="48:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5ce4f6eae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4f6ee60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce4f79020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce4f791b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce4f79340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce4f794d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5ce4f82ca0" loc="43:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5ce4f82ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce4f800a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce4f80230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce4f803c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce4f80550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce4f806e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f5ce4f7fc00" loc="45:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f5ce4f7fc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce4f7e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f5ce4f587e0" loc="52:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f5ce4f587e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f5ce4f58b60"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f5ce4f58cf0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f5ce4f58e80"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f5ce4f55030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ce4f7f020" loc="44:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5ce4f7f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce4f7f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f5ce4f52e00" loc="51:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ce4f52e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5ce4f581c0"/>
        <function-ref name="noAck" scoped="" ref="0x7f5ce4f58350"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5ce4f584e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f5ce4f46b40" loc="53:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f5ce4f46b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f5ce4f50020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f5ce4f501b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f5ce4f50340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f5ce4f504d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f5ce4f50660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5ce4f57af0" loc="49:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5ce4f57af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce4f57e70"/>
        <function-ref name="source" scoped="" ref="0x7f5ce4f77030"/>
        <function-ref name="address" scoped="" ref="0x7f5ce4f771c0"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce4f77350"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce4f774e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce4f77670"/>
        <function-ref name="type" scoped="" ref="0x7f5ce4f77800"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce4f77990"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce4f77b20"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce4f77cb0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ce4f77e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f5ce4f428e0" loc="54:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f5ce4f428e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f5ce4f42c60"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5ce4f42df0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5ce4f4f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x7f5ce4f369e0" loc="56:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7f5ce4f369e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5ce5425180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5ce4f41020"/>
        <function-ref name="clear" scoped="" ref="0x7f5ce4f41750"/>
        <function-ref name="isValid" scoped="" ref="0x7f5ce4f44890"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4f41e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f5ce4f35af0" loc="57:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5ce4f35af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5ce4f33210"/>
        <function-ref name="clear" scoped="" ref="0x7f5ce4f33940"/>
        <function-ref name="isValid" scoped="" ref="0x7f5ce4f34a80"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4f31090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5ce4f2e300" loc="45:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f5ce4f2e300"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5ce4f2e680"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5ce4f2e810"/>
        <function-ref name="start" scoped="" ref="0x7f5ce4f2e9a0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce4f2eb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f5ce4f113b0" loc="66:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f5ce4f113b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4f10ac0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce4f10570"/>
        <function-ref name="isSet" scoped="" ref="0x7f5ce4f10020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4f0e090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f5ce4f02270" loc="71:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5ce4f02270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5ce4f01800"/>
        <function-ref name="clear" scoped="" ref="0x7f5ce4f00020"/>
        <function-ref name="isValid" scoped="" ref="0x7f5ce4f010d0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4f00750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f5ce4f27d60" loc="50:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f5ce4f27d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f5ce4f26180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ce4f25cd0" loc="56:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5ce4f25cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4f240a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce4f24230"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce4f243c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce4f24550"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce4f246e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5ce4f2d320" loc="47:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5ce4f2d320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce4f2d6a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce4f2d830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce4f2d9c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce4f2db50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce4f2dce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f5ce4f271d0" loc="49:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f5ce4f271d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce4f27550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f5ce4f15e80" loc="65:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f5ce4f15e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4f135e0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce4f13090"/>
        <function-ref name="isSet" scoped="" ref="0x7f5ce4f14ad0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4f13b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f5ce4f22b40" loc="60:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f5ce4f22b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f5ce4f21020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f5ce4f211b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f5ce4f21340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f5ce4f214d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ce4f29510" loc="48:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5ce4f29510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce4f29890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f5ce4f08130" loc="70:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f5ce4f08130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5ce5337d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5ce4f05750"/>
        <function-ref name="clear" scoped="" ref="0x7f5ce4f05e80"/>
        <function-ref name="isValid" scoped="" ref="0x7f5ce4f05020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4f045d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f5ce4f07b50" loc="69:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5ce4f07b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5ce5337d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce4f0a7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f5ce4f168d0" loc="64:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f5ce4f168d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4f15090"/>
        <function-ref name="get" scoped="" ref="0x7f5ce4f1eaf0"/>
        <function-ref name="isSet" scoped="" ref="0x7f5ce4f1e5a0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4f155e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f5ce4f221a0" loc="59:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ce4f221a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5ce4f22520"/>
        <function-ref name="noAck" scoped="" ref="0x7f5ce4f226b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5ce4f22840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f5ce4f26a50" loc="53:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f5ce4f26a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce4f26dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f5ce4f21790" loc="61:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f5ce4f21790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f5ce4f21b10"/>
        <function-ref name="setRetries" scoped="" ref="0x7f5ce4f21ca0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f5ce4f21e30"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f5ce4f20020"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f5ce4f201b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5ce4f24990" loc="57:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5ce4f24990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce4f24d10"/>
        <function-ref name="source" scoped="" ref="0x7f5ce4f23020"/>
        <function-ref name="address" scoped="" ref="0x7f5ce4f231b0"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce4f23340"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce4f234d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce4f23660"/>
        <function-ref name="type" scoped="" ref="0x7f5ce4f237f0"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce4f23980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce4f23b10"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce4f23ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ce4f23e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f5ce4f20480" loc="62:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f5ce4f20480"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f5ce4f20900"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5ce4f20a90"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5ce4f20c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f5ce4f09e60" loc="67:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5ce4f09e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f5ce4f0d210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f5ce4f256c0" loc="54:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f5ce4f256c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce4f25a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5ce4efecf0" loc="41:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f5ce4efecf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5ce4ef90a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5ce4ef9230"/>
        <function-ref name="start" scoped="" ref="0x7f5ce4ef93c0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce4ef9550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f5ce4ec8020" loc="80:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f5ce4ec8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4ec7740"/>
        <function-ref name="get" scoped="" ref="0x7f5ce4ec71f0"/>
        <function-ref name="isSet" scoped="" ref="0x7f5ce4ec8c50"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4ec7c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x7f5ce4eee1a0" loc="60:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x7f5ce4eee1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f5ce4eee520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x7f5ce4ee52c0" loc="62:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x7f5ce4ee52c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ce4ee5740"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ce4ee58d0"/>
        <function-ref name="request" scoped="" ref="0x7f5ce4ee5a60"/>
        <function-ref name="granted" scoped="" ref="0x7f5ce4ee5bf0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ce4ee5d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f5ce4ef6830" loc="47:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f5ce4ef6830"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f5ce4ef6bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5ce4ef9d20" loc="44:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5ce4ef9d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce4ef80e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce4ef8270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce4ef8400"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce4ef8590"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce4ef8720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f5ce4ef7c00" loc="46:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f5ce4ef7c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce4ef6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f5ce4ed4490" loc="64:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f5ce4ed4490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f5ce4ed4810"/>
        <function-ref name="address" scoped="" ref="0x7f5ce4ed49a0"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce4ed4b30"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce4ed4cc0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce4ed4e50"/>
        <function-ref name="pan" scoped="" ref="0x7f5ce4edf020"/>
        <function-ref name="setPan" scoped="" ref="0x7f5ce4edf1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce4edf340"/>
        <function-ref name="localPan" scoped="" ref="0x7f5ce4edf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x7f5ce4edf890" loc="65:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7f5ce4edf890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4edfc10"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce4edfda0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce4ede020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce4ede1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce4ede340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f5ce4ecea90" loc="79:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f5ce4ecea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4ec91f0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce4ecdc40"/>
        <function-ref name="isSet" scoped="" ref="0x7f5ce4ecd6f0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4ec9740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f5ce4ed3080" loc="69:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f5ce4ed3080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f5ce4ed3400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f5ce4ed3590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f5ce4ed3720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f5ce4ed38b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x7f5ce4ef1140" loc="54:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f5ce4ef1140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4ef14c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce4ef1650"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce4ef17e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce4ef1970"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce4ef1b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ce4ef7020" loc="45:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5ce4ef7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce4ef73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f5ce4ec3130" loc="84:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f5ce4ec3130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5ce5337d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5ce4ec18a0"/>
        <function-ref name="clear" scoped="" ref="0x7f5ce4ec0020"/>
        <function-ref name="isValid" scoped="" ref="0x7f5ce4ec1170"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4ec0750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f5ce4ec5bb0" loc="83:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5ce4ec5bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5ce5337d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce4ec4820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f5ce4ed1540" loc="78:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f5ce4ed1540"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4ed0c50"/>
        <function-ref name="get" scoped="" ref="0x7f5ce4ed0700"/>
        <function-ref name="isSet" scoped="" ref="0x7f5ce4ed01b0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4ece1f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f5ce4ede670" loc="68:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ce4ede670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5ce4ede9f0"/>
        <function-ref name="noAck" scoped="" ref="0x7f5ce4edeb80"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5ce4eded10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f5ce4ee6c90" loc="58:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f5ce4ee6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce4eef0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce4eef230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce4eef3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce4eef550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce4eef6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f5ce4ef44d0" loc="50:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f5ce4ef44d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce4ef4850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f5ce4ed3b70" loc="70:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f5ce4ed3b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f5ce4ed2020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f5ce4ed21b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f5ce4ed2340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f5ce4ed24d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f5ce4ed2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f5ce4ed2930" loc="76:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f5ce4ed2930"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f5ce4ed2cb0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5ce4ed2e40"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5ce4ed1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5ce4ef3800" loc="53:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5ce4ef3800"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce4ef3b80"/>
        <function-ref name="source" scoped="" ref="0x7f5ce4ef3d10"/>
        <function-ref name="address" scoped="" ref="0x7f5ce4ef2020"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce4ef21b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce4ef2340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce4ef24d0"/>
        <function-ref name="type" scoped="" ref="0x7f5ce4ef2660"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce4ef27f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce4ef2980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce4ef2b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ce4ef2ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f5ce4ebf3f0" loc="85:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5ce4ebf3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5ce4ebd970"/>
        <function-ref name="clear" scoped="" ref="0x7f5ce4eba0d0"/>
        <function-ref name="isValid" scoped="" ref="0x7f5ce4ebd240"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4eba800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f5ce4eefa50" loc="59:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f5ce4eefa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce4eefdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f5ce4ec5350" loc="81:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5ce4ec5350"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f5ce4ec56d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f5ce4ef31d0" loc="51:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f5ce4ef31d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce4ef3550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x7f5ce4e90a40" loc="51:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x7f5ce4e90a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f5ce4e90dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x7f5ce4e9dc80" loc="47:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x7f5ce4e9dc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x7f5ce4ea40a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x7f5ce4e87e30" loc="50:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7f5ce4e87e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce4e951e0"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f5ce4e95370"/>
        <function-ref name="source" scoped="" ref="0x7f5ce4e95500"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce4e95690"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce4e95820"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce4e959b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce4e95b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x7f5ce4e918e0" loc="49:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x7f5ce4e918e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x7f5ce4e91c60"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x7f5ce4e91df0"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x7f5ce4e99020"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x7f5ce4e991b0"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x7f5ce4e99340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f5ce4e628d0" loc="61:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f5ce4e628d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ce4e62c50"/>
        <function-ref name="wait" scoped="" ref="0x7f5ce4e62de0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce4e67020"/>
        <function-ref name="isFree" scoped="" ref="0x7f5ce4e671b0"/>
        <function-ref name="getNow" scoped="" ref="0x7f5ce4e67340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x7f5ce4e66020" loc="62:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x7f5ce4e66020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4e663a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce4e66530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce4e666c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce4e66850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5ce4e669e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5ce4e66b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f5ce4e60160" loc="64:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f5ce4e60160"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5ce5337d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5ce4e597c0"/>
        <function-ref name="clear" scoped="" ref="0x7f5ce4e57020"/>
        <function-ref name="isValid" scoped="" ref="0x7f5ce4e59090"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4e57750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x7f5ce4eb0350" loc="43:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x7f5ce4eb0350"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce4eb06d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5ce4eb0860"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5ce4eb09f0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f5ce4eb0b80"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f5ce4eb0d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x7f5ce4e9e640" loc="46:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x7f5ce4e9e640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x7f5ce4e9e9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x7f5ce4ea5550" loc="44:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7f5ce4ea5550"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7f5ce4ea58d0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7f5ce4ea5a60"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f5ce4ea5bf0"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7f5ce4ea5d80"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7f5ce4eb5020"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7f5ce4eb51b0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f5ce4eb5340"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f5ce4eb54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7f5ce4e69880" loc="60:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f5ce4e69880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f5ce4e69c00"/>
        <function-ref name="getDSN" scoped="" ref="0x7f5ce4e69d90"/>
        <function-ref name="setFCF" scoped="" ref="0x7f5ce4e85020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f5ce4e851b0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f5ce4e85340"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f5ce4e854d0"/>
        <function-ref name="setDSN" scoped="" ref="0x7f5ce4e85660"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f5ce4e857f0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f5ce4e85980"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f5ce4e85b10"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f5ce4e85ca0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f5ce4e85e30"/>
        <function-ref name="localAddr" scoped="" ref="0x7f5ce4e84020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f5ce4e842b0"/>
        <function-ref name="localPan" scoped="" ref="0x7f5ce4e84440"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f5ce4e845d0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f5ce4e84760"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f5ce4e848f0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f5ce4e84a80"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce4e84c10"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f5ce4e84da0"/>
        <function-ref name="getFCF" scoped="" ref="0x7f5ce4e68020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f5ce4e681b0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f5ce4e68340"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f5ce4e684d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x7f5ce4ea09c0" loc="45:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7f5ce4ea09c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f5ce4ea0d40"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f5ce4eaf020"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f5ce4eaf1b0"/>
        <function-ref name="getSender" scoped="" ref="0x7f5ce4eaf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x7f5ce4e96340" loc="48:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7f5ce4e96340"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f5ce4e966c0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f5ce4e96850"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f5ce4e969e0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f5ce4e96b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7f5ce4df7ba0" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f5ce4df7ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ce4dc5020"/>
        <function-ref name="wait" scoped="" ref="0x7f5ce4dc51b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce4dc5340"/>
        <function-ref name="isFree" scoped="" ref="0x7f5ce4dc54d0"/>
        <function-ref name="getNow" scoped="" ref="0x7f5ce4dc5660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f5ce4dc5cd0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f5ce4dc5cd0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f5ce5507d40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f5ce5507d40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5ce5337d20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f5ce5336180"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ce4db6670"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce4db7550"/>
        <function-ref name="startAt" scoped="" ref="0x7f5ce4db6020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ce4db7a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5ce4db6b30"/>
        <function-ref name="start" scoped="" ref="0x7f5ce4db8b60"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce4db7090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7f5ce326b020" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f5ce326b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ce326b3c0"/>
        <function-ref name="wait" scoped="" ref="0x7f5ce326b550"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce326b6e0"/>
        <function-ref name="isFree" scoped="" ref="0x7f5ce326b870"/>
        <function-ref name="getNow" scoped="" ref="0x7f5ce326ba00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f5ce326a020" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f5ce326a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5ce5337d20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f5ce5336180"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ce3267870"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce3269840"/>
        <function-ref name="startAt" scoped="" ref="0x7f5ce3267220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ce3269d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5ce3267d30"/>
        <function-ref name="start" scoped="" ref="0x7f5ce326ae30"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3269380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f5ce3266150" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f5ce3266150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f5ce32664d0"/>
        <function-ref name="suspend" scoped="" ref="0x7f5ce3266660"/>
        <function-ref name="resume" scoped="" ref="0x7f5ce32667f0"/>
        <function-ref name="run" scoped="" ref="0x7f5ce3266980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x7f5ce4dc7be0" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f5ce4dc7be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f5ce4dc4020"/>
        <function-ref name="suspend" scoped="" ref="0x7f5ce4dc41b0"/>
        <function-ref name="resume" scoped="" ref="0x7f5ce4dc4340"/>
        <function-ref name="run" scoped="" ref="0x7f5ce4dc44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5ce4cca8f0" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f5ce4cca8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce4ccac70"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce4ccae00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce4cc9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5ce4cc92b0" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f5ce4cc92b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce4cc9630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f5ce4ccd420" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f5ce4ccd420"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f5ce4ccd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ce4cd78b0" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5ce4cd78b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4cd7c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce4cd7dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce4cd6020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce4cd61b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce4cd6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5ce4cd66c0" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5ce4cd66c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce4cd6a60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce4cd6bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce4cd6d80"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce4cd5020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce4cd51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f5ce4cd5c90" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f5ce4cd5c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce4ccd0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f5ce4ccba70" loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f5ce4ccba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4ccbdf0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce4cca020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce4cca1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce4cca340"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5ce4cca4d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5ce4cca660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f5ce4cc98c0" loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f5ce4cc98c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce4cc9c40"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f5ce4cc9dd0"/>
        <function-ref name="source" scoped="" ref="0x7f5ce4cc8020"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce4cc81b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce4cc8340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce4cc84d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce4cc8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ce4cd5530" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5ce4cd5530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce4cd58d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f5ce4ccdb80" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f5ce4ccdb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce4ccb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5ce4cd8280" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5ce4cd8280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce4cd8600"/>
        <function-ref name="source" scoped="" ref="0x7f5ce4cd8790"/>
        <function-ref name="address" scoped="" ref="0x7f5ce4cd8920"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce4cd8ab0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce4cd8c40"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce4cd8dd0"/>
        <function-ref name="type" scoped="" ref="0x7f5ce4cd7020"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce4cd71b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce4cd7340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce4cd74d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ce4cd7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f5ce4ccb3e0" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f5ce4ccb3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce4ccb780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5ce32465d0" loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f5ce32465d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce3246950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5ce3247c20" loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f5ce3247c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce3246020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce32461b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce3246340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f5ce324a740" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f5ce324a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f5ce324aae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ce324dbd0" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5ce324dbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce324c020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce324c1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce324c340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce324c4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce324c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5ce324c9e0" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5ce324c9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce324cd80"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce324b020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce324b1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce324b340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce324b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f5ce324a020" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f5ce324a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce324a3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f5ce324f6a0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f5ce324f6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce324fa20"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce324fbb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce324fd40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce324e020"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5ce324e1b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5ce324e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f5ce3246be0" loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f5ce3246be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce32450a0"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f5ce3245230"/>
        <function-ref name="source" scoped="" ref="0x7f5ce32453c0"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce3245550"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce32456e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce3245870"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce3245a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f5ce3245c50" loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5ce3245c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f5ce3244020"/>
        <function-ref name="changed" scoped="" ref="0x7f5ce32441b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f5ce3244340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f5ce32444d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f5ce3249e10" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f5ce3249e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce32471c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce3247350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce32474e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce3247670"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5ce3247800"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5ce3247990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ce324b850" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5ce324b850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce324bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f5ce3249020" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f5ce3249020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce32493c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5ce324e590" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5ce324e590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce324e910"/>
        <function-ref name="source" scoped="" ref="0x7f5ce324eaa0"/>
        <function-ref name="address" scoped="" ref="0x7f5ce324ec30"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce324edc0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce324d020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce324d1b0"/>
        <function-ref name="type" scoped="" ref="0x7f5ce324d340"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce324d4d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce324d660"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce324d7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ce324d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f5ce3249780" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f5ce3249780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce3249b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f5ce4cf65a0" loc="54:/usr/bin/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5ce4cf65a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f5ce4cf6920"/>
        <function-ref name="changed" scoped="" ref="0x7f5ce4cf6ab0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f5ce4cf6c40"/>
        <function-ref name="setAddress" scoped="" ref="0x7f5ce4cf6dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5ce4cac020" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f5ce4cac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce4cac3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce4cac530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce4cac6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f5ce4cac910" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f5ce4cac910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ce4cacc90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ce4cace20"/>
        <function-ref name="request" scoped="" ref="0x7f5ce4cab020"/>
        <function-ref name="granted" scoped="" ref="0x7f5ce4cab1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ce4cab340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f5ce4cc1550" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f5ce4cc1550"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce4cc18d0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce4cc1a60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce4cc1bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5ce4c21150" loc="86:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5ce4c21150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5ce4c214f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5ce4c21680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5ce4c201f0" loc="89:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5ce4c201f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5ce4c20590"/>
        <function-ref name="configure" scoped="" ref="0x7f5ce4c20720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5ce4c22390" loc="85:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f5ce4c22390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ce4c22730"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ce4c228c0"/>
        <function-ref name="request" scoped="" ref="0x7f5ce4c22a50"/>
        <function-ref name="granted" scoped="" ref="0x7f5ce4c22be0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ce4c22d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5ce4c218d0" loc="87:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5ce4c218d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5ce4c21c50"/>
        <function-ref name="userId" scoped="" ref="0x7f5ce4c21de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ce31ddb40" loc="44:/usr/bin/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5ce31ddb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce31dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f5ce31dc2b0" loc="45:/usr/bin/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f5ce31dc2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f5ce31dc630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f5ce31dc7c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f5ce31dc950"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5ce31dcae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5ce31d9020" loc="52:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5ce31d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5ce31d93c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5ce31d9550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5ce31d70d0" loc="56:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5ce31d70d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5ce31d7470"/>
        <function-ref name="configure" scoped="" ref="0x7f5ce31d7600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f5ce31d7890" loc="57:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f5ce31d7890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f5ce31d7c10"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f5ce31d7da0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f5ce31d6020"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5ce31d61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5ce31da210" loc="51:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f5ce31da210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ce31da5b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ce31da740"/>
        <function-ref name="request" scoped="" ref="0x7f5ce31da8d0"/>
        <function-ref name="granted" scoped="" ref="0x7f5ce31daa60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ce31dabf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5ce31d97a0" loc="53:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5ce31d97a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5ce31d9b20"/>
        <function-ref name="userId" scoped="" ref="0x7f5ce31d9cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f5ce31d6480" loc="69:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f5ce31d6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ce31d6800"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ce31d6990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5ce4bd92b0" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f5ce4bd92b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce4bd9630"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce4bd97c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce4bd9950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5ce4bd9be0" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f5ce4bd9be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce4bd8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f5ce4bded30" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f5ce4bded30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f5ce4bdd0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ce4c1ce00" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5ce4c1ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4bdf1c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce4bdf350"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce4bdf4e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce4bdf670"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce4bdf800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7f5ce4bda470" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f5ce4bda470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4bda7f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce4bda980"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce4bdab10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce4bdaca0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5ce4bdae30"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5ce4bd9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7f5ce4bdd390" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f5ce4bdd390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f5ce4bdd710"/>
        <function-ref name="getDSN" scoped="" ref="0x7f5ce4bdd8a0"/>
        <function-ref name="setFCF" scoped="" ref="0x7f5ce4bdda30"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f5ce4bddbc0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f5ce4bddd50"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f5ce4bdc020"/>
        <function-ref name="setDSN" scoped="" ref="0x7f5ce4bdc1b0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f5ce4bdc340"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f5ce4bdc4d0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f5ce4bdc660"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f5ce4bdc7f0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f5ce4bdc980"/>
        <function-ref name="localAddr" scoped="" ref="0x7f5ce4bdcb10"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f5ce4bdcda0"/>
        <function-ref name="localPan" scoped="" ref="0x7f5ce4bdb020"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f5ce4bdb1b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f5ce4bdb340"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f5ce4bdb4d0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f5ce4bdb660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce4bdb7f0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f5ce4bdb980"/>
        <function-ref name="getFCF" scoped="" ref="0x7f5ce4bdbb10"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f5ce4bdbca0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f5ce4bdbe30"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f5ce4bda020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f5ce4bdfa50" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f5ce4bdfa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce4bdfdd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce4bde020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce4bde1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce4bde340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce4bde4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f5ce4bde760" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f5ce4bde760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce4bdeae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5ce4b8dc40" loc="69:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f5ce4b8dc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce4b8c020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce4b8c1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce4b8c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5ce4b8c5d0" loc="70:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f5ce4b8c5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce4b8c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f5ce4b90020" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f5ce4b90020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4b903a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce4b90530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce4b906c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce4b90850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5ce4b909e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5ce4b90b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x7f5ce4b8f770" loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x7f5ce4b8f770"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce4b8faf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f5ce4b8cbe0" loc="71:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f5ce4b8cbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4b8b020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce4b8b1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce4b8b340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce4b8b4d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5ce4b8b660"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5ce4b8b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x7f5ce4b90e00" loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x7f5ce4b90e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce4b8f1c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce4b8f350"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce4b8f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f5ce4b910a0" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f5ce4b910a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce4b91420"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce4b915b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce4b91740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f5ce4b919d0" loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f5ce4b919d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce4b91d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x7f5ce4b8fd80" loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x7f5ce4b8fd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4b8d180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce4b8d310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce4b8d4a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce4b8d630"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5ce4b8d7c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5ce4b8d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f5ce4ad8c40" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f5ce4ad8c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f5ce4ad7020"/>
        <function-ref name="address" scoped="" ref="0x7f5ce4ad71b0"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce4ad7340"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce4ad74d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce4ad7660"/>
        <function-ref name="pan" scoped="" ref="0x7f5ce4ad77f0"/>
        <function-ref name="setPan" scoped="" ref="0x7f5ce4ad7980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce4ad7b10"/>
        <function-ref name="localPan" scoped="" ref="0x7f5ce4ad7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f5ce4ad6020" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f5ce4ad6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4ad63a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce4ad6530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce4ad66c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce4ad6850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5ce4ad69e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5ce4ad6b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7f5ce4adeb20" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f5ce4adeb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f5ce4add020"/>
        <function-ref name="getDSN" scoped="" ref="0x7f5ce4add1b0"/>
        <function-ref name="setFCF" scoped="" ref="0x7f5ce4add340"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f5ce4add4d0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f5ce4add660"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f5ce4add7f0"/>
        <function-ref name="setDSN" scoped="" ref="0x7f5ce4add980"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f5ce4addb10"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f5ce4addca0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f5ce4adde30"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f5ce4ad9020"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f5ce4ad91b0"/>
        <function-ref name="localAddr" scoped="" ref="0x7f5ce4ad9340"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f5ce4ad95d0"/>
        <function-ref name="localPan" scoped="" ref="0x7f5ce4ad9760"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f5ce4ad98f0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f5ce4ad9a80"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f5ce4ad9c10"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f5ce4ad9da0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce4ad8020"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f5ce4ad81b0"/>
        <function-ref name="getFCF" scoped="" ref="0x7f5ce4ad8340"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f5ce4ad84d0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f5ce4ad8660"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f5ce4ad87f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f5ce4ad6e60" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f5ce4ad6e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4ad4210"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce4ad43a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce4ad4530"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce4ad46c0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5ce4ad4850"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5ce4ad49e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f5ce31672e0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f5ce31672e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f5ce3167660"/>
        <function-ref name="address" scoped="" ref="0x7f5ce31677f0"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce3167980"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce3167b10"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce3167ca0"/>
        <function-ref name="pan" scoped="" ref="0x7f5ce3167e30"/>
        <function-ref name="setPan" scoped="" ref="0x7f5ce3166020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce31661b0"/>
        <function-ref name="localPan" scoped="" ref="0x7f5ce3166340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f5ce3166590" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f5ce3166590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce3166910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce3166aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce3166c30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce3166dc0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5ce3165020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5ce31651b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7f5ce316b100" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f5ce316b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f5ce316b480"/>
        <function-ref name="getDSN" scoped="" ref="0x7f5ce316b610"/>
        <function-ref name="setFCF" scoped="" ref="0x7f5ce316b7a0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f5ce316b930"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f5ce316bac0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f5ce316bc50"/>
        <function-ref name="setDSN" scoped="" ref="0x7f5ce316bde0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f5ce3169020"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f5ce31691b0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f5ce3169340"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f5ce31694d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f5ce3169660"/>
        <function-ref name="localAddr" scoped="" ref="0x7f5ce31697f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f5ce3169a80"/>
        <function-ref name="localPan" scoped="" ref="0x7f5ce3169c10"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f5ce3169da0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f5ce3168020"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f5ce31681b0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f5ce3168340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce31684d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f5ce3168660"/>
        <function-ref name="getFCF" scoped="" ref="0x7f5ce31687f0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f5ce3168980"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f5ce3168b10"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f5ce3168ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f5ce3165460" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5ce3165460"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f5ce31657e0"/>
        <function-ref name="changed" scoped="" ref="0x7f5ce3165970"/>
        <function-ref name="amGroup" scoped="" ref="0x7f5ce3165b00"/>
        <function-ref name="setAddress" scoped="" ref="0x7f5ce3165c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f5ce3164020" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f5ce3164020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce31643a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce3164530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce31646c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce3164850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5ce31649e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5ce3164b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5ce4a5bc00" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f5ce4a5bc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce4a5a020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce4a5a1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce4a5a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5ce4a5a5d0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f5ce4a5a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce4a5a950"/>
        <function-ref name="header" scoped="" ref="0x7f5ce4a5aae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5ce4a5ca40" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f5ce4a5ca40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce4a5cdc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce4a5b020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce4a5b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f5ce4a5ad70" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f5ce4a5ad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f5ce4a59180"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f5ce4a59310"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f5ce4a594a0"/>
        <function-ref name="getSender" scoped="" ref="0x7f5ce4a59630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f5ce4a5b400" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f5ce4a5b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce4a5b780"/>
        <function-ref name="header" scoped="" ref="0x7f5ce4a5b910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5ce3111bd0" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f5ce3111bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce3110020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce31101b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce3110340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5ce31105d0" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f5ce31105d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce3110950"/>
        <function-ref name="header" scoped="" ref="0x7f5ce3110ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x7f5ce310e410" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f5ce310e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce310e790"/>
        <function-ref name="clearAll" scoped="" ref="0x7f5ce310e920"/>
        <function-ref name="get" scoped="" ref="0x7f5ce310eab0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce310ec40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5ce31124a0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f5ce31124a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce3112820"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce31129b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce3112b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x7f5ce310f7e0" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f5ce310f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f5ce310fb60"/>
        <function-ref name="insertNode" scoped="" ref="0x7f5ce310fcf0"/>
        <function-ref name="getNode" scoped="" ref="0x7f5ce310fe80"/>
        <function-ref name="evicted" scoped="" ref="0x7f5ce310e030"/>
        <function-ref name="getIndex" scoped="" ref="0x7f5ce310e1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f5ce3112d90" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f5ce3112d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce3111180"/>
        <function-ref name="header" scoped="" ref="0x7f5ce3111310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ce3111560" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5ce3111560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce31118e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x7f5ce3110d30" loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7f5ce3110d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f5ce310f0e0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f5ce310f270"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f5ce310f400"/>
        <function-ref name="getSender" scoped="" ref="0x7f5ce310f590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7f5ce4a971c0" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f5ce4a971c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f5ce4a97540"/>
        <function-ref name="insertNode" scoped="" ref="0x7f5ce4a976d0"/>
        <function-ref name="getNode" scoped="" ref="0x7f5ce4a97860"/>
        <function-ref name="evicted" scoped="" ref="0x7f5ce4a979f0"/>
        <function-ref name="getIndex" scoped="" ref="0x7f5ce4a97b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7f5ce4a8f020" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f5ce4a8f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4a8f3a0"/>
        <function-ref name="clearAll" scoped="" ref="0x7f5ce4a8f530"/>
        <function-ref name="get" scoped="" ref="0x7f5ce4a8f6c0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4a8f850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7f5ce4a96d50" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f5ce4a96d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f5ce4a90100"/>
        <function-ref name="insertNode" scoped="" ref="0x7f5ce4a90290"/>
        <function-ref name="getNode" scoped="" ref="0x7f5ce4a90420"/>
        <function-ref name="evicted" scoped="" ref="0x7f5ce4a905b0"/>
        <function-ref name="getIndex" scoped="" ref="0x7f5ce4a90740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ce4a96700" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5ce4a96700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce4a96a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7f5ce3108d40" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f5ce3108d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce31070e0"/>
        <function-ref name="clearAll" scoped="" ref="0x7f5ce3107270"/>
        <function-ref name="get" scoped="" ref="0x7f5ce3107400"/>
        <function-ref name="set" scoped="" ref="0x7f5ce3107590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5ce4a467c0" loc="85:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f5ce4a467c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce4a46b40"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce4a46cd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce4a46e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5ce4a45120" loc="86:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f5ce4a45120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce4a454a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x7f5ce4a43cb0" loc="93:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7f5ce4a43cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5ce4a410a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f5ce4a41230"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5ce4a413c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5ce4a55bb0" loc="77:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f5ce4a55bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce4a48020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce4a481b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce4a48340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f5ce4a478b0" loc="80:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f5ce4a478b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4a47c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce4a47dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce4a46020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce4a461b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5ce4a46340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5ce4a464d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f5ce4a45730" loc="87:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f5ce4a45730"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4a45ab0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce4a45c40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce4a45dd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce4a44020"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5ce4a441b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5ce4a44340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x7f5ce4a43020" loc="92:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7f5ce4a43020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f5ce4a433a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f5ce4a43530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f5ce4a436c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f5ce4a43850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f5ce4a439e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ce4a485d0" loc="78:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5ce4a485d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce4a48950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f5ce4a44590" loc="88:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ce4a44590"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5ce4a44910"/>
        <function-ref name="noAck" scoped="" ref="0x7f5ce4a44aa0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5ce4a44c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f5ce4a48ba0" loc="79:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f5ce4a48ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f5ce4a47020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f5ce4a471b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f5ce4a47340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f5ce4a474d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f5ce4a47660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5ce4a3b880" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f5ce4a3b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5ce4a3bc00"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5ce4a3bd90"/>
        <function-ref name="start" scoped="" ref="0x7f5ce4a25020"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce4a251b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5ce4a218c0" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f5ce4a218c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce4a21c40"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce4a21dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce4a20020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5ce4a202b0" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f5ce4a202b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce4a20630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5ce4a25440" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f5ce4a25440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce4a257c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce4a25950"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce4a25ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f5ce4a233d0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f5ce4a233d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4a23750"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce4a238e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce4a23a70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce4a23c00"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5ce4a23d90"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5ce4a22020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f5ce4a22270" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f5ce4a22270"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f5ce4a225f0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f5ce4a22780"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f5ce4a22910"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f5ce4a22aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f5ce4a22d90" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f5ce4a22d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5ce4a21180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5ce4a21310"/>
        <function-ref name="start" scoped="" ref="0x7f5ce4a214a0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce4a21630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ce4a25d70" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5ce4a25d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce4a23180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f5ce4a208c0" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f5ce4a208c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4a20c40"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce4a20dd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce4a1f020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce4a1f1b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5ce4a1f340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5ce4a1f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f5ce30e2020" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f5ce30e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f5ce30e23a0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f5ce30e2530"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f5ce30e26c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f5ce30e2850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5ce49a73a0" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f5ce49a73a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5ce49a7720"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5ce49a78b0"/>
        <function-ref name="start" scoped="" ref="0x7f5ce49a7a40"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce49a7bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7f5ce49a5750" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f5ce49a5750"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f5ce49a5ad0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f5ce49a5c60"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5ce49a5df0"/>
        <function-ref name="done" scoped="" ref="0x7f5ce49a3020"/>
        <function-ref name="standby" scoped="" ref="0x7f5ce49a31b0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5ce49a3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5ce49a7e60" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f5ce49a7e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce49a6210"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce49a63a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce49a6530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f5ce49a3e80" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f5ce49a3e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce49a2220"/>
        <function-ref name="header" scoped="" ref="0x7f5ce49a23b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ce49a67c0" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5ce49a67c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce49a6b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f5ce49a3590" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f5ce49a3590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce49a3910"/>
        <function-ref name="ready" scoped="" ref="0x7f5ce49a3aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce49a3c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f5ce49a6d90" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f5ce49a6d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f5ce49a5180"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5ce49a5310"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5ce49a54a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5ce30db590" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f5ce30db590"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5ce30db910"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5ce30dbaa0"/>
        <function-ref name="start" scoped="" ref="0x7f5ce30dbc30"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce30dbdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7f5ce30da0a0" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ce30da0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce30da420"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7f5ce30d8020" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f5ce30d8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f5ce30d83a0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f5ce30d8530"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5ce30d86c0"/>
        <function-ref name="done" scoped="" ref="0x7f5ce30d8850"/>
        <function-ref name="standby" scoped="" ref="0x7f5ce30d89e0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5ce30d8b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5ce30da6b0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f5ce30da6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce30daa30"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce30dabc0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce30dad50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f5ce30d42f0" loc="189:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7f5ce30d42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ce30d4670"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ce30d4800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f5ce30d5270" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f5ce30d5270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce30d55f0"/>
        <function-ref name="header" scoped="" ref="0x7f5ce30d5780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x7f5ce30d4ad0" loc="144:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x7f5ce30d4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ce30d4e50"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ce30d3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ce30d9020" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5ce30d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce30d93a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x7f5ce30d5a50" loc="322:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x7f5ce30d5a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ce30d5dd0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ce30d4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f5ce30d6880" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f5ce30d6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce30d6c00"/>
        <function-ref name="ready" scoped="" ref="0x7f5ce30d6d90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce30d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f5ce30d95f0" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f5ce30d95f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f5ce30d9970"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5ce30d9b00"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5ce30d9c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f5ce30d8dc0" loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f5ce30d8dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f5ce30d6180"/>
        <function-ref name="suspend" scoped="" ref="0x7f5ce30d6310"/>
        <function-ref name="resume" scoped="" ref="0x7f5ce30d64a0"/>
        <function-ref name="run" scoped="" ref="0x7f5ce30d6630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5ce4949520" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f5ce4949520"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce49498a0"/>
        <function-ref name="ready" scoped="" ref="0x7f5ce4949a30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce4949bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5ce4949e50" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f5ce4949e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce4948210"/>
        <function-ref name="header" scoped="" ref="0x7f5ce49483a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f5ce49485f0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f5ce49485f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ce4948970"/>
        <function-ref name="wait" scoped="" ref="0x7f5ce4948b00"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce4948c90"/>
        <function-ref name="isFree" scoped="" ref="0x7f5ce4948e20"/>
        <function-ref name="getNow" scoped="" ref="0x7f5ce4947020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f5ce49472b0" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f5ce49472b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f5ce4947630"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f5ce49477c0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f5ce4947950"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f5ce4947ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f5ce494ace0" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f5ce494ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce49490a0"/>
        <function-ref name="header" scoped="" ref="0x7f5ce4949230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f5ce494a3f0" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f5ce494a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce494a770"/>
        <function-ref name="ready" scoped="" ref="0x7f5ce494a900"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce494aa90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5ce3097520" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f5ce3097520"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce30978a0"/>
        <function-ref name="ready" scoped="" ref="0x7f5ce3097a30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce3097bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5ce3097e50" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f5ce3097e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce3096210"/>
        <function-ref name="header" scoped="" ref="0x7f5ce30963a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f5ce30965f0" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f5ce30965f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ce3096970"/>
        <function-ref name="wait" scoped="" ref="0x7f5ce3096b00"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce3096c90"/>
        <function-ref name="isFree" scoped="" ref="0x7f5ce3096e20"/>
        <function-ref name="getNow" scoped="" ref="0x7f5ce3095020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f5ce3095270" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f5ce3095270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f5ce30955f0"/>
        <function-ref name="rand32" scoped="" ref="0x7f5ce3095780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f5ce3095a10" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f5ce3095a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f5ce3095d90"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f5ce3093020"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f5ce30931b0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f5ce3093340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f5ce3098c90" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f5ce3098c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce30970a0"/>
        <function-ref name="header" scoped="" ref="0x7f5ce3097230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f5ce30983a0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f5ce30983a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce3098720"/>
        <function-ref name="ready" scoped="" ref="0x7f5ce30988b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce3098a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x7f5ce3093610" loc="78:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x7f5ce3093610"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ce3093990"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ce3093b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f5ce4960c50" loc="46:/usr/bin/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f5ce4960c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f5ce495f020"/>
        <function-ref name="rand32" scoped="" ref="0x7f5ce495f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f5ce495eb70" loc="45:/usr/bin/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f5ce495eb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce4960790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ce4964d30" loc="44:/usr/bin/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5ce4964d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce49610e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f5ce4959c10" loc="48:/usr/bin/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f5ce4959c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f5ce4958020"/>
        <function-ref name="rand32" scoped="" ref="0x7f5ce49581b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f5ce495aac0" loc="47:/usr/bin/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f5ce495aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce4959750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ce495a200" loc="46:/usr/bin/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5ce495a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce495a580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5ce4915140" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f5ce4915140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce49154c0"/>
        <function-ref name="ready" scoped="" ref="0x7f5ce4915650"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce49157e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5ce4915a70" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f5ce4915a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce4915df0"/>
        <function-ref name="header" scoped="" ref="0x7f5ce4914020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f5ce4914270" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f5ce4914270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ce49145f0"/>
        <function-ref name="wait" scoped="" ref="0x7f5ce4914780"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce4914910"/>
        <function-ref name="isFree" scoped="" ref="0x7f5ce4914aa0"/>
        <function-ref name="getNow" scoped="" ref="0x7f5ce4914c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x7f5ce49112b0" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x7f5ce49112b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4911630"/>
        <function-ref name="get" scoped="" ref="0x7f5ce49117c0"/>
        <function-ref name="setValue" scoped="" ref="0x7f5ce4911950"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4911ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f5ce4912020" loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f5ce4912020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7f5ce49123a0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7f5ce4912530"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f5ce49126c0"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7f5ce4912850"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7f5ce49129e0"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7f5ce4912b70"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f5ce4912d00"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f5ce4911020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f5ce4916020" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f5ce4916020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce49163a0"/>
        <function-ref name="header" scoped="" ref="0x7f5ce4916530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f5ce49415e0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f5ce49415e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce4941960"/>
        <function-ref name="ready" scoped="" ref="0x7f5ce4941af0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce4941c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f5ce4916780" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ce4916780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5ce4916b00"/>
        <function-ref name="noAck" scoped="" ref="0x7f5ce4916c90"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5ce4916e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5ce48f9d60" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f5ce48f9d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5ce48f8180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5ce48f8310"/>
        <function-ref name="start" scoped="" ref="0x7f5ce48f84a0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce48f8630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f5ce48f47c0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f5ce48f47c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f5ce48f4b40"/>
        <function-ref name="request" scoped="" ref="0x7f5ce48f4cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5ce48ef020" loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f5ce48ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce48ef3a0"/>
        <function-ref name="ready" scoped="" ref="0x7f5ce48ef530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce48ef6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5ce48ef950" loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f5ce48ef950"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce48efcd0"/>
        <function-ref name="header" scoped="" ref="0x7f5ce48efe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f5ce48f7840" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f5ce48f7840"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f5ce48f7bc0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f5ce48f7d50"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5ce48f6020"/>
        <function-ref name="done" scoped="" ref="0x7f5ce48f61b0"/>
        <function-ref name="standby" scoped="" ref="0x7f5ce48f6340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5ce48f64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f5ce48f3020" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f5ce48f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce48f33a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce48f3530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce48f36c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce48f3850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5ce48f39e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5ce48f3b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7f5ce48f0020" loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7f5ce48f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f5ce48f04a0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f5ce48f0630"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5ce48f07c0"/>
        <function-ref name="done" scoped="" ref="0x7f5ce48f0950"/>
        <function-ref name="standby" scoped="" ref="0x7f5ce48f0ae0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5ce48f0c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7f5ce48f3e00" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f5ce48f3e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f5ce48f21c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f5ce48f4060" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f5ce48f4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce48f43e0"/>
        <function-ref name="header" scoped="" ref="0x7f5ce48f4570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7f5ce48f1950" loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7f5ce48f1950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce48f1cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f5ce48f24b0" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f5ce48f24b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5ce48f2830"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5ce48f29c0"/>
        <function-ref name="start" scoped="" ref="0x7f5ce48f2b50"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce48f2ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f5ce48ee8c0" loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f5ce48ee8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce48eec40"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce48eedd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce48ec020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce48ec1b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5ce48ec340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5ce48ec4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f5ce48f7270" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f5ce48f7270"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce48f75f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f5ce48ec760" loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f5ce48ec760"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f5ce48ecae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7f5ce48f1020" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7f5ce48f1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce48f13a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce48f1530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce48f16c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f5ce48f6720" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f5ce48f6720"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce48f6aa0"/>
        <function-ref name="ready" scoped="" ref="0x7f5ce48f6c30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce48f6dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7f5ce48ee120" loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7f5ce48ee120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f5ce48ee4a0"/>
        <function-ref name="request" scoped="" ref="0x7f5ce48ee630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f5ce48f8880" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f5ce48f8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce48f8c00"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce48f8d90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce48f7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7f5ce4655760" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7f5ce4655760"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4655ae0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce4655c70"/>
        <function-ref name="setValue" scoped="" ref="0x7f5ce4655e00"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4650020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f5ce46587e0" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f5ce46587e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4658b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce4658cf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce4658e80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce4657030"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5ce46571c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5ce4657350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f5ce4656800" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f5ce4656800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4656b80"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce4656d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce4655020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce46551b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5ce4655340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5ce46554d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f5ce465cbb0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f5ce465cbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5ce5337d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5ce465a170"/>
        <function-ref name="clear" scoped="" ref="0x7f5ce465a8a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f5ce465ba00"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4658020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7f5ce4657760" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5ce4657760"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5ce5337d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce46563d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f5ce4660d00" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5ce4660d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5ce465d2e0"/>
        <function-ref name="clear" scoped="" ref="0x7f5ce465da10"/>
        <function-ref name="isValid" scoped="" ref="0x7f5ce465eb60"/>
        <function-ref name="set" scoped="" ref="0x7f5ce465c170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7f5ce3040640" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7f5ce3040640"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce30409c0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce3040b50"/>
        <function-ref name="setValue" scoped="" ref="0x7f5ce3040ce0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce3040e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f5ce30417e0" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f5ce30417e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce3041b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce3041cf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce3041e80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce3040030"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5ce30401c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5ce3040350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f5ce303c4c0" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f5ce303c4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce303c840"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce303c9d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce303cb60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce303ccf0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5ce303ce80"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5ce303b030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f5ce3045bb0" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f5ce3045bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5ce5337d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5ce3042170"/>
        <function-ref name="clear" scoped="" ref="0x7f5ce30428a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f5ce3043a00"/>
        <function-ref name="set" scoped="" ref="0x7f5ce3041020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7f5ce303e250" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5ce303e250"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5ce5337d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce303ee80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f5ce303d3f0" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f5ce303d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce303c090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f5ce3048cb0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5ce3048cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5ce30462e0"/>
        <function-ref name="clear" scoped="" ref="0x7f5ce3046a10"/>
        <function-ref name="isValid" scoped="" ref="0x7f5ce3047b60"/>
        <function-ref name="set" scoped="" ref="0x7f5ce3045170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f5ce4889a60" loc="20:/usr/bin/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f5ce4889a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce48866b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f5ce4877d60" loc="46:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f5ce4877d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ce486d220"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce48817d0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5ce4875590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5ce4875110"/>
        <function-ref name="getdt" scoped="" ref="0x7f5ce486db20"/>
        <function-ref name="gett0" scoped="" ref="0x7f5ce486d6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ce4881c50"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5ce4882980"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5ce4875ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5ce4882e50"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce4881350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f5ce486b160" loc="47:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f5ce486b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce486bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ce4885540" loc="45:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5ce4885540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce48858c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7f5ce485c910" loc="29:/usr/bin/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7f5ce485c910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce4861780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ce4860150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ce4861c40"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ce4860610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ce4869920" loc="27:/usr/bin/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5ce4869920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce4869ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7f5ce4866350" loc="28:/usr/bin/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7f5ce4866350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ce4863ba0"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce4865b80"/>
        <function-ref name="startAt" scoped="" ref="0x7f5ce4863550"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ce4863090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5ce4862090"/>
        <function-ref name="start" scoped="" ref="0x7f5ce48651b0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce48656c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5ce47231d0" loc="61:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f5ce47231d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ce4720b30"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce47229f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f5ce47204e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ce4720020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5ce471f020"/>
        <function-ref name="start" scoped="" ref="0x7f5ce4722020"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce4722530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ce4724980" loc="60:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5ce4724980"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f5ce55079c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f5ce55079c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce4724d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5ce471f650" loc="62:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f5ce471f650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce471e5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ce471d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ce471ea70"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ce471d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7f5ce300b190" loc="66:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f5ce300b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f5ce300b510"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f5ce300b6a0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f5ce300b830"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f5ce300b9c0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f5ce300bb50"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f5ce300bce0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f5ce300be70"/>
        <function-ref name="setControlA" scoped="" ref="0x7f5ce300a030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5ce30179c0" loc="61:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f5ce30179c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ce3014260"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce3015220"/>
        <function-ref name="startAt" scoped="" ref="0x7f5ce3015ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ce30156e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5ce3014720"/>
        <function-ref name="start" scoped="" ref="0x7f5ce3016810"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3016d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ce30171b0" loc="60:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5ce30171b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce3017530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5ce3014d50" loc="62:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f5ce3014d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce3012ba0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ce3011550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ce3011090"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ce3011a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7f5ce3006780" loc="68:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f5ce3006780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f5ce3006b00"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f5ce3006c90"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f5ce3006e20"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f5ce3005020"/>
        <function-ref name="countBusy" scoped="" ref="0x7f5ce30051b0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f5ce3005340"/>
        <function-ref name="getAssr" scoped="" ref="0x7f5ce30054d0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f5ce3005660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7f5ce300a3e0" loc="67:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f5ce300a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f5ce3008e60"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce3009a60"/>
        <function-ref name="get" scoped="" ref="0x7f5ce3009090"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce3008020"/>
        <function-ref name="isOn" scoped="" ref="0x7f5ce3006350"/>
        <function-ref name="set" scoped="" ref="0x7f5ce3009550"/>
        <function-ref name="start" scoped="" ref="0x7f5ce30084e0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce30089a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5ce3010020" loc="65:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f5ce3010020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f5ce300c350"/>
        <function-ref name="test" scoped="" ref="0x7f5ce300e9a0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce3010c50"/>
        <function-ref name="setScale" scoped="" ref="0x7f5ce300c810"/>
        <function-ref name="getScale" scoped="" ref="0x7f5ce300cd20"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce300fb20"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ce300f660"/>
        <function-ref name="isOn" scoped="" ref="0x7f5ce300ee60"/>
        <function-ref name="set" scoped="" ref="0x7f5ce300f150"/>
        <function-ref name="start" scoped="" ref="0x7f5ce300e020"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce300e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f5ce47abc10" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f5ce47abc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f5ce47aa020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f5ce47aa1b0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f5ce47aa340"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f5ce47aa4d0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f5ce47aa660"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f5ce47aa7f0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f5ce47aa980"/>
        <function-ref name="setControlA" scoped="" ref="0x7f5ce47aab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f5ce47a5580" loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f5ce47a5580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f5ce47a5900"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f5ce47a5a90"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f5ce47a5c20"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f5ce47a5db0"/>
        <function-ref name="countBusy" scoped="" ref="0x7f5ce47a4020"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f5ce47a41b0"/>
        <function-ref name="getAssr" scoped="" ref="0x7f5ce47a4340"/>
        <function-ref name="setAssr" scoped="" ref="0x7f5ce47a44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5ce47a9060" loc="83:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f5ce47a9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f5ce47a7a10"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce47a86c0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce47a9c90"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce47a8b80"/>
        <function-ref name="isOn" scoped="" ref="0x7f5ce47a5020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce47a81b0"/>
        <function-ref name="start" scoped="" ref="0x7f5ce47a7090"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce47a7550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5ce47b8920" loc="81:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f5ce47b8920"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f5ce47adcd0"/>
        <function-ref name="test" scoped="" ref="0x7f5ce47ad350"/>
        <function-ref name="get" scoped="" ref="0x7f5ce47b55a0"/>
        <function-ref name="setScale" scoped="" ref="0x7f5ce47ab1b0"/>
        <function-ref name="getScale" scoped="" ref="0x7f5ce47ab6c0"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce47ae4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ce47ae020"/>
        <function-ref name="isOn" scoped="" ref="0x7f5ce47ad810"/>
        <function-ref name="set" scoped="" ref="0x7f5ce47b5a60"/>
        <function-ref name="start" scoped="" ref="0x7f5ce47ae9a0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce47aee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f5ce479cc10" loc="83:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f5ce479cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f5ce479b020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f5ce479b1b0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f5ce479b340"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f5ce479b4d0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f5ce479b660"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f5ce479b7f0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f5ce479b980"/>
        <function-ref name="setControlA" scoped="" ref="0x7f5ce479bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f5ce47964c0" loc="85:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f5ce47964c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f5ce4796840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f5ce4796c00" loc="86:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f5ce4796c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f5ce4795020"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f5ce47951b0"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f5ce4795340"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f5ce47954d0"/>
        <function-ref name="countBusy" scoped="" ref="0x7f5ce4795660"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f5ce47957f0"/>
        <function-ref name="getAssr" scoped="" ref="0x7f5ce4795980"/>
        <function-ref name="setAssr" scoped="" ref="0x7f5ce4795b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5ce479a060" loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f5ce479a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f5ce4797a10"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce47996c0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce479ac90"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce4799b80"/>
        <function-ref name="isOn" scoped="" ref="0x7f5ce4796020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce47991b0"/>
        <function-ref name="start" scoped="" ref="0x7f5ce4797090"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce4797550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5ce47a19c0" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f5ce47a19c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f5ce479dcd0"/>
        <function-ref name="test" scoped="" ref="0x7f5ce479d350"/>
        <function-ref name="get" scoped="" ref="0x7f5ce47a0630"/>
        <function-ref name="setScale" scoped="" ref="0x7f5ce479c1b0"/>
        <function-ref name="getScale" scoped="" ref="0x7f5ce479c6c0"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce479f4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ce479f020"/>
        <function-ref name="isOn" scoped="" ref="0x7f5ce479d810"/>
        <function-ref name="set" scoped="" ref="0x7f5ce47a0af0"/>
        <function-ref name="start" scoped="" ref="0x7f5ce479f9a0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce479fe60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f5ce46e0020" loc="74:/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7f5ce46e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ce46e03a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ce46e0530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f5ce46e5cd0" loc="49:/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f5ce46e5cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ce46e1670"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce46e2550"/>
        <function-ref name="startAt" scoped="" ref="0x7f5ce46e1020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ce46e2a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5ce46e1b30"/>
        <function-ref name="start" scoped="" ref="0x7f5ce46e3b60"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce46e2090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5ce46ea830" loc="48:/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f5ce46ea830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ce46e6cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce46e7300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5ce46e60d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5ce46e7c00"/>
        <function-ref name="getdt" scoped="" ref="0x7f5ce46e5660"/>
        <function-ref name="gett0" scoped="" ref="0x7f5ce46e51e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ce46e7780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5ce46e9480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5ce46e66e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5ce46e9950"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce46e9e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f5ce4684a00" loc="71:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7f5ce4684a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ce4684d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ce4682020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f5ce4689640" loc="49:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f5ce4689640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ce4685c40"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce46861e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5ce4685020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5ce4686ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5ce4684590"/>
        <function-ref name="gett0" scoped="" ref="0x7f5ce4684110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ce4686660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5ce4688390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5ce4685630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5ce4688860"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce4688d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5ce468f150" loc="48:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f5ce468f150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ce468a700"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce468dc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5ce468ca50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5ce468c5b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5ce4689090"/>
        <function-ref name="gett0" scoped="" ref="0x7f5ce468aba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ce468c110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5ce468fd60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5ce468a0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5ce468d2a0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce468d790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f5ce4680790" loc="48:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f5ce4680790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce46753f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f5ce4675a60" loc="49:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f5ce4675a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce4670890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ce466f260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ce4670d50"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ce466f720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f5ce46682e0" loc="49:/usr/bin/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f5ce46682e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ce4664870"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce4666e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5ce4665c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5ce4665780"/>
        <function-ref name="getdt" scoped="" ref="0x7f5ce46631e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f5ce4664cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ce4665300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5ce4666020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5ce4664260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5ce46664f0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce46669c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f5ce464a590" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f5ce464a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce464a910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce464aaa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce464ac30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce464adc0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5ce4627020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5ce46271b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f5ce46274a0" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f5ce46274a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4627820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce46279b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce4627b40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce4627cd0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5ce4627e60"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5ce4626020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x7f5ce464b9b0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x7f5ce464b9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce464bd50"/>
        <function-ref name="get" scoped="" ref="0x7f5ce464a020"/>
        <function-ref name="setValue" scoped="" ref="0x7f5ce464a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce464a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5ce46242b0" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f5ce46242b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5ce4624630"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5ce46247c0"/>
        <function-ref name="start" scoped="" ref="0x7f5ce4624950"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce4624ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f5ce4621b60" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f5ce4621b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f5ce461f020"/>
        <function-ref name="request" scoped="" ref="0x7f5ce461f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5ce461b440" loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f5ce461b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce461b7c0"/>
        <function-ref name="ready" scoped="" ref="0x7f5ce461b950"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce461bae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5ce461bd70" loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f5ce461bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce461a180"/>
        <function-ref name="header" scoped="" ref="0x7f5ce461a310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f5ce4623c20" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f5ce4623c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f5ce4622020"/>
        <function-ref name="turnOn" scoped="" ref="0x7f5ce46221b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5ce4622340"/>
        <function-ref name="done" scoped="" ref="0x7f5ce46224d0"/>
        <function-ref name="standby" scoped="" ref="0x7f5ce4622660"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5ce46227f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f5ce461f400" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f5ce461f400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce461f780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce461f910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce461faa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce461fc30"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5ce461fdc0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5ce461e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7f5ce461c410" loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7f5ce461c410"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f5ce461c890"/>
        <function-ref name="turnOn" scoped="" ref="0x7f5ce461ca20"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5ce461cbb0"/>
        <function-ref name="done" scoped="" ref="0x7f5ce461cd40"/>
        <function-ref name="standby" scoped="" ref="0x7f5ce461b020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5ce461b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7f5ce461e2b0" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f5ce461e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f5ce461e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f5ce4621400" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f5ce4621400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce4621780"/>
        <function-ref name="header" scoped="" ref="0x7f5ce4621910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7f5ce461dd70" loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7f5ce461dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce461c180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f5ce461e920" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f5ce461e920"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5ce461eca0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5ce461ee30"/>
        <function-ref name="start" scoped="" ref="0x7f5ce461d020"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce461d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f5ce461ad40" loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f5ce461ad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce46190e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce4619270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce4619400"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce4619590"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5ce4619720"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5ce46198b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f5ce4623650" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f5ce4623650"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce46239d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f5ce4619b40" loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f5ce4619b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f5ce4617020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7f5ce461d440" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7f5ce461d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce461d7c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce461d950"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce461dae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f5ce4622a40" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f5ce4622a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce4622dc0"/>
        <function-ref name="ready" scoped="" ref="0x7f5ce4621020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce46211b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7f5ce461a5a0" loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7f5ce461a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f5ce461a920"/>
        <function-ref name="request" scoped="" ref="0x7f5ce461aab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f5ce4624d30" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f5ce4624d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce46230e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce4623270"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce4623400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f5ce460c5c0" loc="45:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f5ce460c5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f5ce460c940"/>
        <function-ref name="request" scoped="" ref="0x7f5ce460cad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f5ce46073b0" loc="49:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f5ce46073b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4606ac0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce4606570"/>
        <function-ref name="isSet" scoped="" ref="0x7f5ce4606020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4605090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7f5ce45efca0" loc="64:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7f5ce45efca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce45ee0a0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce45ee230"/>
        <function-ref name="setValue" scoped="" ref="0x7f5ce45ee3c0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce45ee550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f5ce45f62e0" loc="61:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f5ce45f62e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5ce5337d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5ce45f5840"/>
        <function-ref name="clear" scoped="" ref="0x7f5ce45f1020"/>
        <function-ref name="isValid" scoped="" ref="0x7f5ce45f5110"/>
        <function-ref name="set" scoped="" ref="0x7f5ce45f1750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f5ce4610610" loc="42:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f5ce4610610"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f5ce4610990"/>
        <function-ref name="turnOn" scoped="" ref="0x7f5ce4610b20"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5ce4610cb0"/>
        <function-ref name="done" scoped="" ref="0x7f5ce4610e40"/>
        <function-ref name="standby" scoped="" ref="0x7f5ce460d020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5ce460d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f5ce45ed470" loc="66:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f5ce45ed470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ce45ed7f0"/>
        <function-ref name="wait" scoped="" ref="0x7f5ce45ed980"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce45edb10"/>
        <function-ref name="isFree" scoped="" ref="0x7f5ce45edca0"/>
        <function-ref name="getNow" scoped="" ref="0x7f5ce45ede30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f5ce460be80" loc="48:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f5ce460be80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce46095e0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce4609090"/>
        <function-ref name="isSet" scoped="" ref="0x7f5ce460aad0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4609b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f5ce460cd90" loc="46:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f5ce460cd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce460b180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce460b310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce460b4a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce460b630"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5ce460b7c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5ce460b950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f5ce45f71f0" loc="60:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f5ce45f71f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce45f7670"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5ce45f7800"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5ce45f7990"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f5ce45f7b20"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f5ce45f7cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f5ce460ddd0" loc="44:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f5ce460ddd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce460c180"/>
        <function-ref name="header" scoped="" ref="0x7f5ce460c310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5ce45fcdd0" loc="55:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f5ce45fcdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5ce5337d20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f5ce5336180"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ce45f96e0"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce45fa6b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f5ce45f9090"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ce45fab70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5ce45f9ba0"/>
        <function-ref name="start" scoped="" ref="0x7f5ce45fbca0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce45fa1f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f5ce4605940" loc="50:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f5ce4605940"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4602090"/>
        <function-ref name="get" scoped="" ref="0x7f5ce4603af0"/>
        <function-ref name="isSet" scoped="" ref="0x7f5ce46035a0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce46025e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f5ce45fea40" loc="54:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5ce45fea40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5ce5337d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce45fc6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f5ce460d460" loc="43:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f5ce460d460"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce460d7e0"/>
        <function-ref name="ready" scoped="" ref="0x7f5ce460d970"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce460db00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f5ce4602e70" loc="51:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f5ce4602e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce45ff5e0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce45ff090"/>
        <function-ref name="isSet" scoped="" ref="0x7f5ce4600ad0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce45ffb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7f5ce45ee8d0" loc="65:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f5ce45ee8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce45eec50"/>
        <function-ref name="get" scoped="" ref="0x7f5ce45eede0"/>
        <function-ref name="setValue" scoped="" ref="0x7f5ce45ed020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce45ed1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7f5ce45ef110" loc="63:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f5ce45ef110"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce45ef490"/>
        <function-ref name="get" scoped="" ref="0x7f5ce45ef620"/>
        <function-ref name="setValue" scoped="" ref="0x7f5ce45ef7b0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce45ef940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f5ce45fe1e0" loc="52:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5ce45fe1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f5ce45fe560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f5ce45e32d0" loc="52:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f5ce45e32d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f5ce45e3650"/>
        <function-ref name="request" scoped="" ref="0x7f5ce45e37e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f5ce45c1d20" loc="74:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f5ce45c1d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5ce5425180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f5ce45c7b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f5ce45de0d0" loc="56:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f5ce45de0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce45dd7f0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce45dd2a0"/>
        <function-ref name="isSet" scoped="" ref="0x7f5ce45ded00"/>
        <function-ref name="set" scoped="" ref="0x7f5ce45ddd40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7f5ce45beca0" loc="80:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7f5ce45beca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce45bd0a0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce45bd230"/>
        <function-ref name="setValue" scoped="" ref="0x7f5ce45bd3c0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce45bd550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7f5ce45e6b60" loc="47:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f5ce45e6b60"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f5ce5507d40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f5ce5507d40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce45e5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f5ce45bc780" loc="83:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f5ce45bc780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5ce5337d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5ce45ba020"/>
        <function-ref name="clear" scoped="" ref="0x7f5ce45ba750"/>
        <function-ref name="isValid" scoped="" ref="0x7f5ce45bb7c0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce45bae80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f5ce45cd980" loc="70:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f5ce45cd980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce45cdd00"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce45c9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce45c91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce45c9340"/>
        <function-ref name="get" scoped="" ref="0x7f5ce45c94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce45c9660"/>
        <function-ref name="set" scoped="" ref="0x7f5ce45c97f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce45c9980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f5ce45b72e0" loc="86:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f5ce45b72e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ce45b7660"/>
        <function-ref name="wait" scoped="" ref="0x7f5ce45b77f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce45b7980"/>
        <function-ref name="isFree" scoped="" ref="0x7f5ce45b7b10"/>
        <function-ref name="getNow" scoped="" ref="0x7f5ce45b7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f5ce45e52e0" loc="49:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f5ce45e52e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f5ce45e5660"/>
        <function-ref name="turnOn" scoped="" ref="0x7f5ce45e57f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5ce45e5980"/>
        <function-ref name="done" scoped="" ref="0x7f5ce45e5b10"/>
        <function-ref name="standby" scoped="" ref="0x7f5ce45e5ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5ce45e5e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7f5ce45c01a0" loc="75:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f5ce45c01a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5ce5337d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce45c0dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f5ce45e2b90" loc="55:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f5ce45e2b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce45e02e0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce45e1d40"/>
        <function-ref name="isSet" scoped="" ref="0x7f5ce45e17f0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce45e0830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f5ce45e3aa0" loc="53:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f5ce45e3aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce45e3e20"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce45e2020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce45e21b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce45e2340"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5ce45e24d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5ce45e2660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x7f5ce45ce670" loc="69:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7f5ce45ce670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce45ce9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce45ceb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce45ced10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce45cd020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce45cd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce45cd340"/>
        <function-ref name="set" scoped="" ref="0x7f5ce45cd4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce45cd660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f5ce45bf340" loc="77:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f5ce45bf340"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce45bf6c0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5ce45bf850"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5ce45bf9e0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f5ce45bfb70"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f5ce45bfd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f5ce45e4a90" loc="51:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f5ce45e4a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce45e4e10"/>
        <function-ref name="header" scoped="" ref="0x7f5ce45e3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x7f5ce451e920" loc="847:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x7f5ce451e920"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ce451eca0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ce451ee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f5ce45db630" loc="57:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f5ce45db630"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce45dae70"/>
        <function-ref name="get" scoped="" ref="0x7f5ce45da920"/>
        <function-ref name="isSet" scoped="" ref="0x7f5ce45da3d0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce45d93f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f5ce45e6020" loc="46:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f5ce45e6020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f5ce5507d40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f5ce5507d40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce45e63a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f5ce45d0b50" loc="65:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f5ce45d0b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ce45cf020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ce45cf1b0"/>
        <function-ref name="request" scoped="" ref="0x7f5ce45cf340"/>
        <function-ref name="granted" scoped="" ref="0x7f5ce45cf4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ce45cf660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x7f5ce45d1760" loc="64:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7f5ce45d1760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce45d1be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce45d1d70"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce45d0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce45d01b0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce45d0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce45d04d0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce45d0660"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce45d07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f5ce45d9c80" loc="58:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f5ce45d9c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce45d63c0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce45d7e30"/>
        <function-ref name="isSet" scoped="" ref="0x7f5ce45d78e0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce45d6910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f5ce45e4120" loc="50:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f5ce45e4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce45e44a0"/>
        <function-ref name="ready" scoped="" ref="0x7f5ce45e4630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce45e47c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x7f5ce45c3550" loc="72:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f5ce45c3550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f5ce45c38d0"/>
        <function-ref name="disable" scoped="" ref="0x7f5ce45c3a60"/>
        <function-ref name="captured" scoped="" ref="0x7f5ce45c3bf0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f5ce45c3d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x7f5ce45caaa0" loc="67:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f5ce45caaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f5ce45cae20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f5ce45ce020"/>
        <function-ref name="splitRead" scoped="" ref="0x7f5ce45ce1b0"/>
        <function-ref name="write" scoped="" ref="0x7f5ce45ce340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7f5ce45bd8d0" loc="81:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f5ce45bd8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce45bdc50"/>
        <function-ref name="get" scoped="" ref="0x7f5ce45bdde0"/>
        <function-ref name="setValue" scoped="" ref="0x7f5ce45bc020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce45bc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7f5ce45be110" loc="79:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f5ce45be110"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce45be490"/>
        <function-ref name="get" scoped="" ref="0x7f5ce45be620"/>
        <function-ref name="setValue" scoped="" ref="0x7f5ce45be7b0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce45be940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f5ce45d1020" loc="59:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5ce45d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f5ce45d13a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f5ce45b86b0" loc="85:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f5ce45b86b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f5ce45b8a30"/>
        <function-ref name="suspend" scoped="" ref="0x7f5ce45b8bc0"/>
        <function-ref name="resume" scoped="" ref="0x7f5ce45b8d50"/>
        <function-ref name="run" scoped="" ref="0x7f5ce45b7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f5ce44d67f0" loc="46:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f5ce44d67f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce44d6b70"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce44d6d00"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce44d5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce44d51b0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce44d5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce44d54d0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce44d5660"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce44d57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x7f5ce44d74e0" loc="45:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7f5ce44d74e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce44d7860"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce44d79f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce44d7b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce44d7d10"/>
        <function-ref name="get" scoped="" ref="0x7f5ce44d6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce44d61b0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce44d6340"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce44d64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5ce44d3ac0" loc="49:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f5ce44d3ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5ce5337d20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ce44cf390"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce44d1360"/>
        <function-ref name="startAt" scoped="" ref="0x7f5ce44d1ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ce44d1820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5ce44cf850"/>
        <function-ref name="start" scoped="" ref="0x7f5ce44d2970"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce44d2e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x7f5ce44d9b50" loc="42:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f5ce44d9b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ce44d8020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ce44d81b0"/>
        <function-ref name="request" scoped="" ref="0x7f5ce44d8340"/>
        <function-ref name="granted" scoped="" ref="0x7f5ce44d84d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ce44d8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x7f5ce44dc950" loc="41:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7f5ce44dc950"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce44dccd0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce44dce60"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce44d9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce44d91b0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce44d9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce44d94d0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce44d9660"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce44d97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7f5ce44d5b10" loc="48:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f5ce44d5b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f5ce44d3020"/>
        <function-ref name="disable" scoped="" ref="0x7f5ce44d31b0"/>
        <function-ref name="captured" scoped="" ref="0x7f5ce44d3340"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f5ce44d34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f5ce44d8920" loc="43:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f5ce44d8920"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f5ce44d8ca0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f5ce44d8e30"/>
        <function-ref name="splitRead" scoped="" ref="0x7f5ce44d7020"/>
        <function-ref name="write" scoped="" ref="0x7f5ce44d71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f5ce44ce020" loc="50:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5ce44ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5ce5337d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce44cec50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x7f5ce44be3d0" loc="46:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x7f5ce44be3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce44be750"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce44be8e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce44bea70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce44bec00"/>
        <function-ref name="get" scoped="" ref="0x7f5ce44bed90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce44bc020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce44bc1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce44bc340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x7f5ce44c17f0" loc="45:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f5ce44c17f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f5ce44bfe60"/>
        <function-ref name="test" scoped="" ref="0x7f5ce44bf4e0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce44c84c0"/>
        <function-ref name="captured" scoped="" ref="0x7f5ce44c7020"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce44c7530"/>
        <function-ref name="isOn" scoped="" ref="0x7f5ce44bf9a0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce44c8980"/>
        <function-ref name="start" scoped="" ref="0x7f5ce44c79f0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce44bf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x7f5ce44bc680" loc="47:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x7f5ce44bc680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce44bca00"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce44bcb90"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce44bcd20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce44bb020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce44bb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce44bb340"/>
        <function-ref name="set" scoped="" ref="0x7f5ce44bb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce44bb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f5ce44ca680" loc="40:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f5ce44ca680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce44caa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7f5ce44cd9d0" loc="39:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f5ce44cd9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f5ce44cdd50"/>
        <function-ref name="disable" scoped="" ref="0x7f5ce44ca020"/>
        <function-ref name="captured" scoped="" ref="0x7f5ce44ca1b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f5ce44ca340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f5ce44a0ae0" loc="84:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f5ce44a0ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce44a0e60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce44ab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f5ce44aa840" loc="82:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f5ce44aa840"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f5ce44aabc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ce44ad1f0" loc="81:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5ce44ad1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce44ad570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f5ce44ac020" loc="83:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f5ce44ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f5ce44ac3a0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f5ce44ac530"/>
        <function-ref name="splitRead" scoped="" ref="0x7f5ce44ac6c0"/>
        <function-ref name="write" scoped="" ref="0x7f5ce44ac850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5ce44ab850" loc="85:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f5ce44ab850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ce44abbd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ce44abd60"/>
        <function-ref name="request" scoped="" ref="0x7f5ce44a9020"/>
        <function-ref name="granted" scoped="" ref="0x7f5ce44a91b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ce44a9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7f5ce445a190" loc="296:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7f5ce445a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ce445a510"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ce445a6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f5ce449c020" loc="94:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f5ce449c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce449c3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce449c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7f5ce447d430" loc="99:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7f5ce447d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ce447d7b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ce447d940"/>
        <function-ref name="request" scoped="" ref="0x7f5ce447dad0"/>
        <function-ref name="granted" scoped="" ref="0x7f5ce447dc60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ce447ddf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f5ce449ee00" loc="92:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f5ce449ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f5ce449d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ce449e7e0" loc="91:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5ce449e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce449eb60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7f5ce4499020" loc="98:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7f5ce4499020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f5ce44993a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f5ce447e980"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f5ce44996c0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f5ce447eb10"/>
        <function-ref name="initMaster" scoped="" ref="0x7f5ce44999e0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f5ce4499b70"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f5ce4499d00"/>
        <function-ref name="read" scoped="" ref="0x7f5ce4498020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f5ce44981b0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f5ce4498340"/>
        <function-ref name="setClock" scoped="" ref="0x7f5ce44984d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5ce4498660"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f5ce44987f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f5ce4498a80"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f5ce4498c10"/>
        <function-ref name="write" scoped="" ref="0x7f5ce4498da0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5ce447e020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f5ce447e1b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f5ce447e340"/>
        <function-ref name="getClock" scoped="" ref="0x7f5ce447e4d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f5ce447e660"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f5ce4499530"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f5ce4499850"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f5ce447e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f5ce449d480" loc="93:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f5ce449d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f5ce449d800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f5ce449d990"/>
        <function-ref name="splitRead" scoped="" ref="0x7f5ce449db20"/>
        <function-ref name="write" scoped="" ref="0x7f5ce449dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5ce449cd20" loc="95:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f5ce449cd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ce449a0e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ce449a270"/>
        <function-ref name="request" scoped="" ref="0x7f5ce449a400"/>
        <function-ref name="granted" scoped="" ref="0x7f5ce449a590"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ce449a720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f5ce447c130" loc="100:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5ce447c130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5ce447c4b0"/>
        <function-ref name="userId" scoped="" ref="0x7f5ce447c640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f5ce447c920" loc="101:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f5ce447c920"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f5ce447cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7f5ce44273e0" loc="76:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7f5ce44273e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f5ce4427760"/>
        <function-ref name="sleep" scoped="" ref="0x7f5ce4425ca0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f5ce4427a80"/>
        <function-ref name="dataReady" scoped="" ref="0x7f5ce4425e30"/>
        <function-ref name="initMaster" scoped="" ref="0x7f5ce4427da0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f5ce4426020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f5ce44261b0"/>
        <function-ref name="read" scoped="" ref="0x7f5ce4426340"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f5ce44264d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f5ce4426660"/>
        <function-ref name="setClock" scoped="" ref="0x7f5ce44267f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5ce4426980"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f5ce4426b10"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f5ce4426da0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f5ce4425020"/>
        <function-ref name="write" scoped="" ref="0x7f5ce44251b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5ce4425340"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f5ce44254d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f5ce4425660"/>
        <function-ref name="getClock" scoped="" ref="0x7f5ce44257f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f5ce4425980"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f5ce44278f0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f5ce4427c10"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f5ce4425b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7f5ce4418b10" loc="81:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7f5ce4418b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce4417020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce44171b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce4417340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce44174d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce4417660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce44177f0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4417980"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce4417b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7f5ce441c650" loc="79:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7f5ce441c650"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce441c9d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce441cb60"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce441ccf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce441ce80"/>
        <function-ref name="get" scoped="" ref="0x7f5ce4419030"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce44191c0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4419350"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce44194e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7f5ce441d390" loc="78:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7f5ce441d390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce441d710"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce441d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce441da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce441dbc0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce441dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce441c020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce441c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce441c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f5ce441bac0" loc="75:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5ce441bac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ce441be40"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce441d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7f5ce4417e50" loc="82:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7f5ce4417e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f5ce4416210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7f5ce4421350" loc="74:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7f5ce4421350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f5ce44216d0"/>
        <function-ref name="sleep" scoped="" ref="0x7f5ce441fca0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f5ce44219f0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f5ce441fe30"/>
        <function-ref name="initMaster" scoped="" ref="0x7f5ce4421d10"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f5ce4420020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f5ce44201b0"/>
        <function-ref name="read" scoped="" ref="0x7f5ce4420340"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f5ce44204d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f5ce4420660"/>
        <function-ref name="setClock" scoped="" ref="0x7f5ce44207f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5ce4420980"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f5ce4420b10"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f5ce4420da0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f5ce441f020"/>
        <function-ref name="write" scoped="" ref="0x7f5ce441f1b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5ce441f340"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f5ce441f4d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f5ce441f660"/>
        <function-ref name="getClock" scoped="" ref="0x7f5ce441f7f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f5ce441f980"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f5ce4421860"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f5ce4421b80"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f5ce441fb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7f5ce4419800" loc="80:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7f5ce4419800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5ce4419b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f5ce4419d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce4418020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5ce44181b0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce4418340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5ce44184d0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4418660"/>
        <function-ref name="clr" scoped="" ref="0x7f5ce44187f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5ce43bd020" loc="86:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5ce43bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5ce43bd3c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5ce43bd550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5ce43b50d0" loc="89:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5ce43b50d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5ce43b5470"/>
        <function-ref name="configure" scoped="" ref="0x7f5ce43b5600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5ce43bf210" loc="85:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f5ce43bf210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ce43bf5b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ce43bf740"/>
        <function-ref name="request" scoped="" ref="0x7f5ce43bf8d0"/>
        <function-ref name="granted" scoped="" ref="0x7f5ce43bfa60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ce43bfbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5ce43bd7a0" loc="87:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5ce43bd7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5ce43bdb20"/>
        <function-ref name="userId" scoped="" ref="0x7f5ce43bdcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ce2f74420" loc="44:/usr/bin/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5ce2f74420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce2f747a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f5ce2f74a30" loc="45:/usr/bin/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f5ce2f74a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f5ce2f74db0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f5ce2f73020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f5ce2f731b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5ce2f73340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5ce2f71850" loc="52:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5ce2f71850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5ce2f71bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5ce2f71d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5ce2f70910" loc="56:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5ce2f70910"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5ce2f70cb0"/>
        <function-ref name="configure" scoped="" ref="0x7f5ce2f70e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f5ce2f6f120" loc="57:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f5ce2f6f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f5ce2f6f4a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f5ce2f6f630"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f5ce2f6f7c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5ce2f6f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5ce2f729d0" loc="51:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f5ce2f729d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5ce2f72d70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5ce2f71020"/>
        <function-ref name="request" scoped="" ref="0x7f5ce2f711b0"/>
        <function-ref name="granted" scoped="" ref="0x7f5ce2f71340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5ce2f714d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5ce2f70020" loc="53:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5ce2f70020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5ce2f703a0"/>
        <function-ref name="userId" scoped="" ref="0x7f5ce2f70530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f5ce2f6fc20" loc="69:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f5ce2f6fc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ce2f6d020"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ce2f6d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f5ce439dd80" loc="80:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f5ce439dd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f5ce43a5180"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f5ce43a5310"/>
        <function-ref name="getControlA" scoped="" ref="0x7f5ce43a54a0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f5ce43a5630"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f5ce43a57c0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f5ce43a5950"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f5ce43a5ae0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f5ce43a5c70"/>
        <function-ref name="setControlC" scoped="" ref="0x7f5ce43a5e00"/>
        <function-ref name="setControlA" scoped="" ref="0x7f5ce43a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5ce43a4530" loc="81:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f5ce43a4530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f5ce43999a0"/>
        <function-ref name="test" scoped="" ref="0x7f5ce4399020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce439b1b0"/>
        <function-ref name="captured" scoped="" ref="0x7f5ce439bb80"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce439a0d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f5ce43994e0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce439b670"/>
        <function-ref name="start" scoped="" ref="0x7f5ce439a590"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce439aa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5ce4397650" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f5ce4397650"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f5ce438e110"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce4396da0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce43963d0"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce43952a0"/>
        <function-ref name="isOn" scoped="" ref="0x7f5ce438e5d0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4396890"/>
        <function-ref name="start" scoped="" ref="0x7f5ce4395760"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce4395c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5ce43adb20" loc="79:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f5ce43adb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f5ce43a8e60"/>
        <function-ref name="test" scoped="" ref="0x7f5ce43a84e0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce43aa790"/>
        <function-ref name="setScale" scoped="" ref="0x7f5ce43a6350"/>
        <function-ref name="getScale" scoped="" ref="0x7f5ce43a6860"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce43a9670"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ce43a91b0"/>
        <function-ref name="isOn" scoped="" ref="0x7f5ce43a89a0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce43aac50"/>
        <function-ref name="start" scoped="" ref="0x7f5ce43a9b30"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce43a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f5ce4384020" loc="80:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f5ce4384020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f5ce43843a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f5ce4384530"/>
        <function-ref name="getControlA" scoped="" ref="0x7f5ce43846c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f5ce4384850"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f5ce43849e0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f5ce4384b70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f5ce4384d00"/>
        <function-ref name="getControlB" scoped="" ref="0x7f5ce4383020"/>
        <function-ref name="setControlC" scoped="" ref="0x7f5ce43831b0"/>
        <function-ref name="setControlA" scoped="" ref="0x7f5ce4383340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f5ce437e5a0" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f5ce437e5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f5ce437a020"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce437dc10"/>
        <function-ref name="get" scoped="" ref="0x7f5ce437d240"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce437b110"/>
        <function-ref name="isOn" scoped="" ref="0x7f5ce437a4e0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce437d700"/>
        <function-ref name="start" scoped="" ref="0x7f5ce437b5d0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce437ba90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5ce4383850" loc="81:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f5ce4383850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f5ce437fe60"/>
        <function-ref name="test" scoped="" ref="0x7f5ce437f4e0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce43824c0"/>
        <function-ref name="captured" scoped="" ref="0x7f5ce4380020"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce4380530"/>
        <function-ref name="isOn" scoped="" ref="0x7f5ce437f9a0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4382980"/>
        <function-ref name="start" scoped="" ref="0x7f5ce43809f0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce437f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f5ce437aba0" loc="83:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f5ce437aba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f5ce4376550"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce43771f0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce43797f0"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce43776b0"/>
        <function-ref name="isOn" scoped="" ref="0x7f5ce4376a10"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4379cb0"/>
        <function-ref name="start" scoped="" ref="0x7f5ce4377b70"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce4376090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7f5ce4375120" loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7f5ce4375120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f5ce4372a90"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce4374770"/>
        <function-ref name="get" scoped="" ref="0x7f5ce4375d50"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce4374c30"/>
        <function-ref name="isOn" scoped="" ref="0x7f5ce4371020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4374260"/>
        <function-ref name="start" scoped="" ref="0x7f5ce4372110"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce43725d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5ce438cb90" loc="79:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f5ce438cb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f5ce4385020"/>
        <function-ref name="test" scoped="" ref="0x7f5ce4386550"/>
        <function-ref name="get" scoped="" ref="0x7f5ce43897f0"/>
        <function-ref name="setScale" scoped="" ref="0x7f5ce43854e0"/>
        <function-ref name="getScale" scoped="" ref="0x7f5ce43859f0"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce43886b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ce43881f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f5ce4386a10"/>
        <function-ref name="set" scoped="" ref="0x7f5ce4389cb0"/>
        <function-ref name="start" scoped="" ref="0x7f5ce4388b70"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce4386090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5ce42846e0" loc="30:/usr/bin/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f5ce42846e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TOne" ref="0x7f5ce53d1410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ce4280020"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce4281020"/>
        <function-ref name="startAt" scoped="" ref="0x7f5ce42819a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ce42814e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5ce42804e0"/>
        <function-ref name="start" scoped="" ref="0x7f5ce42825b0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce4282ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ce42d7b50" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5ce42d7b50"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f5ce55079c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f5ce55079c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce42c6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5ce42c6410" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f5ce42c6410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f5ce42c2810"/>
        <function-ref name="test" scoped="" ref="0x7f5ce42c3e60"/>
        <function-ref name="get" scoped="" ref="0x7f5ce42c5090"/>
        <function-ref name="setScale" scoped="" ref="0x7f5ce42c2cd0"/>
        <function-ref name="getScale" scoped="" ref="0x7f5ce42c1260"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce42c3020"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ce42c5a60"/>
        <function-ref name="isOn" scoped="" ref="0x7f5ce42c2350"/>
        <function-ref name="set" scoped="" ref="0x7f5ce42c5550"/>
        <function-ref name="start" scoped="" ref="0x7f5ce42c34e0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce42c39a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5ce2f2a610" loc="55:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f5ce2f2a610"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f5ce5507640"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f5ce5507640"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TOne" ref="0x7f5ce53d1410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ce2f27020"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce2f28020"/>
        <function-ref name="startAt" scoped="" ref="0x7f5ce2f289a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ce2f284e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5ce2f274e0"/>
        <function-ref name="start" scoped="" ref="0x7f5ce2f295b0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce2f29ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7f5ce2f22db0" loc="58:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f5ce2f22db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f5ce2f1e9a0"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce2f1f530"/>
        <function-ref name="get" scoped="" ref="0x7f5ce2f20a10"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce2f1f9f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f5ce2f1ee60"/>
        <function-ref name="set" scoped="" ref="0x7f5ce2f1f020"/>
        <function-ref name="start" scoped="" ref="0x7f5ce2f1e020"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce2f1e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7f5ce2f27a30" loc="57:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f5ce2f27a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f5ce2f23e60"/>
        <function-ref name="test" scoped="" ref="0x7f5ce2f234e0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce2f256b0"/>
        <function-ref name="setScale" scoped="" ref="0x7f5ce2f22350"/>
        <function-ref name="getScale" scoped="" ref="0x7f5ce2f22860"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce2f24590"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ce2f240d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f5ce2f239a0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce2f25b70"/>
        <function-ref name="start" scoped="" ref="0x7f5ce2f24a50"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce2f23020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f5ce42773a0" loc="39:/usr/bin/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f5ce42773a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5ce5425180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce4276020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5ce4272200" loc="24:/usr/bin/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f5ce4272200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TOne" ref="0x7f5ce53d1410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce4271090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ce4271a10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ce4271550"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ce4270020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5ce426d020" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f5ce426d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TOne" ref="0x7f5ce53d1410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce426de30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ce425b800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ce425b340"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ce425bcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5ce4259280" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f5ce4259280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f5ce4256810"/>
        <function-ref name="test" scoped="" ref="0x7f5ce4257e60"/>
        <function-ref name="get" scoped="" ref="0x7f5ce4258020"/>
        <function-ref name="setScale" scoped="" ref="0x7f5ce4256cd0"/>
        <function-ref name="getScale" scoped="" ref="0x7f5ce4250260"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce4257020"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ce42589f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f5ce4256350"/>
        <function-ref name="set" scoped="" ref="0x7f5ce42584e0"/>
        <function-ref name="start" scoped="" ref="0x7f5ce42574e0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce42579a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f5ce422f0f0" loc="63:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f5ce422f0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5ce5425180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce422e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ce422e9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ce422e4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ce422ee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5ce424dcf0" loc="62:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f5ce424dcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5ce5425180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce4232b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ce4230550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ce4230090"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ce4230a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f5ce4227b60" loc="48:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f5ce4227b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5ce5425180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce42267d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f5ce4226e40" loc="49:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f5ce4226e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5ce5425180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce4225ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ce4224670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ce42241b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ce4224b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f5ce421c9a0" loc="36:/usr/bin/tinyos-main/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f5ce421c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5ce5425180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f5ce42197e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5ce41a7710" loc="46:/usr/bin/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f5ce41a7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5ce41a7a90"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5ce41a7c20"/>
        <function-ref name="start" scoped="" ref="0x7f5ce41a7db0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce41a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5ce41a47f0" loc="47:/usr/bin/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5ce41a47f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce41a4b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce41a4d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce41a3020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce41a31b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce41a3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ce41a22b0" loc="49:/usr/bin/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5ce41a22b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce41a2630"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce41a27c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce41a2950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce41a2ae0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce41a2c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ce41a3b20" loc="48:/usr/bin/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5ce41a3b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce41a2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5ce419f300" loc="53:/usr/bin/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f5ce419f300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5ce419f680"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5ce419f810"/>
        <function-ref name="led1On" scoped="" ref="0x7f5ce419f9a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5ce419fb30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5ce419fcc0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce419fe50"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5ce419d020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5ce419d660"/>
        <function-ref name="set" scoped="" ref="0x7f5ce419d1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f5ce419d340"/>
        <function-ref name="led2On" scoped="" ref="0x7f5ce419d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f5ce41a0800" loc="51:/usr/bin/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ce41a0800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5ce41a0b80"/>
        <function-ref name="noAck" scoped="" ref="0x7f5ce41a0d10"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5ce419f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5ce41a1020" loc="50:/usr/bin/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5ce41a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce41a13a0"/>
        <function-ref name="source" scoped="" ref="0x7f5ce41a1530"/>
        <function-ref name="address" scoped="" ref="0x7f5ce41a16c0"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce41a1850"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce41a19e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce41a1b70"/>
        <function-ref name="type" scoped="" ref="0x7f5ce41a1d00"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce41a0020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce41a01b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce41a0340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ce41a04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5ce4131d90" loc="54:/usr/bin/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f5ce4131d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce4130180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce4130310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce41304a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce4130630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce41307c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5ce4130a50" loc="55:/usr/bin/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f5ce4130a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce4130dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5ce4198b40" loc="47:/usr/bin/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5ce4198b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce4134020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce41341b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce4134340"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce41344d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce4134660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ce4132720" loc="50:/usr/bin/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5ce4132720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce4132aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce4132c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce4132dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce4131020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce41311b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ce41349e0" loc="48:/usr/bin/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5ce41349e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce4134d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f5ce4131400" loc="51:/usr/bin/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ce4131400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5ce4131780"/>
        <function-ref name="noAck" scoped="" ref="0x7f5ce4131910"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5ce4131aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5ce4133020" loc="49:/usr/bin/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5ce4133020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce41333a0"/>
        <function-ref name="source" scoped="" ref="0x7f5ce4133530"/>
        <function-ref name="address" scoped="" ref="0x7f5ce41336c0"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce4133850"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce41339e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce4133b70"/>
        <function-ref name="type" scoped="" ref="0x7f5ce4133d00"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce4132020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce41321b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce4132340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ce41324d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5ce412b4e0" loc="50:/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f5ce412b4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5ce412b860"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5ce412b9f0"/>
        <function-ref name="start" scoped="" ref="0x7f5ce412bb80"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce412bd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5ce4129020" loc="52:/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f5ce4129020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f5ce530d7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce41293a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce4129530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce41296c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce4129850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce41299e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ce412ee60" loc="49:/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5ce412ee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce412b210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ce412a4c0" loc="51:/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5ce412a4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f5ce530d7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce412a840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5ce4127940" loc="56:/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f5ce4127940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5ce4127cc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5ce4127e50"/>
        <function-ref name="led1On" scoped="" ref="0x7f5ce4120020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5ce41201b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5ce4120340"/>
        <function-ref name="get" scoped="" ref="0x7f5ce41204d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5ce4120660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5ce4120ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce41207f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f5ce4120980"/>
        <function-ref name="led2On" scoped="" ref="0x7f5ce4120b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f5ce4127020" loc="55:/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f5ce4127020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f5ce530d7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f5ce41273a0"/>
        <function-ref name="offset" scoped="" ref="0x7f5ce4127530"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f5ce41276c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5ce4100b70" loc="66:/usr/bin/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f5ce4100b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5ce40ff020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5ce40ff1b0"/>
        <function-ref name="start" scoped="" ref="0x7f5ce40ff340"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce40ff4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f5ce40956e0" loc="332:/usr/bin/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x7f5ce40956e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ce4095a60"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ce4095bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f5ce40f3b80" loc="74:/usr/bin/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x7f5ce40f3b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ce40ec020"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce40ec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f5ce40ce660" loc="191:/usr/bin/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x7f5ce40ce660"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ce40ce9e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ce40ceb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ce4100520" loc="65:/usr/bin/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5ce4100520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce41008a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f5ce40e9870" loc="75:/usr/bin/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x7f5ce40e9870"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f5ce40e9bf0"/>
        <function-ref name="flush" scoped="" ref="0x7f5ce40e9d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f5ce4099c70" loc="322:/usr/bin/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x7f5ce4099c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ce4098020"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ce40981b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f5ce40ed410" loc="72:/usr/bin/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f5ce40ed410"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f5ce40ed790"/>
        <function-ref name="resetSend" scoped="" ref="0x7f5ce40ed920"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f5ce40edab0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f5ce40edc40"/>
        <function-ref name="putData" scoped="" ref="0x7f5ce40eddd0"/>
        <function-ref name="putDone" scoped="" ref="0x7f5ce40f7020"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f5ce40f71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5ce40f7430" loc="73:/usr/bin/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f5ce40f7430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5ce40f77b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5ce40f7940"/>
        <function-ref name="led1On" scoped="" ref="0x7f5ce40f7ad0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5ce40f7c60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5ce40f7df0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce40f3020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5ce40f31b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5ce40f37f0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce40f3340"/>
        <function-ref name="led0On" scoped="" ref="0x7f5ce40f34d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f5ce40f3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f5ce4092a00" loc="341:/usr/bin/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f5ce4092a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ce4092d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ce4091020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f5ce40f8a40" loc="67:/usr/bin/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x7f5ce40f8a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f5ce40f8dc0"/>
        <function-ref name="nextByte" scoped="" ref="0x7f5ce40fe020"/>
        <function-ref name="startSend" scoped="" ref="0x7f5ce40fe1b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f5ce40fe340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f5ce40fd080" loc="68:/usr/bin/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f5ce40fd080"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f5ce40fd400"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f5ce40fd590"/>
        <function-ref name="endPacket" scoped="" ref="0x7f5ce40fd720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f5ce3fc5020" loc="275:/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x7f5ce3fc5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ce3fc53a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ce3fc5530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5ce3fcacc0" loc="51:/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f5ce3fcacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f5ce530d7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce3fc90a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce3fc9230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce3fc93c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce3fc9550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce3fc96e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f5ce3fc5800" loc="158:/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x7f5ce3fc5800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ce3fc5b80"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ce3fc5d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ce3fca5a0" loc="50:/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5ce3fca5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f5ce530d7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce3fca940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f5ce3fc9b00" loc="54:/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x7f5ce3fc9b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f5ce530d7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f5ce3fc8020"/>
        <function-ref name="offset" scoped="" ref="0x7f5ce3fc81b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f5ce3fc8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5ce3fc7920" loc="57:/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f5ce3fc7920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5ce3fc7ca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5ce3fc7e30"/>
        <function-ref name="led1On" scoped="" ref="0x7f5ce3fc6020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5ce3fc61b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5ce3fc6340"/>
        <function-ref name="get" scoped="" ref="0x7f5ce3fc64d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5ce3fc6660"/>
        <function-ref name="led2On" scoped="" ref="0x7f5ce3fc6ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce3fc6980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5ce3fc67f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f5ce3fc6b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f5ce3fc8e80" loc="56:/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x7f5ce3fc8e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f5ce3fc7220"/>
        <function-ref name="nextByte" scoped="" ref="0x7f5ce3fc73b0"/>
        <function-ref name="startSend" scoped="" ref="0x7f5ce3fc7540"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f5ce3fc76d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f5ce3fc8590" loc="55:/usr/bin/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f5ce3fc8590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f5ce3fc8910"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f5ce3fc8aa0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f5ce3fc8c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f5ce3faed20" loc="50:/usr/bin/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f5ce3faed20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce3fbe0e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f5ce3fbe270"/>
        <function-ref name="receive" scoped="" ref="0x7f5ce3fbe400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f5ce3fbe590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f5ce3fbe720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f5ce3fbe8b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce3fbea40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f5ce3fc3e10" loc="48:/usr/bin/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f5ce3fc3e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f5ce3fc01c0"/>
        <function-ref name="resetSend" scoped="" ref="0x7f5ce3fc0350"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f5ce3fc04e0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f5ce3fc0670"/>
        <function-ref name="putData" scoped="" ref="0x7f5ce3fc0800"/>
        <function-ref name="putDone" scoped="" ref="0x7f5ce3fc0990"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f5ce3fc0b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5ce3fbecc0" loc="51:/usr/bin/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f5ce3fbecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5ce3fbd0a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5ce3fbd230"/>
        <function-ref name="led1On" scoped="" ref="0x7f5ce3fbd3c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5ce3fbd550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5ce3fbd6e0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce3fbd870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5ce3fbda00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5ce3fab1b0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce3fbdb90"/>
        <function-ref name="led0On" scoped="" ref="0x7f5ce3fbdd20"/>
        <function-ref name="led2On" scoped="" ref="0x7f5ce3fab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f5ce3f85d50" loc="42:/usr/bin/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f5ce3f85d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce3f8f100"/>
        <function-ref name="receive" scoped="" ref="0x7f5ce3f8f290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f5ce3f91960" loc="41:/usr/bin/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f5ce3f91960"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce3f91ce0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f5ce3f91e70"/>
        <function-ref name="receive" scoped="" ref="0x7f5ce3f90030"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f5ce3f901c0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f5ce3f90350"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f5ce3f904e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce3f90670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5ce3f91150" loc="40:/usr/bin/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f5ce3f91150"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ce3f914d0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3f91660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f5ce3f83820" loc="41:/usr/bin/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f5ce3f83820"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce3f83ba0"/>
        <function-ref name="receive" scoped="" ref="0x7f5ce3f83d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f5ce3f81080" loc="42:/usr/bin/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f5ce3f81080"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce3f81400"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f5ce3f81590"/>
        <function-ref name="receive" scoped="" ref="0x7f5ce3f81720"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f5ce3f818b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f5ce3f81a40"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f5ce3f81bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce3f81d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f5ce3f80360" loc="43:/usr/bin/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f5ce3f80360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5ce5425180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce3f7f1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ce3f7fb30"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ce3f7f670"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ce3f7e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5ce3f83020" loc="40:/usr/bin/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f5ce3f83020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ce3f833a0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3f83530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f5ce3f33dd0" loc="50:/usr/bin/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f5ce3f33dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce3f31180"/>
        <function-ref name="receive" scoped="" ref="0x7f5ce3f31310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x7f5ce3f30610" loc="53:/usr/bin/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x7f5ce3f30610"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ce3f30990"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3f30b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ce3f33020" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5ce3f33020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce3f333a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f5ce3f315a0" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f5ce3f315a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce3f31920"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f5ce3f31ab0"/>
        <function-ref name="receive" scoped="" ref="0x7f5ce3f31c40"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f5ce3f31dd0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f5ce3f30020"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f5ce3f301b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce3f30340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f5ce3f2ecc0" loc="56:/usr/bin/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f5ce3f2ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5ce5425180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce3f2db60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ce3f25550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ce3f25090"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ce3f25a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x7f5ce3f2f620" loc="55:/usr/bin/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x7f5ce3f2f620"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f5ce3f2f9a0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5ce3f2fb30"/>
        <function-ref name="rxDone" scoped="" ref="0x7f5ce3f2fcc0"/>
        <function-ref name="txDone" scoped="" ref="0x7f5ce3f2fe50"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f5ce3f2e020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f5ce3f2e1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5ce3f2e340"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f5ce3f2e4d0"/>
        <function-ref name="tx" scoped="" ref="0x7f5ce3f2e660"/>
        <function-ref name="rx" scoped="" ref="0x7f5ce3f2e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5ce3f33630" loc="49:/usr/bin/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f5ce3f33630"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ce3f339b0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3f33b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x7f5ce3f30df0" loc="54:/usr/bin/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x7f5ce3f30df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ce3f2f1c0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3f2f350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7f5ce3f085f0" loc="49:/usr/bin/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7f5ce3f085f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f5ce3f08970"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5ce3f08b00"/>
        <function-ref name="rxDone" scoped="" ref="0x7f5ce3f08c90"/>
        <function-ref name="txDone" scoped="" ref="0x7f5ce3f08e20"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f5ce3f07020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f5ce3f071b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5ce3f07340"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f5ce3f074d0"/>
        <function-ref name="tx" scoped="" ref="0x7f5ce3f07660"/>
        <function-ref name="rx" scoped="" ref="0x7f5ce3f077f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7f5ce3f05dd0" loc="53:/usr/bin/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7f5ce3f05dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f5ce3f04180"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5ce3f04310"/>
        <function-ref name="rxDone" scoped="" ref="0x7f5ce3f044a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f5ce3f04630"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f5ce3f047c0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f5ce3f04950"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5ce3f04ae0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f5ce3f04c70"/>
        <function-ref name="tx" scoped="" ref="0x7f5ce3f04e00"/>
        <function-ref name="rx" scoped="" ref="0x7f5ce3f03020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7f5ce3f09d20" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7f5ce3f09d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ce3f080e0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3f08270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7f5ce3f07b80" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7f5ce3f07b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ce3f05020"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3f051b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7f5ce3f05540" loc="52:/usr/bin/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7f5ce3f05540"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ce3f058c0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3f05a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7f5ce3f09480" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7f5ce3f09480"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ce3f09800"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3f09990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x7f5ce3f03d80" loc="114:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x7f5ce3f03d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce3f00180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7f5ce3eff730" loc="117:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7f5ce3eff730"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f5ce3effab0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5ce3effc40"/>
        <function-ref name="rxDone" scoped="" ref="0x7f5ce3effdd0"/>
        <function-ref name="txDone" scoped="" ref="0x7f5ce3efe020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f5ce3efe1b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f5ce3efe340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5ce3efe4d0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f5ce3efe660"/>
        <function-ref name="tx" scoped="" ref="0x7f5ce3efe7f0"/>
        <function-ref name="rx" scoped="" ref="0x7f5ce3efe980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x7f5ce3efece0" loc="119:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x7f5ce3efece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce3efd0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7f5ce3eee650" loc="122:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7f5ce3eee650"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f5ce3eee9d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5ce3eeeb60"/>
        <function-ref name="rxDone" scoped="" ref="0x7f5ce3eeecf0"/>
        <function-ref name="txDone" scoped="" ref="0x7f5ce3eeee80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f5ce3eed030"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f5ce3eed1c0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5ce3eed350"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f5ce3eed4e0"/>
        <function-ref name="tx" scoped="" ref="0x7f5ce3eed670"/>
        <function-ref name="rx" scoped="" ref="0x7f5ce3eed800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7f5ce3f00e30" loc="116:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7f5ce3f00e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ce3eff1e0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3eff370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7f5ce3efd470" loc="120:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7f5ce3efd470"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ce3efd7f0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3efd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7f5ce3efdd50" loc="121:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7f5ce3efdd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ce3eee100"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3eee290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7f5ce3eedb30" loc="124:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f5ce3eedb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f5ce3eec020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f5ce3eec1b0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f5ce3eec340"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f5ce3eec4d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f5ce3eec660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f5ce3eec980" loc="125:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f5ce3eec980"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f5ce3eecd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7f5ce3f00550" loc="115:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7f5ce3f00550"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ce3f008d0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3f00a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5ce3e81bb0" loc="24:/usr/bin/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f5ce3e81bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5ce5425180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce3e7da00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ce3e7c4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ce3e7c020"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ce3e7c9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5ce3e7ac50" loc="24:/usr/bin/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f5ce3e7ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TThree" ref="0x7f5ce53d17b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce3e77a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ce3e764e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ce3e76020"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ce3e769a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f5ce3e6edc0" loc="80:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f5ce3e6edc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f5ce3e6c180"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f5ce3e6c310"/>
        <function-ref name="getControlA" scoped="" ref="0x7f5ce3e6c4a0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f5ce3e6c630"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f5ce3e6c7c0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f5ce3e6c950"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f5ce3e6cae0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f5ce3e6cc70"/>
        <function-ref name="setControlC" scoped="" ref="0x7f5ce3e6ce00"/>
        <function-ref name="setControlA" scoped="" ref="0x7f5ce3e6b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5ce3e6b530" loc="81:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f5ce3e6b530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f5ce3e689a0"/>
        <function-ref name="test" scoped="" ref="0x7f5ce3e68020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce3e6a1b0"/>
        <function-ref name="captured" scoped="" ref="0x7f5ce3e6ab80"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce3e690d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f5ce3e684e0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce3e6a670"/>
        <function-ref name="start" scoped="" ref="0x7f5ce3e69590"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3e69a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5ce3e66650" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f5ce3e66650"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f5ce3e5e110"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce3e65da0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce3e653d0"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce3e5f2a0"/>
        <function-ref name="isOn" scoped="" ref="0x7f5ce3e5e5d0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce3e65890"/>
        <function-ref name="start" scoped="" ref="0x7f5ce3e5f760"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3e5fc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5ce3e75b30" loc="79:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f5ce3e75b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f5ce3e6fe60"/>
        <function-ref name="test" scoped="" ref="0x7f5ce3e6f4e0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce3e72790"/>
        <function-ref name="setScale" scoped="" ref="0x7f5ce3e6e350"/>
        <function-ref name="getScale" scoped="" ref="0x7f5ce3e6e860"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce3e70670"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ce3e701b0"/>
        <function-ref name="isOn" scoped="" ref="0x7f5ce3e6f9a0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce3e72c50"/>
        <function-ref name="start" scoped="" ref="0x7f5ce3e70b30"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3e6f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f5ce3e54020" loc="80:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f5ce3e54020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f5ce3e543a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f5ce3e54530"/>
        <function-ref name="getControlA" scoped="" ref="0x7f5ce3e546c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f5ce3e54850"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f5ce3e549e0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f5ce3e54b70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f5ce3e54d00"/>
        <function-ref name="getControlB" scoped="" ref="0x7f5ce3e53020"/>
        <function-ref name="setControlC" scoped="" ref="0x7f5ce3e531b0"/>
        <function-ref name="setControlA" scoped="" ref="0x7f5ce3e53340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f5ce3e4e5a0" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f5ce3e4e5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f5ce3e4a020"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce3e4dc10"/>
        <function-ref name="get" scoped="" ref="0x7f5ce3e4d240"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce3e4b110"/>
        <function-ref name="isOn" scoped="" ref="0x7f5ce3e4a4e0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce3e4d700"/>
        <function-ref name="start" scoped="" ref="0x7f5ce3e4b5d0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3e4ba90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5ce3e53850" loc="81:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f5ce3e53850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f5ce3e4fe60"/>
        <function-ref name="test" scoped="" ref="0x7f5ce3e4f4e0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce3e524c0"/>
        <function-ref name="captured" scoped="" ref="0x7f5ce3e50020"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce3e50530"/>
        <function-ref name="isOn" scoped="" ref="0x7f5ce3e4f9a0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce3e52980"/>
        <function-ref name="start" scoped="" ref="0x7f5ce3e509f0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3e4f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f5ce3e4aba0" loc="83:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f5ce3e4aba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f5ce3e46550"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce3e481f0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce3e497f0"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce3e486b0"/>
        <function-ref name="isOn" scoped="" ref="0x7f5ce3e46a10"/>
        <function-ref name="set" scoped="" ref="0x7f5ce3e49cb0"/>
        <function-ref name="start" scoped="" ref="0x7f5ce3e48b70"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3e46090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7f5ce3e45120" loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7f5ce3e45120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f5ce3e42a90"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce3e44770"/>
        <function-ref name="get" scoped="" ref="0x7f5ce3e45d50"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce3e44c30"/>
        <function-ref name="isOn" scoped="" ref="0x7f5ce3e41020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce3e44260"/>
        <function-ref name="start" scoped="" ref="0x7f5ce3e42110"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3e425d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5ce3e5cb90" loc="79:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f5ce3e5cb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f5ce3e55020"/>
        <function-ref name="test" scoped="" ref="0x7f5ce3e56550"/>
        <function-ref name="get" scoped="" ref="0x7f5ce3e597f0"/>
        <function-ref name="setScale" scoped="" ref="0x7f5ce3e554e0"/>
        <function-ref name="getScale" scoped="" ref="0x7f5ce3e559f0"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce3e586b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ce3e581f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f5ce3e56a10"/>
        <function-ref name="set" scoped="" ref="0x7f5ce3e59cb0"/>
        <function-ref name="start" scoped="" ref="0x7f5ce3e58b70"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3e56090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ce3db9c60" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5ce3db9c60"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f5ce55079c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f5ce55079c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce3db8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5ce3db8410" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f5ce3db8410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f5ce3db4810"/>
        <function-ref name="test" scoped="" ref="0x7f5ce3db6e60"/>
        <function-ref name="get" scoped="" ref="0x7f5ce3db7090"/>
        <function-ref name="setScale" scoped="" ref="0x7f5ce3db4cd0"/>
        <function-ref name="getScale" scoped="" ref="0x7f5ce3db3260"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce3db6020"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ce3db7a60"/>
        <function-ref name="isOn" scoped="" ref="0x7f5ce3db4350"/>
        <function-ref name="set" scoped="" ref="0x7f5ce3db7550"/>
        <function-ref name="start" scoped="" ref="0x7f5ce3db64e0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3db69a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5ce3db13c0" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f5ce3db13c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TThree" ref="0x7f5ce53d17b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce3daf240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ce3dafbc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ce3daf700"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ce3dae0d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5ce3dae660" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f5ce3dae660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f5ce3daaa90"/>
        <function-ref name="test" scoped="" ref="0x7f5ce3daa110"/>
        <function-ref name="get" scoped="" ref="0x7f5ce3dad3d0"/>
        <function-ref name="setScale" scoped="" ref="0x7f5ce3da9020"/>
        <function-ref name="getScale" scoped="" ref="0x7f5ce3da9530"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce3dab2a0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ce3dadda0"/>
        <function-ref name="isOn" scoped="" ref="0x7f5ce3daa5d0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce3dad890"/>
        <function-ref name="start" scoped="" ref="0x7f5ce3dab760"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3dabc20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f5ce3d9d0f0" loc="63:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f5ce3d9d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TThree" ref="0x7f5ce53d17b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce3d9c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ce3d9c9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ce3d9c4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ce3d9ce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5ce3da5cd0" loc="62:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f5ce3da5cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce5426d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5ce5425180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce3da0b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5ce3d9f550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5ce3d9f090"/>
        <function-ref name="overflow" scoped="" ref="0x7f5ce3d9fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f5ce3d901e0" loc="47:/usr/bin/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x7f5ce3d901e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f5ce3d90560"/>
        <function-ref name="offset" scoped="" ref="0x7f5ce3d906f0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f5ce3d90880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5ce3d7b940" loc="47:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationC.nc">
      <component-ref qname="DisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f5ce3d7b940"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ce3d7bcc0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3d7be50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x7f5ce3d68c00" loc="52:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x7f5ce3d68c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ce3d6c020"/>
        <function-ref name="incrementCounter" scoped="" ref="0x7f5ce3d6c1b0"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce3d6c340"/>
        <function-ref name="start" scoped="" ref="0x7f5ce3d6c4d0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3d6c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x7f5ce3d6dc80" loc="51:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x7f5ce3d6dc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x7f5ce3d76230"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3d76870"/>
        <function-ref name="newData" scoped="" ref="0x7f5ce3d763c0"/>
        <function-ref name="start" scoped="" ref="0x7f5ce3d76550"/>
        <function-ref name="requestSeqno" scoped="" ref="0x7f5ce3d766e0"/>
        <function-ref name="requestData" scoped="" ref="0x7f5ce3d760a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5ce3d7ac00" loc="48:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f5ce3d7ac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ce3d77020"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3d771b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x7f5ce3d67020" loc="53:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x7f5ce3d67020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ce3d673a0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3d67530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeReceive" ref="0x7f5ce3d5d200" loc="57:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeReceive" scoped="" ref="0x7f5ce3d5d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce3d5d580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeAMSend" ref="0x7f5ce3d5e4c0" loc="56:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeAMSend" scoped="" ref="0x7f5ce3d5e4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce3d5e840"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce3d5e9d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce3d5eb60"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce3d5ecf0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce3d5ee80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f5ce3d5f100" loc="53:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5ce3d5f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce3d5f480"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce3d5f610"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce3d5f7a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce3d5f930"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce3d5fac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x7f5ce3d62570" loc="50:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x7f5ce3d62570"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ce3d628f0"/>
        <function-ref name="incrementCounter" scoped="" ref="0x7f5ce3d62a80"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce3d62c10"/>
        <function-ref name="start" scoped="" ref="0x7f5ce3d62da0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3d61020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x7f5ce3d631d0" loc="49:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x7f5ce3d631d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x7f5ce3d636e0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3d63d20"/>
        <function-ref name="newData" scoped="" ref="0x7f5ce3d63870"/>
        <function-ref name="start" scoped="" ref="0x7f5ce3d63a00"/>
        <function-ref name="requestSeqno" scoped="" ref="0x7f5ce3d63b90"/>
        <function-ref name="requestData" scoped="" ref="0x7f5ce3d63550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f5ce3d5fd60" loc="54:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5ce3d5fd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce3d5e180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5ce3d5d800" loc="59:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f5ce3d5d800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5ce3d5db80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5ce3d5dd10"/>
        <function-ref name="led1On" scoped="" ref="0x7f5ce3d5c020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5ce3d5c1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5ce3d5c340"/>
        <function-ref name="get" scoped="" ref="0x7f5ce3d5c4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5ce3d5c660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5ce3d5cca0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce3d5c7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f5ce3d5c980"/>
        <function-ref name="led2On" scoped="" ref="0x7f5ce3d5cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5ce3d642c0" loc="46:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f5ce3d642c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ce3d64640"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3d647d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x7f5ce3d61930" loc="51:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x7f5ce3d61930"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ce3d61cb0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3d61e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5ce3c77020" loc="49:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5ce3c77020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce3c773a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce3c77530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce3c776c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce3c77850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce3c779e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ce3c77c30" loc="50:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5ce3c77c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce3c75020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce3c751b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce3c75340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce3c754d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce3c75660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5ce3c758b0" loc="51:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5ce3c758b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce3c75c30"/>
        <function-ref name="source" scoped="" ref="0x7f5ce3c75dc0"/>
        <function-ref name="address" scoped="" ref="0x7f5ce3c74020"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce3c741b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce3c74340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce3c744d0"/>
        <function-ref name="type" scoped="" ref="0x7f5ce3c74660"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce3c747f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce3c74980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce3c74b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ce3c74ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f5ce3c73020" loc="52:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f5ce3c73020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5ce3c733a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f5ce3c73530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5ce3c736c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5ce2e3a420" loc="49:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5ce2e3a420"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce2e3a7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce2e3a930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce2e3aac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce2e3ac50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce2e3ade0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ce2e38060" loc="50:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5ce2e38060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce2e383e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce2e38570"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce2e38700"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce2e38890"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce2e38a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5ce2e38c70" loc="51:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5ce2e38c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce2e37020"/>
        <function-ref name="source" scoped="" ref="0x7f5ce2e371b0"/>
        <function-ref name="address" scoped="" ref="0x7f5ce2e37340"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce2e374d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce2e37660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce2e377f0"/>
        <function-ref name="type" scoped="" ref="0x7f5ce2e37980"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce2e37b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce2e37ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce2e37e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ce2e36020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f5ce2e362b0" loc="52:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f5ce2e362b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5ce2e36630"/>
        <function-ref name="noAck" scoped="" ref="0x7f5ce2e367c0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5ce2e36950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5ce2e2c660" loc="44:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5ce2e2c660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce2e2c9e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce2e2cb70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce2e2cd00"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce2e2b020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce2e2b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f5ce2e2b460" loc="46:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f5ce2e2b460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce2e2b7e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce2e2b970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce2e2bb00"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce2e2bc90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce2e2be20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f5ce2e2a0e0" loc="47:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5ce2e2a0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce2e2a460"/>
        <function-ref name="source" scoped="" ref="0x7f5ce2e2a5f0"/>
        <function-ref name="address" scoped="" ref="0x7f5ce2e2a780"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce2e2a910"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce2e2aaa0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce2e2ac30"/>
        <function-ref name="type" scoped="" ref="0x7f5ce2e2adc0"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce2e29020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce2e291b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce2e29340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ce2e294d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5ce3ce7940" loc="43:/usr/bin/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f5ce3ce7940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce3ce7cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce3ce7e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce3cda020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce3cda1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce3cda340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f5ce3c8e400" loc="48:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5ce3c8e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce3c8e7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce3c8e930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce3c8eac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce3c8ec50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce3c8ede0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5ce3c8f4b0" loc="46:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f5ce3c8f4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce3c8f850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce3c8f9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce3c8fb70"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce3c8fd00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce3c8e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f5ce3c8b720" loc="50:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5ce3c8b720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce3c8baa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce3c8bc30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce3c8bdc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce3c8a020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce3c8a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f5ce3c8a480" loc="169:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7f5ce3c8a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ce3c8a800"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ce3c8a990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f5ce3c8ac60" loc="126:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7f5ce3c8ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ce3c89020"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ce3c891b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f5ce3c8d060" loc="49:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5ce3c8d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce3c8d3e0"/>
        <function-ref name="source" scoped="" ref="0x7f5ce3c8d570"/>
        <function-ref name="address" scoped="" ref="0x7f5ce3c8d700"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce3c8d890"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce3c8da20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce3c8dbb0"/>
        <function-ref name="type" scoped="" ref="0x7f5ce3c8dd40"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce3c8b020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce3c8b1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce3c8b340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ce3c8b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ce3c6a6b0" loc="46:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5ce3c6a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce3c6aa30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce3c6abc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce3c6ad50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce3c68020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce3c681b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ce3c6a0e0" loc="45:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5ce3c6a0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce3c6a460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5ce3c68400" loc="47:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5ce3c68400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce3c68780"/>
        <function-ref name="source" scoped="" ref="0x7f5ce3c68910"/>
        <function-ref name="address" scoped="" ref="0x7f5ce3c68aa0"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce3c68c30"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce3c68dc0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce3c67020"/>
        <function-ref name="type" scoped="" ref="0x7f5ce3c671b0"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce3c67340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce3c674d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce3c67660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ce3c677f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5ce3c65df0" loc="49:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5ce3c65df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce3c641c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce3c64350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce3c644e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce3c64670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce3c64800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ce3c64a50" loc="50:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5ce3c64a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce3c64dd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce3c63020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce3c631b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce3c63340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce3c634d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5ce3c63720" loc="51:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5ce3c63720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce3c63aa0"/>
        <function-ref name="source" scoped="" ref="0x7f5ce3c63c30"/>
        <function-ref name="address" scoped="" ref="0x7f5ce3c63dc0"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce3c62020"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce3c621b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce3c62340"/>
        <function-ref name="type" scoped="" ref="0x7f5ce3c624d0"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce3c62660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce3c627f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce3c62980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ce3c62b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f5ce3c62da0" loc="52:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f5ce3c62da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5ce3c61180"/>
        <function-ref name="noAck" scoped="" ref="0x7f5ce3c61310"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5ce3c614a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5ce2dcc540" loc="49:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5ce2dcc540"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce2dcc8c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce2dcca50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce2dccbe0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce2dccd70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce2dcb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ce2dcb270" loc="50:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5ce2dcb270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce2dcb5f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce2dcb780"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce2dcb910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce2dcbaa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce2dcbc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5ce2dcbe80" loc="51:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5ce2dcbe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce2dca220"/>
        <function-ref name="source" scoped="" ref="0x7f5ce2dca3b0"/>
        <function-ref name="address" scoped="" ref="0x7f5ce2dca540"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce2dca6d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce2dca860"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce2dca9f0"/>
        <function-ref name="type" scoped="" ref="0x7f5ce2dcab80"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce2dcad10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce2dc9020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce2dc91b0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ce2dc9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f5ce2dc95d0" loc="52:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f5ce2dc95d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5ce2dc9950"/>
        <function-ref name="noAck" scoped="" ref="0x7f5ce2dc9ae0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5ce2dc9c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5ce2db9940" loc="44:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5ce2db9940"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce2db9cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce2db9e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce2db8020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce2db81b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce2db8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f5ce2db85f0" loc="46:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f5ce2db85f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce2db8970"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce2db8b00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce2db8c90"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce2db8e20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce2db7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f5ce2db7270" loc="47:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5ce2db7270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce2db75f0"/>
        <function-ref name="source" scoped="" ref="0x7f5ce2db7780"/>
        <function-ref name="address" scoped="" ref="0x7f5ce2db7910"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce2db7aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce2db7c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce2db7dc0"/>
        <function-ref name="type" scoped="" ref="0x7f5ce2db5020"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce2db51b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce2db5340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce2db54d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ce2db5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ce3c5e5f0" loc="46:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5ce3c5e5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce3c5e970"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce3c5eb00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce3c5ec90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce3c5ee20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce3c5d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ce3c5e020" loc="45:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5ce3c5e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce3c5e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5ce3c5d270" loc="47:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5ce3c5d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce3c5d5f0"/>
        <function-ref name="source" scoped="" ref="0x7f5ce3c5d780"/>
        <function-ref name="address" scoped="" ref="0x7f5ce3c5d910"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce3c5daa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce3c5dc30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce3c5ddc0"/>
        <function-ref name="type" scoped="" ref="0x7f5ce3c5c020"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce3c5c1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce3c5c340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce3c5c4d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ce3c5c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ce3c57380" loc="46:/usr/bin/tinyos-main/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5ce3c57380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce3c57700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f5ce3c579c0" loc="47:/usr/bin/tinyos-main/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f5ce3c579c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5ce3c57d40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5ce3c56020"/>
        <function-ref name="led1On" scoped="" ref="0x7f5ce3c561b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5ce3c56340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5ce3c564d0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce3c56660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5ce3c567f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5ce3c56e30"/>
        <function-ref name="set" scoped="" ref="0x7f5ce3c56980"/>
        <function-ref name="led0On" scoped="" ref="0x7f5ce3c56b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f5ce3c56ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x7f5ce3b51330" loc="51:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="AntiTheftRootAppC.DisseminatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x7f5ce3b51330"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="settings" ref="0x7f5ce5383bc0"/>
            <typename><typedef-ref name="settings_t" ref="0x7f5ce5382670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x7f5ce3b50020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x7f5ce3b54730" loc="50:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="AntiTheftRootAppC.DisseminatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x7f5ce3b54730"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="settings" ref="0x7f5ce5383bc0"/>
            <typename><typedef-ref name="settings_t" ref="0x7f5ce5382670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x7f5ce3b52da0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce3b523d0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce3b52890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="changedTask" ref="0x7f5ce2d97de0" loc="62:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="AntiTheftRootAppC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="changedTask" scoped="" ref="0x7f5ce2d97de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ce2d96180"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ce2d96310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationCache" ref="0x7f5ce2d99830" loc="50:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="AntiTheftRootAppC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x7f5ce2d99830"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-functions>
        <function-ref name="requestData" scoped="" ref="0x7f5ce2d99d40"/>
        <function-ref name="storeData" scoped="" ref="0x7f5ce2d984d0"/>
        <function-ref name="newData" scoped="" ref="0x7f5ce2d98020"/>
        <function-ref name="start" scoped="" ref="0x7f5ce2d981b0"/>
        <function-ref name="requestSeqno" scoped="" ref="0x7f5ce2d98340"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce2d99bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x7f5ce2d9b570" loc="49:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="AntiTheftRootAppC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x7f5ce2d9b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="settings" ref="0x7f5ce5383bc0"/>
            <typename><typedef-ref name="settings_t" ref="0x7f5ce5382670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x7f5ce2d991b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5ce2d98760" loc="52:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="AntiTheftRootAppC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f5ce2d98760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5ce2d98ae0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5ce2d98c70"/>
        <function-ref name="led1On" scoped="" ref="0x7f5ce2d98e00"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5ce2d97020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5ce2d971b0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce2d97340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5ce2d974d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f5ce2d97b10"/>
        <function-ref name="set" scoped="" ref="0x7f5ce2d977f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f5ce2d97660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5ce2d97980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x7f5ce2d9d8e0" loc="48:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="AntiTheftRootAppC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x7f5ce2d9d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="settings" ref="0x7f5ce5383bc0"/>
            <typename><typedef-ref name="settings_t" ref="0x7f5ce5382670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x7f5ce2d9b020"/>
        <function-ref name="get" scoped="" ref="0x7f5ce2d9c5a0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce2d9ca60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5ce2d9d020" loc="46:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="AntiTheftRootAppC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f5ce2d9d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ce2d9d3a0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce2d9d530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x7f5ce3c05af0" loc="45:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationTimerP.nc">
      <component-ref qname="DisseminationTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x7f5ce3c05af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ce3c05e70"/>
        <function-ref name="incrementCounter" scoped="" ref="0x7f5ce3c02030"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce3c021c0"/>
        <function-ref name="start" scoped="" ref="0x7f5ce3c02350"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3c024e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x7f5ce3b5f780" loc="55:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x7f5ce3b5f780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ce3b5fb20"/>
        <function-ref name="incrementCounter" scoped="" ref="0x7f5ce3b5fcb0"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce3b5fe40"/>
        <function-ref name="start" scoped="" ref="0x7f5ce3b5e020"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3b5e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pending" ref="0x7f5ce2d6e450" loc="62:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pending" scoped="" ref="0x7f5ce2d6e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7f5ce2d6e7d0"/>
        <function-ref name="clear" scoped="" ref="0x7f5ce2d6e960"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce2d6eaf0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce2d6ec80"/>
        <function-ref name="assign" scoped="" ref="0x7f5ce2d6ee10"/>
        <function-ref name="setAll" scoped="" ref="0x7f5ce2d6d020"/>
        <function-ref name="set" scoped="" ref="0x7f5ce2d6d1b0"/>
        <function-ref name="size" scoped="" ref="0x7f5ce2d6d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Changed" ref="0x7f5ce2d6d5d0" loc="63:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Changed" scoped="" ref="0x7f5ce2d6d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7f5ce2d6d950"/>
        <function-ref name="clear" scoped="" ref="0x7f5ce2d6dae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce2d6dc70"/>
        <function-ref name="get" scoped="" ref="0x7f5ce2d6de00"/>
        <function-ref name="assign" scoped="" ref="0x7f5ce2d6c020"/>
        <function-ref name="setAll" scoped="" ref="0x7f5ce2d6c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce2d6c340"/>
        <function-ref name="size" scoped="" ref="0x7f5ce2d6c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f5ce2d6c720" loc="64:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f5ce2d6c720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f5ce2d6caa0"/>
        <function-ref name="rand32" scoped="" ref="0x7f5ce2d6cc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x7f5ce2d7a210" loc="58:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x7f5ce2d7a210"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5ce2d7a5b0"/>
        <function-ref name="incrementCounter" scoped="" ref="0x7f5ce2d7a740"/>
        <function-ref name="reset" scoped="" ref="0x7f5ce2d7a8d0"/>
        <function-ref name="start" scoped="" ref="0x7f5ce2d7aa60"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce2d7abf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ce2d7baa0" loc="57:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5ce2d7baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce2d7be20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="timerTask" ref="0x7f5ce2d69610" loc="154:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="timerTask" scoped="" ref="0x7f5ce2d69610"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ce2d69990"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ce2d69b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5ce2d6ce80" loc="65:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f5ce2d6ce80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5ce2d6b220"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5ce2d6b3b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f5ce2d6b540"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5ce2d6b6d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5ce2d6b860"/>
        <function-ref name="get" scoped="" ref="0x7f5ce2d6b9f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5ce2d6bb80"/>
        <function-ref name="led0On" scoped="" ref="0x7f5ce2d69340"/>
        <function-ref name="set" scoped="" ref="0x7f5ce2d69020"/>
        <function-ref name="led2On" scoped="" ref="0x7f5ce2d6bd10"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5ce2d691b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5ce2d79020" loc="61:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f5ce2d79020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ce2d75630"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce2d78a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5ce2d76920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5ce2d764a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5ce2d6e020"/>
        <function-ref name="gett0" scoped="" ref="0x7f5ce2d75ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ce2d76020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5ce2d79c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5ce2d75020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5ce2d78110"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce2d785e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5ce2d66990" loc="45:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f5ce2d66990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ce2d63e80"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce2d644a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5ce2d63260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5ce2d64da0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5ce2d627a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f5ce2d62320"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ce2d64920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5ce2d655a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5ce2d63870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5ce2d65a70"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce2d64020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ce2d5f190" loc="46:/usr/bin/tinyos-main/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5ce2d5f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce2d5f510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7f5ce2d5f7a0" loc="47:/usr/bin/tinyos-main/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7f5ce2d5f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7f5ce2d5fb20"/>
        <function-ref name="clear" scoped="" ref="0x7f5ce2d5fcb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce2d5fe40"/>
        <function-ref name="get" scoped="" ref="0x7f5ce2d5e020"/>
        <function-ref name="assign" scoped="" ref="0x7f5ce2d5e1b0"/>
        <function-ref name="setAll" scoped="" ref="0x7f5ce2d5e340"/>
        <function-ref name="set" scoped="" ref="0x7f5ce2d5e4d0"/>
        <function-ref name="size" scoped="" ref="0x7f5ce2d5e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ce2d5c020" loc="46:/usr/bin/tinyos-main/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5ce2d5c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce2d5c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7f5ce2d5c630" loc="47:/usr/bin/tinyos-main/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7f5ce2d5c630"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7f5ce2d5c9b0"/>
        <function-ref name="clear" scoped="" ref="0x7f5ce2d5cb40"/>
        <function-ref name="toggle" scoped="" ref="0x7f5ce2d5ccd0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce2d5ce60"/>
        <function-ref name="assign" scoped="" ref="0x7f5ce2d5b020"/>
        <function-ref name="setAll" scoped="" ref="0x7f5ce2d5b1b0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce2d5b340"/>
        <function-ref name="size" scoped="" ref="0x7f5ce2d5b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ce3b475f0" loc="46:/usr/bin/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="AntiTheftRootAppC.SettingsReceiver"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5ce3b475f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce3b47970"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce3b47b00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce3b47c90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce3b47e20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce3b46020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ce3b47020" loc="45:/usr/bin/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="AntiTheftRootAppC.SettingsReceiver"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5ce3b47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce3b473a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5ce3b46270" loc="47:/usr/bin/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="AntiTheftRootAppC.SettingsReceiver"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5ce3b46270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce3b465f0"/>
        <function-ref name="source" scoped="" ref="0x7f5ce3b46780"/>
        <function-ref name="address" scoped="" ref="0x7f5ce3b46910"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce3b46aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce3b46c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce3b46dc0"/>
        <function-ref name="type" scoped="" ref="0x7f5ce3b45020"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce3b451b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce3b45340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce3b454d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ce3b45660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f5ce3b0d7f0" loc="59:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x7f5ce3b0d7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f5ce3b0db70"/>
        <function-ref name="setRoot" scoped="" ref="0x7f5ce3b0dd00"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f5ce3b03020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x7f5ce3b273d0" loc="54:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x7f5ce3b273d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f5ce3b27750"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f5ce3b278e0"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce3b27a70"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f5ce3b27c00"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f5ce3b27d90"/>
        <function-ref name="getType" scoped="" ref="0x7f5ce3b2f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x7f5ce3af79c0" loc="64:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x7f5ce3af79c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7f5ce3af7e40"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7f5ce3b01020"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7f5ce3b011b0"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7f5ce3b01340"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7f5ce3b014d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7f5ce3b344a0" loc="51:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7f5ce3b344a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f5ce3b40450"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7f5ce3b34820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ce3b34ab0" loc="53:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5ce3b34ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce3b34e30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce3b33020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce3b331b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce3b33340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce3b334d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f5ce3b354c0" loc="50:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f5ce3b354c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f5ce3b40450"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce3b35840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5ce3b37580" loc="48:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f5ce3b37580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce3b37900"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce3b37a90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce3b37c20"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce3b37db0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce3b36020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x7f5ce3b042c0" loc="57:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x7f5ce3b042c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x7f5ce3b04640"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f5ce3b047d0"/>
        <function-ref name="numNeighbors" scoped="" ref="0x7f5ce3b04960"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x7f5ce3b04af0"/>
        <function-ref name="getEtx" scoped="" ref="0x7f5ce3b04c80"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x7f5ce3b04e10"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x7f5ce3b0e020"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x7f5ce3b0e1b0"/>
        <function-ref name="getParent" scoped="" ref="0x7f5ce3b0e340"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x7f5ce3b0e4d0"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x7f5ce3b0e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ce3b36850" loc="49:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5ce3b36850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f5ce3b40450"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce3b36bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x7f5ce3b0d020" loc="58:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x7f5ce3b0d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7f5ce3b0d3a0"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7f5ce3b0d530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x7f5ce3b0f140" loc="55:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x7f5ce3b0f140"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f5ce3b0f4c0"/>
        <function-ref name="option" scoped="" ref="0x7f5ce3b0f650"/>
        <function-ref name="setEtx" scoped="" ref="0x7f5ce3b0f7e0"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f5ce3b0f970"/>
        <function-ref name="clearOption" scoped="" ref="0x7f5ce3b0fb00"/>
        <function-ref name="getEtx" scoped="" ref="0x7f5ce3b0fc90"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f5ce3b0fe20"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce3b2e020"/>
        <function-ref name="setOption" scoped="" ref="0x7f5ce3b2e1b0"/>
        <function-ref name="matchPacket" scoped="" ref="0x7f5ce3b2e340"/>
        <function-ref name="getThl" scoped="" ref="0x7f5ce3b2e4d0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f5ce3b2e660"/>
        <function-ref name="matchInstance" scoped="" ref="0x7f5ce3b2e7f0"/>
        <function-ref name="getType" scoped="" ref="0x7f5ce3b2ea80"/>
        <function-ref name="setThl" scoped="" ref="0x7f5ce3b2ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5ce3b39850" loc="47:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f5ce3b39850"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ce3b39bd0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3b39d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x7f5ce3afe670" loc="63:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x7f5ce3afe670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x7f5ce3afe9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f5ce3ae2470" loc="92:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x7f5ce3ae2470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f5ce3ae27f0"/>
        <function-ref name="setRoot" scoped="" ref="0x7f5ce3ae2980"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f5ce3ae2b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x7f5ce3af0ce0" loc="86:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x7f5ce3af0ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f5ce3aef0a0"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f5ce3aef230"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce3aef3c0"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f5ce3aef550"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f5ce3aef6e0"/>
        <function-ref name="getType" scoped="" ref="0x7f5ce3aef870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x7f5ce3adba30" loc="90:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x7f5ce3adba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x7f5ce3adbdb0"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x7f5ce3ae3020"/>
        <function-ref name="txNoAck" scoped="" ref="0x7f5ce3ae31b0"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x7f5ce3ae3340"/>
        <function-ref name="evicted" scoped="" ref="0x7f5ce3ae34d0"/>
        <function-ref name="clearDLQ" scoped="" ref="0x7f5ce3ae3660"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x7f5ce3ae37f0"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x7f5ce3ae3980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x7f5ce3adab80" loc="97:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x7f5ce3adab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7f5ce3ad9020"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7f5ce3ad91b0"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7f5ce3ad9340"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7f5ce3ad94d0"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7f5ce3ad9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7f5ce3af19c0" loc="83:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7f5ce3af19c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f5ce3b40450"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7f5ce3af1d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ce3af0020" loc="85:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5ce3af0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce3af03a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce3af0530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce3af06c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce3af0850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce3af09e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f5ce3af2da0" loc="82:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f5ce3af2da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f5ce3b40450"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce3af1180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5ce3af4e60" loc="80:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f5ce3af4e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce3af3210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce3af33a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce3af3530"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce3af36c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce3af3850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x7f5ce3aeda00" loc="89:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x7f5ce3aeda00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x7f5ce3aedd80"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f5ce3ae5020"/>
        <function-ref name="numNeighbors" scoped="" ref="0x7f5ce3ae51b0"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x7f5ce3ae5340"/>
        <function-ref name="getEtx" scoped="" ref="0x7f5ce3ae54d0"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x7f5ce3ae5660"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x7f5ce3ae57f0"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x7f5ce3ae5980"/>
        <function-ref name="getParent" scoped="" ref="0x7f5ce3ae5b10"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x7f5ce3ae5ca0"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x7f5ce3ae5e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ce3af21d0" loc="81:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5ce3af21d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f5ce3b40450"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce3af2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x7f5ce3ae3c60" loc="91:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x7f5ce3ae3c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7f5ce3ae2020"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7f5ce3ae21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x7f5ce3aefb20" loc="87:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x7f5ce3aefb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f5ce3aee020"/>
        <function-ref name="option" scoped="" ref="0x7f5ce3aee1b0"/>
        <function-ref name="setEtx" scoped="" ref="0x7f5ce3aee340"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f5ce3aee4d0"/>
        <function-ref name="clearOption" scoped="" ref="0x7f5ce3aee660"/>
        <function-ref name="getEtx" scoped="" ref="0x7f5ce3aee7f0"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f5ce3aee980"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce3aeeb10"/>
        <function-ref name="setOption" scoped="" ref="0x7f5ce3aeeca0"/>
        <function-ref name="matchPacket" scoped="" ref="0x7f5ce3aeee30"/>
        <function-ref name="getThl" scoped="" ref="0x7f5ce3aed020"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f5ce3aed1b0"/>
        <function-ref name="matchInstance" scoped="" ref="0x7f5ce3aed340"/>
        <function-ref name="getType" scoped="" ref="0x7f5ce3aed5d0"/>
        <function-ref name="setThl" scoped="" ref="0x7f5ce3aed760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5ce3af4170" loc="79:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f5ce3af4170"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ce3af44f0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3af4680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x7f5ce3ada410" loc="96:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x7f5ce3ada410"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x7f5ce3ada890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5ce3952780" loc="142:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f5ce3952780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce3952b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x7f5ce3950a40" loc="145:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x7f5ce3950a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f5ce3950dc0"/>
        <function-ref name="setRoot" scoped="" ref="0x7f5ce394e020"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f5ce394e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5ce396ec00" loc="126:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f5ce396ec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce396d020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce396d1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce396d340"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce396d4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce396d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x7f5ce394a270" loc="156:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x7f5ce394a270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7f5ce394a5f0"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7f5ce394a780"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7f5ce394a910"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7f5ce394aaa0"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7f5ce394ac30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x7f5ce3971720" loc="116:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x7f5ce3971720"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f5ce3971aa0"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f5ce3971c30"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce3971dc0"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f5ce3970020"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f5ce39701b0"/>
        <function-ref name="getType" scoped="" ref="0x7f5ce3970340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x7f5ce3967890" loc="129:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x7f5ce3967890"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x7f5ce3967c10"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x7f5ce3967da0"/>
        <function-ref name="txNoAck" scoped="" ref="0x7f5ce3966020"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x7f5ce39661b0"/>
        <function-ref name="evicted" scoped="" ref="0x7f5ce3966340"/>
        <function-ref name="clearDLQ" scoped="" ref="0x7f5ce39664d0"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x7f5ce3966660"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x7f5ce39667f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SentCache" ref="0x7f5ce3955d40" loc="140:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SentCache" scoped="" ref="0x7f5ce3955d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
              <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x7f5ce3953980"/>
        <function-ref name="flush" scoped="" ref="0x7f5ce3952350"/>
        <function-ref name="lookup" scoped="" ref="0x7f5ce3953e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7f5ce39733a0" loc="114:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7f5ce39733a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f5ce3b40450"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7f5ce3973740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ce3973990" loc="115:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5ce3973990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce3973d10"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce3971020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce39711b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce3971340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce39714d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f5ce3974b00" loc="113:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f5ce3974b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f5ce3b40450"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce3973020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f5ce394ba40" loc="149:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f5ce394ba40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f5ce394bdc0"/>
        <function-ref name="rand32" scoped="" ref="0x7f5ce394a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5ce3975530" loc="111:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f5ce3975530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce39758d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce3975a60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce3975bf0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce3975d80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce3974020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RetxmitTimer" ref="0x7f5ce396c3d0" loc="128:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RetxmitTimer" scoped="" ref="0x7f5ce396c3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ce3968a20"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce396a020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5ce396ada0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5ce396a920"/>
        <function-ref name="getdt" scoped="" ref="0x7f5ce39674a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f5ce3967020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ce396a4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5ce396b110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5ce3968410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5ce396b5e0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce396bab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f5ce3949020" loc="162:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7f5ce3949020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5ce39493a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5ce3949530"/>
        <function-ref name="start" scoped="" ref="0x7f5ce39496c0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce3949850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f5ce3949b20" loc="234:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7f5ce3949b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ce3948020"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ce39481b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x7f5ce3960410" loc="137:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x7f5ce3960410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f5ce3ad0db0"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f5ce3acf2e0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f5ce395eda0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f5ce395db40"/>
        <function-ref name="element" scoped="" ref="0x7f5ce395b220"/>
        <function-ref name="maxSize" scoped="" ref="0x7f5ce395e920"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5ce395d490"/>
        <function-ref name="empty" scoped="" ref="0x7f5ce395e020"/>
        <function-ref name="size" scoped="" ref="0x7f5ce395e4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpInfo" ref="0x7f5ce39513d0" loc="144:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x7f5ce39513d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x7f5ce3951750"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f5ce39518e0"/>
        <function-ref name="numNeighbors" scoped="" ref="0x7f5ce3951a70"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x7f5ce3951c00"/>
        <function-ref name="getEtx" scoped="" ref="0x7f5ce3951d90"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x7f5ce3950020"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x7f5ce39501b0"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x7f5ce3950340"/>
        <function-ref name="getParent" scoped="" ref="0x7f5ce39504d0"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x7f5ce3950660"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x7f5ce39507f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f5ce39655d0" loc="131:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f5ce39655d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce3965950"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce3965ae0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce3965c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce3965e00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce3960020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ce3976550" loc="109:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5ce3976550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce39768d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ce39743a0" loc="112:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5ce39743a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f5ce3b40450"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce3974740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x7f5ce396e400" loc="118:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x7f5ce396e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7f5ce396e780"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7f5ce396e910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnicastNameFreeRouting" ref="0x7f5ce3966a40" loc="130:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x7f5ce3966a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x7f5ce3966dc0"/>
        <function-ref name="routeFound" scoped="" ref="0x7f5ce3965020"/>
        <function-ref name="nextHop" scoped="" ref="0x7f5ce39651b0"/>
        <function-ref name="noRoute" scoped="" ref="0x7f5ce3965340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5ce394c400" loc="148:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f5ce394c400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5ce394c780"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5ce394c910"/>
        <function-ref name="led1On" scoped="" ref="0x7f5ce394caa0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5ce394cc30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5ce394cdc0"/>
        <function-ref name="get" scoped="" ref="0x7f5ce394b020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5ce394b1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f5ce394b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f5ce394b4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5ce394b340"/>
        <function-ref name="led0On" scoped="" ref="0x7f5ce394b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f5ce396d8b0" loc="127:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5ce396d8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5ce396dc30"/>
        <function-ref name="noAck" scoped="" ref="0x7f5ce396ddc0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5ce396c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x7f5ce3970590" loc="117:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x7f5ce3970590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f5ce3970910"/>
        <function-ref name="option" scoped="" ref="0x7f5ce3970aa0"/>
        <function-ref name="setEtx" scoped="" ref="0x7f5ce3970c30"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f5ce3970dc0"/>
        <function-ref name="clearOption" scoped="" ref="0x7f5ce396f020"/>
        <function-ref name="getEtx" scoped="" ref="0x7f5ce396f1b0"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f5ce396f340"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce396f4d0"/>
        <function-ref name="setOption" scoped="" ref="0x7f5ce396f660"/>
        <function-ref name="matchPacket" scoped="" ref="0x7f5ce396f7f0"/>
        <function-ref name="getThl" scoped="" ref="0x7f5ce396f980"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f5ce396fb10"/>
        <function-ref name="matchInstance" scoped="" ref="0x7f5ce396fca0"/>
        <function-ref name="getType" scoped="" ref="0x7f5ce396e020"/>
        <function-ref name="setThl" scoped="" ref="0x7f5ce396e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QEntryPool" ref="0x7f5ce395b9f0" loc="138:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QEntryPool" scoped="" ref="0x7f5ce395b9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f5ce3ad0db0"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f5ce3acf2e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce3959b90"/>
        <function-ref name="maxSize" scoped="" ref="0x7f5ce3959020"/>
        <function-ref name="empty" scoped="" ref="0x7f5ce395a670"/>
        <function-ref name="put" scoped="" ref="0x7f5ce39594a0"/>
        <function-ref name="size" scoped="" ref="0x7f5ce395aaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f5ce394ed20" loc="147:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5ce394ed20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce394d0e0"/>
        <function-ref name="source" scoped="" ref="0x7f5ce394d270"/>
        <function-ref name="address" scoped="" ref="0x7f5ce394d400"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce394d590"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce394d720"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce394d8b0"/>
        <function-ref name="type" scoped="" ref="0x7f5ce394da40"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce394dbd0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce394dd60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce394c020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ce394c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5ce3976b20" loc="110:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f5ce3976b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ce3975020"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce39751b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x7f5ce3952d90" loc="143:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSnoop" scoped="" ref="0x7f5ce3952d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce3951180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MessagePool" ref="0x7f5ce3957400" loc="139:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MessagePool" scoped="" ref="0x7f5ce3957400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
            <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce39554c0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f5ce3956920"/>
        <function-ref name="empty" scoped="" ref="0x7f5ce3956020"/>
        <function-ref name="put" scoped="" ref="0x7f5ce3956da0"/>
        <function-ref name="size" scoped="" ref="0x7f5ce39564a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x7f5ce394e530" loc="146:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x7f5ce394e530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x7f5ce394ead0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f5ce393ecd0" loc="42:/usr/bin/tinyos-main/tos/system/PoolC.nc">
      <component-ref qname="CtpP.MessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f5ce393ecd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
            <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce3914e10"/>
        <function-ref name="maxSize" scoped="" ref="0x7f5ce39142a0"/>
        <function-ref name="empty" scoped="" ref="0x7f5ce3915940"/>
        <function-ref name="put" scoped="" ref="0x7f5ce3914720"/>
        <function-ref name="size" scoped="" ref="0x7f5ce3915dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f5ce2c1c390" loc="56:/usr/bin/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f5ce2c1c390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
            <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce2c194c0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f5ce2c1b920"/>
        <function-ref name="empty" scoped="" ref="0x7f5ce2c1b020"/>
        <function-ref name="put" scoped="" ref="0x7f5ce2c1bda0"/>
        <function-ref name="size" scoped="" ref="0x7f5ce2c1b4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ce2c1dbd0" loc="55:/usr/bin/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5ce2c1dbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce2c1c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f5ce39101e0" loc="42:/usr/bin/tinyos-main/tos/system/PoolC.nc">
      <component-ref qname="CtpP.QEntryPoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f5ce39101e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f5ce3ad0db0"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f5ce3acf2e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce390d2f0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f5ce390f720"/>
        <function-ref name="empty" scoped="" ref="0x7f5ce3910dd0"/>
        <function-ref name="put" scoped="" ref="0x7f5ce390fba0"/>
        <function-ref name="size" scoped="" ref="0x7f5ce390f2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f5ce2c08210" loc="56:/usr/bin/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f5ce2c08210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f5ce3ad0db0"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f5ce3acf2e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5ce2c06330"/>
        <function-ref name="maxSize" scoped="" ref="0x7f5ce2c07780"/>
        <function-ref name="empty" scoped="" ref="0x7f5ce2c08e00"/>
        <function-ref name="put" scoped="" ref="0x7f5ce2c07c00"/>
        <function-ref name="size" scoped="" ref="0x7f5ce2c07300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ce2c0aaf0" loc="55:/usr/bin/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5ce2c0aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce2c0ae70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f5ce390ab70" loc="43:/usr/bin/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="CtpP.SendQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f5ce390ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f5ce3ad0db0"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f5ce3acf2e0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f5ce38ec550"/>
        <function-ref name="enqueue" scoped="" ref="0x7f5ce38ea2f0"/>
        <function-ref name="element" scoped="" ref="0x7f5ce38ea960"/>
        <function-ref name="maxSize" scoped="" ref="0x7f5ce38ec0d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5ce38ecc00"/>
        <function-ref name="empty" scoped="" ref="0x7f5ce3909790"/>
        <function-ref name="size" scoped="" ref="0x7f5ce3909c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x7f5ce38b4360" loc="39:/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <component-ref qname="CtpP.SentCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x7f5ce38b4360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
              <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x7f5ce38b3020"/>
        <function-ref name="flush" scoped="" ref="0x7f5ce38b39c0"/>
        <function-ref name="lookup" scoped="" ref="0x7f5ce38b34f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x7f5ce2becc70" loc="46:/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x7f5ce2becc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
              <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x7f5ce2beb8a0"/>
        <function-ref name="flush" scoped="" ref="0x7f5ce2bea2a0"/>
        <function-ref name="lookup" scoped="" ref="0x7f5ce2bebd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ce2bec540" loc="45:/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5ce2bec540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce2bec8c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpPacket" ref="0x7f5ce2bea6f0" loc="49:/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x7f5ce2bea6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f5ce2beaa70"/>
        <function-ref name="option" scoped="" ref="0x7f5ce2beac00"/>
        <function-ref name="setEtx" scoped="" ref="0x7f5ce2bead90"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f5ce2be8020"/>
        <function-ref name="clearOption" scoped="" ref="0x7f5ce2be81b0"/>
        <function-ref name="getEtx" scoped="" ref="0x7f5ce2be8340"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f5ce2be84d0"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce2be8660"/>
        <function-ref name="setOption" scoped="" ref="0x7f5ce2be87f0"/>
        <function-ref name="matchPacket" scoped="" ref="0x7f5ce2be8980"/>
        <function-ref name="getThl" scoped="" ref="0x7f5ce2be8b10"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f5ce2be8ca0"/>
        <function-ref name="matchInstance" scoped="" ref="0x7f5ce2be8e30"/>
        <function-ref name="getType" scoped="" ref="0x7f5ce2be7120"/>
        <function-ref name="setThl" scoped="" ref="0x7f5ce2be72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5ce38b1560" loc="45:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RoutingBeaconTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f5ce38b1560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ce38ada20"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce38ae020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5ce38aeda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5ce38ae920"/>
        <function-ref name="getdt" scoped="" ref="0x7f5ce38ac4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f5ce38ac020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ce38ae4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5ce38af1b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5ce38ad410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5ce38af680"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce38afb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5ce38a9020" loc="45:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RouteUpdateTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f5ce38a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ce38a6630"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce38a8a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5ce38a7920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5ce38a74a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5ce38a5020"/>
        <function-ref name="gett0" scoped="" ref="0x7f5ce38a6ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ce38a7020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5ce38a9c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5ce38a6020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5ce38a8110"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce38a85e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5ce388f020" loc="57:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f5ce388f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce388f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x7f5ce3898180" loc="47:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x7f5ce3898180"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x7f5ce3898500"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x7f5ce3898690"/>
        <function-ref name="txNoAck" scoped="" ref="0x7f5ce3898820"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x7f5ce38989b0"/>
        <function-ref name="evicted" scoped="" ref="0x7f5ce3898b40"/>
        <function-ref name="clearDLQ" scoped="" ref="0x7f5ce3898cd0"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x7f5ce3898e60"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x7f5ce3897020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ce38978b0" loc="49:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5ce38978b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce3897c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce3897dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce3896020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce38961b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce3896340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f5ce3892d40" loc="54:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5ce3892d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce38950e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce3895270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce3895400"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce3895590"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce3895720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5ce389ae50" loc="45:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f5ce389ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce3899210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce38993a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce3899530"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce38996c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce3899850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f5ce388fcc0" loc="59:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f5ce388fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f5ce388e180"/>
        <function-ref name="rand32" scoped="" ref="0x7f5ce388e310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f5ce38901a0" loc="56:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f5ce38901a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce3890520"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce38906b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce3890840"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce38909d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce3890b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ce38972a0" loc="48:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5ce38972a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce3897620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x7f5ce3895a80" loc="55:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMPacket" scoped="" ref="0x7f5ce3895a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce3895e00"/>
        <function-ref name="source" scoped="" ref="0x7f5ce3894020"/>
        <function-ref name="address" scoped="" ref="0x7f5ce38941b0"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce3894340"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce38944d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce3894660"/>
        <function-ref name="type" scoped="" ref="0x7f5ce38947f0"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce3894980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce3894b10"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce3894ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ce3894e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ce3899af0" loc="46:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5ce3899af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce3899e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareBit" ref="0x7f5ce38926b0" loc="50:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x7f5ce38926b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x7f5ce3892a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5ce389a640" loc="44:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f5ce389a640"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ce389a9c0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce389ab50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkPacketMetadata" ref="0x7f5ce388f6b0" loc="58:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5ce388f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f5ce388fa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5ce37d14b0" loc="49:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5ce37d14b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce37d1830"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce37d19c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce37d1b50"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce37d1ce0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce37d1e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ce37d00f0" loc="50:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5ce37d00f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce37d0470"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce37d0600"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce37d0790"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce37d0920"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce37d0ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5ce37d0d00" loc="51:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5ce37d0d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce37ce0a0"/>
        <function-ref name="source" scoped="" ref="0x7f5ce37ce230"/>
        <function-ref name="address" scoped="" ref="0x7f5ce37ce3c0"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce37ce550"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce37ce6e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce37ce870"/>
        <function-ref name="type" scoped="" ref="0x7f5ce37cea00"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce37ceb90"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce37ced20"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce37cd020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ce37cd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f5ce37cd440" loc="52:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f5ce37cd440"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5ce37cd7c0"/>
        <function-ref name="noAck" scoped="" ref="0x7f5ce37cd950"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5ce37cdae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5ce2bbc220" loc="49:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5ce2bbc220"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce2bbc5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce2bbc730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce2bbc8c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce2bbca50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce2bbcbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ce2bbce30" loc="50:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5ce2bbce30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce2bbb1e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce2bbb370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce2bbb500"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce2bbb690"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce2bbb820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5ce2bbba70" loc="51:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5ce2bbba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce2bbbdf0"/>
        <function-ref name="source" scoped="" ref="0x7f5ce2bba020"/>
        <function-ref name="address" scoped="" ref="0x7f5ce2bba1b0"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce2bba340"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce2bba4d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce2bba660"/>
        <function-ref name="type" scoped="" ref="0x7f5ce2bba7f0"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce2bba980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce2bbab10"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce2bbaca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ce2bbae30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f5ce2bb9120" loc="52:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f5ce2bb9120"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5ce2bb94a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f5ce2bb9630"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5ce2bb97c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5ce2bb0900" loc="44:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5ce2bb0900"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce2bb0c80"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce2bb0e10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce2baf020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce2baf1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce2baf340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f5ce2baf5f0" loc="46:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f5ce2baf5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce2baf970"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce2bafb00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce2bafc90"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce2bafe20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce2bae020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f5ce2bae270" loc="47:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5ce2bae270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce2bae5f0"/>
        <function-ref name="source" scoped="" ref="0x7f5ce2bae780"/>
        <function-ref name="address" scoped="" ref="0x7f5ce2bae910"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce2baeaa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce2baec30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce2baedc0"/>
        <function-ref name="type" scoped="" ref="0x7f5ce2bad020"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce2bad1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce2bad340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce2bad4d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ce2bad660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ce37ca3d0" loc="46:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5ce37ca3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce37ca750"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce37ca8e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce37caa70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce37cac00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce37cad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ce37cbdc0" loc="45:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5ce37cbdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce37ca180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5ce37c9020" loc="47:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5ce37c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce37c93a0"/>
        <function-ref name="source" scoped="" ref="0x7f5ce37c9530"/>
        <function-ref name="address" scoped="" ref="0x7f5ce37c96c0"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce37c9850"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce37c99e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce37c9b70"/>
        <function-ref name="type" scoped="" ref="0x7f5ce37c9d00"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce37c8020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce37c81b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce37c8340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ce37c84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ce37bfb00" loc="47:/usr/bin/tinyos-main/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5ce37bfb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce37bfe80"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce37be030"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce37be1c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce37be350"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce37be4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ce37bf530" loc="46:/usr/bin/tinyos-main/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5ce37bf530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce37bf8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5ce37be730" loc="48:/usr/bin/tinyos-main/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5ce37be730"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce37beab0"/>
        <function-ref name="source" scoped="" ref="0x7f5ce37bec40"/>
        <function-ref name="address" scoped="" ref="0x7f5ce37bedd0"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce37bd020"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce37bd1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce37bd340"/>
        <function-ref name="type" scoped="" ref="0x7f5ce37bd4d0"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce37bd660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce37bd7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce37bd980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ce37bdb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f5ce36af7a0" loc="110:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x7f5ce36af7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f5ce36afb20"/>
        <function-ref name="setRoot" scoped="" ref="0x7f5ce36afcb0"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f5ce36afe40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateRouteTask" ref="0x7f5ce3698480" loc="271:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateRouteTask" scoped="" ref="0x7f5ce3698480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ce3698800"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ce3698990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x7f5ce369a270" loc="125:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x7f5ce369a270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7f5ce369a5f0"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7f5ce369a780"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7f5ce369a910"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7f5ce369aaa0"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7f5ce369ac30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x7f5ce36a9a10" loc="119:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x7f5ce36a9a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x7f5ce36a9d90"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x7f5ce36a8020"/>
        <function-ref name="txNoAck" scoped="" ref="0x7f5ce36a81b0"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x7f5ce36a8340"/>
        <function-ref name="evicted" scoped="" ref="0x7f5ce36a84d0"/>
        <function-ref name="clearDLQ" scoped="" ref="0x7f5ce36a8660"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x7f5ce36a87f0"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x7f5ce36a8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpRoutingPacket" ref="0x7f5ce36ade80" loc="113:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpRoutingPacket" scoped="" ref="0x7f5ce36ade80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpRoutingPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clearOptions" scoped="" ref="0x7f5ce36ac220"/>
        <function-ref name="setEtx" scoped="" ref="0x7f5ce36ac3b0"/>
        <function-ref name="clearOption" scoped="" ref="0x7f5ce36ac540"/>
        <function-ref name="getEtx" scoped="" ref="0x7f5ce36ac6d0"/>
        <function-ref name="setOption" scoped="" ref="0x7f5ce36ac860"/>
        <function-ref name="setParent" scoped="" ref="0x7f5ce36ac9f0"/>
        <function-ref name="getParent" scoped="" ref="0x7f5ce36acb80"/>
        <function-ref name="getOption" scoped="" ref="0x7f5ce36acd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f5ce36a62b0" loc="121:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7f5ce36a62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5ce36a6630"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5ce36a67c0"/>
        <function-ref name="start" scoped="" ref="0x7f5ce36a6950"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce36a6ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f5ce369b980" loc="124:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f5ce369b980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f5ce369bd00"/>
        <function-ref name="rand32" scoped="" ref="0x7f5ce369a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x7f5ce36ae0e0" loc="111:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x7f5ce36ae0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x7f5ce36ae460"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f5ce36ae5f0"/>
        <function-ref name="numNeighbors" scoped="" ref="0x7f5ce36ae780"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x7f5ce36ae910"/>
        <function-ref name="getEtx" scoped="" ref="0x7f5ce36aeaa0"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x7f5ce36aec30"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x7f5ce36aedc0"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x7f5ce36ad020"/>
        <function-ref name="getParent" scoped="" ref="0x7f5ce36ad1b0"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x7f5ce36ad340"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x7f5ce36ad4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBeaconTask" ref="0x7f5ce3699c50" loc="390:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendBeaconTask" scoped="" ref="0x7f5ce3699c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ce3698020"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ce36981b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5ce36ab020" loc="114:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5ce36ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5ce36ab3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSend" ref="0x7f5ce36ab690" loc="117:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSend" scoped="" ref="0x7f5ce36ab690"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce36aba10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce36abba0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce36abd30"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce36a9020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce36a91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconTimer" ref="0x7f5ce36a5020" loc="122:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconTimer" scoped="" ref="0x7f5ce36a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ce36a1630"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce36a4a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5ce36a3920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5ce36a34a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5ce36a0020"/>
        <function-ref name="gett0" scoped="" ref="0x7f5ce36a1ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ce36a3020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5ce36a5c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5ce36a1020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5ce36a4110"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce36a45e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteTimer" ref="0x7f5ce36a0570" loc="123:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteTimer" scoped="" ref="0x7f5ce36a0570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ce369cc40"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce369e1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5ce369c020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5ce369eae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5ce369b590"/>
        <function-ref name="gett0" scoped="" ref="0x7f5ce369b110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ce369e660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5ce369f390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5ce369c630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5ce369f860"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce369fd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpCongestion" ref="0x7f5ce369ae80" loc="126:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x7f5ce369ae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7f5ce3699220"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7f5ce36993b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareBit" ref="0x7f5ce3699600" loc="128:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x7f5ce3699600"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x7f5ce3699980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconReceive" ref="0x7f5ce36a9440" loc="118:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconReceive" scoped="" ref="0x7f5ce36a9440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce36a97c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f5ce36a8bd0" loc="120:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5ce36a8bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce36a7020"/>
        <function-ref name="source" scoped="" ref="0x7f5ce36a71b0"/>
        <function-ref name="address" scoped="" ref="0x7f5ce36a7340"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce36a74d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce36a7660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce36a77f0"/>
        <function-ref name="type" scoped="" ref="0x7f5ce36a7980"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce36a7b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce36a7ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce36a7e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ce36a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5ce36ad720" loc="112:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f5ce36ad720"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5ce36adaa0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce36adc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Routing" ref="0x7f5ce36b0cf0" loc="109:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Routing" scoped="" ref="0x7f5ce36b0cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x7f5ce36af0a0"/>
        <function-ref name="routeFound" scoped="" ref="0x7f5ce36af230"/>
        <function-ref name="nextHop" scoped="" ref="0x7f5ce36af3c0"/>
        <function-ref name="noRoute" scoped="" ref="0x7f5ce36af550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5ce368e8c0" loc="45:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RetxmitTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f5ce368e8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5ce54289b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5ce5428d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5ce368bcf0"/>
        <function-ref name="fired" scoped="" ref="0x7f5ce368c320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5ce368b0d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5ce368cc20"/>
        <function-ref name="getdt" scoped="" ref="0x7f5ce368a660"/>
        <function-ref name="gett0" scoped="" ref="0x7f5ce368a1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5ce368c7a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5ce368d4e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5ce368b6e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5ce368d9b0"/>
        <function-ref name="stop" scoped="" ref="0x7f5ce368de80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5ce3684b30" loc="49:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5ce3684b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce3683020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce36831b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce3683340"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce36834d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce3683660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ce36838b0" loc="50:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5ce36838b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce3683c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce3683dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce3682020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce36821b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce3682340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5ce3682590" loc="51:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5ce3682590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce3682910"/>
        <function-ref name="source" scoped="" ref="0x7f5ce3682aa0"/>
        <function-ref name="address" scoped="" ref="0x7f5ce3682c30"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce3682dc0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce3681020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce36811b0"/>
        <function-ref name="type" scoped="" ref="0x7f5ce3681340"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce36814d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce3681660"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce36817f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ce3681980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f5ce3681c10" loc="52:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f5ce3681c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5ce3680020"/>
        <function-ref name="noAck" scoped="" ref="0x7f5ce36801b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5ce3680340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5ce2b11d90" loc="49:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5ce2b11d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce2b10180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce2b10310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce2b104a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce2b10630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce2b107c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ce2b10a10" loc="50:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5ce2b10a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce2b10d90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce2b0f020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce2b0f1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce2b0f340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce2b0f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5ce2b0f720" loc="51:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5ce2b0f720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce2b0faa0"/>
        <function-ref name="source" scoped="" ref="0x7f5ce2b0fc30"/>
        <function-ref name="address" scoped="" ref="0x7f5ce2b0fdc0"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce2b0e020"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce2b0e1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce2b0e340"/>
        <function-ref name="type" scoped="" ref="0x7f5ce2b0e4d0"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce2b0e660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce2b0e7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce2b0e980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ce2b0eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f5ce2b0eda0" loc="52:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f5ce2b0eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5ce2b0d180"/>
        <function-ref name="noAck" scoped="" ref="0x7f5ce2b0d310"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5ce2b0d4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5ce2b047f0" loc="44:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5ce2b047f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce2b04b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce2b04d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce2b03020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce2b031b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce2b03340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f5ce2b035f0" loc="46:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f5ce2b035f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce2b03970"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce2b03b00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce2b03c90"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce2b03e20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce2b02020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f5ce2b02270" loc="47:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5ce2b02270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce2b025f0"/>
        <function-ref name="source" scoped="" ref="0x7f5ce2b02780"/>
        <function-ref name="address" scoped="" ref="0x7f5ce2b02910"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce2b02aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce2b02c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce2b02dc0"/>
        <function-ref name="type" scoped="" ref="0x7f5ce2b01020"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce2b011b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce2b01340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce2b014d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ce2b01660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ce367ec70" loc="46:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5ce367ec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce367d020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce367d1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce367d340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce367d4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce367d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5ce367e6a0" loc="45:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5ce367e6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5ce367ea20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5ce367d8b0" loc="47:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5ce367d8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce367dc30"/>
        <function-ref name="source" scoped="" ref="0x7f5ce367ddc0"/>
        <function-ref name="address" scoped="" ref="0x7f5ce3676020"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce36761b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce3676340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce36764d0"/>
        <function-ref name="type" scoped="" ref="0x7f5ce3676660"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce36767f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce3676980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce3676b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ce3676ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5ce361b870" loc="49:/usr/bin/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="AntiTheftRootAppC.AlertsForwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5ce361b870"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce361bbf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce361bd80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce361a020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce361a1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce361a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5ce361a590" loc="50:/usr/bin/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="AntiTheftRootAppC.AlertsForwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5ce361a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce361a910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce361aaa0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce361ac30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce361adc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce3619020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5ce3619270" loc="51:/usr/bin/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="AntiTheftRootAppC.AlertsForwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5ce3619270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce36195f0"/>
        <function-ref name="source" scoped="" ref="0x7f5ce3619780"/>
        <function-ref name="address" scoped="" ref="0x7f5ce3619910"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce3619aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce3619c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce3619dc0"/>
        <function-ref name="type" scoped="" ref="0x7f5ce3618020"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce36181b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce3618340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce36184d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ce3618660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f5ce36188f0" loc="52:/usr/bin/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="AntiTheftRootAppC.AlertsForwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f5ce36188f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5ce3618c70"/>
        <function-ref name="noAck" scoped="" ref="0x7f5ce3618e00"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5ce3617020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5ce2ae5a20" loc="44:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="AntiTheftRootAppC.AlertsForwarder.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5ce2ae5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce2ae5da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce2ae4020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce2ae41b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce2ae4340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce2ae44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f5ce2ae4780" loc="46:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="AntiTheftRootAppC.AlertsForwarder.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f5ce2ae4780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce2ae4b00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce2ae4c90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce2ae4e20"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce2ae3020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce2ae31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f5ce2ae3400" loc="47:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="AntiTheftRootAppC.AlertsForwarder.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5ce2ae3400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce2ae3780"/>
        <function-ref name="source" scoped="" ref="0x7f5ce2ae3910"/>
        <function-ref name="address" scoped="" ref="0x7f5ce2ae3aa0"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce2ae3c30"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce2ae3dc0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce2ae2020"/>
        <function-ref name="type" scoped="" ref="0x7f5ce2ae21b0"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce2ae2340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce2ae24d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce2ae2660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ce2ae27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5ce3645a00" loc="44:/usr/bin/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f5ce3645a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce3645d80"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce3642020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce36421b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce3642340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce36424d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f5ce363e400" loc="48:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5ce363e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce363e7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce363e930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce363eac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce363ec50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce363ede0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5ce363f4b0" loc="46:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f5ce363f4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5ce363f850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce363f9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce363fb70"/>
        <function-ref name="cancel" scoped="" ref="0x7f5ce363fd00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5ce363e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f5ce3626720" loc="50:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5ce3626720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5ce3626aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5ce3626c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5ce3626dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5ce3625020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5ce36251b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f5ce3625480" loc="169:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7f5ce3625480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ce3625800"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ce3625990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f5ce3625c60" loc="126:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7f5ce3625c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5ce3624020"/>
        <function-ref name="runTask" scoped="" ref="0x7f5ce36241b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f5ce363d060" loc="49:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5ce363d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5ce363d3e0"/>
        <function-ref name="source" scoped="" ref="0x7f5ce363d570"/>
        <function-ref name="address" scoped="" ref="0x7f5ce363d700"/>
        <function-ref name="destination" scoped="" ref="0x7f5ce363d890"/>
        <function-ref name="setSource" scoped="" ref="0x7f5ce363da20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5ce363dbb0"/>
        <function-ref name="type" scoped="" ref="0x7f5ce363dd40"/>
        <function-ref name="setType" scoped="" ref="0x7f5ce3626020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5ce36261b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5ce3626340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5ce36264d0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Receive" loc="56:/usr/bin/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f5ce52f20d0" loc="78:/usr/bin/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/usr/bin/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
              <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce52f4750" loc="78:/usr/bin/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f5ce52f4aa0" loc="78:/usr/bin/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5ce52f4dd0" loc="78:/usr/bin/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RootControl" loc="40:/usr/bin/tinyos-main/tos/lib/net/RootControl.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x7f5ce52eb270" loc="43:/usr/bin/tinyos-main/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x7f5ce52ec420" loc="41:/usr/bin/tinyos-main/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x7f5ce52ecb40" loc="42:/usr/bin/tinyos-main/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/usr/bin/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/usr/bin/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f5ce537e860" loc="60:/usr/bin/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/usr/bin/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f5ce5379c80" loc="113:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f5ce5379a00" loc="113:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f5ce53762a0" loc="138:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f5ce5376020" loc="138:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f5ce5379020" loc="104:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5ce5377520" loc="130:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f5ce52fb830" loc="65:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce52fb210" loc="65:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f5ce52fb5a0" loc="65:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f5ce52f99c0" loc="71:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce52f9740" loc="71:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f5ce52fc9e0" loc="57:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f5ce52fc020" loc="52:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f5ce52fed40" loc="52:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationUpdate" loc="48:/usr/bin/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
        <short>&#10; Update a network shared (disseminated) value.</short>
        <long>&#10; Update a network shared (disseminated) value. Updates are assured&#10; to be eventually consistent across a connected network. If multiple&#10; nodes update a value simultaneously, then nodes within the network&#10; will see a series of one or more updates, the last update will&#10; be the same for all nodes. Components that need to use the&#10; variable should use the DisseminationValue interface.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10; @date   January 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f5ce53754d0" loc="48:/usr/bin/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
          <interfacedef-ref qname="DisseminationUpdate"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5ce53754d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="change" ref="0x7f5ce52fa350" loc="60:/usr/bin/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
        <documentation loc="49:/usr/bin/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
          <short>&#10; Update the variable to a new value.</short>
          <long>&#10; Update the variable to a new value. This changes the local copy&#10; and begins to disseminate the new value throughout the network.&#10; As other nodes may have also changed the variable, it is possible&#10; that an update may not 'stick,' but will instead be overwritten by&#10; a separate update.&#10;&#10; @param newVal A pointer to the new value. The memory pointed to&#10; by newVal is copied out, so newVal can be reclaimed when&#10; &#60;tt>change&#60;/tt> returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5ce53754d0"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f5ce52fa0d0" loc="60:/usr/bin/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5ce53754d0"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/usr/bin/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/usr/bin/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f5ce52f6b90" loc="95:/usr/bin/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/usr/bin/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5ce52ee3e0" loc="105:/usr/bin/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/usr/bin/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f5ce52d5a60" loc="61:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f5ce52d4270" loc="67:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f5ce52d4a50" loc="72:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f5ce52d3a20" loc="83:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f5ce52d01f0" loc="100:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5ce52d0a00" loc="117:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f5ce52d3270" loc="77:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5ce52cf5a0" loc="134:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f5ce52cf320" loc="134:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f5ce52d52d0" loc="56:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f5ce52d2270" loc="89:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f5ce52d2a00" loc="94:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f5ce52e8970" loc="80:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f5ce52e8020" loc="80:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f5ce52e83a0" loc="80:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5ce52e86d0" loc="80:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f5ce52e2160" loc="135:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce52e3ae0" loc="135:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5ce52e3e10" loc="135:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f5ce52e3270" loc="123:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f5ce52e6cd0" loc="96:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce52e6a50" loc="96:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f5ce52e53a0" loc="110:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce52e7d70" loc="110:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f5ce52e5110" loc="110:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/usr/bin/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f5ce52a0c80" loc="62:/usr/bin/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f5ce5287e00" loc="60:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f5ce5287b80" loc="60:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f5ce528a3e0" loc="31:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f5ce528ae60" loc="39:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f5ce528abe0" loc="39:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f5ce52889a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f5ce5288720" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f5ce52872b0" loc="53:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f5ce5267560" loc="44:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f5ce5267c90" loc="45:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f5ce5268710" loc="42:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f5ce5266b20" loc="47:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5ce5268e10" loc="43:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f5ce52663e0" loc="46:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5ce526c7c0" loc="40:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f5ce5268020" loc="41:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/usr/bin/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/usr/bin/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f5ce642dc40" loc="57:/usr/bin/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/usr/bin/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f5ce54c7bf0" loc="72:/usr/bin/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/usr/bin/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f5ce54c73e0" loc="65:/usr/bin/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/usr/bin/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f5ce54b9c50" loc="67:/usr/bin/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f5ce54b74f0" loc="75:/usr/bin/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/usr/bin/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/usr/bin/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/usr/bin/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f5ce53c9ab0" loc="76:/usr/bin/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/usr/bin/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/usr/bin/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/usr/bin/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f5ce53a51f0" loc="62:/usr/bin/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/usr/bin/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f5ce5465470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/usr/bin/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f5ce53e5b80" loc="52:/usr/bin/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/usr/bin/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/usr/bin/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f5ce4f78440" loc="59:/usr/bin/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/usr/bin/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f5ce4f7ee10" loc="59:/usr/bin/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f5ce4f781b0" loc="59:/usr/bin/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f5ce4f75550" loc="65:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4f752d0" loc="65:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f5ce4f745f0" loc="78:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4f74370" loc="78:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f5ce4f71970" loc="126:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4f71370" loc="126:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5ce4f716a0" loc="126:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f5ce4f70a10" loc="106:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f5ce4f73ab0" loc="94:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4f734f0" loc="94:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5ce4f73820" loc="94:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f5ce4f54020" loc="59:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4f6fcc0" loc="59:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f5ce4f532a0" loc="71:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4f53020" loc="71:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f5ce4f52430" loc="85:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4f521b0" loc="85:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f5ce4f472e0" loc="65:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4f47060" loc="65:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f5ce4f4e2b0" loc="46:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4f55c20" loc="46:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f5ce4f4e020" loc="46:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f5ce4f482a0" loc="59:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4f48020" loc="59:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f5ce4f4d6f0" loc="53:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4f4d0d0" loc="53:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f5ce4f4d460" loc="53:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f5ce4f462e0" loc="71:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4f46060" loc="71:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f5ce4f5d4a0" loc="177:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f5ce5317dc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5ce4f5d220" loc="177:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f5ce4f67020" loc="88:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5ce4f68c60" loc="88:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f5ce4f69350" loc="68:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f5ce4f69e10" loc="78:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5ce4f69b90" loc="78:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f5ce4f64960" loc="121:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5ce4f64380" loc="121:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f5ce4f646d0" loc="121:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f5ce4f66410" loc="103:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5ce4f67e10" loc="103:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f5ce4f66180" loc="103:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f5ce4f60dc0" loc="147:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5ce4f60b40" loc="147:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f5ce4f5f2b0" loc="162:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5ce4f61be0" loc="162:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f5ce4f5f020" loc="162:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f5ce53179e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f5ce4f62bc0" loc="136:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5ce4f62940" loc="136:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f5ce4f59960" loc="187:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f5ce5317dc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5ce4f59380" loc="187:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f5ce4f596d0" loc="187:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f5ce5317dc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f5ce4f577a0" loc="195:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f5ce5317dc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x7f5ce4f43d40" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f5ce4f43530" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f5ce4f432b0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f5ce4f425e0" loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f5ce4f4f7a0" loc="35:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5ce4f4f7a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f5ce4f4f9e0" loc="35:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ce4f4f9e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f5ce4f3e840" loc="63:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ce4f4f9e0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4f3e5c0" loc="63:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f5ce4f399d0" loc="70:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4f39750" loc="70:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f5ce4f405f0" loc="49:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4f40370" loc="49:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5ce4f38d00" loc="78:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ce4f4f9e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4f38710" loc="78:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f5ce4f38a70" loc="78:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ce4f4f9e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x7f5ce4f1f380" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f5ce4f1f380"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x7f5ce4f17550" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4f172d0" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5ce4f18aa0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f5ce4f1f380"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4f18820" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f5ce4f18020" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4f1fcb0" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5ce4f162f0" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f5ce4f1f380"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4f17ca0" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f5ce4f16060" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f5ce4f1f380"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/usr/bin/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5ce4f0dc50" loc="53:/usr/bin/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5ce4f0dc50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f5ce4f075a0" loc="61:/usr/bin/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/usr/bin/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/usr/bin/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/usr/bin/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f5ce4f09490" loc="47:/usr/bin/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4f09210" loc="47:/usr/bin/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f5ce4ee1d00" loc="120:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f5ce4ee3d00" loc="97:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f5ce4ee3390" loc="88:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f5ce4ee1530" loc="102:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f5ce4ee08b0" loc="128:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x7f5ce4edde80" loc="41:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f5ce5332630"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4eddc00" loc="41:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f5ce4ee4a30" loc="37:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f5ce5332630"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f5ce4edd490" loc="39:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f5ce5332630"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4edd210" loc="39:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f5ce4ed8990" loc="45:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f5ce5332630"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4ed8370" loc="45:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f5ce4ed8700" loc="45:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f5ce5332630"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f5ce4ed9be0" loc="43:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f5ce5332630"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4ed95c0" loc="43:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f5ce4ed9950" loc="43:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f5ce5332630"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x7f5ce4ed7d20" loc="49:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f5ce5332210"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4ed7aa0" loc="49:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x7f5ce4ed5a50" loc="51:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7f5ce5332210"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4ed5440" loc="51:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f5ce4ed57c0" loc="51:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7f5ce5332210"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f5ce4ed7350" loc="47:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4ed70d0" loc="47:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7f5ce4ed41f0" loc="53:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f5ce5332210"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f5ce4eea2c0" loc="67:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f5ce5332630"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f5ce4ef08a0" loc="67:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f5ce5332630"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f5ce4ef0c20" loc="67:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5ce4eea020" loc="67:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f5ce4ee6890" loc="122:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4ee6290" loc="122:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5ce4ee65c0" loc="122:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f5ce4ee7990" loc="110:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f5ce4ee90b0" loc="83:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4eeae00" loc="83:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f5ce4ee7050" loc="97:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4ee9a50" loc="97:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f5ce4ee9da0" loc="97:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x7f5ce4e90750" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x7f5ce4e9d9b0" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e9d730" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x7f5ce4e892a0" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f5ce5317dc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e89020" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x7f5ce4e87a30" loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e877b0" loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f5ce4e8da50" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e8d7d0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f5ce4e8f2e0" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e8f060" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f5ce4e8a790" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e8a1b0" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f5ce4e8a500" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f5ce4e8d050" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e8fa40" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f5ce4e8fd90" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f5ce4e87020" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f5ce5317dc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e899d0" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f5ce4e89d20" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f5ce5317dc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x7f5ce4e9f960" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x7f5ce4e93350" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x7f5ce4e915f0" loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e91370" loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x7f5ce4e93e60" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e93be0" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x7f5ce4e929a0" loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e92720" loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x7f5ce4e64d60" loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x7f5ce4e65e10" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7f5ce5336180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x7f5ce4e65b90" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7f5ce5336180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f5ce4e645f0" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x7f5ce4e65350" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x7f5ce4e625b0" loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f5ce5336180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x7f5ce4e5aa90" loc="70:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e5a810" loc="70:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f5ce4e5fe00" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e5fb80" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f5ce4e5d4d0" loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f5ce4e5ec70" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e5e690" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f5ce4e5e9e0" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7f5ce4e5f2a0" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e5f020" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7f5ce4e5a020" loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e5dce0" loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f5ce4eb2020" loc="46:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7f5ce4eb46c0" loc="40:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4eb4440" loc="40:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7f5ce4eb2b50" loc="52:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4eb28d0" loc="52:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x7f5ce4eb1420" loc="59:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x7f5ce4eb0020" loc="65:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4eb1d20" loc="65:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x7f5ce4e9e2a0" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e9e020" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x7f5ce4ea51f0" loc="86:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x7f5ce4ea69d0" loc="80:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5ce4ea63c0" loc="80:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f5ce4ea6740" loc="80:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7f5ce4eaa3f0" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4eaa170" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x7f5ce4ea9020" loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4eaac80" loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x7f5ce4ea8020" loc="69:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5ce4ea9910" loc="69:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f5ce4ea9c90" loc="69:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x7f5ce4eb6a80" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7f5ce4eae910" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4eae370" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f5ce4eae680" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7f5ce4ea8b90" loc="75:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4ea8910" loc="75:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x7f5ce4e730b0" loc="131:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e75dd0" loc="131:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x7f5ce4e76680" loc="120:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e76400" loc="120:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x7f5ce4e83df0" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e83820" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x7f5ce4e83b60" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x7f5ce4e7f020" loc="75:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e80ca0" loc="75:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x7f5ce4e6e050" loc="156:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e6fa40" loc="156:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f5ce4e6fd90" loc="156:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x7f5ce4e80430" loc="69:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e801b0" loc="69:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x7f5ce4e755e0" loc="125:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e75020" loc="125:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x7f5ce4e75350" loc="125:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x7f5ce4e7d9d0" loc="88:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5ce4e7d3c0" loc="88:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f5ce4e7d740" loc="88:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x7f5ce4e6f2a0" loc="151:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e6f020" loc="151:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x7f5ce4e81920" loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e816a0" loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x7f5ce4e7a3f0" loc="99:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e7a170" loc="99:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x7f5ce4e7b8b0" loc="94:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5ce4e7b2a0" loc="94:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f5ce4e7b620" loc="94:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x7f5ce4e6a820" loc="178:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f5ce5332630"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7f5ce4e6ead0" loc="162:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e6e850" loc="162:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7f5ce4e6a020" loc="173:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f5ce5332210"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x7f5ce4e716b0" loc="146:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e710d0" loc="146:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f5ce4e71420" loc="146:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x7f5ce4e7fb20" loc="81:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e7f8a0" loc="81:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x7f5ce4e77bf0" loc="115:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e77620" loc="115:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x7f5ce4e77960" loc="115:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x7f5ce4e73e40" loc="136:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e73870" loc="136:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x7f5ce4e73bb0" loc="136:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f5ce4e692a0" loc="185:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e69020" loc="185:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7f5ce4e782b0" loc="105:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e7abf0" loc="105:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f5ce4e78020" loc="105:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x7f5ce4e83040" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e86da0" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7f5ce4e6d680" loc="168:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e6d400" loc="168:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x7f5ce4e72910" loc="141:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e72690" loc="141:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x7f5ce4e78db0" loc="110:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e78b30" loc="110:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x7f5ce4ea1e00" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4ea1820" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x7f5ce4ea1b70" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x7f5ce4ea0620" loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7f5ce4ea3430" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4ea31b0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x7f5ce4ea1020" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4ea3c40" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x7f5ce4e98c50" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e989d0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x7f5ce4e98110" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4ea4e20" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x7f5ce4e974d0" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x7f5ce4e96020" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4e97d20" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5ce4df3400" loc="56:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5ce4df3400"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f5ce4df3640" loc="56:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ce4df3640"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f5ce4dee2d0" loc="109:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ce4df3640"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f5ce4df02b0" loc="78:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f5ce4def900" loc="103:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ce4df3640"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ce4df3640"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f5ce4def330" loc="103:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ce4df3640"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f5ce4def670" loc="103:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ce4df3640"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f5ce4df0a90" loc="88:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f5ce4deeac0" loc="116:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ce4df3640"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f5ce4df22a0" loc="66:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ce4df3640"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f5ce4df2020" loc="66:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ce4df3640"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5ce4df2ad0" loc="73:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x7f5ce4dde020" loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x7f5ce4dde930" loc="72:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x7f5ce4ddd350" loc="79:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x7f5ce4ddf740" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x7f5ce4da56c0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4da5440" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f5ce4da32a0" loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4da3020" loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f5ce4da4600" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4da4020" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f5ce4da4370" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7f5ce4da7d20" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
              <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4da7a60" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f5ce4d8e1f0" loc="50:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f5ce4d8c190" loc="60:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f5ce4d8e9d0" loc="55:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f5ce5317dc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f5ce4d8f940" loc="45:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f5ce5317dc0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f5ce4d8f360" loc="45:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f5ce5317dc0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f5ce4d8f6b0" loc="45:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/usr/bin/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f5ce4c9b540" loc="53:/usr/bin/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f5ce4c9be70" loc="61:/usr/bin/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/usr/bin/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/usr/bin/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/usr/bin/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f5ce4c95660" loc="65:/usr/bin/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f5ce4c9cdb0" loc="59:/usr/bin/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/usr/bin/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/usr/bin/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/usr/bin/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f5ce4c9dc80" loc="90:/usr/bin/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/usr/bin/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f5ce4c98530" loc="98:/usr/bin/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/usr/bin/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f5ce4c85740" loc="79:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f5ce4c977a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f5ce4c854c0" loc="79:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f5ce4c977a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f5ce4c8e750" loc="53:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f5ce4c8d2a0" loc="62:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f5ce4c977a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f5ce4c8d020" loc="62:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f5ce4c977a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f5ce4c8dbb0" loc="70:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f5ce4c977a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7f5ce4acb7f0" loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
              <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4acb530" loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x7f5ce4aceb60" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4ace8e0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f5ce4ab65e0" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f5ce4ab6360" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x7f5ce4ab6dc0" loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5ce4ab72a0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f5ce4ab7020" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5ce4ab7c20" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f5ce4ab79a0" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x7f5ce4abc0b0" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f5ce4abddf0" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x7f5ce4abb680" loc="71:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f5ce4abb400" loc="71:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x7f5ce4abcbc0" loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f5ce4abc940" loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x7f5ce4aba2a0" loc="80:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f5ce4aba020" loc="80:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x7f5ce4abd5b0" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f5ce4abd330" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x7f5ce4a120e0" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x7f5ce4a10270" loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f5ce4a10d00" loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f5ce4a10a80" loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x7f5ce4a0f510" loc="69:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x7f5ce4a12980" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f5ce4a0fdc0" loc="74:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x7f5ce4a14b10" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4a14890" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x7f5ce4a0a020" loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f5ce4a0c6f0" loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f5ce4a0c470" loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/usr/bin/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f5ce498f990" loc="52:/usr/bin/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f5ce498f190" loc="46:/usr/bin/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/usr/bin/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/usr/bin/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f5ce4961980" loc="53:/usr/bin/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f5ce4961980"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f5ce495e4f0" loc="64:/usr/bin/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/usr/bin/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f5ce4961980"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f5ce495e270" loc="64:/usr/bin/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f5ce4961980"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x7f5ce4936d30" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4936ab0" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5ce493ab10" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce493a890" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x7f5ce4937930" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4937370" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f5ce49376a0" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5ce4936350" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce49360d0" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x7f5ce49032a0" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f5ce4903020" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f5ce49067b0" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5ce4880350" loc="53:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5ce4880350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f5ce48781f0" loc="136:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f5ce487da60" loc="83:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f5ce487b820" loc="114:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f5ce487b250" loc="114:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f5ce487b590" loc="114:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f5ce487ca60" loc="98:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f5ce4877270" loc="151:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f5ce4878980" loc="144:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f5ce487c270" loc="92:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f5ce487e020" loc="64:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f5ce4880c40" loc="64:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f5ce487a820" loc="129:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f5ce487a250" loc="129:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f5ce487a590" loc="129:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f5ce487eae0" loc="73:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f5ce487e860" loc="73:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5ce487d350" loc="78:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5ce4862d60" loc="57:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5ce4862d60"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f5ce485f020" loc="57:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ce485f020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f5ce485f940" loc="64:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ce485f020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f5ce485ea50" loc="76:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f5ce485e1f0" loc="71:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f5ce485c1f0" loc="82:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f5ce4822e50" loc="89:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f5ce4824c40" loc="85:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f5ce48268c0" loc="79:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f5ce4822680" loc="86:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f5ce4822400" loc="86:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f5ce4824470" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f5ce48241f0" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f5ce4821890" loc="90:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f5ce4821610" loc="90:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f5ce48250e0" loc="80:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f5ce4825a80" loc="81:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f5ce4825800" loc="81:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x7f5ce480a020" loc="92:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x7f5ce480ee50" loc="68:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7f5ce480c610" loc="74:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7f5ce480ce40" loc="80:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f5ce480a830" loc="98:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7f5ce480b6c0" loc="86:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f5ce4817bb0" loc="57:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f5ce5402da0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f5ce5401230"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f5ce480e610" loc="63:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f5ce5402da0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f5ce5401230"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f5ce480e390" loc="63:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f5ce5402da0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f5ce5401230"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f5ce48273d0" loc="41:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ce48273d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f5ce481a020" loc="74:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f5ce481c020" loc="58:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5ce4827d10" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ce48273d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f5ce481c790" loc="62:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f5ce481a7e0" loc="80:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5ce481e710" loc="54:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ce48273d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f5ce481e490" loc="54:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ce48273d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f5ce481b020" loc="65:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5ce481b770" loc="68:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f5ce483da20" loc="55:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f5ce483da20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f5ce48352d0" loc="98:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f5ce4836350" loc="87:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5ce483a390" loc="61:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f5ce483da20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f5ce4835cb0" loc="104:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f5ce4835a30" loc="104:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f5ce482c510" loc="110:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f5ce4838c90" loc="75:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f5ce4838500" loc="70:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f5ce4836b10" loc="93:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5ce483ad40" loc="67:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f5ce483da20"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f5ce483aac0" loc="67:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f5ce483da20"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f5ce4837420" loc="78:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5ce4837b70" loc="81:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/usr/bin/tinyos-main/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5ce45c8910" loc="59:/usr/bin/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5ce45c8910"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f5ce45c8b50" loc="59:/usr/bin/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ce45c8b50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f5ce45c16b0" loc="66:/usr/bin/tinyos-main/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ce45c8b50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f5ce45c1430" loc="66:/usr/bin/tinyos-main/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ce45c8b50"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f5ce45c4020" loc="54:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f5ce45c31f0" loc="66:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f5ce45c49c0" loc="61:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f5ce45c4740" loc="61:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f5ce45c6760" loc="53:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f5ce45cc810" loc="62:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5ce45cc590" loc="62:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f5ce45cbbf0" loc="74:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5ce45cb970" loc="74:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f5ce45cb0e0" loc="68:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f5ce45ca6c0" loc="81:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5ce45ca440" loc="81:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f5ce44c9350" loc="40:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ce44c9350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7f5ce44c12a0" loc="88:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7f5ce44c1020" loc="88:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f5ce44c2020" loc="76:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5ce44c9c90" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ce44c9350"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f5ce44c4110" loc="60:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ce44c9350"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f5ce44c6e10" loc="60:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ce44c9350"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f5ce44c48c0" loc="64:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f5ce44c27e0" loc="82:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5ce44c6670" loc="53:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ce44c9350"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f5ce44c63f0" loc="53:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5ce44c9350"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f5ce44c3070" loc="67:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5ce44c37c0" loc="70:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f5ce44a62c0" loc="70:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f5ce44a88b0" loc="70:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f5ce44a8c40" loc="70:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5ce44a6020" loc="70:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f5ce44a5800" loc="82:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f5ce44a4ae0" loc="82:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f5ce44a4e70" loc="82:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5ce44a51e0" loc="82:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f5ce44a5550" loc="83:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/usr/bin/tinyos-main/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f5ce44aa4c0" loc="45:/usr/bin/tinyos-main/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/usr/bin/tinyos-main/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f5ce44aa240" loc="45:/usr/bin/tinyos-main/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7f5ce448f560" loc="86:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7f5ce44854d0" loc="126:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7f5ce448add0" loc="117:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7f5ce4483020" loc="128:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7f5ce4485c70" loc="128:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7f5ce4490d80" loc="83:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7f5ce44879e0" loc="122:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7f5ce4487760" loc="122:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f5ce448b510" loc="113:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7f5ce448b290" loc="113:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f5ce448d4e0" loc="97:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7f5ce4480c20" loc="141:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f5ce44809a0" loc="141:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f5ce448bcb0" loc="114:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7f5ce44822a0" loc="131:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7f5ce4482020" loc="131:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f5ce4481270" loc="136:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7f5ce4486c80" loc="125:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7f5ce4486a00" loc="125:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7f5ce4480270" loc="140:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7f5ce44887d0" loc="119:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7f5ce4488550" loc="119:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f5ce448c020" loc="103:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5ce448dc40" loc="103:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f5ce448a670" loc="116:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7f5ce448a3f0" loc="116:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7f5ce4486270" loc="123:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7f5ce4483790" loc="129:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7f5ce4482a00" loc="132:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f5ce4481a20" loc="138:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7f5ce4487020" loc="120:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f5ce448fcf0" loc="89:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f5ce448ca20" loc="109:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5ce448c7a0" loc="109:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/usr/bin/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/usr/bin/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f5ce441ee10" loc="95:/usr/bin/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/usr/bin/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5ce441b6a0" loc="105:/usr/bin/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/usr/bin/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x7f5ce43a2850" loc="81:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f5ce439fde0" loc="87:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f5ce43a38f0" loc="79:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f5ce439d020" loc="91:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f5ce439e810" loc="88:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f5ce439e590" loc="88:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f5ce43a1c40" loc="83:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f5ce43a19c0" loc="83:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f5ce439da20" loc="92:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f5ce439d7a0" loc="92:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f5ce43a20e0" loc="80:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x7f5ce439f610" loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f5ce439f390" loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f5ce43a12a0" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f5ce43a1020" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f5ce418e2f0" loc="75:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4191ce0" loc="75:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5ce418e060" loc="75:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f5ce4188890" loc="125:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4188290" loc="125:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5ce41885c0" loc="125:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f5ce41899b0" loc="112:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f5ce418d5f0" loc="89:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce418d370" loc="89:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f5ce418bac0" loc="100:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce418b4e0" loc="100:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f5ce418b830" loc="100:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/usr/bin/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/usr/bin/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f5ce4121670" loc="31:/usr/bin/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/usr/bin/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce4121060" loc="31:/usr/bin/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f5ce41213e0" loc="31:/usr/bin/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f5ce4125820" loc="15:/usr/bin/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/usr/bin/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f5ce41226d0" loc="23:/usr/bin/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/usr/bin/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce41220d0" loc="23:/usr/bin/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f5ce4122440" loc="23:/usr/bin/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/usr/bin/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f5ce40e9580" loc="54:/usr/bin/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/usr/bin/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f5ce40ecde0" loc="49:/usr/bin/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/usr/bin/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/usr/bin/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f5ce40f2770" loc="56:/usr/bin/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f5ce40f1be0" loc="72:/usr/bin/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/usr/bin/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f5ce40ef840" loc="94:/usr/bin/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/usr/bin/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5ce40ef5c0" loc="94:/usr/bin/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f5ce40f04a0" loc="79:/usr/bin/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/usr/bin/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f5ce40f1350" loc="65:/usr/bin/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/usr/bin/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5ce40f10d0" loc="65:/usr/bin/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f5ce40ed0e0" loc="100:/usr/bin/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/usr/bin/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f5ce40f0d50" loc="85:/usr/bin/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/usr/bin/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/usr/bin/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f5ce40f90e0" loc="71:/usr/bin/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/usr/bin/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f5ce40f9a10" loc="81:/usr/bin/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/usr/bin/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f5ce40fa720" loc="62:/usr/bin/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/usr/bin/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f5ce40fa4a0" loc="62:/usr/bin/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f5ce40f85c0" loc="91:/usr/bin/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/usr/bin/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f5ce40f8340" loc="91:/usr/bin/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/usr/bin/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f5ce40f6270" loc="62:/usr/bin/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/usr/bin/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f5ce40f4020" loc="69:/usr/bin/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/usr/bin/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5ce40f6c10" loc="69:/usr/bin/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f5ce40f4af0" loc="80:/usr/bin/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/usr/bin/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f5ce40f4870" loc="80:/usr/bin/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/usr/bin/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/usr/bin/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f5ce3fbfde0" loc="48:/usr/bin/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f5ce3fbf810" loc="48:/usr/bin/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5ce3fbfb50" loc="48:/usr/bin/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f5ce3fb0ac0" loc="79:/usr/bin/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/usr/bin/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f5ce3fb0840" loc="79:/usr/bin/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f5ce3faf930" loc="90:/usr/bin/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/usr/bin/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f5ce3faf360" loc="90:/usr/bin/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5ce3faf6a0" loc="90:/usr/bin/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f5ce3fb1740" loc="65:/usr/bin/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f5ce3fae2c0" loc="99:/usr/bin/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/usr/bin/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f5ce3fad920" loc="99:/usr/bin/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5ce3fadc60" loc="99:/usr/bin/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f5ce3fae020" loc="99:/usr/bin/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f5ce3fb0070" loc="72:/usr/bin/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/usr/bin/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f5ce3fb3720" loc="57:/usr/bin/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/usr/bin/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f5ce3fb4db0" loc="57:/usr/bin/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5ce3fb3130" loc="57:/usr/bin/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f5ce3fb3480" loc="57:/usr/bin/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/usr/bin/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="32:/usr/bin/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f5ce3f8d5b0" loc="46:/usr/bin/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f5ce3f8d330" loc="46:/usr/bin/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f5ce3f85430" loc="56:/usr/bin/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f5ce3f8de20" loc="56:/usr/bin/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f5ce3f851a0" loc="56:/usr/bin/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/usr/bin/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/usr/bin/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f5ce3f72820" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f5ce3f73910" loc="42:/usr/bin/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x7f5ce3f6e110" loc="49:/usr/bin/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5ce3f70e60" loc="49:/usr/bin/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f5ce3f70070" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f5ce3f779b0" loc="40:/usr/bin/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f5ce3f73190" loc="41:/usr/bin/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f5ce3f720e0" loc="43:/usr/bin/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x7f5ce3f71020" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f5ce3f71950" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5ce3f716d0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f5ce3f70790" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrickleTimer" loc="57:/usr/bin/tinyos-main/tos/lib/net/TrickleTimer.nc">
      <function event="" provided="0" name="fired" ref="0x7f5ce3d68390" loc="90:/usr/bin/tinyos-main/tos/lib/net/TrickleTimer.nc">
        <documentation loc="87:/usr/bin/tinyos-main/tos/lib/net/TrickleTimer.nc">
          <short>&#10; The trickle timer has fired.</short>
          <long>&#10; The trickle timer has fired. Signaled if C &#38;gt; K.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="incrementCounter" ref="0x7f5ce3d69c00" loc="85:/usr/bin/tinyos-main/tos/lib/net/TrickleTimer.nc">
        <documentation loc="82:/usr/bin/tinyos-main/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Increment the counter C.</short>
          <long>&#10; Increment the counter C. When an interval ends, C is set to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f5ce3d69420" loc="80:/usr/bin/tinyos-main/tos/lib/net/TrickleTimer.nc">
        <documentation loc="76:/usr/bin/tinyos-main/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Reset the timer period to L.</short>
          <long>&#10; Reset the timer period to L. If called while the timer is running,&#10; then a new interval (of length L) begins immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f5ce3d6a4a0" loc="68:/usr/bin/tinyos-main/tos/lib/net/TrickleTimer.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Start the trickle timer.</short>
          <long>&#10; Start the trickle timer. At boot, the timer period is its maximum&#10; value (H). If a protocol requires starting at the minimum value&#10; (e.g., fast start), then it should call &#60;tt>reset&#60;/tt> before&#10; &#60;tt>start&#60;/tt>.&#10;&#10; @return error_t SUCCESS if the timer was started, EBUSY if it is already&#10; running, and FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5ce3d6acc0" loc="74:/usr/bin/tinyos-main/tos/lib/net/TrickleTimer.nc">
        <documentation loc="70:/usr/bin/tinyos-main/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Stop the trickle timer.</short>
          <long>&#10; Stop the trickle timer. This call sets the timer period to H and&#10; C to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationCache" loc="44:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <short>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.</short>
        <long>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-04 04:31:08 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestData" ref="0x7f5ce3d70150" loc="47:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x7f5ce3d71e10" loc="47:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="storeData" ref="0x7f5ce3d6e620" loc="48:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5ce3d70cb0" loc="48:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7f5ce3d6e020" loc="48:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
          <variable name="seqno" ref="0x7f5ce3d6e380" loc="48:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="newData" ref="0x7f5ce3d6d470" loc="50:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="start" ref="0x7f5ce3d71020" loc="45:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestSeqno" ref="0x7f5ce3d6ed70" loc="49:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5ce63c5090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="stop" ref="0x7f5ce3d71710" loc="46:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationValue" loc="44:/usr/bin/tinyos-main/tos/lib/net/DisseminationValue.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/lib/net/DisseminationValue.nc">
        <short>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.</short>
        <long>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10;&#10; @date   Jan 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f5ce3c3f8f0" loc="44:/usr/bin/tinyos-main/tos/lib/net/DisseminationValue.nc">
          <interfacedef-ref qname="DisseminationValue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5ce3c3f8f0"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="changed" ref="0x7f5ce3c3a4f0" loc="69:/usr/bin/tinyos-main/tos/lib/net/DisseminationValue.nc">
        <documentation loc="66:/usr/bin/tinyos-main/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Signalled whenever variable may have changed.</short>
          <long>&#10; Signalled whenever variable may have changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5ce3c3b230" loc="55:/usr/bin/tinyos-main/tos/lib/net/DisseminationValue.nc">
        <documentation loc="46:/usr/bin/tinyos-main/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Obtain a pointer to the variable.</short>
          <long>&#10; Obtain a pointer to the variable. The provider of this&#10; interface only will change the memory the pointer references&#10; in tasks. Therefore the memory region does not change during&#10; the execution of any other task. A user of this interface&#10; must not in any circumstance write to this memory location.&#10;&#10; @return A const pointer to the variable.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5ce3c3f8f0"/></type-var>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5ce3c3bca0" loc="64:/usr/bin/tinyos-main/tos/lib/net/DisseminationValue.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Set the variable to a new value.</short>
          <long>&#10; Set the variable to a new value. The provider of this interface&#10; will copy the value from the pointer. NOTE: This command does&#10; not cause the new value to begin disseminating. It is intended to&#10; be used for setting default values.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5ce3c3f8f0"/></type-var>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x7f5ce3c3ba20" loc="64:/usr/bin/tinyos-main/tos/lib/net/DisseminationValue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5ce3c3f8f0"/></type-var>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVector" loc="40:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
        <short>&#10; Interface to a bit vector.</short>
        <long>&#10; Interface to a bit vector.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearAll" ref="0x7f5ce3bed3b0" loc="45:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
        <documentation loc="42:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
          <short>&#10; Clear all bits in the vector.</short>
          <long>&#10; Clear all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f5ce3beaa10" loc="69:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
        <documentation loc="65:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to clear.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7f5ce3bea790" loc="69:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f5ce3be8470" loc="75:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
        <documentation loc="71:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
          <short>&#10; Toggle a bit in the vector.</short>
          <long>&#10; Toggle a bit in the vector.&#10; @param bitnum Bit to toggle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7f5ce3be81f0" loc="75:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5ce3beb4f0" loc="57:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
        <documentation loc="52:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
          <short>&#10; Read a bit from the vector.</short>
          <long>&#10; Read a bit from the vector.&#10; @param bitnum Bit to read.&#10; @return Bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7f5ce3beb270" loc="57:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="assign" ref="0x7f5ce3be72b0" loc="82:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
        <documentation loc="77:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
          <short>&#10; Write a bit in the vector.</short>
          <long>&#10; Write a bit in the vector.&#10; @param bitnum Bit to clear.&#10; @param value New bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7f5ce3be8be0" loc="82:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x7f5ce3be7020" loc="82:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x7f5ce3bedb10" loc="50:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
          <short>&#10; Set all bits in the vector.</short>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5ce3bea020" loc="63:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to set.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7f5ce3bebc50" loc="63:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f5ce3be7a90" loc="88:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
        <documentation loc="84:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
          <short>&#10; Return bit vector length.</short>
          <long>&#10; Return bit vector length.&#10; @return Bit vector length.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionPacket" loc="42:/usr/bin/tinyos-main/tos/lib/net/CollectionPacket.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x7f5ce3b27130" loc="50:/usr/bin/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce3b29b30" loc="50:/usr/bin/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x7f5ce3b29e80" loc="50:/usr/bin/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x7f5ce3b2b2b0" loc="44:/usr/bin/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce3b2db80" loc="44:/usr/bin/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f5ce3b2b020" loc="44:/usr/bin/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f5ce3b2a9c0" loc="47:/usr/bin/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x7f5ce3b40450"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce3b2a3b0" loc="47:/usr/bin/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x7f5ce3b2a730" loc="47:/usr/bin/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x7f5ce3b40450"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x7f5ce3b2d490" loc="43:/usr/bin/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce3b2d210" loc="43:/usr/bin/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7f5ce3b293f0" loc="49:/usr/bin/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce3b29170" loc="49:/usr/bin/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x7f5ce3b2bcb0" loc="46:/usr/bin/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x7f5ce3b40450"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce3b2ba30" loc="46:/usr/bin/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionDebug" loc="59:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <short> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure.</short>
        <long> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure. An implementer can choose to send the event&#10;  information to different destinations. Primary examples can include:&#10;  &#60;ul>&#10;    &#60;li> logging to the UART, in case of a testbed of network-connected&#10;         nodes;&#10;    &#60;li> logging to flash, if the logs are to be retrieved later&#10;    &#60;li> logging to the standard output, in the case of TOSSIM.&#10;  &#60;/ul>&#10;  &#10;  The interface does not specify in what format the log is to be produced,&#10;  or if other information, like timestamps, should be added, and this is&#10;  up to the implementer.&#10; &#10;  Some commands are generic, like Event, EventSimple, and EventDbg, while others&#10;  are for more specific events related to collection, like EventRoute and EventMsg.&#10;&#10; @author Rodrigo Fonseca&#10; @author Kyle Jamieson&#10; @date   $Date: 2010-06-29 22:07:47 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="logEvent" ref="0x7f5ce3afdcb0" loc="61:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f5ce3afda30" loc="61:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventMsg" ref="0x7f5ce3af82d0" loc="73:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f5ce3af95d0" loc="73:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f5ce3af9910" loc="73:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </variable>
          <variable name="origin" ref="0x7f5ce3af9c70" loc="73:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </variable>
          <variable name="node" ref="0x7f5ce3af8020" loc="73:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventSimple" ref="0x7f5ce3afca60" loc="64:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f5ce3afc490" loc="64:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
          <variable name="arg" ref="0x7f5ce3afc7d0" loc="64:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventRoute" ref="0x7f5ce3af7720" loc="79:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f5ce3af8a20" loc="79:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
          <variable name="parent" ref="0x7f5ce3af8d80" loc="79:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </variable>
          <variable name="hopcount" ref="0x7f5ce3af7110" loc="79:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
          <variable name="metric" ref="0x7f5ce3af7470" loc="79:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventDbg" ref="0x7f5ce3afae70" loc="67:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f5ce3afa1d0" loc="67:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
          <variable name="arg1" ref="0x7f5ce3afa520" loc="67:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </variable>
          <variable name="arg2" ref="0x7f5ce3afa870" loc="67:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </variable>
          <variable name="arg3" ref="0x7f5ce3afabc0" loc="67:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/usr/bin/tinyos-main/tos/interfaces/Intercept.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x7f5ce3b32df0" loc="31:/usr/bin/tinyos-main/tos/interfaces/Intercept.nc">
        <documentation loc="16:/usr/bin/tinyos-main/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce3b324d0" loc="31:/usr/bin/tinyos-main/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f5ce3b32820" loc="31:/usr/bin/tinyos-main/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5ce3b32b50" loc="31:/usr/bin/tinyos-main/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpInfo" loc="44:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
      <function command="" provided="0" name="getNeighborLinkQuality" ref="0x7f5ce3b07be0" loc="96:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f5ce3b07960" loc="96:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="recomputeRoutes" ref="0x7f5ce3b0a120" loc="83:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="80:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short> &#10; Tell the routing engine it might want to recompute its routes.</short>
          <long> &#10; Tell the routing engine it might want to recompute its routes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="numNeighbors" ref="0x7f5ce3b071f0" loc="95:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerRouteUpdate" ref="0x7f5ce3b0b020" loc="71:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="66:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.</short>
          <long>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x7f5ce3b0c5f0" loc="64:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="55:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the ETX for the current path to the root through the current&#10; parent.</short>
          <long>&#10; Get the ETX for the current path to the root through the current&#10; parent. Sets etx argument to ETX*10.  The pointer is allocated by&#10; the caller.  If the parent is invalid, return FAIL (no info).&#10; The caller MUST NOT use the value in parent if the return is not&#10; SUCCESS. Calling getEtx at the root will set the etx argument to&#10; 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="etx" ref="0x7f5ce3b0c370" loc="64:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerImmediateRouteUpdate" ref="0x7f5ce3b0b8a0" loc="78:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="73:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.</short>
          <long>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNeighborCongested" ref="0x7f5ce3b08020" loc="88:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="85:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Informs the routing engine that a neighbor is congested&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f5ce3b0a8f0" loc="88:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </variable>
          <variable name="congested" ref="0x7f5ce3b0ac40" loc="88:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborAddr" ref="0x7f5ce3b04020" loc="98:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f5ce3b06d50" loc="98:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x7f5ce3b26b00" loc="53:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="46:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the parent of the node in the tree.</short>
          <long>&#10; Get the parent of the node in the tree.  The pointer is allocated&#10; by the caller.  If the parent is invalid, return FAIL.  The&#10; caller MUST NOT use the value in parent if the return is not&#10; SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent" ref="0x7f5ce3b26880" loc="53:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborRouteQuality" ref="0x7f5ce3b06620" loc="97:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f5ce3b063a0" loc="97:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isNeighborCongested" ref="0x7f5ce3b08a30" loc="93:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="90:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10;  Returns the currently known state about a neighbor's congestion state&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f5ce3b087b0" loc="93:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpCongestion" loc="1:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpCongestion.nc">
      <function command="" provided="0" name="isCongested" ref="0x7f5ce3b02270" loc="7:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClientCongested" ref="0x7f5ce3b02c30" loc="14:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="congested" ref="0x7f5ce3b029b0" loc="14:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpCongestion.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpPacket" loc="44:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <short>&#10;  ADT for CTP data frames.</short>
        <long>&#10;  ADT for CTP data frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007-11-28 04:42:52 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSequenceNumber" ref="0x7f5ce3b15b50" loc="64:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce3b15570" loc="64:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x7f5ce3b158c0" loc="64:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="option" ref="0x7f5ce3b1de40" loc="52:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f5ce3b3d9e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce3b1d840" loc="52:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x7f5ce3b1dbb0" loc="52:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f5ce3b3d9e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x7f5ce3b19cc0" loc="58:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce3b196f0" loc="58:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x7f5ce3b19a30" loc="58:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x7f5ce3b163d0" loc="61:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce3b17db0" loc="61:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f5ce3b16140" loc="61:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x7f5ce3b1d120" loc="49:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f5ce3b3d9e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce3b25a80" loc="49:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x7f5ce3b25e10" loc="49:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f5ce3b3d9e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x7f5ce3b19020" loc="57:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce3b1ad10" loc="57:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x7f5ce3b176c0" loc="60:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce3b17440" loc="60:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f5ce3b122b0" loc="67:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce3b13c30" loc="67:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x7f5ce3b12020" loc="67:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x7f5ce3b25360" loc="46:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f5ce3b3d9e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce3b2fcc0" loc="46:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x7f5ce3b250d0" loc="46:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f5ce3b3d9e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchPacket" ref="0x7f5ce3b11e70" loc="70:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x7f5ce3b11860" loc="70:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x7f5ce3b11be0" loc="70:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getThl" ref="0x7f5ce3b1b830" loc="54:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce3b1b5b0" loc="54:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7f5ce3b16de0" loc="63:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce3b16b60" loc="63:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchInstance" ref="0x7f5ce3b11130" loc="69:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x7f5ce3b12b00" loc="69:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x7f5ce3b12e80" loc="69:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x7f5ce3b13550" loc="66:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce3b132d0" loc="66:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setThl" ref="0x7f5ce3b1a5e0" loc="55:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce3b1a020" loc="55:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="thl" ref="0x7f5ce3b1a350" loc="55:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionId" loc="45:/usr/bin/tinyos-main/tos/lib/net/CollectionId.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/lib/net/CollectionId.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="fetch" ref="0x7f5ce3b03e20" loc="46:/usr/bin/tinyos-main/tos/lib/net/CollectionId.nc">
        <interfacedef-ref qname="CollectionId"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x7f5ce3b40450"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkEstimator" loc="46:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
        <short> Provides an additive quality measure for a neighbor.</short>
        <long> Provides an additive quality measure for a neighbor. The&#10; provided quality increases when the true link quality increases.&#10;  @author Rodrigo Fonseca&#10;  @author Omprakash Gnawali&#10;  @date   $Date: 2010-06-29 22:07:47 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="txAck" ref="0x7f5ce3ade9e0" loc="62:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f5ce3ade760" loc="62:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pinNeighbor" ref="0x7f5ce3adf490" loc="55:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f5ce3adf210" loc="55:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txNoAck" ref="0x7f5ce3add3f0" loc="66:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f5ce3add170" loc="66:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNeighbor" ref="0x7f5ce3ae0a30" loc="52:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f5ce3ae07b0" loc="52:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x7f5ce3adb790" loc="72:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f5ce3adb510" loc="72:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearDLQ" ref="0x7f5ce3adddd0" loc="69:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f5ce3addb50" loc="69:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="unpinNeighbor" ref="0x7f5ce3ade020" loc="58:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f5ce3adfc20" loc="58:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLinkQuality" ref="0x7f5ce3ae0020" loc="49:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f5ce3ae4c40" loc="49:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Cache" loc="44:/usr/bin/tinyos-main/tos/interfaces/Cache.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/interfaces/Cache.nc">
        <short>&#10; A data item cache.</short>
        <long>&#10; A data item cache. The cache does not own the items it caches:&#10; there is no allocation/deallocation policy, or notification of&#10; eviction. Correspondingly, using references (pointers) as data&#10; items can be difficult.&#10; &#10; @author Rodrigo Fonseca&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f5ce3a88020" loc="44:/usr/bin/tinyos-main/tos/interfaces/Cache.nc">
          <interfacedef-ref qname="Cache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5ce3a88020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="insert" ref="0x7f5ce3a88ac0" loc="51:/usr/bin/tinyos-main/tos/interfaces/Cache.nc">
        <documentation loc="45:/usr/bin/tinyos-main/tos/interfaces/Cache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary.</short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.&#10; An atomic lookup after insert should return true.&#10;&#10; @param item - the data item to insert.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5ce3a88020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7f5ce3a88840" loc="51:/usr/bin/tinyos-main/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5ce3a88020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f5ce3a87c80" loc="65:/usr/bin/tinyos-main/tos/interfaces/Cache.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/interfaces/Cache.nc">
          <short>&#10; Flush the cache of all entries.</short>
          <long>&#10; Flush the cache of all entries.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="lookup" ref="0x7f5ce3a874f0" loc="59:/usr/bin/tinyos-main/tos/interfaces/Cache.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/interfaces/Cache.nc">
          <short>&#10; Return whether the data item is in the cache.</short>
          <long>&#10; Return whether the data item is in the cache.&#10;&#10; @param item - the data item to query&#10; @return Whether the item is in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5ce3a88020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7f5ce3a87270" loc="59:/usr/bin/tinyos-main/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5ce3a88020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f5ce3aa59c0" loc="43:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5ce3aa59c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f5ce3a9e9e0" loc="73:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="67:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5ce3aa59c0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f5ce3a9d4a0" loc="90:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="83:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5ce3aa59c0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f5ce3a9d220" loc="90:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5ce3aa59c0"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7f5ce63fdb50"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x7f5ce63fdb50"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f5ce3a9a440" loc="101:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="92:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5ce3aa59c0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f5ce3a9a1c0" loc="101:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f5ce3a9e270" loc="65:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="60:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f5ce3a9c610" loc="81:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="75:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5ce3aa59c0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f5ce3a9f2b0" loc="50:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="45:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f5ce3a9fa40" loc="58:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="52:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UnicastNameFreeRouting" loc="41:/usr/bin/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <short>&#10;  Provides a single next hop on a name-free protocol.</short>
        <long>&#10;  Provides a single next hop on a name-free protocol.&#10;&#10;  @author Philip Levis&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="hasRoute" ref="0x7f5ce3aa4930" loc="49:/usr/bin/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="routeFound" ref="0x7f5ce3aa3070" loc="51:/usr/bin/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="nextHop" ref="0x7f5ce3aa4120" loc="48:/usr/bin/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <documentation loc="43:/usr/bin/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
          <short>&#10; Get the address of the best next hop set to the destination.</short>
          <long>&#10; Get the address of the best next hop set to the destination.&#10; If there is not best next hop, the address is the local address.&#10; @return : The next best hop, or the local address if there is no route.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="noRoute" ref="0x7f5ce3aa3730" loc="52:/usr/bin/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/usr/bin/tinyos-main/tos/interfaces/Pool.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f5ce3a97b60" loc="50:/usr/bin/tinyos-main/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5ce3a97b60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f5ce3a91d40" loc="97:/usr/bin/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="91:/usr/bin/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5ce3a97b60"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f5ce3a93560" loc="80:/usr/bin/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="74:/usr/bin/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f5ce3a94460" loc="61:/usr/bin/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="52:/usr/bin/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x7f5ce3a91020" loc="89:/usr/bin/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="82:/usr/bin/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5ce54be600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5ce3a97b60"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f5ce3a93d20" loc="89:/usr/bin/tinyos-main/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f5ce3a97b60"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f5ce3a94cb0" loc="72:/usr/bin/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="63:/usr/bin/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CompareBit" loc="47:/usr/bin/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
        <short> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table.</short>
        <long> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table. The return value is the &#34;pin bit&#34; - if true&#10; insert into the neighbor table. In the reference implementation&#10; the router will return true if the path through the source&#10; will be better than a path through at least one current neighbor.&#10;@ author Omprakash Gnawali&#10;@ Created: September 16, 2006&#10;@date   $Date: 2010-06-29 22:07:49 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="shouldInsert" ref="0x7f5ce3892410" loc="51:/usr/bin/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
        <interfacedef-ref qname="CompareBit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce38935e0" loc="51:/usr/bin/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f5ce3893e00" loc="51:/usr/bin/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5ce3892170" loc="51:/usr/bin/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5ce63d5a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpRoutingPacket" loc="43:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <short>&#10;  ADT for CTP routing frames.</short>
        <long>&#10;  ADT for CTP routing frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2009-09-21 02:19:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearOptions" ref="0x7f5ce37a66e0" loc="51:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce37a6460" loc="51:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x7f5ce379f2f0" loc="57:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce37a0cc0" loc="57:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x7f5ce379f060" loc="57:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x7f5ce37a79b0" loc="48:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f5ce3b3d9e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce37a73b0" loc="48:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x7f5ce37a7720" loc="48:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f5ce3b3d9e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x7f5ce37a02a0" loc="56:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5ce63cd5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce37a0020" loc="56:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x7f5ce37a8920" loc="47:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f5ce3b3d9e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce37a8320" loc="47:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x7f5ce37a8690" loc="47:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f5ce3b3d9e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setParent" ref="0x7f5ce37a2480" loc="54:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce37a3e70" loc="54:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f5ce37a21f0" loc="54:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x7f5ce37a3430" loc="53:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5ce53161d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce37a31b0" loc="53:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOption" ref="0x7f5ce37aa840" loc="46:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5ce5508020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f5ce3b3d9e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5ce37aa240" loc="46:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5ce5300e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5ce52fe470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x7f5ce37aa5b0" loc="46:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f5ce3b3d9e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
