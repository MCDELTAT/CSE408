<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="38:AntiTheftAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f73c2764e60"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f73c22bd080"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f73c22bd080"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f73c22b8dc0"/></to>
    </wire>
    <wire loc="39:AntiTheftAppC.nc">
      <from><interface-ref name="Check" scoped="" ref="0x7f73c27797f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73c1570bd0"/></to>
    </wire>
    <wire loc="52:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73c1570bd0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f73c1a652e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:AntiTheftAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f73c275a9a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f73c15a6810"/></to>
    </wire>
    <wire loc="51:/usr/bin/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f73c15a6810"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f73c159f2a0"/></to>
    </wire>
    <wire loc="41:AntiTheftAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f73c26b5490"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f73c262ca70"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f73c262ca70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f73c25b8300"/></to>
    </wire>
    <wire loc="42:AntiTheftAppC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f73c26a8130"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f73c25ee7e0"/></to>
    </wire>
    <wire loc="76:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f73c25ee7e0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f73c25a8b40"/></to>
    </wire>
    <wire loc="47:AntiTheftAppC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f73c2771df0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f73c155dbd0"/></to>
    </wire>
    <wire loc="24:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f73c155dbd0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f73c1556930"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:AntiTheftAppC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f73c276f160"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f73c11dabf0"/></to>
    </wire>
    <wire loc="27:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelXStreamC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f73c11dabf0"/></from>
      <to><interface-ref name="ReadStreamX" scoped="" ref="0x7f73c11d4a80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:AntiTheftAppC.nc">
      <from><interface-ref name="Mts300Sounder" scoped="" ref="0x7f73c27552c0"/></from>
      <to><interface-ref name="Mts300Sounder" scoped="" ref="0x7f73c0f6d540"/></to>
    </wire>
    <wire loc="9:/usr/bin/tinyos-main/tos/sensorboards/mts300/SounderC.nc">
      <from><interface-ref name="Mts300Sounder" scoped="" ref="0x7f73c0f6d540"/></from>
      <to><interface-ref name="Mts300Sounder" scoped="" ref="0x7f73c0f69400"/></to>
    </wire>
    <wire loc="52:AntiTheftAppC.nc">
      <from><interface-ref name="DisseminationControl" scoped="" ref="0x7f73c2750900"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f73c0f4eb40"/></to>
    </wire>
    <wire loc="51:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f73c0f4eb40"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f73c0f49020"/></to>
    </wire>
    <wire loc="56:AntiTheftAppC.nc">
      <from><interface-ref name="SettingsValue" scoped="" ref="0x7f73c27581e0"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x7f73c0d1b730"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationValue" scoped="" ref="0x7f73c0d1b730"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x7f73bfcc98e0"/></to>
    </wire>
    <wire loc="61:AntiTheftAppC.nc">
      <from><interface-ref name="AlertRoot" scoped="" ref="0x7f73c26bc940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f73c082fe40"/></to>
    </wire>
    <wire loc="51:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f73c082fe40"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f73bfa1fb30"/></to>
    </wire>
    <wire loc="62:AntiTheftAppC.nc">
      <from><interface-ref name="CollectionControl" scoped="" ref="0x7f73c2750020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f73c0d089c0"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f73c0d089c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f73c0cc7170"/></to>
    </wire>
    <wire loc="69:AntiTheftAppC.nc">
      <from><interface-ref name="TheftSend" scoped="" ref="0x7f73c2697660"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f73c0806860"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f73c0806860"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f73bfa10e70"/></to>
    </wire>
    <wire loc="70:AntiTheftAppC.nc">
      <from><interface-ref name="TheftReceive" scoped="" ref="0x7f73c26ad060"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f73c08003a0"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f73c08003a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f73c2628e40"/>
      <arguments>
        <value cst="I:99">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:AntiTheftC.nc">
      <from><interface-ref name="checkAcceleration" scoped="" ref="0x7f73c2647390"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f73c25b8300"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f73c25788f0"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f73c261d2e0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f73c25aed60"/></to>
    </wire>
    <wire loc="84:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f73c25aed60"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f73c256b4d0"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f73c260aae0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f73c25accd0"/></to>
    </wire>
    <wire loc="89:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f73c25accd0"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f73c2568ba0"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f73c2629b10"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f73c25b6320"/></to>
    </wire>
    <wire loc="81:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f73c25b6320"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f73c2575980"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f73c2627a40"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f73c25ae1d0"/></to>
    </wire>
    <wire loc="83:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f73c25ae1d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f73c256c900"/></to>
    </wire>
    <wire loc="93:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f73c25a8b40"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f73c253b080"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f73c2628e40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f73c25b5510"/></to>
    </wire>
    <wire loc="82:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f73c25b5510"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f73c256ecb0"/></to>
    </wire>
    <wire loc="75:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f73c25e8e00"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f73c25a81a0"/></to>
    </wire>
    <wire loc="92:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f73c25a81a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f73c254a670"/></to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f73c25d9b40"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f73c25a7790"/></to>
    </wire>
    <wire loc="94:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f73c25a7790"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f73c253bb70"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f73c25edaf0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f73c25ab990"/></to>
    </wire>
    <wire loc="90:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f73c25ab990"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f73c2569470"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f73c25d58e0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f73c25a6480"/></to>
    </wire>
    <wire loc="95:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f73c25a6480"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f73c253a930"/></to>
    </wire>
    <wire loc="81:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7f73c25c69e0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f73c2587130"/></to>
    </wire>
    <wire loc="104:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f73c2587130"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f73c2528130"/></to>
    </wire>
    <wire loc="80:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f73c25c5af0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f73c257c270"/></to>
    </wire>
    <wire loc="103:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f73c257c270"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f73c251f3f0"/></to>
    </wire>
    <wire loc="215:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f73c25788f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f73c1e2d880"/></to>
    </wire>
    <wire loc="99:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f73c25953b0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f73c252d020"/></to>
    </wire>
    <wire loc="305:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f73c252d020"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f73c1a053b0"/></to>
    </wire>
    <wire loc="270:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f73c251f3f0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f73c1a59d00"/></to>
    </wire>
    <wire loc="124:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f73c256b4d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f73c22f0420"/></to>
    </wire>
    <wire loc="126:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f73c2568ba0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f73c22f68b0"/></to>
    </wire>
    <wire loc="121:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f73c2575980"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f73c22f26c0"/></to>
    </wire>
    <wire loc="123:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f73c256c900"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f73c22f1c90"/></to>
    </wire>
    <wire loc="98:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f73c259de80"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f73c2537a90"/></to>
    </wire>
    <wire loc="303:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f73c2537a90"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f73c1a08e80"/></to>
    </wire>
    <wire loc="216:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f73c253b080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f73c1e12270"/></to>
    </wire>
    <wire loc="122:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f73c256ecb0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f73c22f1530"/></to>
    </wire>
    <wire loc="269:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f73c2528130"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f73c1a55bb0"/></to>
    </wire>
    <wire loc="102:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f73c2586b50"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f73c252abb0"/></to>
    </wire>
    <wire loc="307:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f73c252abb0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f73c19f8a40"/></to>
    </wire>
    <wire loc="97:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f73c25998d0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f73c2539540"/></to>
    </wire>
    <wire loc="304:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f73c2539540"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f73c19fce70"/></to>
    </wire>
    <wire loc="248:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f73c254a670"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f73c1d09780"/></to>
    </wire>
    <wire loc="86:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f73c25ada50"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f73c256a1d0"/></to>
    </wire>
    <wire loc="128:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f73c256a1d0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f73c22f0b80"/></to>
    </wire>
    <wire loc="187:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f73c253bb70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f73c1e39ba0"/></to>
    </wire>
    <wire loc="125:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f73c2569470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f73c22f7280"/></to>
    </wire>
    <wire loc="224:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f73c253a930"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f73c1d98d90"/></to>
    </wire>
    <wire loc="100:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f73c2589e60"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f73c252a350"/></to>
    </wire>
    <wire loc="306:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f73c252a350"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f73c19f81e0"/></to>
    </wire>
    <wire loc="87:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f73c25ac6c0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f73c256adf0"/></to>
    </wire>
    <wire loc="129:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f73c256adf0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f73c22ef3e0"/></to>
    </wire>
    <wire loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f73c1e2d880"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f73c1e12d90"/></to>
    </wire>
    <wire loc="88:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f73c1a053b0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f73c19d80d0"/></to>
    </wire>
    <wire loc="160:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x7f73c2565020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f73c1fcea10"/></to>
    </wire>
    <wire loc="148:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x7f73c25572c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f73c2012cb0"/></to>
    </wire>
    <wire loc="98:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f73c2012cb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f73c072c210"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f73c22f0420"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f73c0788b00"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f73c22f26c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f73c078bd60"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f73c22f1c90"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f73c07883e0"/></to>
    </wire>
    <wire loc="161:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7f73c253d490"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f73c1ec9c40"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7f73c1ec9c40"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f73c0355ab0"/></to>
    </wire>
    <wire loc="162:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7f73c254b890"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f73c2007ac0"/></to>
    </wire>
    <wire loc="85:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f73c1a08e80"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f73c19dcb90"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f73c1e12270"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f73c02d81b0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f73c22f68b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f73c078b020"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f73c22f1530"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f73c0789b40"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f73c1a55bb0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f73c02392a0"/></to>
    </wire>
    <wire loc="81:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f73c19f8a40"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f73c18cb020"/></to>
    </wire>
    <wire loc="94:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f73c19fce70"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f73c19d3c80"/></to>
    </wire>
    <wire loc="158:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x7f73c2559a60"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7f73c1fcf720"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f73c22f0b80"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f73c07873e0"/></to>
    </wire>
    <wire loc="117:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f73c1e39ba0"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7f73c1e33020"/></to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f73c1d98d90"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f73c02cea10"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f73c22f7280"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f73c078d8b0"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f73c1a59d00"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f73c023d360"/></to>
    </wire>
    <wire loc="159:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x7f73c2566840"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7f73c1fce440"/></to>
    </wire>
    <wire loc="96:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f73c19f81e0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f73c19cf020"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f73c22ef3e0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f73c0787b40"/></to>
    </wire>
    <wire loc="102:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f73c24b5bd0"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f73c1eccb20"/></to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f73c1eccb20"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f73c03589f0"/></to>
    </wire>
    <wire loc="103:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f73c24a9d30"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f73c241eba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f73c24ad5f0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f73c1a55bb0"/></to>
    </wire>
    <wire loc="105:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x7f73c249d430"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f73c1a0ad90"/></to>
    </wire>
    <wire loc="79:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f73c1a0ad90"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f73c19ddaa0"/></to>
    </wire>
    <wire loc="110:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f73c23dbcd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f73c19f7dd0"/></to>
    </wire>
    <wire loc="100:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f73c19f7dd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f73c18d0ac0"/></to>
    </wire>
    <wire loc="116:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f73c22ed8c0"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7f73c24dbe30"/></to>
    </wire>
    <wire loc="117:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f73c22ee8f0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f73c22e5550"/></to>
    </wire>
    <wire loc="118:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f73c22ed2b0"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x7f73c1f7e770"/></to>
    </wire>
    <wire loc="119:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f73c22efa70"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x7f73c1f7ed80"/></to>
    </wire>
    <wire loc="137:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f73c22d2910"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f73c2012cb0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f73c22d2020"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x7f73c1f7fe00"/></to>
    </wire>
    <wire loc="153:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f73c1fcc080"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f73c1eccb20"/></to>
    </wire>
    <wire loc="154:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f73c1fc8120"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7f73c1f800a0"/></to>
    </wire>
    <wire loc="155:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f73c1fc8a50"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7f73c1f809d0"/></to>
    </wire>
    <wire loc="156:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f73c1fc92e0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f73c1f7f020"/></to>
    </wire>
    <wire loc="169:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f73c1f7dc40"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f73c1e4d2f0"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f73c1e4d2f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f73c03045c0"/></to>
    </wire>
    <wire loc="170:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f73c1f785d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f73c1e395d0"/></to>
    </wire>
    <wire loc="114:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f73c1e395d0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f73c1e35120"/></to>
    </wire>
    <wire loc="171:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f73c1f78be0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f73c1ec7020"/></to>
    </wire>
    <wire loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f73c1ec7020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f73c0354d60"/></to>
    </wire>
    <wire loc="176:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f73c1ec7e60"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f73c1e378b0"/></to>
    </wire>
    <wire loc="115:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f73c1e378b0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f73c1e35730"/></to>
    </wire>
    <wire loc="181:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f73c1e4a5a0"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x7f73c24fb9c0"/></to>
    </wire>
    <wire loc="182:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f73c1e4b4a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f73c1e45bb0"/></to>
    </wire>
    <wire loc="113:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f73c1e45bb0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f73c1e367c0"/></to>
    </wire>
    <wire loc="191:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f73c1e34590"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f73c1d09780"/></to>
    </wire>
    <wire loc="193:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f73c1e367c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f73c1e16440"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f73c1e16440"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f73c1e118c0"/></to>
    </wire>
    <wire loc="194:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f73c1e35120"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f73c1e16d70"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f73c1e16d70"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f73c1e102b0"/></to>
    </wire>
    <wire loc="195:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f73c1e35730"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f73c1e153d0"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f73c1e153d0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f73c1e108c0"/></to>
    </wire>
    <wire loc="211:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f73c1e12d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f73c1d993a0"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f73c1d993a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f73c02d18a0"/></to>
    </wire>
    <wire loc="212:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f73c1e118c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f73c1d99e60"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f73c1d99e60"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f73c02d0a50"/></to>
    </wire>
    <wire loc="213:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f73c1e102b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f73c1d987c0"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f73c1d987c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f73c02ce440"/></to>
    </wire>
    <wire loc="214:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f73c1e108c0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f73c1a517e0"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f73c1a517e0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f73c0235020"/></to>
    </wire>
    <wire loc="221:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f73c1d95590"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f73c1d3d3f0"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f73c1d3d3f0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f73c0292660"/></to>
    </wire>
    <wire loc="222:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f73c1d95e80"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f73c1e4dbe0"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f73c1e4dbe0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f73c0303020"/></to>
    </wire>
    <wire loc="223:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f73c1d96750"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f73c1a1dc20"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f73c1a1dc20"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7f73c1a16410"/></to>
    </wire>
    <wire loc="228:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f73c1e4bdd0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f73c1d3dce0"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f73c1d3dce0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f73c0290020"/></to>
    </wire>
    <wire loc="237:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f73c1d392b0"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7f73c24ed340"/></to>
    </wire>
    <wire loc="238:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f73c1d3c520"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f73c1d345e0"/></to>
    </wire>
    <wire loc="239:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f73c1d3ce50"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f73c1d09020"/></to>
    </wire>
    <wire loc="240:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f73c1d3a5f0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f73c241eba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x7f73c1d052b0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f73c1a499b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f73c1d07270"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f73c241eba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f73c1d06020"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7f73c2505550"/></to>
    </wire>
    <wire loc="253:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f73c1d08140"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f73c1ce9720"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f73c1ce9720"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f73c1ce2020"/></to>
    </wire>
    <wire loc="254:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f73c1d08a70"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f73c1ce8060"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f73c1ce8060"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f73c1ce2950"/></to>
    </wire>
    <wire loc="259:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f73c1ce0760"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7f73c24e6e40"/></to>
    </wire>
    <wire loc="260:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f73c1ce2020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f73c1a1ca40"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f73c1a1ca40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f73c1a15440"/></to>
    </wire>
    <wire loc="261:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f73c1ce2950"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f73c1a1b400"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f73c1a1b400"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f73c1a15d70"/></to>
    </wire>
    <wire loc="262:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x7f73c1ce1120"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7f73c1a0a5c0"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f73c1a0a5c0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7f73c19dd2d0"/></to>
    </wire>
    <wire loc="267:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f73c1a50760"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f73c19f8a40"/></to>
    </wire>
    <wire loc="268:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f73c1a4f800"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f73c1a25590"/></to>
    </wire>
    <wire loc="271:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7f73c1a4e760"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f73c1a499b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="276:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f73c1a214a0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f73c1a0ad90"/></to>
    </wire>
    <wire loc="286:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f73c1a13b40"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7f73c24e6e40"/></to>
    </wire>
    <wire loc="287:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f73c1a15440"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f73c1a0b460"/></to>
    </wire>
    <wire loc="76:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f73c1a0b460"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f73c19de120"/></to>
    </wire>
    <wire loc="288:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f73c1a15d70"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f73c1a0bdd0"/></to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f73c1a0bdd0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f73c19dea90"/></to>
    </wire>
    <wire loc="289:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x7f73c1a16410"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f73c1a0e610"/></to>
    </wire>
    <wire loc="75:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f73c1a0e610"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f73c19e02e0"/></to>
    </wire>
    <wire loc="301:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f73c19f11f0"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x7f73c250d350"/></to>
    </wire>
    <wire loc="302:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f73c19f02e0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f73c1a55bb0"/></to>
    </wire>
    <wire loc="309:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f73c19ec110"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f73c1a499b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="310:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7f73c19ecca0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f73c1a499b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="311:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f73c19eb8d0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f73c1a499b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="312:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f73c19ea470"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f73c241eba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f73c241eba0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f73c07a97e0"/></to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f73c07a8830"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f73c23dbcd0"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f73c07a5940"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f73c23ddbe0"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f73c07830f0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f73c230f5a0"/></to>
    </wire>
    <wire loc="75:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f73c0786310"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f73c22efa70"/></to>
    </wire>
    <wire loc="76:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f73c0785120"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f73c22ee8f0"/></to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f73c0785a50"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f73c22ed2b0"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f73c07840a0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f73c22ed8c0"/></to>
    </wire>
    <wire loc="99:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f73c2011a60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f73c072b020"/></to>
    </wire>
    <wire loc="100:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c2010270"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c072b7a0"/></to>
    </wire>
    <wire loc="46:/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f73c22ba590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73bfb21d50"/></to>
    </wire>
    <wire loc="48:/usr/bin/tinyos-main/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f73c22ba590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73bfb3d450"/></to>
    </wire>
    <wire loc="48:/usr/bin/tinyos-main/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f73c22ba590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73bfb53750"/></to>
    </wire>
    <wire loc="150:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f73c22ba590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73c0886020"/></to>
    </wire>
    <wire loc="175:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f73c22ba590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73c0b66550"/></to>
    </wire>
    <wire loc="226:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f73c22ba590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73c0a802a0"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f73c22ba590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73bfca6a00"/></to>
    </wire>
    <wire loc="36:/usr/bin/tinyos-main/tos/chips/atm128/adc/WireAdcStreamP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f73c22ba590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73c11253a0"/></to>
    </wire>
    <wire loc="103:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f73c22ba590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73bfe58540"/></to>
    </wire>
    <wire loc="103:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f73c22ba590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73bfec3d70"/></to>
    </wire>
    <wire loc="103:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f73c22ba590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73bffda080"/></to>
    </wire>
    <wire loc="103:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f73c22ba590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73c001b4c0"/></to>
    </wire>
    <wire loc="103:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f73c22ba590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73c00583b0"/></to>
    </wire>
    <wire loc="96:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f73c22ba590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73c0146020"/></to>
    </wire>
    <wire loc="119:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f73c22ba590"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f73c19e1b60"/></to>
    </wire>
    <wire loc="53:/usr/bin/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f73c22ba590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73c1c71540"/></to>
    </wire>
    <wire loc="52:/usr/bin/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f73c22ba590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73c1d4c200"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f73c22ba590"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f73c02d0440"/></to>
    </wire>
    <wire loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f73c22ba590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73c1e85700"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f73c22ba590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73c0303780"/></to>
    </wire>
    <wire loc="96:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f73c22ba590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73c0730b40"/></to>
    </wire>
    <wire loc="101:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73c072a0d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73c2010b40"/></to>
    </wire>
    <wire loc="103:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f73c072a890"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f73c072f2b0"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f73c2090470"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f73c294e020"/></to>
    </wire>
    <wire loc="53:/usr/bin/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f73c294e020"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f73c27d38a0"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f73c208f020"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f73c18c7680"/></to>
    </wire>
    <wire loc="122:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f73c208f020"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f73c19e1020"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f73c208f020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73c22bcd60"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f73c22bcd60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73c22a40c0"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f73c208f720"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f73c22ba590"/></to>
    </wire>
    <wire loc="26:/usr/bin/tinyos-main/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f73c22b6d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73c100cc60"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f73c22b6d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73c131b830"/></to>
    </wire>
    <wire loc="26:/usr/bin/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f73c22b6d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73c16d4b50"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f73c22b6020"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f73c20bb690"/></to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f73c22a3020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73c20bb020"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f73c22a47a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73c1577920"/></to>
    </wire>
    <wire loc="62:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f73c22a47a0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f73c22a79e0"/></to>
    </wire>
    <wire loc="46:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f73c22a79e0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f73c229a530"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f73c229f110"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f73c22b6d50"/></to>
    </wire>
    <wire loc="48:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7f73c2293ad0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7f73c2286060"/></to>
    </wire>
    <wire loc="141:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f73c2286060"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f73c21f4da0"/></to>
    </wire>
    <wire loc="49:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f73c2299cd0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f73c229f110"/></to>
    </wire>
    <wire loc="191:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f73c224dcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c2145160"/></to>
    </wire>
    <wire loc="165:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f73c226a4e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f73c21c82b0"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f73c21c82b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c0584e20"/></to>
    </wire>
    <wire loc="176:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f73c225e350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f73c21b78f0"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f73c21b78f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c05083f0"/></to>
    </wire>
    <wire loc="185:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f73c2253cb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f73c21a8c10"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f73c21a8c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c04953f0"/></to>
    </wire>
    <wire loc="196:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f73c2245060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c211d6d0"/></to>
    </wire>
    <wire loc="143:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f73c2284670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f73c21f12b0"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f73c21f12b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c06cf9b0"/></to>
    </wire>
    <wire loc="183:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f73c2256670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f73c21aa8f0"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f73c21aa8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c04a0e20"/></to>
    </wire>
    <wire loc="146:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f73c2282cb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f73c21e9a20"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f73c21e9a20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c0670a60"/></to>
    </wire>
    <wire loc="157:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f73c2275cb0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f73c21d7020"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f73c21d7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c05f10a0"/></to>
    </wire>
    <wire loc="168:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f73c2267e40"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f73c21c5760"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f73c21c5760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c057a6d0"/></to>
    </wire>
    <wire loc="179:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f73c225acb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f73c21b4da0"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f73c21b4da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c04ffe20"/></to>
    </wire>
    <wire loc="138:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f73c228a800"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f73c21f78f0"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f73c21f78f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c06f7a80"/></to>
    </wire>
    <wire loc="149:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f73c227e670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f73c21e5020"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f73c21e5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c06663f0"/></to>
    </wire>
    <wire loc="160:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f73c2270670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f73c21d35d0"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f73c21d35d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c05e89b0"/></to>
    </wire>
    <wire loc="171:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f73c2263670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f73c21c2c10"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f73c21c2c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c056b0a0"/></to>
    </wire>
    <wire loc="188:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f73c224f670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f73c21a32b0"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f73c21a32b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c048ce20"/></to>
    </wire>
    <wire loc="194:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f73c2248b20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c212e160"/></to>
    </wire>
    <wire loc="174:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f73c2261cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f73c21b95d0"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f73c21b95d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c050fe20"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f73c21f4da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c06ed3f0"/></to>
    </wire>
    <wire loc="152:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f73c2279020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f73c21e15d0"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f73c21e15d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c065de20"/></to>
    </wire>
    <wire loc="192:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f73c224a4e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c2139c90"/></to>
    </wire>
    <wire loc="155:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f73c2277670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f73c21dad30"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f73c21dad30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c05f8c90"/></to>
    </wire>
    <wire loc="166:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f73c2269800"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f73c21c7440"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f73c21c7440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c05800a0"/></to>
    </wire>
    <wire loc="177:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f73c225d670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f73c21b6a80"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f73c21b6a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c05056d0"/></to>
    </wire>
    <wire loc="186:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f73c2251020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f73c21a7da0"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f73c21a7da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c04926d0"/></to>
    </wire>
    <wire loc="144:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f73c2283990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f73c21f0440"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f73c21f0440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c06cbe20"/></to>
    </wire>
    <wire loc="147:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f73c2280020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f73c21e8c10"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f73c21e8c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c066de20"/></to>
    </wire>
    <wire loc="158:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f73c2272020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f73c21d52b0"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f73c21d52b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c05ee3f0"/></to>
    </wire>
    <wire loc="169:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f73c2265060"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f73c21c48f0"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f73c21c48f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c05779b0"/></to>
    </wire>
    <wire loc="180:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f73c2258020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f73c21b2020"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f73c21b2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c04fb0a0"/></to>
    </wire>
    <wire loc="139:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f73c2289b20"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f73c21f6a80"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f73c21f6a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c06f4e20"/></to>
    </wire>
    <wire loc="150:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f73c227d990"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f73c21e42b0"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f73c21e42b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c06636d0"/></to>
    </wire>
    <wire loc="161:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f73c226f990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f73c21d2760"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f73c21d2760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c05e5e20"/></to>
    </wire>
    <wire loc="189:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f73c224e990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f73c21a2440"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f73c21a2440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c04880a0"/></to>
    </wire>
    <wire loc="164:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f73c226b020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f73c21c9020"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f73c21c9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c0587c90"/></to>
    </wire>
    <wire loc="175:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f73c225f020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f73c21b8760"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f73c21b8760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c050b0a0"/></to>
    </wire>
    <wire loc="184:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f73c2255990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f73c21a9a80"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f73c21a9a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c04980a0"/></to>
    </wire>
    <wire loc="195:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f73c2247e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c2122c90"/></to>
    </wire>
    <wire loc="142:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f73c2285350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f73c21f2020"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f73c21f2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c06d26d0"/></to>
    </wire>
    <wire loc="153:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f73c2278350"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f73c21e0760"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f73c21e0760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c06590a0"/></to>
    </wire>
    <wire loc="182:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f73c2257350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f73c21ab7a0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f73c21ab7a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c04a3c90"/></to>
    </wire>
    <wire loc="156:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f73c2276990"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f73c21d9e60"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f73c21d9e60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c05f5e20"/></to>
    </wire>
    <wire loc="167:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f73c2268b20"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f73c21c65d0"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f73c21c65d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c057d3f0"/></to>
    </wire>
    <wire loc="178:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f73c225b990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f73c21b5c10"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f73c21b5c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c05029b0"/></to>
    </wire>
    <wire loc="187:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f73c2250350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f73c21a5020"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f73c21a5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c048f9b0"/></to>
    </wire>
    <wire loc="137:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f73c229d540"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f73c21f86b0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f73c21f86b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c06fa830"/></to>
    </wire>
    <wire loc="148:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f73c227f350"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f73c21e7da0"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f73c21e7da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c06690a0"/></to>
    </wire>
    <wire loc="159:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f73c2271350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f73c21d4440"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f73c21d4440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c05eb6d0"/></to>
    </wire>
    <wire loc="170:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f73c2264350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f73c21c3a80"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f73c21c3a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c056fe20"/></to>
    </wire>
    <wire loc="193:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f73c2249800"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c21346d0"/></to>
    </wire>
    <wire loc="173:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f73c2262990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f73c21ba3f0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f73c21ba3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c0512c90"/></to>
    </wire>
    <wire loc="162:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f73c226ecb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f73c21d18f0"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f73c21d18f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c05e10a0"/></to>
    </wire>
    <wire loc="140:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f73c2288e40"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f73c21f5c10"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f73c21f5c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c06f00a0"/></to>
    </wire>
    <wire loc="151:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f73c227bcb0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f73c21e3440"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f73c21e3440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f73c06609b0"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c27d2850"/></to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f73c27d1dd0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f73c28cea30"/></to>
    </wire>
    <wire loc="92:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f73c27ad690"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f73c1b8da70"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f73c0729480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f73c0353c00"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f73c230f5a0"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f73c0352760"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f73c1ec7e60"/></to>
    </wire>
    <wire loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7f73c0301aa0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7f73c1e861c0"/></to>
    </wire>
    <wire loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7f73c1e861c0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7f73c1e85d50"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f73c02ff720"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f73c02fc020"/></to>
    </wire>
    <wire loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f73c02fc020"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f73c1e81020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f73c0303df0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f73c1e4b4a0"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f73c0302770"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f73c1e4bdd0"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x7f73c0301020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f73c1e4a5a0"/></to>
    </wire>
    <wire loc="118:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7f73c1e33cb0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f73c1e34590"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f73c02cd460"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f73c1d96750"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f73c02cc270"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f73c23ddbe0"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f73c02cccf0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f73c1d95590"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f73c02cb610"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f73c1d95e80"/></to>
    </wire>
    <wire loc="189:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f73c02ca620"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x7f73c02cae00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x7f73c02cbdf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f73c0290820"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f73c1d3c520"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f73c028d020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f73c1d392b0"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f73c028f2b0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f73c1d3ce50"/></to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f73c028fa10"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f73c1d3a5f0"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f73c028e720"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f73c1d52c50"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f73c1d52c50"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f73c1d4bc10"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x7f73c028db20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f73c1d50b70"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f73c1d4cac0"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f73c1d57d30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73c1d4c200"/></to>
    </wire>
    <wire loc="76:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f73c1cecd60"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f73c1ce64b0"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f73c1ce87c0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7f73c1ce1120"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f73c1cea840"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7f73c1ce3020"/></to>
    </wire>
    <wire loc="74:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f73c1ce7020"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f73c1ce18c0"/></to>
    </wire>
    <wire loc="80:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f73c1ce7e00"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f73c1ce0760"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f73c1cea270"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7f73c1ce4950"/></to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f73c1ceb880"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7f73c1ce4020"/></to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f73c0232cd0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f73c1a4f800"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f73c0234a70"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f73c1a50760"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f73c0233c40"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f73c1c75a60"/></to>
    </wire>
    <wire loc="26:/usr/bin/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f73c1c75a60"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f73c1c697d0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7f73c0235e60"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x7f73c1a4e760"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f73c1c697d0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f73c1a79790"/></to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f73c1c6e320"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73c1a8b150"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f73c1c71540"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73c1c5c020"/></to>
    </wire>
    <wire loc="35:/usr/bin/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f73c1c5c020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73c1b1b080"/></to>
    </wire>
    <wire loc="62:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f73c1a85640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73c1ae7cf0"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f73c1add1d0"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7f73c1c5ca10"/></to>
    </wire>
    <wire loc="36:/usr/bin/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7f73c1c5ca10"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f73c1b1b890"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f73c1a78a60"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7f73c1c57020"/></to>
    </wire>
    <wire loc="37:/usr/bin/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7f73c1c57020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f73c1b17bc0"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f73c1b17bc0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f73c02048d0"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f73c1b1b080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73c0210c20"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f73c1b1b890"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f73c020f4b0"/></to>
    </wire>
    <wire loc="74:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73c0202bc0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73c1bb0c70"/></to>
    </wire>
    <wire loc="94:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73c1bb0c70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73c1b97020"/></to>
    </wire>
    <wire loc="75:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f73c01fde20"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f73c1ba7020"/></to>
    </wire>
    <wire loc="95:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f73c1ba7020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f73c1b922b0"/></to>
    </wire>
    <wire loc="76:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f73c01fa0a0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f73c1ba6520"/></to>
    </wire>
    <wire loc="96:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f73c1ba6520"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f73c1b916b0"/></to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f73c01f7450"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f73c1b9da40"/></to>
    </wire>
    <wire loc="97:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f73c1b9da40"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f73c1b8c230"/></to>
    </wire>
    <wire loc="74:/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f73c1ad9490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f73c1a7ca00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f73c1a652e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f73c1c6e320"/></to>
    </wire>
    <wire loc="76:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f73c1a1e2b0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f73c1a19920"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f73c1a1bb60"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7f73c1a145a0"/></to>
    </wire>
    <wire loc="74:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f73c1a1a400"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f73c1a14d40"/></to>
    </wire>
    <wire loc="80:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f73c1a192b0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f73c1a13b40"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f73c1a1d650"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7f73c1a17d70"/></to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f73c1a1ed30"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7f73c1a17440"/></to>
    </wire>
    <wire loc="75:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f73c18d0ac0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f73c16816e0"/></to>
    </wire>
    <wire loc="91:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f73c19ff940"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f73c19d6630"/></to>
    </wire>
    <wire loc="81:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f73c18cb020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f73c16793a0"/></to>
    </wire>
    <wire loc="83:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f73c19ba340"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f73c19f11f0"/></to>
    </wire>
    <wire loc="86:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f73c19b9110"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f73c19ec110"/></to>
    </wire>
    <wire loc="89:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7f73c19b9ca0"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x7f73c19ecca0"/></to>
    </wire>
    <wire loc="92:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f73c19b88d0"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f73c19eb8d0"/></to>
    </wire>
    <wire loc="95:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f73c19b7780"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f73c19f02e0"/></to>
    </wire>
    <wire loc="98:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f73c19bd1a0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f73c18cb020"/></to>
    </wire>
    <wire loc="101:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f73c19b22e0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f73c19ea470"/></to>
    </wire>
    <wire loc="103:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7f73c19cf760"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x7f73c18d9950"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7f73c18d9950"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f73c2282cb0"/></to>
    </wire>
    <wire loc="104:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f73c19ceb50"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x7f73c18d6b50"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f73c18d6b50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f73c18a7850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f73c19c7aa0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f73c18d5920"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f73c18d5920"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f73c18a8020"/></to>
    </wire>
    <wire loc="107:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7f73c19cc670"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x7f73c18d44e0"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7f73c18d44e0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7f73c2278350"/></to>
    </wire>
    <wire loc="108:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f73c19cb980"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f73c18d27f0"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f73c18d27f0"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7f73c2284670"/></to>
    </wire>
    <wire loc="110:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7f73c19be550"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7f73c18d1b10"/></to>
    </wire>
    <wire loc="57:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7f73c18d1b10"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7f73c18ca9d0"/></to>
    </wire>
    <wire loc="111:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f73c19b36b0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f73c23ddbe0"/></to>
    </wire>
    <wire loc="112:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f73c19bcd20"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f73c161e9a0"/></to>
    </wire>
    <wire loc="847:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x7f73c191a920"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/usr/bin/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f73c16816e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f73c0115220"/></to>
    </wire>
    <wire loc="95:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f73c18a8020"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f73c1899480"/></to>
    </wire>
    <wire loc="48:/usr/bin/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f73c16793a0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f73c162ab60"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x7f73c18ba3d0"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7f73c2264350"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x7f73c18b9680"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7f73c2267e40"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f73c18bd7f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f73c17a0530"/></to>
    </wire>
    <wire loc="91:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f73c17a0530"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f73c1785850"/></to>
    </wire>
    <wire loc="96:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f73c189dae0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f73c1898020"/></to>
    </wire>
    <wire loc="94:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f73c18a6840"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f73c189ae00"/></to>
    </wire>
    <wire loc="92:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f73c18a91f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73c189a7e0"/></to>
    </wire>
    <wire loc="97:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f73c18a7850"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f73c1898d20"/></to>
    </wire>
    <wire loc="99:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7f73c1879430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f73c17bb210"/></to>
    </wire>
    <wire loc="98:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f73c17bb210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f73c01435a0"/></to>
    </wire>
    <wire loc="100:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c1878130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c17ba7a0"/></to>
    </wire>
    <wire loc="100:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c17ba7a0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c0142b20"/></to>
    </wire>
    <wire loc="101:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7f73c1895020"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7f73c182a3e0"/></to>
    </wire>
    <wire loc="83:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7f73c182a3e0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7f73c181d350"/></to>
    </wire>
    <wire loc="102:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f73c1878920"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f73c27b0020"/></to>
    </wire>
    <wire loc="296:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7f73c1856190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7f73c1814e50"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f73c27b0020"/></to>
    </wire>
    <wire loc="86:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7f73c1819390"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f73c2282cb0"/></to>
    </wire>
    <wire loc="87:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f73c1818650"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7f73c2280020"/></to>
    </wire>
    <wire loc="88:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7f73c1816800"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7f73c227f350"/></to>
    </wire>
    <wire loc="89:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7f73c1815b10"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7f73c227e670"/></to>
    </wire>
    <wire loc="99:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f73c17ba020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f73c01423a0"/></to>
    </wire>
    <wire loc="101:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73c0141590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73c17b80d0"/></to>
    </wire>
    <wire loc="103:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f73c0141d50"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f73c0146630"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f73c0140880"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f73c1799d80"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f73c1786020"/></to>
    </wire>
    <wire loc="89:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73c17b0b20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73c178eb90"/></to>
    </wire>
    <wire loc="93:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f73c1794650"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f73c177a5a0"/></to>
    </wire>
    <wire loc="94:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f73c1794650"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f73c1776ba0"/></to>
    </wire>
    <wire loc="95:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f73c1794650"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7f73c1771120"/></to>
    </wire>
    <wire loc="43:/usr/bin/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f73c0111570"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73c17b0b20"/></to>
    </wire>
    <wire loc="44:/usr/bin/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f73c010c8f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f73c1794650"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/usr/bin/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73c16c8410"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73c17b0b20"/></to>
    </wire>
    <wire loc="49:/usr/bin/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f73c1628e40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f73c164fcf0"/></to>
    </wire>
    <wire loc="50:/usr/bin/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f73c162d0f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f73c1675200"/></to>
    </wire>
    <wire loc="31:/usr/bin/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f73c1675200"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f73c165a020"/></to>
    </wire>
    <wire loc="32:/usr/bin/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73c1658280"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73c17b0b20"/></to>
    </wire>
    <wire loc="53:/usr/bin/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f73c1577920"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f73c15a2c40"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f73c159ea00"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f73c157a020"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f73c157a020"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7f73c2289b20"/></to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f73c159dca0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f73c1579380"/></to>
    </wire>
    <wire loc="57:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f73c1579380"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7f73c228a800"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f73c159b020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f73c15786a0"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f73c15786a0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7f73c229d540"/></to>
    </wire>
    <wire loc="10:/usr/bin/tinyos-main/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f73c1556930"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f73c11e83e0"/></to>
    </wire>
    <wire loc="11:/usr/bin/tinyos-main/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f73c11e7d50"/></from>
      <to><interface-ref name="ReadPhoto" scoped="" ref="0x7f73c154e760"/></to>
    </wire>
    <wire loc="30:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ReadPhoto" scoped="" ref="0x7f73c154e760"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f73c13717e0"/></to>
    </wire>
    <wire loc="12:/usr/bin/tinyos-main/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f73c11e0520"/></from>
      <to><interface-ref name="PhotoResource" scoped="" ref="0x7f73c1551020"/></to>
    </wire>
    <wire loc="23:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoResource" scoped="" ref="0x7f73c1551020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f73c13da790"/></to>
    </wire>
    <wire loc="46:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ReadTemp" scoped="" ref="0x7f73c154c5c0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f73c135a4c0"/></to>
    </wire>
    <wire loc="105:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f73c13da790"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f73c0018c80"/></to>
    </wire>
    <wire loc="33:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x7f73c1550340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f73c13d5cb0"/></to>
    </wire>
    <wire loc="105:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f73c13d5cb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f73bffd8970"/></to>
    </wire>
    <wire loc="24:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73c13a02f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73c13d9cb0"/></to>
    </wire>
    <wire loc="107:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73c13d9cb0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73c0016270"/></to>
    </wire>
    <wire loc="25:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c139f020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c13d8930"/></to>
    </wire>
    <wire loc="108:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c13d8930"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c0016e80"/></to>
    </wire>
    <wire loc="26:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f73c13cd280"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f73c1372a10"/></to>
    </wire>
    <wire loc="27:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempResource" scoped="" ref="0x7f73c136e020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f73c13e0210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73c136ed50"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73c134c450"/></to>
    </wire>
    <wire loc="52:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73c134c450"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f73c1a652e0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x7f73c1361020"/></from>
      <to><interface-ref name="Int1" scoped="" ref="0x7f73c153dca0"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7f73c153dca0"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x7f73c225b990"/></to>
    </wire>
    <wire loc="31:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x7f73c13603d0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f73c11fb980"/></to>
    </wire>
    <wire loc="36:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f73c11fb980"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f73c133e920"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73c13950e0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73c13d2270"/></to>
    </wire>
    <wire loc="107:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73c13d2270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73bffd6020"/></to>
    </wire>
    <wire loc="35:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c1395cf0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c13d2e80"/></to>
    </wire>
    <wire loc="108:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c13d2e80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73bffd6c30"/></to>
    </wire>
    <wire loc="36:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f73c139d020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f73c135c660"/></to>
    </wire>
    <wire loc="37:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempResource" scoped="" ref="0x7f73c1359bf0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f73c13e0210"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73c13589d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73c134c450"/></to>
    </wire>
    <wire loc="40:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x7f73c1353bd0"/></from>
      <to><interface-ref name="Int2" scoped="" ref="0x7f73c1539020"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7f73c1539020"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7f73c225acb0"/></to>
    </wire>
    <wire loc="47:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x7f73c1351020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f73c11fb980"/></to>
    </wire>
    <wire loc="49:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f73c11f9060"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f73c145ac10"/></to>
    </wire>
    <wire loc="50:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempAdc" scoped="" ref="0x7f73c145e700"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x7f73c152ae60"/></to>
    </wire>
    <wire loc="93:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x7f73c152ae60"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x7f73c1524410"/></to>
    </wire>
    <wire loc="82:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1_Interrupt" scoped="" ref="0x7f73c1536b70"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f73c1483680"/></to>
    </wire>
    <wire loc="92:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x7f73c152a7b0"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x7f73c1527d10"/></to>
    </wire>
    <wire loc="62:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x7f73c1544e20"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x7f73c2272020"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x7f73c15404d0"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x7f73c226f990"/></to>
    </wire>
    <wire loc="95:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x7f73c152cbf0"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x7f73c15231a0"/></to>
    </wire>
    <wire loc="97:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x7f73c152ba00"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x7f73c1522020"/></to>
    </wire>
    <wire loc="74:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_TXD" scoped="" ref="0x7f73c152e6a0"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x7f73c2268b20"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x7f73c1546970"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x7f73c2276990"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x7f73c1542020"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x7f73c2271350"/></to>
    </wire>
    <wire loc="90:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3_Interrupt" scoped="" ref="0x7f73c1531560"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f73c147cb50"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_RXD" scoped="" ref="0x7f73c152f380"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x7f73c2269800"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x7f73c153f7e0"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x7f73c226ecb0"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0_Interrupt" scoped="" ref="0x7f73c1532d80"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f73c1496b50"/></to>
    </wire>
    <wire loc="98:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x7f73c1529350"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x7f73c15226d0"/></to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x7f73c1545b10"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x7f73c2275cb0"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x7f73c1541330"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x7f73c2270670"/></to>
    </wire>
    <wire loc="94:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x7f73c152c540"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x7f73c1524ac0"/></to>
    </wire>
    <wire loc="96:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x7f73c152b350"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x7f73c1523850"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7f73c153e990"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x7f73c225d670"/></to>
    </wire>
    <wire loc="86:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2_Interrupt" scoped="" ref="0x7f73c1535880"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f73c147f120"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_CLK" scoped="" ref="0x7f73c1530130"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x7f73c2265060"/></to>
    </wire>
    <wire loc="99:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x7f73c1529a00"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x7f73c1522d80"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x7f73c1549710"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x7f73c2277670"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7f73c1538340"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x7f73c2258020"/></to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f73c14957a0"/></from>
      <to><interface-ref name="Int4" scoped="" ref="0x7f73c150ab70"/></to>
    </wire>
    <wire loc="75:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7f73c150ab70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f73c14b2d60"/></to>
    </wire>
    <wire loc="81:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f73c14822f0"/></from>
      <to><interface-ref name="Int5" scoped="" ref="0x7f73c1509b70"/></to>
    </wire>
    <wire loc="76:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7f73c1509b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f73c14adc90"/></to>
    </wire>
    <wire loc="85:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f73c147fc20"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x7f73c1508b70"/></to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7f73c1508b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f73c14a9c90"/></to>
    </wire>
    <wire loc="89:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f73c147b7a0"/></from>
      <to><interface-ref name="Int7" scoped="" ref="0x7f73c1507b70"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7f73c1507b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f73c14a4c90"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7f73c1511d10"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f73c14c7260"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7f73c1510c30"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f73c14b90a0"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7f73c150de20"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f73c14df3f0"/></to>
    </wire>
    <wire loc="74:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7f73c150bb70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f73c14b5020"/></to>
    </wire>
    <wire loc="80:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f73c14ca2f0"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7f73c1500a00"/></to>
    </wire>
    <wire loc="81:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f73c14c6100"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7f73c1502230"/></to>
    </wire>
    <wire loc="82:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f73c14b8020"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7f73c15029b0"/></to>
    </wire>
    <wire loc="83:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f73c14b5e40"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7f73c1501150"/></to>
    </wire>
    <wire loc="84:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f73c14b0c20"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7f73c15018d0"/></to>
    </wire>
    <wire loc="85:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f73c14acb40"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7f73c14ff0b0"/></to>
    </wire>
    <wire loc="86:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f73c14a8b40"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7f73c14ff830"/></to>
    </wire>
    <wire loc="87:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f73c14a3b40"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7f73c14fe020"/></to>
    </wire>
    <wire loc="106:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f73c13df020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f73c0055a60"/></to>
    </wire>
    <wire loc="107:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73c13df7a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73c0054270"/></to>
    </wire>
    <wire loc="105:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f73c13e0210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f73c0056c80"/></to>
    </wire>
    <wire loc="108:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c13de400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c0054e80"/></to>
    </wire>
    <wire loc="109:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73c0053790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73c13decd0"/></to>
    </wire>
    <wire loc="111:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f73c0051020"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f73c00589c0"/></to>
    </wire>
    <wire loc="75:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f73c004f160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f73c13d9530"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f73c0017a60"/></to>
    </wire>
    <wire loc="109:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73c0015790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73c13d7250"/></to>
    </wire>
    <wire loc="111:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f73c0014020"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f73c001bad0"/></to>
    </wire>
    <wire loc="75:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f73c0012160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f73c13d4a60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f73bffd7850"/></to>
    </wire>
    <wire loc="109:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73bffd5590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73c13d1770"/></to>
    </wire>
    <wire loc="111:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f73bffd5d50"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f73bffda690"/></to>
    </wire>
    <wire loc="75:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f73bffd1020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/usr/bin/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f73bff1c400"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f73c13cd280"/></to>
    </wire>
    <wire loc="81:/usr/bin/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f73bff1ce80"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f73c13cdd00"/></to>
    </wire>
    <wire loc="83:/usr/bin/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73bff1b470"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73c13a02f0"/></to>
    </wire>
    <wire loc="84:/usr/bin/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73bff1a0e0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c139f020"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f73bff1a8c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7f73bff19100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/usr/bin/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f73bff05400"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f73c139d020"/></to>
    </wire>
    <wire loc="81:/usr/bin/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f73bff05e80"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f73c139daa0"/></to>
    </wire>
    <wire loc="83:/usr/bin/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73bff04470"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73c13950e0"/></to>
    </wire>
    <wire loc="84:/usr/bin/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73bff030e0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c1395cf0"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f73bff038c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7f73bff01100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x7f73c135faa0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x7f73c13506d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f73c13326c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f73c11f9060"/></to>
    </wire>
    <wire loc="38:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f73c132e5e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f73c132a210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73c1327210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73c11f9950"/></to>
    </wire>
    <wire loc="31:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f73c133e920"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f73c1224c90"/></to>
    </wire>
    <wire loc="32:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7f73c13308f0"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7f73c1252020"/></to>
    </wire>
    <wire loc="33:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f73c1202020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f73c132e5e0"/></to>
    </wire>
    <wire loc="34:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f73c1250870"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f73c13326c0"/></to>
    </wire>
    <wire loc="36:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f73c12056d0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f73c12541d0"/></to>
    </wire>
    <wire loc="37:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f73c12517f0"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f73c13235c0"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f73c13235c0"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f73c131a820"/></to>
    </wire>
    <wire loc="38:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f73c124f5b0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f73c161e9a0"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f73c131d420"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f73c1319320"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f73c132a210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f73c1280e40"/></to>
    </wire>
    <wire loc="105:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f73c1280e40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f73bfebf740"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73c127d930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73c1327210"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f73c12fb710"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f73c12c2080"/></to>
    </wire>
    <wire loc="50:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f73c12c2080"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f73c12bc4a0"/></to>
    </wire>
    <wire loc="74:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f73c1317be0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f73c22b6020"/></to>
    </wire>
    <wire loc="76:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f73c1279b20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f73c131a020"/></to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73c125f9d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73c127e400"/></to>
    </wire>
    <wire loc="107:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73c127e400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73bfebecb0"/></to>
    </wire>
    <wire loc="51:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f73c12ba980"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f73c27b0020"/></to>
    </wire>
    <wire loc="106:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f73c127fbd0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f73bfebe530"/></to>
    </wire>
    <wire loc="108:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c127d060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73bfebd930"/></to>
    </wire>
    <wire loc="109:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73bfebc270"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73c127d930"/></to>
    </wire>
    <wire loc="111:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f73bfebca30"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f73bfec1410"/></to>
    </wire>
    <wire loc="75:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f73bfebac50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f73bfe86660"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f73c1279b20"/></to>
    </wire>
    <wire loc="82:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f73bfe86dc0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f73c125f400"/></to>
    </wire>
    <wire loc="84:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73bfe843d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73c125f9d0"/></to>
    </wire>
    <wire loc="85:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73bfe83020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c125e720"/></to>
    </wire>
    <wire loc="104:/usr/bin/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x7f73c1238510"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelXStreamC.nc">
      <from><interface-ref name="ActualX" scoped="" ref="0x7f73c11c9280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f73bfe6ddc0"/></to>
    </wire>
    <wire loc="36:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadStreamClientC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f73bfe6ddc0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f73c112f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelXStreamC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f73bfe69a20"/></from>
      <to><interface-ref name="ConfigX" scoped="" ref="0x7f73c11bd850"/></to>
    </wire>
    <wire loc="30:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ConfigX" scoped="" ref="0x7f73c11bd850"/></from>
      <to><interface-ref name="ConfigX" scoped="" ref="0x7f73c11b8210"/></to>
    </wire>
    <wire loc="25:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelReadStreamP.nc">
      <from><interface-ref name="ReadStreamY" scoped="" ref="0x7f73c11cfe10"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f73c1146270"/></to>
    </wire>
    <wire loc="21:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelReadStreamP.nc">
      <from><interface-ref name="ReadStreamX" scoped="" ref="0x7f73c11d4a80"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f73c117d830"/></to>
    </wire>
    <wire loc="22:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelReadStreamP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f73c1149430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f73c11c0ad0"/></to>
    </wire>
    <wire loc="29:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f73c11c0ad0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f73c1192820"/></to>
    </wire>
    <wire loc="23:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelReadStreamP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f73c114e6d0"/></from>
      <to><interface-ref name="ActualX" scoped="" ref="0x7f73c11c9280"/></to>
    </wire>
    <wire loc="26:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelReadStreamP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f73c113fd60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f73c11c0ad0"/></to>
    </wire>
    <wire loc="27:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelReadStreamP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f73c11420d0"/></from>
      <to><interface-ref name="ActualY" scoped="" ref="0x7f73c11c5580"/></to>
    </wire>
    <wire loc="31:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ConfigY" scoped="" ref="0x7f73c11bc3a0"/></from>
      <to><interface-ref name="ConfigY" scoped="" ref="0x7f73c11b8c30"/></to>
    </wire>
    <wire loc="105:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f73c1192820"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f73bfe56e40"/></to>
    </wire>
    <wire loc="33:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73c118b6b0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73c1190e40"/></to>
    </wire>
    <wire loc="107:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73c1190e40"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73bfe53400"/></to>
    </wire>
    <wire loc="34:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c118a400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c118fa70"/></to>
    </wire>
    <wire loc="108:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c118fa70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73bfe52060"/></to>
    </wire>
    <wire loc="35:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f73c118c5e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f73c11bb630"/></to>
    </wire>
    <wire loc="37:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73c11b77b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73c11996d0"/></to>
    </wire>
    <wire loc="52:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73c11996d0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f73c1a652e0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="AccelPin" scoped="" ref="0x7f73c11aea80"/></from>
      <to><interface-ref name="PW4" scoped="" ref="0x7f73c1542020"/></to>
    </wire>
    <wire loc="39:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="AccelAdcX" scoped="" ref="0x7f73c11adce0"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x7f73c152cbf0"/></to>
    </wire>
    <wire loc="40:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="AccelAdcY" scoped="" ref="0x7f73c11ac400"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x7f73c152b350"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x7f73c119e100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f73c11906c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f73bfe54bd0"/></to>
    </wire>
    <wire loc="109:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73bfe52950"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73c118e3e0"/></to>
    </wire>
    <wire loc="111:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f73bfe51130"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f73bfe58b50"/></to>
    </wire>
    <wire loc="75:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f73bfe4f2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/usr/bin/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f73bfe1c780"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f73c118c5e0"/></to>
    </wire>
    <wire loc="81:/usr/bin/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f73bfe1b270"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f73c118b0e0"/></to>
    </wire>
    <wire loc="83:/usr/bin/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73bfe1b840"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73c118b6b0"/></to>
    </wire>
    <wire loc="84:/usr/bin/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73bfe19590"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c118a400"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f73bfe19d70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7f73bfe185e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadStreamClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f73c112b1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f73bfe69a20"/></to>
    </wire>
    <wire loc="38:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadStreamClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f73c112a1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f73c132a210"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadStreamClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73c1327210"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73bfe68400"/></to>
    </wire>
    <wire loc="31:/usr/bin/tinyos-main/tos/chips/atm128/adc/WireAdcStreamP.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f73c112f020"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f73c0f8aa30"/></to>
    </wire>
    <wire loc="30:/usr/bin/tinyos-main/tos/chips/atm128/adc/WireAdcStreamP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f73c0f816f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f73c112a1d0"/></to>
    </wire>
    <wire loc="32:/usr/bin/tinyos-main/tos/chips/atm128/adc/WireAdcStreamP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f73c111dcf0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f73c112b1d0"/></to>
    </wire>
    <wire loc="34:/usr/bin/tinyos-main/tos/chips/atm128/adc/WireAdcStreamP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f73c0f868b0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f73c11211d0"/></to>
    </wire>
    <wire loc="37:/usr/bin/tinyos-main/tos/chips/atm128/adc/WireAdcStreamP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f73c111fdd0"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f73c13235c0"/></to>
    </wire>
    <wire loc="38:/usr/bin/tinyos-main/tos/chips/atm128/adc/WireAdcStreamP.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f73c111c6b0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f73c22b6020"/></to>
    </wire>
    <wire loc="39:/usr/bin/tinyos-main/tos/chips/atm128/adc/WireAdcStreamP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f73c111b720"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f73c0f904e0"/></to>
    </wire>
    <wire loc="38:/usr/bin/tinyos-main/tos/platforms/mica/AlarmMicro32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f73c0f904e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f73bfdda020"/></to>
    </wire>
    <wire loc="161:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcStreamP.nc">
      <from><interface-ref name="bufferDone" scoped="" ref="0x7f73c10ee900"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcStreamP.nc">
      <from><interface-ref name="readStreamDone" scoped="" ref="0x7f73c10fd660"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcStreamP.nc">
      <from><interface-ref name="readStreamFail" scoped="" ref="0x7f73c10f8800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/usr/bin/tinyos-main/tos/platforms/mica/AlarmMicro32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f73bfdd4780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f73bfde1b90"/></to>
    </wire>
    <wire loc="43:/usr/bin/tinyos-main/tos/platforms/mica/AlarmThree16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f73bfde1b90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f73bfdc9270"/></to>
    </wire>
    <wire loc="40:/usr/bin/tinyos-main/tos/platforms/mica/AlarmMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f73bfdd63d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f73c0febd40"/></to>
    </wire>
    <wire loc="33:/usr/bin/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f73c0febd40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f73c0fd12e0"/></to>
    </wire>
    <wire loc="45:/usr/bin/tinyos-main/tos/platforms/mica/AlarmThree16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f73bfdc6570"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73c10b8b30"/></to>
    </wire>
    <wire loc="89:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73c10b8b30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73c10a4b90"/></to>
    </wire>
    <wire loc="46:/usr/bin/tinyos-main/tos/platforms/mica/AlarmThree16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f73bfdc18f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f73c10aa650"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f73c10b1dc0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f73c109c020"/></to>
    </wire>
    <wire loc="91:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f73c10af530"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f73c109b850"/></to>
    </wire>
    <wire loc="93:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f73c10aa650"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f73c10965a0"/></to>
    </wire>
    <wire loc="94:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f73c10aa650"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f73c1090ba0"/></to>
    </wire>
    <wire loc="95:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f73c10aa650"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7f73c108b120"/></to>
    </wire>
    <wire loc="27:/usr/bin/tinyos-main/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73c100b410"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73c10b8b30"/></to>
    </wire>
    <wire loc="34:/usr/bin/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f73c0fce6d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f73c0fe5d10"/></to>
    </wire>
    <wire loc="31:/usr/bin/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f73c0fe5d10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f73c0fddc40"/></to>
    </wire>
    <wire loc="32:/usr/bin/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73c0fd9020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73c10b8b30"/></to>
    </wire>
    <wire loc="10:/usr/bin/tinyos-main/tos/sensorboards/mts300/SounderC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73c0f69bd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73c0f68dc0"/></to>
    </wire>
    <wire loc="52:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73c0f68dc0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f73c1a652e0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="11:/usr/bin/tinyos-main/tos/sensorboards/mts300/SounderC.nc">
      <from><interface-ref name="SounderPin" scoped="" ref="0x7f73c0f61020"/></from>
      <to><interface-ref name="PW2" scoped="" ref="0x7f73c1545b10"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f73c0f49020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f73c0f355e0"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x7f73c0f32400"/></from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x7f73c0f48020"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x7f73c0f31840"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x7f73c0f3a020"/></to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x7f73c0f2fc50"/></from>
      <to><interface-ref name="DisseminatorControl" scoped="" ref="0x7f73c0f39320"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f73c0f2e440"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f73c0e40020"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f73c0e40020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f73bfd5d420"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f73c0f2d0c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f73c0e330e0"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f73c0e330e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f73c2628e40"/>
      <arguments>
        <value cst="I:96">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeAMSend" scoped="" ref="0x7f73c0f2d780"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f73c0e2fdf0"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f73c0e2fdf0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f73bfcf2540"/></to>
    </wire>
    <wire loc="74:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeReceive" scoped="" ref="0x7f73c0f2c510"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f73c0e23020"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f73c0e23020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f73c2628e40"/>
      <arguments>
        <value cst="I:97">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f73c0f2cb10"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f73c0e1c9c0"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f73bfd5d420"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f73bfd49660"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f73c0e40c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f73bfd5c060"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f73bfd5c060"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f73c260aae0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f73c0e3f8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f73bfd5cc70"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f73bfd5cc70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f73c25edaf0"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f73c0e3d020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f73bfd5a2b0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f73bfd5a2b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f73c25e8e00"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f73bfd48460"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f73c0eafdd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f73bfd460e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f73c25edaf0"/></to>
    </wire>
    <wire loc="53:/usr/bin/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f73c0eafdd0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f73c0e56580"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f73c0e55400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f73c2629b10"/></to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f73c0e54060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f73c25edaf0"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f73c0e53720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f73c260aae0"/></to>
    </wire>
    <wire loc="169:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f73c0e52480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f73c0e52c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f73c0e336b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f73c260aae0"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f73c0e32400"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f73c25edaf0"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f73bfcf2540"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f73bfce4940"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f73c0e2ea50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f73bfcf0270"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f73bfcf0270"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f73c260aae0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f73c0e2d720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f73bfcf0e80"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f73bfcf0e80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f73c25edaf0"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f73c0e27da0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f73bfcee5d0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f73bfcee5d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f73c25e8e00"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f73bfce35f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f73c0eafdd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f73bfce2270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f73c25edaf0"/></to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f73c0e235f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f73c260aae0"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f73c0e21270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f73c25edaf0"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x7f73c0d18330"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x7f73bfcc6570"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x7f73c0f48020"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x7f73bfcc5830"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x7f73c0f39320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f73bfcc9020"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x7f73c0f3a020"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x7f73c0dc8e00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f73bfcc3760"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f73c15a6810"/></to>
    </wire>
    <wire loc="62:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <from><interface-ref name="changedTask" scoped="" ref="0x7f73bfcc2de0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationTimerP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x7f73c0dc8e00"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x7f73c0d1f780"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x7f73c0d1f780"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x7f73bfca5150"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73bfc9f020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73bfc93990"/></to>
    </wire>
    <wire loc="52:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73bfc93990"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f73c1a652e0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f73bfc98720"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f73c1d52c50"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Changed" scoped="" ref="0x7f73bfc995d0"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7f73bfc89630"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Pending" scoped="" ref="0x7f73bfc9a450"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x7f73bfc8c7a0"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f73bfc98e80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f73c15a6810"/></to>
    </wire>
    <wire loc="154:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <from><interface-ref name="timerTask" scoped="" ref="0x7f73bfc96610"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f73c0cd3630"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f73c0cbb470"/></to>
    </wire>
    <wire loc="149:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f73c0cbb470"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f73c088a7a0"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x7f73c0cf78a0"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x7f73c0cc2ce0"/></to>
    </wire>
    <wire loc="121:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x7f73c0cc2ce0"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x7f73c0b62720"/></to>
    </wire>
    <wire loc="75:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x7f73c0cfe950"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x7f73c0cc39c0"/></to>
    </wire>
    <wire loc="118:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x7f73c0cc39c0"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x7f73c0b633a0"/></to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f73c0d01020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f73c0cc2020"/></to>
    </wire>
    <wire loc="119:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f73c0cc2020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f73c0b63990"/></to>
    </wire>
    <wire loc="74:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f73c0d04870"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f73c0cc4da0"/></to>
    </wire>
    <wire loc="117:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f73c0cc4da0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f73c0b64b00"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f73c0d07800"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f73c0cc7e60"/></to>
    </wire>
    <wire loc="114:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f73c0cc7e60"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f73c0b65530"/></to>
    </wire>
    <wire loc="81:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x7f73c0cd86d0"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x7f73c0cbfa00"/></to>
    </wire>
    <wire loc="165:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x7f73c0cbfa00"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x7f73c08890e0"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f73c0d06b70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f73c0cc41d0"/></to>
    </wire>
    <wire loc="116:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f73c0cc41d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f73c0b643a0"/></to>
    </wire>
    <wire loc="82:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x7f73c0cd53c0"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x7f73c0cbcc60"/></to>
    </wire>
    <wire loc="123:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x7f73c0cbcc60"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x7f73c0b5f400"/></to>
    </wire>
    <wire loc="79:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x7f73c0ce6640"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x7f73c0cc1b20"/></to>
    </wire>
    <wire loc="122:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x7f73c0cc1b20"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x7f73c0b61590"/></to>
    </wire>
    <wire loc="115:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f73c0cc7170"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f73c0b66b20"/></to>
    </wire>
    <wire loc="147:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f73c0cc7170"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f73c0888720"/></to>
    </wire>
    <wire loc="148:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f73c0cc7170"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f73c0a84640"/></to>
    </wire>
    <wire loc="85:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x7f73c0cb3410"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x7f73c0cd6390"/></to>
    </wire>
    <wire loc="86:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x7f73c0cb3b80"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x7f73c0cc98d0"/></to>
    </wire>
    <wire loc="190:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x7f73c0cb5a30"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x7f73c0a81180"/></to>
    </wire>
    <wire loc="120:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x7f73c0b43530"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x7f73c0cb3410"/></to>
    </wire>
    <wire loc="127:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="QEntryPool" scoped="" ref="0x7f73c0b509f0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f73c0b011e0"/></to>
    </wire>
    <wire loc="49:/usr/bin/tinyos-main/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f73c0b011e0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f73bfb3db40"/></to>
    </wire>
    <wire loc="128:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="MessagePool" scoped="" ref="0x7f73c0b4c400"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f73c0b32cd0"/></to>
    </wire>
    <wire loc="49:/usr/bin/tinyos-main/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f73c0b32cd0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f73bfb53e40"/></to>
    </wire>
    <wire loc="131:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x7f73c0b54410"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f73c0afbb70"/></to>
    </wire>
    <wire loc="134:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SentCache" scoped="" ref="0x7f73c0b49d40"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x7f73c0aa5360"/></to>
    </wire>
    <wire loc="44:/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="Cache" scoped="" ref="0x7f73c0aa5360"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x7f73bfb204b0"/></to>
    </wire>
    <wire loc="139:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x7f73c0b57890"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x7f73c0a81180"/></to>
    </wire>
    <wire loc="151:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconSend" scoped="" ref="0x7f73c0886690"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f73c0a84e50"/></to>
    </wire>
    <wire loc="152:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconReceive" scoped="" ref="0x7f73c0885440"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f73c0a83af0"/></to>
    </wire>
    <wire loc="153:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x7f73c0885a10"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x7f73c0a81180"/></to>
    </wire>
    <wire loc="155:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CompareBit" scoped="" ref="0x7f73c0874600"/></from>
      <to><interface-ref name="CompareBit" scoped="" ref="0x7f73c0a7b6b0"/></to>
    </wire>
    <wire loc="157:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f73c0884bd0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f73c25edaf0"/></to>
    </wire>
    <wire loc="158:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f73c08822b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f73c262ca70"/></to>
    </wire>
    <wire loc="159:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconTimer" scoped="" ref="0x7f73c0880020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73c0aa1560"/></to>
    </wire>
    <wire loc="52:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73c0aa1560"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f73c1a652e0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RouteTimer" scoped="" ref="0x7f73c087b570"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73c0a93020"/></to>
    </wire>
    <wire loc="52:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73c0a93020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f73c1a652e0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x7f73c0875270"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x7f73c0cb3b80"/></to>
    </wire>
    <wire loc="162:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x7f73c0b3e270"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x7f73c0cb3b80"/></to>
    </wire>
    <wire loc="163:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x7f73c0b453d0"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x7f73c08890e0"/></to>
    </wire>
    <wire loc="164:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x7f73c0875e80"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x7f73c0b5f400"/></to>
    </wire>
    <wire loc="169:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RetxmitTimer" scoped="" ref="0x7f73c0b5c3d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f73c086a8c0"/></to>
    </wire>
    <wire loc="52:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f73c086a8c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f73c1a652e0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f73c0877980"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f73c1d52c50"/></to>
    </wire>
    <wire loc="173:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f73c0b40a40"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f73c1d52c50"/></to>
    </wire>
    <wire loc="176:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f73c0b5fc00"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f73c09af4b0"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f73c09af4b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f73bfaf3020"/></to>
    </wire>
    <wire loc="177:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f73c0b46780"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f73c09aadc0"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f73c09aadc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f73c2628e40"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x7f73c0b46d90"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f73c099e530"/></to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/system/AMSnooperC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f73c099e530"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f73c2627a40"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f73c0b555d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f73c09ae0f0"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f73c09ae0f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f73bfaf3c30"/></to>
    </wire>
    <wire loc="180:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f73c0b44a40"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f73c088a7a0"/></to>
    </wire>
    <wire loc="181:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x7f73c0b56a40"/></from>
      <to><interface-ref name="Routing" scoped="" ref="0x7f73c088bcf0"/></to>
    </wire>
    <wire loc="182:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f73c0b3d020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f73c262ca70"/></to>
    </wire>
    <wire loc="183:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f73c0b5d8b0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f73c09ac440"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f73c09ac440"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f73bfaf0020"/></to>
    </wire>
    <wire loc="184:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f73c0b43d20"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f73c09aed00"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f73c09aed00"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f73bfaf28b0"/></to>
    </wire>
    <wire loc="185:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f73c0b41400"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f73c15a6810"/></to>
    </wire>
    <wire loc="192:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f73c0a79cc0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f73c1d52c50"/></to>
    </wire>
    <wire loc="194:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f73c0a7bd40"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f73c0860b30"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f73c0860b30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f73bfa49d90"/></to>
    </wire>
    <wire loc="195:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f73c0a79020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f73c08576a0"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f73c08576a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f73c2628e40"/>
      <arguments>
        <value cst="I:112">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f73c0a7a1a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f73c085f8b0"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f73c085f8b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f73bfa47a10"/></to>
    </wire>
    <wire loc="197:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x7f73c0a7ea80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f73c085d590"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f73c085d590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f73bfa46720"/></to>
    </wire>
    <wire loc="221:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f73c0a796b0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f73c2589e60"/></to>
    </wire>
    <wire loc="234:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f73c0b3db20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x7f73bfb1d020"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x7f73c0cc1b20"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f73bfaf3020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f73bfae4830"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f73bfaf3c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f73c260aae0"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f73bfaf28b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f73c25edaf0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f73bfaf0020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f73c25e8e00"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f73bfae35f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f73c0eafdd0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f73bfae2270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f73c25edaf0"/></to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f73c09a93d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f73c260aae0"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f73c09a7020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f73c25edaf0"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/system/AMSnooperC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f73c099eb00"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f73c260aae0"/></to>
    </wire>
    <wire loc="57:/usr/bin/tinyos-main/tos/system/AMSnooperC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f73c099d730"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f73c25edaf0"/></to>
    </wire>
    <wire loc="271:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <from><interface-ref name="updateRouteTask" scoped="" ref="0x7f73c0873480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="390:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <from><interface-ref name="sendBeaconTask" scoped="" ref="0x7f73c0874c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f73bfa49d90"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f73bfa3a7f0"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f73bfa47a10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f73c260aae0"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f73bfa46720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f73c25edaf0"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f73c085ac10"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f73bfa45da0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f73bfa45da0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f73c25e8e00"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f73bfa395f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f73c0eafdd0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f73bfa38270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f73c25edaf0"/></to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f73c0857c70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f73c260aae0"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f73c08568b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f73c25edaf0"/></to>
    </wire>
    <wire loc="52:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f73c0809a70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f73bfa1e8b0"/></to>
    </wire>
    <wire loc="47:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f73bfa1e8b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f73c0d01020"/></to>
    </wire>
    <wire loc="46:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f73bfa1fb30"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f73c0d07800"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x7f73c0cd6390"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x7f73bfa189e0"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f73bfa10e70"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f73bfa01020"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f73c0805590"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f73bfa0fab0"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f73bfa0fab0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f73c260aae0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f73c0804270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f73bfa0d720"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f73bfa0d720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f73c25edaf0"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f73c08038f0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f73bfa0cda0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f73bfa0cda0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f73c25e8e00"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f73bfa01c90"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f73c0eafdd0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f73bfa00930"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f73c25edaf0"/></to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f73c0800970"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f73c260aae0"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f73c07fe5a0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f73c25edaf0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="AntiTheftC" loc="18:AntiTheftC.nc">
      <documentation loc="11:antitheft.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="37:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/usr/bin/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/usr/bin/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MainC" loc="56:/usr/bin/tinyos-main/tos/system/MainC.nc">
      <documentation loc="1:/usr/bin/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/usr/bin/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/usr/bin/tinyos-main/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/usr/bin/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/usr/bin/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/usr/bin/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/usr/bin/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/usr/bin/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/usr/bin/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/usr/bin/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/usr/bin/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/usr/bin/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/usr/bin/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/usr/bin/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/usr/bin/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/usr/bin/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/usr/bin/tinyos-main/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/usr/bin/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/usr/bin/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f73c1c4e070"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP" loc="48:/usr/bin/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/usr/bin/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/usr/bin/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/usr/bin/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TOne" ref="0x7f73c27d9410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/usr/bin/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/usr/bin/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/usr/bin/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TOne" ref="0x7f73c27d9410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f73c282d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f73c282d180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f73c282d180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/usr/bin/tinyos-main/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/usr/bin/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/usr/bin/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/usr/bin/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/usr/bin/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AntiTheftAppC.MyTimer" loc="44(AntiTheftAppC.MyTimer):/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AntiTheftAppC.PhotoC" loc="18(AntiTheftAppC.PhotoC):/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoC.nc">
      <documentation loc="32:/usr/bin/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PhotoC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArbitratedPhotoDeviceP" loc="1:/usr/bin/tinyos-main/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC" loc="3:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <documentation loc="32:/usr/bin/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusC" loc="18:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <documentation loc="11:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus. Just provides the PW0-PW7 and Int0-3 digital&#10; I/O pins and returns the ADC channel number for the ADC pins.&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusP" loc="16:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <documentation loc="11:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusP.nc">
        <short>&#10; Internal component of the simplistic mica bus interface.</short>
        <long>&#10; Internal component of the simplistic mica bus interface.&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt0C" loc="6(MicaBusC.Atm128GpioInterrupt0C):/usr/bin/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/usr/bin/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt1C" loc="6(MicaBusC.Atm128GpioInterrupt1C):/usr/bin/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/usr/bin/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt2C" loc="6(MicaBusC.Atm128GpioInterrupt2C):/usr/bin/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/usr/bin/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt3C" loc="6(MicaBusC.Atm128GpioInterrupt3C):/usr/bin/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/usr/bin/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempP" loc="14:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempP.nc">
      <documentation loc="10:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempP.nc">
        <short>&#10; MTS300 photo and temp sensor ADC configuration.</short>
        <long>&#10; MTS300 photo and temp sensor ADC configuration.&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter" loc="89(PhotoTempDeviceC.SharingArbiter):/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.phototemp">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter.Queue" loc="42(PhotoTempDeviceC.SharingArbiter.Queue):/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter.Arbiter" loc="52(PhotoTempDeviceC.SharingArbiter.Arbiter):/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter" loc="89(PhotoTempDeviceC.PhotoArbiter):/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.photo">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter.Queue" loc="42(PhotoTempDeviceC.PhotoArbiter.Queue):/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter.Arbiter" loc="52(PhotoTempDeviceC.PhotoArbiter.Arbiter):/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter" loc="89(PhotoTempDeviceC.TempArbiter):/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.temp">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter.Queue" loc="42(PhotoTempDeviceC.TempArbiter.Queue):/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter.Arbiter" loc="52(PhotoTempDeviceC.TempArbiter.Arbiter):/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoPower" loc="67(PhotoTempDeviceC.PhotoPower):/usr/bin/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/usr/bin/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoPower.PowerManager" loc="58(PhotoTempDeviceC.PhotoPower.PowerManager):/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempPower" loc="67(PhotoTempDeviceC.TempPower):/usr/bin/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/usr/bin/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.TempPower.PowerManager" loc="58(PhotoTempDeviceC.TempPower.PowerManager):/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoControl" loc="1(PhotoTempDeviceC.PhotoControl):/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <instance number="0">
        <component-ref qname="PhotoTempControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempControl" loc="1(PhotoTempDeviceC.TempControl):/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <instance number="1">
        <component-ref qname="PhotoTempControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.WarmupTimer" loc="44(PhotoTempDeviceC.WarmupTimer):/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.Adc" loc="21(PhotoTempDeviceC.Adc):/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="17:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <documentation loc="10:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="51:/usr/bin/tinyos-main/tos/chips/atm1281/adc/Atm128AdcP.nc" safe="">
      <documentation loc="40:/usr/bin/tinyos-main/tos/chips/atm1281/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega1281 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega1281 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="47:/usr/bin/tinyos-main/tos/chips/atm1281/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="38:/usr/bin/tinyos-main/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega1281 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1281 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/usr/bin/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/usr/bin/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/usr/bin/tinyos-main/tos/chips/atm1281/adc/AdcP.nc" safe="">
      <documentation loc="39:/usr/bin/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/usr/bin/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/usr/bin/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ArbitratedPhotoDeviceP.ArbitrateRead" loc="23(ArbitratedPhotoDeviceP.ArbitrateRead):/usr/bin/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/usr/bin/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AntiTheftAppC.AccelXStreamC" loc="18(AntiTheftAppC.AccelXStreamC):/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelXStreamC.nc">
      <documentation loc="32:/usr/bin/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AccelXStreamC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelReadStreamP" loc="1:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelReadStreamP.nc">
      <configuration/>
    </component>
    <component qname="AccelConfigP" loc="17:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <documentation loc="10:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
        <short>&#10; Internal component for basicsb photodiode.</short>
        <long>&#10; Internal component for basicsb photodiode. Arbitrates access to the photo&#10; diode and automatically turns it on or off based on user requests.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AccelP" loc="14:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <documentation loc="10:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
        <short>&#10; ADXL202JE accelerometer ADC configuration and power management.</short>
        <long>&#10; ADXL202JE accelerometer ADC configuration and power management.&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AccelConfigP.WarmupTimer" loc="44(AccelConfigP.WarmupTimer):/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelConfigP.Arbiter" loc="89(AccelConfigP.Arbiter):/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.accel">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelConfigP.Arbiter.Queue" loc="42(AccelConfigP.Arbiter.Queue):/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AccelConfigP.Arbiter.Arbiter" loc="52(AccelConfigP.Arbiter.Arbiter):/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AccelConfigP.PowerManager" loc="67(AccelConfigP.PowerManager):/usr/bin/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/usr/bin/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelConfigP.PowerManager.PowerManager" loc="58(AccelConfigP.PowerManager.PowerManager):/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AccelReadStreamP.MultiplexX" loc="23(AccelReadStreamP.MultiplexX):/usr/bin/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <documentation loc="10:/usr/bin/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadStreamC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AccelReadStreamP.MultiplexY" loc="23(AccelReadStreamP.MultiplexY):/usr/bin/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <documentation loc="10:/usr/bin/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbitratedReadStreamC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AntiTheftAppC.AccelXStreamC.AdcReadStreamClientC" loc="21(AntiTheftAppC.AccelXStreamC.AdcReadStreamClientC):/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadStreamClientC.nc">
      <documentation loc="10:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadStreamClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a ReadStream interface to&#10; the Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a ReadStream interface to&#10; the Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadStreamClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP" loc="18:/usr/bin/tinyos-main/tos/chips/atm128/adc/WireAdcStreamP.nc">
      <documentation loc="10:/usr/bin/tinyos-main/tos/chips/atm128/adc/WireAdcStreamP.nc">
        <short>&#10; Support component for AdcReadStreamClientC.</short>
        <long>&#10; Support component for AdcReadStreamClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AdcStreamP" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcStreamP.nc" safe="">
      <documentation loc="39:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcStreamP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcStreamP.AlarmMicro32C" loc="28(WireAdcStreamP.AlarmMicro32C):/usr/bin/tinyos-main/tos/platforms/mica/AlarmMicro32C.nc">
      <documentation loc="11:/usr/bin/tinyos-main/tos/platforms/mica/AlarmMicro32C.nc">
        <short>&#10; 32-bit microsecond Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Alarm component as per TEP102 HAL guidelines. The&#10; mica family microsecond Alarm is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency, or the &#10; MeasureClockC.calibrateMicro() command to convert a number of microseconds&#10; to the near-microsecond units used by this component.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; microsecond Alarm (see AlarmMicro16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMicro32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.AlarmMicro32C.Alarm16" loc="30(WireAdcStreamP.AlarmMicro32C.Alarm16):/usr/bin/tinyos-main/tos/platforms/mica/AlarmThree16C.nc">
      <documentation loc="11:/usr/bin/tinyos-main/tos/platforms/mica/AlarmThree16C.nc">
        <short>&#10; 16-bit microsecond Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Alarm component as per TEP102 HAL guidelines. The&#10; mica family microsecond Alarm is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency, or the &#10; MeasureClockC.calibrateMicro() command to convert a number of microseconds&#10; to the near-microsecond units used by this component.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). &#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmThree16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.AlarmMicro32C.Alarm16.NAlarm" loc="51(WireAdcStreamP.AlarmMicro32C.Alarm16.NAlarm):/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TThree" ref="0x7f73c27d97b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/usr/bin/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/usr/bin/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/usr/bin/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/usr/bin/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TThree" ref="0x7f73c27d97b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f73c282d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TThree" ref="0x7f73c27d97b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x7f73c27d70d0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.AlarmMicro32C.Transform32" loc="51(WireAdcStreamP.AlarmMicro32C.Transform32):/usr/bin/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f73c282d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TThree" ref="0x7f73c27d97b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.ArbitrateReadStream" loc="23(WireAdcStreamP.ArbitrateReadStream):/usr/bin/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <documentation loc="10:/usr/bin/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbitratedReadStreamC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SounderC" loc="1:/usr/bin/tinyos-main/tos/sensorboards/mts300/SounderC.nc">
      <configuration/>
    </component>
    <component qname="SounderP" loc="1:/usr/bin/tinyos-main/tos/sensorboards/mts300/SounderP.nc">
      <module/>
    </component>
    <component qname="SounderC.TimerMilliC" loc="44(SounderC.TimerMilliC):/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationC" loc="46:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationC.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationC.nc">
        <short>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol.</short>
        <long>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol. StdControl controls all of the trickle&#10; timers used for all of the keys. &#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP" loc="47:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
        <short>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.</short>
        <long>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.&#10;&#10; TODO: Hook DisseminationProbe up to the serial instead of the radio.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineImplP" loc="45:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
        <short>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.</short>
        <long>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC" loc="47(DisseminationEngineP.DisseminationSendC):/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC" loc="47(DisseminationEngineP.DisseminationSendC.SenderC):/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP):/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/usr/bin/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationReceiveC" loc="43(DisseminationEngineP.DisseminationReceiveC):/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC" loc="47(DisseminationEngineP.DisseminationProbeSendC):/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC" loc="47(DisseminationEngineP.DisseminationProbeSendC.SenderC):/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP):/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeReceiveC" loc="43(DisseminationEngineP.DisseminationProbeReceiveC):/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:/usr/bin/tinyos-main/tos/system/NoLedsC.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AntiTheftAppC.DisseminatorC" loc="49(AntiTheftAppC.DisseminatorC):/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="settings" ref="0x7f73c278bbc0"/>
            <typename><typedef-ref name="settings_t" ref="0x7f73c278a670"/></typename>
          </type-tag>
          <value cst="I:42">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AntiTheftAppC.DisseminatorC.DisseminatorP" loc="45(AntiTheftAppC.DisseminatorC.DisseminatorP):/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008-02-16 01:31:50 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f73c0f52b40"/></type-var>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP" loc="44:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationTimerP.nc">
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC" loc="51(DisseminationTimerP.TrickleTimerMilliC):/usr/bin/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerMilliC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP" loc="51(DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP):/usr/bin/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerImplP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC" loc="44(DisseminationTimerP.TrickleTimerMilliC.TimerMilliC):/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.PendingVector):/usr/bin/tinyos-main/tos/system/BitVectorC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.ChangeVector):/usr/bin/tinyos-main/tos/system/BitVectorC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CollectionC" loc="45:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP" loc="77:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <documentation loc="66:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP.Forwarder" loc="107(CtpP.Forwarder):/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <instance number="0">
        <component-ref qname="CtpForwardingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.MessagePoolP" loc="41(CtpP.MessagePoolP):/usr/bin/tinyos-main/tos/system/PoolC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
            <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.MessagePoolP.PoolP" loc="53(CtpP.MessagePoolP.PoolP):/usr/bin/tinyos-main/tos/system/PoolP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f73c0b31020"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.QEntryPoolP" loc="41(CtpP.QEntryPoolP):/usr/bin/tinyos-main/tos/system/PoolC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f73c0ca8db0"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f73c0ca72e0"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.QEntryPoolP.PoolP" loc="53(CtpP.QEntryPoolP.PoolP):/usr/bin/tinyos-main/tos/system/PoolP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f73c0b31020"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SendQueueP" loc="42(CtpP.SendQueueP):/usr/bin/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f73c0ca8db0"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f73c0ca72e0"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:13">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SentCacheP" loc="38(CtpP.SentCacheP):/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <documentation loc="32:/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SentCacheP.CacheP" loc="43(CtpP.SentCacheP.CacheP):/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <documentation loc="32:/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RoutingBeaconTimer" loc="44(CtpP.RoutingBeaconTimer):/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.RouteUpdateTimer" loc="44(CtpP.RouteUpdateTimer):/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkEstimatorP" loc="42:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <module/>
    </component>
    <component qname="CtpP.AMSenderC" loc="47(CtpP.AMSenderC):/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC" loc="47(CtpP.AMSenderC.SenderC):/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC.AMQueueEntryP" loc="43(CtpP.AMSenderC.SenderC.AMQueueEntryP):/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.AMReceiverC" loc="43(CtpP.AMReceiverC):/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSnooperC" loc="44(CtpP.AMSnooperC):/usr/bin/tinyos-main/tos/system/AMSnooperC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSnooperC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.Router" loc="107(CtpP.Router):/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <documentation loc="38:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CtpRoutingEngineP"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:128">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:512000">
            <type-int cname="long" size="I:4" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RetxmitTimer" loc="44(CtpP.RetxmitTimer):/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl" loc="47(CtpP.SendControl):/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC" loc="47(CtpP.SendControl.SenderC):/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC.AMQueueEntryP" loc="43(CtpP.SendControl.SenderC.AMQueueEntryP):/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.ReceiveControl" loc="43(CtpP.ReceiveControl):/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AntiTheftAppC.AlertSender" loc="43(AntiTheftAppC.AlertSender):/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
      <documentation loc="32:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionSenderC"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AntiTheftAppC.AlertSender.CollectionSenderP" loc="34(AntiTheftAppC.AlertSender.CollectionSenderP):/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <instance number="0">
        <component-ref qname="CollectionSenderP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x7f73c0d0f660"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AntiTheftAppC.AlertSender.CollectionSenderP.CollectionIdP" loc="45(AntiTheftAppC.AlertSender.CollectionSenderP.CollectionIdP):/usr/bin/tinyos-main/tos/lib/net/CollectionIdP.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionIdP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x7f73c0d0f660"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AntiTheftAppC.SendTheft" loc="47(AntiTheftAppC.SendTheft):/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:99">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AntiTheftAppC.SendTheft.SenderC" loc="47(AntiTheftAppC.SendTheft.SenderC):/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AntiTheftAppC.SendTheft.SenderC.AMQueueEntryP" loc="43(AntiTheftAppC.SendTheft.SenderC.AMQueueEntryP):/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AntiTheftAppC.ReceiveTheft" loc="43(AntiTheftAppC.ReceiveTheft):/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:99">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioAlarmC" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f73c22cb210" loc="83:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f73c22415a0" loc="40:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f73c2241910" loc="40:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f73c2241c80" loc="40:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f73c22339f0" loc="41:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f73c2233d80" loc="42:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f73c2230170" loc="43:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f73c22304c0" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f73c219a0d0" loc="42:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f73c219a460" loc="43:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f73c219a7f0" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f73c219ab40" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/usr/bin/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f73c207a6c0" loc="42:/usr/bin/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f73c1c4e070" loc="58:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f73c1c4e070"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f73c1c4e380" loc="58:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f73c1c45d30" loc="58:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f73c1c45d30"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f73c1c3b060" loc="58:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f73c1b10430" loc="46:/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f73c1b10430"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f73c1ad7880" loc="46:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f73c1ad7880"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f73c1ad7bb0" loc="46:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f73c1a7ade0" loc="46:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f73c1a7ade0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/usr/bin/tinyos-main/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/usr/bin/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f73c16d3290" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f73c16d3290"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7f73c16d3600" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f73c16d8d60" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f73c16d8d60"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f73c16be580" loc="52:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f73c16be580"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7f73c16be8a0" loc="53:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f73c1671910" loc="42:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f73c1671910"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f73c166e120" loc="43:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f73c166e120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f73c164e600" loc="55:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f73c164e600"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f73c164edd0" loc="56:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f73c164edd0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f73c164d220" loc="57:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f73c164d220"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f73c164da00" loc="58:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f73c164da00"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f73c164ddd0" loc="59:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f73c164c630" loc="60:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f73c164c630"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PhotoC" loc="18:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoC.nc" abstract="">
      <documentation loc="32:/usr/bin/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7f73c14de3f0" loc="39:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7f73c14de780" loc="40:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7f73c14deb10" loc="41:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f73c14dee60" loc="42:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/usr/bin/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/usr/bin/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f73c14535c0" loc="89:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f73c14461d0" loc="42:/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/usr/bin/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f73c142b0d0" loc="52:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:/usr/bin/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/usr/bin/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PhotoTempControlP" loc="1:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadClientC" loc="21:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/usr/bin/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/usr/bin/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/usr/bin/tinyos-main/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/usr/bin/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x7f73c1225d70" loc="23:/usr/bin/tinyos-main/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x7f73c1225d70"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AccelXStreamC" loc="18:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelXStreamC.nc" abstract="">
      <documentation loc="32:/usr/bin/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadStreamC" loc="23:/usr/bin/tinyos-main/tos/system/ArbitratedReadStreamC.nc" abstract="">
      <documentation loc="10:/usr/bin/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="nClients" ref="0x7f73c117c020" loc="23:/usr/bin/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
        <typedef name="val_t" ref="0x7f73c117c370" loc="23:/usr/bin/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f73c117c370"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadStreamClientC" loc="21:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadStreamClientC.nc" abstract="">
      <documentation loc="10:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadStreamClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a ReadStream interface to&#10; the Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a ReadStream interface to&#10; the Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMicro32C" loc="28:/usr/bin/tinyos-main/tos/platforms/mica/AlarmMicro32C.nc" abstract="">
      <documentation loc="11:/usr/bin/tinyos-main/tos/platforms/mica/AlarmMicro32C.nc">
        <short>&#10; 32-bit microsecond Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Alarm component as per TEP102 HAL guidelines. The&#10; mica family microsecond Alarm is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency, or the &#10; MeasureClockC.calibrateMicro() command to convert a number of microseconds&#10; to the near-microsecond units used by this component.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; microsecond Alarm (see AlarmMicro16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmThree16C" loc="30:/usr/bin/tinyos-main/tos/platforms/mica/AlarmThree16C.nc" abstract="">
      <documentation loc="11:/usr/bin/tinyos-main/tos/platforms/mica/AlarmThree16C.nc">
        <short>&#10; 16-bit microsecond Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Alarm component as per TEP102 HAL guidelines. The&#10; mica family microsecond Alarm is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency, or the &#10; MeasureClockC.calibrateMicro() command to convert a number of microseconds&#10; to the near-microsecond units used by this component.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). &#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TransformAlarmC" loc="51:/usr/bin/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f73c0fe9d90" loc="52:/usr/bin/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f73c0fe9d90"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f73c0fc7580" loc="53:/usr/bin/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f73c0fc7580"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f73c0fc7970" loc="54:/usr/bin/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f73c0fc7970"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f73c0fc61b0" loc="55:/usr/bin/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f73c0fc61b0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f73c0fc6580" loc="56:/usr/bin/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/usr/bin/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f73c0ed9d60" loc="47:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f73c0eccb70" loc="47:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f73c0ec47f0" loc="43:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f73c0ea7180" loc="45:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f73c0e3b9f0" loc="43:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorC" loc="49:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorC.nc" abstract="">
      <documentation loc="35:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f73c0f52b40" loc="49:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f73c0f52b40"/></type-var>
        </typedef>
        <constant name="key" ref="0x7f73c0f52e80" loc="49:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorP" loc="45:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorP.nc" abstract="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008-02-16 01:31:50 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f73c0dfe580" loc="45:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
          <component-ref qname="DisseminatorP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f73c0dfe580"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TrickleTimerMilliC" loc="51:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x7f73c0dc3d50" loc="51:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x7f73c0dc0110" loc="52:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x7f73c0dc0450" loc="53:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x7f73c0dc07c0" loc="54:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TrickleTimerImplP" loc="51:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerImplP.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x7f73c0dbeda0" loc="51:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x7f73c0db7140" loc="52:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x7f73c0db7480" loc="53:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x7f73c0db77f0" loc="54:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
        <constant name="scale" ref="0x7f73c0db7b60" loc="55:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BitVectorC" loc="44:/usr/bin/tinyos-main/tos/system/BitVectorC.nc" abstract="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="max_bits" ref="0x7f73c0d4dcd0" loc="44:/usr/bin/tinyos-main/tos/system/BitVectorC.nc">
          <component-ref qname="BitVectorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CtpForwardingEngineP" loc="107:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/usr/bin/tinyos-main/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7f73c0b31020" loc="41:/usr/bin/tinyos-main/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f73c0b31020"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x7f73c0b31390" loc="41:/usr/bin/tinyos-main/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/usr/bin/tinyos-main/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7f73c0b2a4e0" loc="53:/usr/bin/tinyos-main/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f73c0b2a4e0"/></type-var>
        </typedef>
        <constant name="size" ref="0x7f73c0b2a820" loc="53:/usr/bin/tinyos-main/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/usr/bin/tinyos-main/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f73c0afc410" loc="42:/usr/bin/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f73c0afc410"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f73c0afc790" loc="42:/usr/bin/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="LruCtpMsgCacheC" loc="38:/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc" abstract="">
      <documentation loc="32:/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="CACHE_SIZE" ref="0x7f73c0ad55f0" loc="38:/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
          <component-ref qname="LruCtpMsgCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LruCtpMsgCacheP" loc="43:/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc" abstract="">
      <documentation loc="32:/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f73c0ad0540" loc="43:/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
          <component-ref qname="LruCtpMsgCacheP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSnooperC" loc="44:/usr/bin/tinyos-main/tos/system/AMSnooperC.nc" abstract="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f73c09a5d90" loc="44:/usr/bin/tinyos-main/tos/system/AMSnooperC.nc">
          <component-ref qname="AMSnooperC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CtpRoutingEngineP" loc="107:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc" abstract="">
      <documentation loc="38:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="routingTableSize" ref="0x7f73c098b250" loc="107:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
        <constant name="minInterval" ref="0x7f73c098b5e0" loc="107:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
        </constant>
        <constant name="maxInterval" ref="0x7f73c098b970" loc="107:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CollectionSenderC" loc="43:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc" abstract="">
      <documentation loc="32:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x7f73c0831d80" loc="43:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
          <component-ref qname="CollectionSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x7f73c0d0f660"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionSenderP" loc="34:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc" abstract="">
      <parameters>
        <constant name="collectid" ref="0x7f73c082be30" loc="35:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x7f73c0d0f660"/></typename>
          </type-int>
        </constant>
        <constant name="clientid" ref="0x7f73c0828200" loc="35:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionIdP" loc="45:/usr/bin/tinyos-main/tos/lib/net/CollectionIdP.nc" abstract="">
      <documentation loc="35:/usr/bin/tinyos-main/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x7f73c08220d0" loc="45:/usr/bin/tinyos-main/tos/lib/net/CollectionIdP.nc">
          <component-ref qname="CollectionIdP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x7f73c0d0f660"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Boot" ref="0x7f73c2764e60" loc="25:AntiTheftC.nc">
      <component-ref qname="AntiTheftC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f73c2764e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f73c2759210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mts300Sounder" ref="0x7f73c27552c0" loc="26:AntiTheftC.nc">
      <component-ref qname="AntiTheftC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mts300Sounder" scoped="" ref="0x7f73c27552c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beep" scoped="" ref="0x7f73c2755640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0x7f73c2771df0" loc="22:AntiTheftC.nc">
      <component-ref qname="AntiTheftC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f73c2771df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f73c2775a80"/>
        <function-ref name="readDone" scoped="" ref="0x7f73c2773020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationControl" ref="0x7f73c2750900" loc="30:AntiTheftC.nc">
      <component-ref qname="AntiTheftC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationControl" scoped="" ref="0x7f73c2750900"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f73c2750c80"/>
        <function-ref name="stop" scoped="" ref="0x7f73c2750e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionControl" ref="0x7f73c2750020" loc="29:AntiTheftC.nc">
      <component-ref qname="AntiTheftC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionControl" scoped="" ref="0x7f73c2750020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f73c27503a0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c2750530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SettingsValue" ref="0x7f73c27581e0" loc="27:AntiTheftC.nc">
      <component-ref qname="AntiTheftC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SettingsValue" scoped="" ref="0x7f73c27581e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="settings" ref="0x7f73c278bbc0"/>
            <typename><typedef-ref name="settings_t" ref="0x7f73c278a670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x7f73c2757810"/>
        <function-ref name="get" scoped="" ref="0x7f73c2758e10"/>
        <function-ref name="set" scoped="" ref="0x7f73c2757300"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Check" ref="0x7f73c27797f0" loc="21:AntiTheftC.nc">
      <component-ref qname="AntiTheftC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Check" scoped="" ref="0x7f73c27797f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73c2778cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f73c2785300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73c27780d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73c2785c00"/>
        <function-ref name="getdt" scoped="" ref="0x7f73c2776660"/>
        <function-ref name="gett0" scoped="" ref="0x7f73c27761e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73c2785780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73c2786480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73c27786e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73c2786950"/>
        <function-ref name="stop" scoped="" ref="0x7f73c2786e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f73c26b5490" loc="31:AntiTheftC.nc">
      <component-ref qname="AntiTheftC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7f73c26b5490"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f73c26b5810"/>
        <function-ref name="stopDone" scoped="" ref="0x7f73c26b59a0"/>
        <function-ref name="start" scoped="" ref="0x7f73c26b5b30"/>
        <function-ref name="stop" scoped="" ref="0x7f73c26b5cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LowPowerListening" ref="0x7f73c26a8130" loc="32:AntiTheftC.nc">
      <component-ref qname="AntiTheftC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f73c26a8130"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f73c26a84b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f73c26a8640"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f73c26a87d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f73c26a8960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TheftSend" ref="0x7f73c2697660" loc="33:AntiTheftC.nc">
      <component-ref qname="AntiTheftC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TheftSend" scoped="" ref="0x7f73c2697660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c2697ae0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c2697c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c2697e00"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c26b9020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c26b91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TheftReceive" ref="0x7f73c26ad060" loc="34:AntiTheftC.nc">
      <component-ref qname="AntiTheftC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TheftReceive" scoped="" ref="0x7f73c26ad060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c26ad3e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="checkAcceleration" ref="0x7f73c2647390" loc="189:AntiTheftC.nc">
      <component-ref qname="AntiTheftC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="checkAcceleration" scoped="" ref="0x7f73c2647390"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73c2647710"/>
        <function-ref name="runTask" scoped="" ref="0x7f73c26478a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f73c275a9a0" loc="24:AntiTheftC.nc">
      <component-ref qname="AntiTheftC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f73c275a9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f73c275ad20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f73c2765020"/>
        <function-ref name="led1On" scoped="" ref="0x7f73c27651b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f73c2765340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f73c27654d0"/>
        <function-ref name="get" scoped="" ref="0x7f73c2765660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f73c27657f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f73c2765e30"/>
        <function-ref name="set" scoped="" ref="0x7f73c2765980"/>
        <function-ref name="led0On" scoped="" ref="0x7f73c2765b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f73c2765ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadStream" ref="0x7f73c276f160" loc="23:AntiTheftC.nc">
      <component-ref qname="AntiTheftC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadStream" scoped="" ref="0x7f73c276f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f73c276ebc0"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f73c276fd50"/>
        <function-ref name="read" scoped="" ref="0x7f73c276e6f0"/>
        <function-ref name="readDone" scoped="" ref="0x7f73c2766690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlertRoot" ref="0x7f73c26bc940" loc="28:AntiTheftC.nc">
      <component-ref qname="AntiTheftC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlertRoot" scoped="" ref="0x7f73c26bc940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c26bccc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c26bce50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c2751020"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c27511b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c2751340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f73c262ca70" loc="41:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f73c262ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f73c262cdf0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f73c2629020"/>
        <function-ref name="start" scoped="" ref="0x7f73c26291b0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c2629340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f73c261d2e0" loc="46:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f73c261d2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f73c261d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f73c260aae0" loc="48:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f73c260aae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c260ae60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c261c020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c261c1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c261c340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c261c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f73c2629b10" loc="43:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f73c2629b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c2628020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c26281b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c2628340"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c26284d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c2628660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f73c2627a40" loc="45:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f73c2627a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c2627dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f73c25ee7e0" loc="52:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f73c25ee7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f73c25eeb60"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f73c25eecf0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f73c25eee80"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f73c25ec030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f73c2628e40" loc="44:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f73c2628e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c26271e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f73c25e8e00" loc="51:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f73c25e8e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f73c25ee1c0"/>
        <function-ref name="noAck" scoped="" ref="0x7f73c25ee350"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f73c25ee4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f73c25d9b40" loc="53:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f73c25d9b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f73c25e7020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f73c25e71b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f73c25e7340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f73c25e74d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f73c25e7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f73c25edaf0" loc="49:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f73c25edaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73c25ede70"/>
        <function-ref name="source" scoped="" ref="0x7f73c261a030"/>
        <function-ref name="address" scoped="" ref="0x7f73c261a1c0"/>
        <function-ref name="destination" scoped="" ref="0x7f73c261a350"/>
        <function-ref name="setSource" scoped="" ref="0x7f73c261a4e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73c261a670"/>
        <function-ref name="type" scoped="" ref="0x7f73c261a800"/>
        <function-ref name="setType" scoped="" ref="0x7f73c261a990"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73c261ab20"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73c261acb0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f73c261ae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f73c25d58e0" loc="54:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f73c25d58e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f73c25d5c60"/>
        <function-ref name="setChannel" scoped="" ref="0x7f73c25d5df0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f73c25e6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x7f73c25c69e0" loc="56:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7f73c25c69e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f73c282d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f73c25ca020"/>
        <function-ref name="clear" scoped="" ref="0x7f73c25ca750"/>
        <function-ref name="isValid" scoped="" ref="0x7f73c25cd890"/>
        <function-ref name="set" scoped="" ref="0x7f73c25cae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f73c25c5af0" loc="57:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f73c25c5af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f73c25bc210"/>
        <function-ref name="clear" scoped="" ref="0x7f73c25bc940"/>
        <function-ref name="isValid" scoped="" ref="0x7f73c25bda80"/>
        <function-ref name="set" scoped="" ref="0x7f73c25bb090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f73c25b8300" loc="45:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f73c25b8300"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f73c25b8680"/>
        <function-ref name="stopDone" scoped="" ref="0x7f73c25b8810"/>
        <function-ref name="start" scoped="" ref="0x7f73c25b89a0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c25b8b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f73c25953b0" loc="66:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f73c25953b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c258dac0"/>
        <function-ref name="get" scoped="" ref="0x7f73c258d570"/>
        <function-ref name="isSet" scoped="" ref="0x7f73c258d020"/>
        <function-ref name="set" scoped="" ref="0x7f73c258c090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f73c257c270" loc="71:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f73c257c270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f73c257b800"/>
        <function-ref name="clear" scoped="" ref="0x7f73c2579020"/>
        <function-ref name="isValid" scoped="" ref="0x7f73c257b0d0"/>
        <function-ref name="set" scoped="" ref="0x7f73c2579750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f73c25aed60" loc="50:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f73c25aed60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f73c25ad180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f73c25accd0" loc="56:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f73c25accd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c25ab0a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c25ab230"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c25ab3c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c25ab550"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c25ab6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f73c25b6320" loc="47:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f73c25b6320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c25b66a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c25b6830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c25b69c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c25b6b50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c25b6ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f73c25ae1d0" loc="49:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f73c25ae1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c25ae550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f73c259de80" loc="65:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f73c259de80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c25965e0"/>
        <function-ref name="get" scoped="" ref="0x7f73c2596090"/>
        <function-ref name="isSet" scoped="" ref="0x7f73c2597ad0"/>
        <function-ref name="set" scoped="" ref="0x7f73c2596b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f73c25a8b40" loc="60:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f73c25a8b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f73c25a7020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f73c25a71b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f73c25a7340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f73c25a74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f73c25b5510" loc="48:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f73c25b5510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c25b5890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f73c2587130" loc="70:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f73c2587130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f73c2703d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f73c2585750"/>
        <function-ref name="clear" scoped="" ref="0x7f73c2585e80"/>
        <function-ref name="isValid" scoped="" ref="0x7f73c2585020"/>
        <function-ref name="set" scoped="" ref="0x7f73c257d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f73c2586b50" loc="69:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f73c2586b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f73c2703d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73c258a7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f73c25998d0" loc="64:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f73c25998d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c259d090"/>
        <function-ref name="get" scoped="" ref="0x7f73c259eaf0"/>
        <function-ref name="isSet" scoped="" ref="0x7f73c259e5a0"/>
        <function-ref name="set" scoped="" ref="0x7f73c259d5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f73c25a81a0" loc="59:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f73c25a81a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f73c25a8520"/>
        <function-ref name="noAck" scoped="" ref="0x7f73c25a86b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f73c25a8840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f73c25ada50" loc="53:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f73c25ada50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c25addd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f73c25a7790" loc="61:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f73c25a7790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f73c25a7b10"/>
        <function-ref name="setRetries" scoped="" ref="0x7f73c25a7ca0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f73c25a7e30"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f73c25a6020"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f73c25a61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f73c25ab990" loc="57:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f73c25ab990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73c25abd10"/>
        <function-ref name="source" scoped="" ref="0x7f73c25a9020"/>
        <function-ref name="address" scoped="" ref="0x7f73c25a91b0"/>
        <function-ref name="destination" scoped="" ref="0x7f73c25a9340"/>
        <function-ref name="setSource" scoped="" ref="0x7f73c25a94d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73c25a9660"/>
        <function-ref name="type" scoped="" ref="0x7f73c25a97f0"/>
        <function-ref name="setType" scoped="" ref="0x7f73c25a9980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73c25a9b10"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73c25a9ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f73c25a9e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f73c25a6480" loc="62:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f73c25a6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f73c25a6900"/>
        <function-ref name="setChannel" scoped="" ref="0x7f73c25a6a90"/>
        <function-ref name="getChannel" scoped="" ref="0x7f73c25a6c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f73c2589e60" loc="67:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f73c2589e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f73c258b210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f73c25ac6c0" loc="54:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f73c25ac6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c25aca40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f73c25788f0" loc="41:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f73c25788f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f73c2578c70"/>
        <function-ref name="stopDone" scoped="" ref="0x7f73c2578e00"/>
        <function-ref name="start" scoped="" ref="0x7f73c2575020"/>
        <function-ref name="stop" scoped="" ref="0x7f73c25751b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f73c252d020" loc="80:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f73c252d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c252c740"/>
        <function-ref name="get" scoped="" ref="0x7f73c252c1f0"/>
        <function-ref name="isSet" scoped="" ref="0x7f73c252dc50"/>
        <function-ref name="set" scoped="" ref="0x7f73c252cc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x7f73c2565020" loc="60:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x7f73c2565020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f73c25653a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x7f73c25572c0" loc="62:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x7f73c25572c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c2557740"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73c25578d0"/>
        <function-ref name="request" scoped="" ref="0x7f73c2557a60"/>
        <function-ref name="granted" scoped="" ref="0x7f73c2557bf0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c2557d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f73c256b4d0" loc="47:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f73c256b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f73c256b850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f73c2575980" loc="44:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f73c2575980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c2575d00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c256e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c256e1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c256e340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c256e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f73c256c900" loc="46:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f73c256c900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c256cc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f73c253d490" loc="64:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f73c253d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f73c253d810"/>
        <function-ref name="address" scoped="" ref="0x7f73c253d9a0"/>
        <function-ref name="destination" scoped="" ref="0x7f73c253db30"/>
        <function-ref name="setSource" scoped="" ref="0x7f73c253dcc0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73c253de50"/>
        <function-ref name="pan" scoped="" ref="0x7f73c254b020"/>
        <function-ref name="setPan" scoped="" ref="0x7f73c254b1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73c254b340"/>
        <function-ref name="localPan" scoped="" ref="0x7f73c254b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x7f73c254b890" loc="65:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7f73c254b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c254bc10"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c254bda0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c254a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c254a1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c254a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f73c2537a90" loc="79:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f73c2537a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c252f1f0"/>
        <function-ref name="get" scoped="" ref="0x7f73c2535c40"/>
        <function-ref name="isSet" scoped="" ref="0x7f73c25356f0"/>
        <function-ref name="set" scoped="" ref="0x7f73c252f740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f73c253b080" loc="69:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f73c253b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f73c253b400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f73c253b590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f73c253b720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f73c253b8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x7f73c2568ba0" loc="54:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f73c2568ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c2567020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c25671b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c2567340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c25674d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c2567660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f73c256ecb0" loc="45:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f73c256ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c256c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f73c2528130" loc="84:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f73c2528130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f73c2703d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f73c25278a0"/>
        <function-ref name="clear" scoped="" ref="0x7f73c2526020"/>
        <function-ref name="isValid" scoped="" ref="0x7f73c2527170"/>
        <function-ref name="set" scoped="" ref="0x7f73c2526750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f73c252abb0" loc="83:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f73c252abb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f73c2703d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73c2529820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f73c2539540" loc="78:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f73c2539540"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c2538c50"/>
        <function-ref name="get" scoped="" ref="0x7f73c2538700"/>
        <function-ref name="isSet" scoped="" ref="0x7f73c25381b0"/>
        <function-ref name="set" scoped="" ref="0x7f73c25371f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f73c254a670" loc="68:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f73c254a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f73c254a9f0"/>
        <function-ref name="noAck" scoped="" ref="0x7f73c254ab80"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f73c254ad10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f73c2559a60" loc="58:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f73c2559a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c2559de0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c2566020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c25661b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c2566340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c25664d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f73c256a1d0" loc="50:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f73c256a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c256a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f73c253bb70" loc="70:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f73c253bb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f73c253a020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f73c253a1b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f73c253a340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f73c253a4d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f73c253a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f73c253a930" loc="76:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f73c253a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f73c253acb0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f73c253ae40"/>
        <function-ref name="getChannel" scoped="" ref="0x7f73c2539020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f73c2569470" loc="53:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f73c2569470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73c25697f0"/>
        <function-ref name="source" scoped="" ref="0x7f73c2569980"/>
        <function-ref name="address" scoped="" ref="0x7f73c2569b10"/>
        <function-ref name="destination" scoped="" ref="0x7f73c2569ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f73c2569e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73c2568020"/>
        <function-ref name="type" scoped="" ref="0x7f73c25681b0"/>
        <function-ref name="setType" scoped="" ref="0x7f73c2568340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73c25684d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73c2568660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f73c25687f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f73c251f3f0" loc="85:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f73c251f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f73c251e970"/>
        <function-ref name="clear" scoped="" ref="0x7f73c251d0d0"/>
        <function-ref name="isValid" scoped="" ref="0x7f73c251e240"/>
        <function-ref name="set" scoped="" ref="0x7f73c251d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f73c2566840" loc="59:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f73c2566840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c2566bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f73c252a350" loc="81:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f73c252a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f73c252a6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f73c256adf0" loc="51:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f73c256adf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c25691c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x7f73c24e6e40" loc="51:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x7f73c24e6e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f73c24da1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x7f73c24f7c80" loc="47:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x7f73c24f7c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x7f73c24fe0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x7f73c24dbe30" loc="50:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7f73c24dbe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73c24eb1e0"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f73c24eb370"/>
        <function-ref name="source" scoped="" ref="0x7f73c24eb500"/>
        <function-ref name="destination" scoped="" ref="0x7f73c24eb690"/>
        <function-ref name="setSource" scoped="" ref="0x7f73c24eb820"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73c24eb9b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73c24ebb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x7f73c24e78e0" loc="49:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x7f73c24e78e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x7f73c24e7c60"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x7f73c24e7df0"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x7f73c24f6020"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x7f73c24f61b0"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x7f73c24f6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f73c24a9d30" loc="61:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f73c24a9d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c24ae0e0"/>
        <function-ref name="wait" scoped="" ref="0x7f73c24ae270"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c24ae400"/>
        <function-ref name="isFree" scoped="" ref="0x7f73c24ae590"/>
        <function-ref name="getNow" scoped="" ref="0x7f73c24ae720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x7f73c249d430" loc="62:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x7f73c249d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c249d7b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c249d940"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c249dad0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c249dc60"/>
        <function-ref name="headerLength" scoped="" ref="0x7f73c249ddf0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f73c24ad020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f73c24ad5f0" loc="64:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f73c24ad5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f73c2703d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f73c249cce0"/>
        <function-ref name="clear" scoped="" ref="0x7f73c249b460"/>
        <function-ref name="isValid" scoped="" ref="0x7f73c249c5b0"/>
        <function-ref name="set" scoped="" ref="0x7f73c249bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x7f73c250d350" loc="43:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x7f73c250d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c250d6d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f73c250d860"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f73c250d9f0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f73c250db80"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f73c250dd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x7f73c24f8640" loc="46:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x7f73c24f8640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x7f73c24f89c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x7f73c2505550" loc="44:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7f73c2505550"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7f73c25058d0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7f73c2505a60"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f73c2505bf0"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7f73c2505d80"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7f73c2517020"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7f73c25171b0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f73c2517340"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f73c25174d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7f73c24b5bd0" loc="60:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f73c24b5bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f73c24d9020"/>
        <function-ref name="getDSN" scoped="" ref="0x7f73c24d91b0"/>
        <function-ref name="setFCF" scoped="" ref="0x7f73c24d9340"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f73c24d94d0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f73c24d9660"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f73c24d97f0"/>
        <function-ref name="setDSN" scoped="" ref="0x7f73c24d9980"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f73c24d9b10"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f73c24d9ca0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f73c24d9e30"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f73c24d7020"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f73c24d71b0"/>
        <function-ref name="localAddr" scoped="" ref="0x7f73c24d7340"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f73c24d75d0"/>
        <function-ref name="localPan" scoped="" ref="0x7f73c24d7760"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f73c24d78f0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f73c24d7a80"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f73c24d7c10"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f73c24d7da0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73c24af020"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f73c24af1b0"/>
        <function-ref name="getFCF" scoped="" ref="0x7f73c24af340"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f73c24af4d0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f73c24af660"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f73c24af7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x7f73c24fb9c0" loc="45:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7f73c24fb9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f73c24fbd40"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f73c250c020"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f73c250c1b0"/>
        <function-ref name="getSender" scoped="" ref="0x7f73c250c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x7f73c24ed340" loc="48:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7f73c24ed340"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f73c24ed6c0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f73c24ed850"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f73c24ed9e0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f73c24edb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7f73c241eba0" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f73c241eba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c23db020"/>
        <function-ref name="wait" scoped="" ref="0x7f73c23db1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c23db340"/>
        <function-ref name="isFree" scoped="" ref="0x7f73c23db4d0"/>
        <function-ref name="getNow" scoped="" ref="0x7f73c23db660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f73c23dbcd0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f73c23dbcd0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f73c290fd40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f73c290fd40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f73c2703d20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f73c2702180"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73c23c8670"/>
        <function-ref name="fired" scoped="" ref="0x7f73c23ca550"/>
        <function-ref name="startAt" scoped="" ref="0x7f73c23c8020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73c23caa10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f73c23c8b30"/>
        <function-ref name="start" scoped="" ref="0x7f73c23cbb60"/>
        <function-ref name="stop" scoped="" ref="0x7f73c23ca090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7f73c07a97e0" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f73c07a97e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c07a9b80"/>
        <function-ref name="wait" scoped="" ref="0x7f73c07a9d10"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c07a8020"/>
        <function-ref name="isFree" scoped="" ref="0x7f73c07a81b0"/>
        <function-ref name="getNow" scoped="" ref="0x7f73c07a8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f73c07a8830" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f73c07a8830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f73c2703d20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f73c2702180"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73c07a5090"/>
        <function-ref name="fired" scoped="" ref="0x7f73c07a6090"/>
        <function-ref name="startAt" scoped="" ref="0x7f73c07a6a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73c07a6550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f73c07a5550"/>
        <function-ref name="start" scoped="" ref="0x7f73c07a76a0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c07a7bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f73c07a5940" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f73c07a5940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f73c07a5cc0"/>
        <function-ref name="suspend" scoped="" ref="0x7f73c07a5e50"/>
        <function-ref name="resume" scoped="" ref="0x7f73c07a3020"/>
        <function-ref name="run" scoped="" ref="0x7f73c07a31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x7f73c23ddbe0" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f73c23ddbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f73c23da020"/>
        <function-ref name="suspend" scoped="" ref="0x7f73c23da1b0"/>
        <function-ref name="resume" scoped="" ref="0x7f73c23da340"/>
        <function-ref name="run" scoped="" ref="0x7f73c23da4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f73c22ee8f0" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f73c22ee8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c22eec70"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c22eee00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c22ed020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f73c22ed2b0" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f73c22ed2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c22ed630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f73c22f0420" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f73c22f0420"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f73c22f07c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f73c22f68b0" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f73c22f68b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c22f6c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c22f6dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c22f2020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c22f21b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c22f2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f73c22f26c0" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f73c22f26c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c22f2a60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c22f2bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c22f2d80"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c22f1020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c22f11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f73c22f1c90" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f73c22f1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c22f00a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f73c22efa70" loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f73c22efa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c22efdf0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c22ee020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c22ee1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c22ee340"/>
        <function-ref name="headerLength" scoped="" ref="0x7f73c22ee4d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f73c22ee660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f73c22ed8c0" loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f73c22ed8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73c22edc40"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f73c22eddd0"/>
        <function-ref name="source" scoped="" ref="0x7f73c22ec020"/>
        <function-ref name="destination" scoped="" ref="0x7f73c22ec1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f73c22ec340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73c22ec4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73c22ec660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f73c22f1530" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f73c22f1530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c22f18d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f73c22f0b80" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f73c22f0b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c22ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f73c22f7280" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f73c22f7280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73c22f7600"/>
        <function-ref name="source" scoped="" ref="0x7f73c22f7790"/>
        <function-ref name="address" scoped="" ref="0x7f73c22f7920"/>
        <function-ref name="destination" scoped="" ref="0x7f73c22f7ab0"/>
        <function-ref name="setSource" scoped="" ref="0x7f73c22f7c40"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73c22f7dd0"/>
        <function-ref name="type" scoped="" ref="0x7f73c22f6020"/>
        <function-ref name="setType" scoped="" ref="0x7f73c22f61b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73c22f6340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73c22f64d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f73c22f6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f73c22ef3e0" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f73c22ef3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c22ef780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f73c0785a50" loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f73c0785a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c0785dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f73c0785120" loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f73c0785120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c07854a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c0785630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c07857c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f73c0788b00" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f73c0788b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f73c0787020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f73c078b020" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f73c078b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c078b3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c078b530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c078b6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c078b850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c078b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f73c078bd60" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f73c078bd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c0789180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c0789310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c07894a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c0789630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c07897c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f73c07883e0" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f73c07883e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c0788780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f73c078ead0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f73c078ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c078ee50"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c078d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c078d1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c078d340"/>
        <function-ref name="headerLength" scoped="" ref="0x7f73c078d4d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f73c078d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f73c07840a0" loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f73c07840a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73c0784520"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f73c07846b0"/>
        <function-ref name="source" scoped="" ref="0x7f73c0784840"/>
        <function-ref name="destination" scoped="" ref="0x7f73c07849d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f73c0784b60"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73c0784cf0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73c0784e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f73c07830f0" loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f73c07830f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f73c0783470"/>
        <function-ref name="changed" scoped="" ref="0x7f73c0783600"/>
        <function-ref name="amGroup" scoped="" ref="0x7f73c0783790"/>
        <function-ref name="setAddress" scoped="" ref="0x7f73c0783920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f73c0786310" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f73c0786310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c0786690"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c0786820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c07869b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c0786b40"/>
        <function-ref name="headerLength" scoped="" ref="0x7f73c0786cd0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f73c0786e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f73c0789b40" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f73c0789b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c0788020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f73c07873e0" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f73c07873e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c0787780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f73c078d8b0" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f73c078d8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73c078dc30"/>
        <function-ref name="source" scoped="" ref="0x7f73c078ddc0"/>
        <function-ref name="address" scoped="" ref="0x7f73c078c020"/>
        <function-ref name="destination" scoped="" ref="0x7f73c078c1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f73c078c340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73c078c4d0"/>
        <function-ref name="type" scoped="" ref="0x7f73c078c660"/>
        <function-ref name="setType" scoped="" ref="0x7f73c078c7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73c078c980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73c078cb10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f73c078cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f73c0787b40" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f73c0787b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c0786020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f73c230f5a0" loc="54:/usr/bin/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f73c230f5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f73c230f920"/>
        <function-ref name="changed" scoped="" ref="0x7f73c230fab0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f73c230fc40"/>
        <function-ref name="setAddress" scoped="" ref="0x7f73c230fdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f73c22d2020" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f73c22d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c22d23a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c22d2530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c22d26c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f73c22d2910" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f73c22d2910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c22d2c90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73c22d2e20"/>
        <function-ref name="request" scoped="" ref="0x7f73c22d1020"/>
        <function-ref name="granted" scoped="" ref="0x7f73c22d11b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c22d1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f73c22e5550" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f73c22e5550"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c22e58d0"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c22e5a60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c22e5bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f73c2011a60" loc="86:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f73c2011a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f73c2011e00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f73c2010020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f73c2010b40" loc="89:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73c2010b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f73c200f020"/>
        <function-ref name="configure" scoped="" ref="0x7f73c200f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f73c2012cb0" loc="85:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f73c2012cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c20110a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73c2011230"/>
        <function-ref name="request" scoped="" ref="0x7f73c20113c0"/>
        <function-ref name="granted" scoped="" ref="0x7f73c2011550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c20116e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f73c2010270" loc="87:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c2010270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f73c20105f0"/>
        <function-ref name="userId" scoped="" ref="0x7f73c2010780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f73c22ba590" loc="58:/usr/bin/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f73c22ba590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c22ba910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f73c22bd080" loc="57:/usr/bin/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f73c22bd080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f73c22bd400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f73c22b6d50" loc="52:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f73c22b6d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c22b5100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73c22bcd60" loc="46:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73c22bcd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c22b7180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f73c22b6020" loc="50:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f73c22b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f73c22b63a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f73c22b6530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f73c22b66c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f73c22b6850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f73c22b69e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f73c22a47a0" loc="45:/usr/bin/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f73c22a47a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c22a4b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73c22a40c0" loc="44:/usr/bin/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73c22a40c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c22a4440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f73c22a3020" loc="46:/usr/bin/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f73c22a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c22a33a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f73c229f110" loc="41:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f73c229f110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c229f490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f73c22a79e0" loc="40:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f73c22a79e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c22a7d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f73c2299cd0" loc="45:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f73c2299cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c22980a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7f73c2293ad0" loc="44:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7f73c2293ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c2293e50"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2299020"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c22991b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2299340"/>
        <function-ref name="get" scoped="" ref="0x7f73c22994d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2299660"/>
        <function-ref name="set" scoped="" ref="0x7f73c22997f0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2299980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f73c229a530" loc="43:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f73c229a530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c229a8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f73c224dcb0" loc="98:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f73c224dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c224b610"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c224b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c224b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c224bac0"/>
        <function-ref name="get" scoped="" ref="0x7f73c224bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c224bde0"/>
        <function-ref name="set" scoped="" ref="0x7f73c224a020"/>
        <function-ref name="clr" scoped="" ref="0x7f73c224a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f73c226a4e0" loc="72:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f73c226a4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c226a860"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c226a9f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c226ab80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c226ad10"/>
        <function-ref name="get" scoped="" ref="0x7f73c2269020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c22691b0"/>
        <function-ref name="set" scoped="" ref="0x7f73c2269340"/>
        <function-ref name="clr" scoped="" ref="0x7f73c22694d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f73c225e350" loc="83:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f73c225e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c225e6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c225e860"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c225e9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c225eb80"/>
        <function-ref name="get" scoped="" ref="0x7f73c225ed10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c225d020"/>
        <function-ref name="set" scoped="" ref="0x7f73c225d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c225d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f73c2253cb0" loc="92:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f73c2253cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c22520a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2252230"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c22523c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2252550"/>
        <function-ref name="get" scoped="" ref="0x7f73c22526e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2252870"/>
        <function-ref name="set" scoped="" ref="0x7f73c2252a00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2252b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f73c2245060" loc="103:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f73c2245060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c22453e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2245570"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c2245700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2245890"/>
        <function-ref name="get" scoped="" ref="0x7f73c2245a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2245bb0"/>
        <function-ref name="set" scoped="" ref="0x7f73c2245d40"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2244020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f73c2284670" loc="50:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f73c2284670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c22849f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2284b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c2284d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2283020"/>
        <function-ref name="get" scoped="" ref="0x7f73c22831b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2283340"/>
        <function-ref name="set" scoped="" ref="0x7f73c22834d0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2283660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f73c2256670" loc="90:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f73c2256670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c22569f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2256b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c2256d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2255020"/>
        <function-ref name="get" scoped="" ref="0x7f73c22551b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2255340"/>
        <function-ref name="set" scoped="" ref="0x7f73c22554d0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2255660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f73c2282cb0" loc="53:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f73c2282cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c22810a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2281230"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c22813c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2281550"/>
        <function-ref name="get" scoped="" ref="0x7f73c22816e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2281870"/>
        <function-ref name="set" scoped="" ref="0x7f73c2281a00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2281b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f73c2275cb0" loc="64:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f73c2275cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c22740a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2274230"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c22743c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2274550"/>
        <function-ref name="get" scoped="" ref="0x7f73c22746e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2274870"/>
        <function-ref name="set" scoped="" ref="0x7f73c2274a00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2274b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f73c2267e40" loc="75:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f73c2267e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c22661e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2266370"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c2266500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2266690"/>
        <function-ref name="get" scoped="" ref="0x7f73c2266820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c22669b0"/>
        <function-ref name="set" scoped="" ref="0x7f73c2266b40"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2266cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f73c225acb0" loc="86:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f73c225acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c22590a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2259230"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c22593c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2259550"/>
        <function-ref name="get" scoped="" ref="0x7f73c22596e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2259870"/>
        <function-ref name="set" scoped="" ref="0x7f73c2259a00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2259b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f73c228a800" loc="45:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f73c228a800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c228ab80"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c228ad10"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c2289020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c22891b0"/>
        <function-ref name="get" scoped="" ref="0x7f73c2289340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c22894d0"/>
        <function-ref name="set" scoped="" ref="0x7f73c2289660"/>
        <function-ref name="clr" scoped="" ref="0x7f73c22897f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f73c227e670" loc="56:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f73c227e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c227e9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c227eb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c227ed10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c227d020"/>
        <function-ref name="get" scoped="" ref="0x7f73c227d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c227d340"/>
        <function-ref name="set" scoped="" ref="0x7f73c227d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c227d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f73c2270670" loc="67:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f73c2270670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c22709f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2270b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c2270d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c226f020"/>
        <function-ref name="get" scoped="" ref="0x7f73c226f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c226f340"/>
        <function-ref name="set" scoped="" ref="0x7f73c226f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c226f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f73c2263670" loc="78:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f73c2263670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c22639f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2263b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c2263d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2262020"/>
        <function-ref name="get" scoped="" ref="0x7f73c22621b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2262340"/>
        <function-ref name="set" scoped="" ref="0x7f73c22624d0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2262660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f73c224f670" loc="95:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f73c224f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c224f9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c224fb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c224fd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c224e020"/>
        <function-ref name="get" scoped="" ref="0x7f73c224e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c224e340"/>
        <function-ref name="set" scoped="" ref="0x7f73c224e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c224e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f73c2248b20" loc="101:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f73c2248b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c2247020"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c22471b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c2247340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c22474d0"/>
        <function-ref name="get" scoped="" ref="0x7f73c2247660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c22477f0"/>
        <function-ref name="set" scoped="" ref="0x7f73c2247980"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2247b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f73c2261cb0" loc="81:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f73c2261cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c22600a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2260230"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c22603c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2260550"/>
        <function-ref name="get" scoped="" ref="0x7f73c22606e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2260870"/>
        <function-ref name="set" scoped="" ref="0x7f73c2260a00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2260b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f73c2286060" loc="48:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f73c2286060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c22863e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2286570"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c2286700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2286890"/>
        <function-ref name="get" scoped="" ref="0x7f73c2286a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2286bb0"/>
        <function-ref name="set" scoped="" ref="0x7f73c2286d40"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2285020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f73c2279020" loc="59:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f73c2279020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c22793a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2279530"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c22796c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2279850"/>
        <function-ref name="get" scoped="" ref="0x7f73c22799e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2279b70"/>
        <function-ref name="set" scoped="" ref="0x7f73c2279d00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2278020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f73c224a4e0" loc="99:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f73c224a4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c224a860"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c224a9f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c224ab80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c224ad10"/>
        <function-ref name="get" scoped="" ref="0x7f73c2249020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c22491b0"/>
        <function-ref name="set" scoped="" ref="0x7f73c2249340"/>
        <function-ref name="clr" scoped="" ref="0x7f73c22494d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f73c2277670" loc="62:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f73c2277670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c22779f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2277b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c2277d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2276020"/>
        <function-ref name="get" scoped="" ref="0x7f73c22761b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2276340"/>
        <function-ref name="set" scoped="" ref="0x7f73c22764d0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2276660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f73c2269800" loc="73:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f73c2269800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c2269b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2269d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c2268020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c22681b0"/>
        <function-ref name="get" scoped="" ref="0x7f73c2268340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c22684d0"/>
        <function-ref name="set" scoped="" ref="0x7f73c2268660"/>
        <function-ref name="clr" scoped="" ref="0x7f73c22687f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f73c225d670" loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f73c225d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c225d9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c225db80"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c225dd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c225b020"/>
        <function-ref name="get" scoped="" ref="0x7f73c225b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c225b340"/>
        <function-ref name="set" scoped="" ref="0x7f73c225b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c225b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f73c2251020" loc="93:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f73c2251020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c22513a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2251530"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c22516c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2251850"/>
        <function-ref name="get" scoped="" ref="0x7f73c22519e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2251b70"/>
        <function-ref name="set" scoped="" ref="0x7f73c2251d00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2250020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f73c2283990" loc="51:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f73c2283990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c2283d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2282020"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c22821b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2282340"/>
        <function-ref name="get" scoped="" ref="0x7f73c22824d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2282660"/>
        <function-ref name="set" scoped="" ref="0x7f73c22827f0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2282980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f73c2280020" loc="54:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f73c2280020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c22803a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2280530"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c22806c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2280850"/>
        <function-ref name="get" scoped="" ref="0x7f73c22809e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2280b70"/>
        <function-ref name="set" scoped="" ref="0x7f73c2280d00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c227f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f73c2272020" loc="65:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f73c2272020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c22723a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2272530"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c22726c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2272850"/>
        <function-ref name="get" scoped="" ref="0x7f73c22729e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2272b70"/>
        <function-ref name="set" scoped="" ref="0x7f73c2272d00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2271020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f73c2265060" loc="76:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f73c2265060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c22653e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2265570"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c2265700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2265890"/>
        <function-ref name="get" scoped="" ref="0x7f73c2265a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2265bb0"/>
        <function-ref name="set" scoped="" ref="0x7f73c2265d40"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2264020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f73c2258020" loc="87:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f73c2258020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c22583a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2258530"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c22586c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2258850"/>
        <function-ref name="get" scoped="" ref="0x7f73c22589e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2258b70"/>
        <function-ref name="set" scoped="" ref="0x7f73c2258d00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2257020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f73c2289b20" loc="46:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f73c2289b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c2288020"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c22881b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c2288340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c22884d0"/>
        <function-ref name="get" scoped="" ref="0x7f73c2288660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c22887f0"/>
        <function-ref name="set" scoped="" ref="0x7f73c2288980"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2288b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f73c227d990" loc="57:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f73c227d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c227de10"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c227b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c227b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c227b340"/>
        <function-ref name="get" scoped="" ref="0x7f73c227b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c227b660"/>
        <function-ref name="set" scoped="" ref="0x7f73c227b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c227b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f73c226f990" loc="68:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f73c226f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c226fd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c226e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c226e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c226e340"/>
        <function-ref name="get" scoped="" ref="0x7f73c226e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c226e660"/>
        <function-ref name="set" scoped="" ref="0x7f73c226e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c226e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f73c224e990" loc="96:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f73c224e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c224ed10"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c224d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c224d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c224d340"/>
        <function-ref name="get" scoped="" ref="0x7f73c224d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c224d660"/>
        <function-ref name="set" scoped="" ref="0x7f73c224d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c224d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f73c226b020" loc="71:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f73c226b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c226b5a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c226b730"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c226b8c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c226ba50"/>
        <function-ref name="get" scoped="" ref="0x7f73c226bbe0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c226bd70"/>
        <function-ref name="set" scoped="" ref="0x7f73c226a020"/>
        <function-ref name="clr" scoped="" ref="0x7f73c226a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f73c225f020" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f73c225f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c225f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c225f530"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c225f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c225f850"/>
        <function-ref name="get" scoped="" ref="0x7f73c225f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c225fb70"/>
        <function-ref name="set" scoped="" ref="0x7f73c225fd00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c225e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f73c2255990" loc="91:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f73c2255990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c2255d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2253020"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c22531b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2253340"/>
        <function-ref name="get" scoped="" ref="0x7f73c22534d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2253660"/>
        <function-ref name="set" scoped="" ref="0x7f73c22537f0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2253980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f73c2247e40" loc="102:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f73c2247e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c22461e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2246370"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c2246500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2246690"/>
        <function-ref name="get" scoped="" ref="0x7f73c2246820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c22469b0"/>
        <function-ref name="set" scoped="" ref="0x7f73c2246b40"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2246cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f73c2285350" loc="49:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f73c2285350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c22856d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2285860"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c22859f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2285b80"/>
        <function-ref name="get" scoped="" ref="0x7f73c2285d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2284020"/>
        <function-ref name="set" scoped="" ref="0x7f73c22841b0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2284340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f73c2278350" loc="60:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f73c2278350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c22786d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2278860"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c22789f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2278b80"/>
        <function-ref name="get" scoped="" ref="0x7f73c2278d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2277020"/>
        <function-ref name="set" scoped="" ref="0x7f73c22771b0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2277340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f73c2257350" loc="89:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f73c2257350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c22576d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2257860"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c22579f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2257b80"/>
        <function-ref name="get" scoped="" ref="0x7f73c2257d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2256020"/>
        <function-ref name="set" scoped="" ref="0x7f73c22561b0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2256340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f73c2276990" loc="63:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f73c2276990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c2276d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2275020"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c22751b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2275340"/>
        <function-ref name="get" scoped="" ref="0x7f73c22754d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2275660"/>
        <function-ref name="set" scoped="" ref="0x7f73c22757f0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2275980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f73c2268b20" loc="74:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f73c2268b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c2267020"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c22671b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c2267340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c22674d0"/>
        <function-ref name="get" scoped="" ref="0x7f73c2267660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c22677f0"/>
        <function-ref name="set" scoped="" ref="0x7f73c2267980"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2267b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f73c225b990" loc="85:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f73c225b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c225bd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c225a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c225a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c225a340"/>
        <function-ref name="get" scoped="" ref="0x7f73c225a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c225a660"/>
        <function-ref name="set" scoped="" ref="0x7f73c225a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c225a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f73c2250350" loc="94:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f73c2250350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c22506d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2250860"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c22509f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2250b80"/>
        <function-ref name="get" scoped="" ref="0x7f73c2250d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c224f020"/>
        <function-ref name="set" scoped="" ref="0x7f73c224f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c224f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f73c229d540" loc="44:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f73c229d540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c229d8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c229da50"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c229dbe0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c229dd70"/>
        <function-ref name="get" scoped="" ref="0x7f73c228a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c228a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f73c228a340"/>
        <function-ref name="clr" scoped="" ref="0x7f73c228a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f73c227f350" loc="55:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f73c227f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c227f6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c227f860"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c227f9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c227fb80"/>
        <function-ref name="get" scoped="" ref="0x7f73c227fd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c227e020"/>
        <function-ref name="set" scoped="" ref="0x7f73c227e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c227e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f73c2271350" loc="66:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f73c2271350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c22716d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2271860"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c22719f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2271b80"/>
        <function-ref name="get" scoped="" ref="0x7f73c2271d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2270020"/>
        <function-ref name="set" scoped="" ref="0x7f73c22701b0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2270340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f73c2264350" loc="77:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f73c2264350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c22646d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2264860"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c22649f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2264b80"/>
        <function-ref name="get" scoped="" ref="0x7f73c2264d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2263020"/>
        <function-ref name="set" scoped="" ref="0x7f73c22631b0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2263340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f73c2249800" loc="100:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f73c2249800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c2249b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2249d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c2248020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c22481b0"/>
        <function-ref name="get" scoped="" ref="0x7f73c2248340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c22484d0"/>
        <function-ref name="set" scoped="" ref="0x7f73c2248660"/>
        <function-ref name="clr" scoped="" ref="0x7f73c22487f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f73c2262990" loc="80:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f73c2262990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c2262d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2261020"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c22611b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2261340"/>
        <function-ref name="get" scoped="" ref="0x7f73c22614d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2261660"/>
        <function-ref name="set" scoped="" ref="0x7f73c22617f0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2261980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f73c226ecb0" loc="69:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f73c226ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c226d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c226d230"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c226d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c226d550"/>
        <function-ref name="get" scoped="" ref="0x7f73c226d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c226d870"/>
        <function-ref name="set" scoped="" ref="0x7f73c226da00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c226db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f73c2288e40" loc="47:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f73c2288e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c22871e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2287370"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c2287500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2287690"/>
        <function-ref name="get" scoped="" ref="0x7f73c2287820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c22879b0"/>
        <function-ref name="set" scoped="" ref="0x7f73c2287b40"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2287cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f73c227bcb0" loc="58:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f73c227bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c227a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c227a230"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c227a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c227a550"/>
        <function-ref name="get" scoped="" ref="0x7f73c227a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c227a870"/>
        <function-ref name="set" scoped="" ref="0x7f73c227aa00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c227ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f73c21f6a80" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f73c21f6a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21f6e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21f5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21f51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21f5340"/>
        <function-ref name="get" scoped="" ref="0x7f73c21f54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21f5660"/>
        <function-ref name="set" scoped="" ref="0x7f73c21f57f0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21f5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f73c21f2020" loc="49:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f73c21f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21f23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21f2530"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21f26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21f2850"/>
        <function-ref name="get" scoped="" ref="0x7f73c21f29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21f2b70"/>
        <function-ref name="set" scoped="" ref="0x7f73c21f2d00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21f1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f73c21f86b0" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f73c21f86b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21f8a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21f8bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21f8d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21f7020"/>
        <function-ref name="get" scoped="" ref="0x7f73c21f71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21f7340"/>
        <function-ref name="set" scoped="" ref="0x7f73c21f74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21f7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f73c21f5c10" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f73c21f5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21f4020"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21f41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21f4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21f44d0"/>
        <function-ref name="get" scoped="" ref="0x7f73c21f4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21f47f0"/>
        <function-ref name="set" scoped="" ref="0x7f73c21f4980"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21f4b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f73c21f12b0" loc="50:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f73c21f12b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21f1630"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21f17c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21f1950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21f1ae0"/>
        <function-ref name="get" scoped="" ref="0x7f73c21f1c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21f1e00"/>
        <function-ref name="set" scoped="" ref="0x7f73c21f0020"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21f01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f73c21f78f0" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f73c21f78f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21f7c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21f7e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21f6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21f61b0"/>
        <function-ref name="get" scoped="" ref="0x7f73c21f6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21f64d0"/>
        <function-ref name="set" scoped="" ref="0x7f73c21f6660"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21f67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f73c21f4da0" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f73c21f4da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21f3180"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21f3310"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21f34a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21f3630"/>
        <function-ref name="get" scoped="" ref="0x7f73c21f37c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21f3950"/>
        <function-ref name="set" scoped="" ref="0x7f73c21f3ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21f3c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f73c21f0440" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f73c21f0440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21f07c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21f0950"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21f0ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21f0c70"/>
        <function-ref name="get" scoped="" ref="0x7f73c21f0e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21ef020"/>
        <function-ref name="set" scoped="" ref="0x7f73c21ef1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21ef340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c06fa830" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c06fa830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c06fabb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c06fad40"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c06f9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c06f91b0"/>
        <function-ref name="get" scoped="" ref="0x7f73c06f9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c06f94d0"/>
        <function-ref name="set" scoped="" ref="0x7f73c06f9660"/>
        <function-ref name="clr" scoped="" ref="0x7f73c06f97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c06f7a80" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c06f7a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c06f7e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c06f6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c06f61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c06f6340"/>
        <function-ref name="get" scoped="" ref="0x7f73c06f64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c06f6660"/>
        <function-ref name="set" scoped="" ref="0x7f73c06f67f0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c06f6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c06f4e20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c06f4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c06f31c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c06f3350"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c06f34e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c06f3670"/>
        <function-ref name="get" scoped="" ref="0x7f73c06f3800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c06f3990"/>
        <function-ref name="set" scoped="" ref="0x7f73c06f3b20"/>
        <function-ref name="clr" scoped="" ref="0x7f73c06f3cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c06f00a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c06f00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c06f0420"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c06f05b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c06f0740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c06f08d0"/>
        <function-ref name="get" scoped="" ref="0x7f73c06f0a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c06f0bf0"/>
        <function-ref name="set" scoped="" ref="0x7f73c06f0d80"/>
        <function-ref name="clr" scoped="" ref="0x7f73c06ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c06ed3f0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c06ed3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c06ed770"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c06ed900"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c06eda90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c06edc20"/>
        <function-ref name="get" scoped="" ref="0x7f73c06eddb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c06d4020"/>
        <function-ref name="set" scoped="" ref="0x7f73c06d41b0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c06d4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c06d26d0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c06d26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c06d2a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c06d2be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c06d2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c06d1020"/>
        <function-ref name="get" scoped="" ref="0x7f73c06d11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c06d1340"/>
        <function-ref name="set" scoped="" ref="0x7f73c06d14d0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c06d1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c06cf9b0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c06cf9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c06cfd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c06cd020"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c06cd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c06cd340"/>
        <function-ref name="get" scoped="" ref="0x7f73c06cd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c06cd660"/>
        <function-ref name="set" scoped="" ref="0x7f73c06cd7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c06cd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c06cbe20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c06cbe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c06ca1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c06ca350"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c06ca4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c06ca670"/>
        <function-ref name="get" scoped="" ref="0x7f73c06ca800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c06ca990"/>
        <function-ref name="set" scoped="" ref="0x7f73c06cab20"/>
        <function-ref name="clr" scoped="" ref="0x7f73c06cacb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f73c21e7da0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f73c21e7da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21e6180"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21e6310"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21e64a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21e6630"/>
        <function-ref name="get" scoped="" ref="0x7f73c21e67c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21e6950"/>
        <function-ref name="set" scoped="" ref="0x7f73c21e6ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21e6c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f73c21e3440" loc="49:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f73c21e3440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21e37c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21e3950"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21e3ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21e3c70"/>
        <function-ref name="get" scoped="" ref="0x7f73c21e3e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21e1020"/>
        <function-ref name="set" scoped="" ref="0x7f73c21e11b0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21e1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f73c21e9a20" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f73c21e9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21e9da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21e8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21e81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21e8340"/>
        <function-ref name="get" scoped="" ref="0x7f73c21e84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21e8660"/>
        <function-ref name="set" scoped="" ref="0x7f73c21e87f0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21e8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f73c21e5020" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f73c21e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21e53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21e5530"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21e56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21e5850"/>
        <function-ref name="get" scoped="" ref="0x7f73c21e59e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21e5b70"/>
        <function-ref name="set" scoped="" ref="0x7f73c21e5d00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21e4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f73c21e15d0" loc="50:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f73c21e15d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21e1950"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21e1ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21e1c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21e1e00"/>
        <function-ref name="get" scoped="" ref="0x7f73c21e0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21e01b0"/>
        <function-ref name="set" scoped="" ref="0x7f73c21e0340"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21e04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f73c21e8c10" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f73c21e8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21e7020"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21e71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21e7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21e74d0"/>
        <function-ref name="get" scoped="" ref="0x7f73c21e7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21e77f0"/>
        <function-ref name="set" scoped="" ref="0x7f73c21e7980"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21e7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f73c21e42b0" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f73c21e42b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21e4630"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21e47c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21e4950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21e4ae0"/>
        <function-ref name="get" scoped="" ref="0x7f73c21e4c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21e4e00"/>
        <function-ref name="set" scoped="" ref="0x7f73c21e3020"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21e31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f73c21e0760" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f73c21e0760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21e0ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21e0c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21e0e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21df020"/>
        <function-ref name="get" scoped="" ref="0x7f73c21df1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21df340"/>
        <function-ref name="set" scoped="" ref="0x7f73c21df4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21df660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c0670a60" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c0670a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c0670de0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c066f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c066f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c066f340"/>
        <function-ref name="get" scoped="" ref="0x7f73c066f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c066f660"/>
        <function-ref name="set" scoped="" ref="0x7f73c066f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c066f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c066de20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c066de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c066c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c066c350"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c066c4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c066c670"/>
        <function-ref name="get" scoped="" ref="0x7f73c066c800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c066c990"/>
        <function-ref name="set" scoped="" ref="0x7f73c066cb20"/>
        <function-ref name="clr" scoped="" ref="0x7f73c066ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c06690a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c06690a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c0669420"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c06695b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c0669740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c06698d0"/>
        <function-ref name="get" scoped="" ref="0x7f73c0669a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c0669bf0"/>
        <function-ref name="set" scoped="" ref="0x7f73c0669d80"/>
        <function-ref name="clr" scoped="" ref="0x7f73c0668020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c06663f0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c06663f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c0666770"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c0666900"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c0666a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c0666c20"/>
        <function-ref name="get" scoped="" ref="0x7f73c0666db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c0665020"/>
        <function-ref name="set" scoped="" ref="0x7f73c06651b0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c0665340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c06636d0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c06636d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c0663a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c0663be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c0663d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c0662020"/>
        <function-ref name="get" scoped="" ref="0x7f73c06621b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c0662340"/>
        <function-ref name="set" scoped="" ref="0x7f73c06624d0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c0662660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c06609b0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c06609b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c0660d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c065f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c065f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c065f340"/>
        <function-ref name="get" scoped="" ref="0x7f73c065f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c065f660"/>
        <function-ref name="set" scoped="" ref="0x7f73c065f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c065f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c065de20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c065de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c065c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c065c350"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c065c4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c065c670"/>
        <function-ref name="get" scoped="" ref="0x7f73c065c800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c065c990"/>
        <function-ref name="set" scoped="" ref="0x7f73c065cb20"/>
        <function-ref name="clr" scoped="" ref="0x7f73c065ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c06590a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c06590a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c0659420"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c06595b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c0659740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c06598d0"/>
        <function-ref name="get" scoped="" ref="0x7f73c0659a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c0659bf0"/>
        <function-ref name="set" scoped="" ref="0x7f73c0659d80"/>
        <function-ref name="clr" scoped="" ref="0x7f73c0657020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f73c21d7020" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f73c21d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21d73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21d7530"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21d76c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21d7850"/>
        <function-ref name="get" scoped="" ref="0x7f73c21d79e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21d7b70"/>
        <function-ref name="set" scoped="" ref="0x7f73c21d7d00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f73c21d35d0" loc="49:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f73c21d35d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21d3950"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21d3ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21d3c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21d3e00"/>
        <function-ref name="get" scoped="" ref="0x7f73c21d2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21d21b0"/>
        <function-ref name="set" scoped="" ref="0x7f73c21d2340"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21d24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f73c21dad30" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f73c21dad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21d90e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21d9270"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21d9400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21d9590"/>
        <function-ref name="get" scoped="" ref="0x7f73c21d9720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21d98b0"/>
        <function-ref name="set" scoped="" ref="0x7f73c21d9a40"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21d9bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f73c21d52b0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f73c21d52b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21d5630"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21d57c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21d5950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21d5ae0"/>
        <function-ref name="get" scoped="" ref="0x7f73c21d5c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21d5e00"/>
        <function-ref name="set" scoped="" ref="0x7f73c21d4020"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21d41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f73c21d2760" loc="50:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f73c21d2760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21d2ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21d2c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21d2e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21d1020"/>
        <function-ref name="get" scoped="" ref="0x7f73c21d11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21d1340"/>
        <function-ref name="set" scoped="" ref="0x7f73c21d14d0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21d1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f73c21d9e60" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f73c21d9e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21d8210"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21d83a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21d8530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21d86c0"/>
        <function-ref name="get" scoped="" ref="0x7f73c21d8850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21d89e0"/>
        <function-ref name="set" scoped="" ref="0x7f73c21d8b70"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21d8d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f73c21d4440" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f73c21d4440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21d47c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21d4950"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21d4ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21d4c70"/>
        <function-ref name="get" scoped="" ref="0x7f73c21d4e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21d3020"/>
        <function-ref name="set" scoped="" ref="0x7f73c21d31b0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21d3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f73c21d18f0" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f73c21d18f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21d1c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21d1e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21d0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21d01b0"/>
        <function-ref name="get" scoped="" ref="0x7f73c21d0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21d04d0"/>
        <function-ref name="set" scoped="" ref="0x7f73c21d0660"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21d07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c05f8c90" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c05f8c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c05f70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c05f7230"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c05f73c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c05f7550"/>
        <function-ref name="get" scoped="" ref="0x7f73c05f76e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c05f7870"/>
        <function-ref name="set" scoped="" ref="0x7f73c05f7a00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c05f7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c05f5e20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c05f5e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c05f41c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c05f4350"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c05f44e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c05f4670"/>
        <function-ref name="get" scoped="" ref="0x7f73c05f4800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c05f4990"/>
        <function-ref name="set" scoped="" ref="0x7f73c05f4b20"/>
        <function-ref name="clr" scoped="" ref="0x7f73c05f4cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c05f10a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c05f10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c05f1420"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c05f15b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c05f1740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c05f18d0"/>
        <function-ref name="get" scoped="" ref="0x7f73c05f1a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c05f1bf0"/>
        <function-ref name="set" scoped="" ref="0x7f73c05f1d80"/>
        <function-ref name="clr" scoped="" ref="0x7f73c05f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c05ee3f0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c05ee3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c05ee770"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c05ee900"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c05eea90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c05eec20"/>
        <function-ref name="get" scoped="" ref="0x7f73c05eedb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c05ed020"/>
        <function-ref name="set" scoped="" ref="0x7f73c05ed1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c05ed340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c05eb6d0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c05eb6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c05eba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c05ebbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c05ebd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c05ea020"/>
        <function-ref name="get" scoped="" ref="0x7f73c05ea1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c05ea340"/>
        <function-ref name="set" scoped="" ref="0x7f73c05ea4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c05ea660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c05e89b0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c05e89b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c05e8d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c05e7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c05e71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c05e7340"/>
        <function-ref name="get" scoped="" ref="0x7f73c05e74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c05e7660"/>
        <function-ref name="set" scoped="" ref="0x7f73c05e77f0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c05e7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c05e5e20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c05e5e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c05e41c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c05e4350"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c05e44e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c05e4670"/>
        <function-ref name="get" scoped="" ref="0x7f73c05e4800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c05e4990"/>
        <function-ref name="set" scoped="" ref="0x7f73c05e4b20"/>
        <function-ref name="clr" scoped="" ref="0x7f73c05e4cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c05e10a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c05e10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c05e1420"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c05e15b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c05e1740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c05e18d0"/>
        <function-ref name="get" scoped="" ref="0x7f73c05e1a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c05e1bf0"/>
        <function-ref name="set" scoped="" ref="0x7f73c05e1d80"/>
        <function-ref name="clr" scoped="" ref="0x7f73c05df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f73c21c7440" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f73c21c7440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21c77c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21c7950"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21c7ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21c7c70"/>
        <function-ref name="get" scoped="" ref="0x7f73c21c7e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21c6020"/>
        <function-ref name="set" scoped="" ref="0x7f73c21c61b0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21c6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f73c21c48f0" loc="49:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f73c21c48f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21c4c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21c4e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21c3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21c31b0"/>
        <function-ref name="get" scoped="" ref="0x7f73c21c3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21c34d0"/>
        <function-ref name="set" scoped="" ref="0x7f73c21c3660"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21c37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f73c21c9020" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f73c21c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21c93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21c9530"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21c96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21c9850"/>
        <function-ref name="get" scoped="" ref="0x7f73c21c99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21c9b70"/>
        <function-ref name="set" scoped="" ref="0x7f73c21c9d00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f73c21c65d0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f73c21c65d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21c6950"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21c6ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21c6c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21c6e00"/>
        <function-ref name="get" scoped="" ref="0x7f73c21c5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21c51b0"/>
        <function-ref name="set" scoped="" ref="0x7f73c21c5340"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21c54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f73c21c3a80" loc="50:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f73c21c3a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21c3e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21c2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21c21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21c2340"/>
        <function-ref name="get" scoped="" ref="0x7f73c21c24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21c2660"/>
        <function-ref name="set" scoped="" ref="0x7f73c21c27f0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21c2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f73c21c82b0" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f73c21c82b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21c8630"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21c87c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21c8950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21c8ae0"/>
        <function-ref name="get" scoped="" ref="0x7f73c21c8c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21c8e00"/>
        <function-ref name="set" scoped="" ref="0x7f73c21c7020"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21c71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f73c21c5760" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f73c21c5760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21c5ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21c5c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21c5e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21c4020"/>
        <function-ref name="get" scoped="" ref="0x7f73c21c41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21c4340"/>
        <function-ref name="set" scoped="" ref="0x7f73c21c44d0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21c4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f73c21c2c10" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f73c21c2c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21c1020"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21c11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21c1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21c14d0"/>
        <function-ref name="get" scoped="" ref="0x7f73c21c1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21c17f0"/>
        <function-ref name="set" scoped="" ref="0x7f73c21c1980"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21c1b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c0587c90" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c0587c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c05860a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c0586230"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c05863c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c0586550"/>
        <function-ref name="get" scoped="" ref="0x7f73c05866e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c0586870"/>
        <function-ref name="set" scoped="" ref="0x7f73c0586a00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c0586b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c0584e20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c0584e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c05831c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c0583350"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c05834e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c0583670"/>
        <function-ref name="get" scoped="" ref="0x7f73c0583800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c0583990"/>
        <function-ref name="set" scoped="" ref="0x7f73c0583b20"/>
        <function-ref name="clr" scoped="" ref="0x7f73c0583cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c05800a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c05800a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c0580420"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c05805b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c0580740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c05808d0"/>
        <function-ref name="get" scoped="" ref="0x7f73c0580a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c0580bf0"/>
        <function-ref name="set" scoped="" ref="0x7f73c0580d80"/>
        <function-ref name="clr" scoped="" ref="0x7f73c057f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c057d3f0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c057d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c057d770"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c057d900"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c057da90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c057dc20"/>
        <function-ref name="get" scoped="" ref="0x7f73c057ddb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c057c020"/>
        <function-ref name="set" scoped="" ref="0x7f73c057c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c057c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c057a6d0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c057a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c057aa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c057abe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c057ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c0579020"/>
        <function-ref name="get" scoped="" ref="0x7f73c05791b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c0579340"/>
        <function-ref name="set" scoped="" ref="0x7f73c05794d0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c0579660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c05779b0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c05779b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c0577d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c0576020"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c05761b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c0576340"/>
        <function-ref name="get" scoped="" ref="0x7f73c05764d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c0576660"/>
        <function-ref name="set" scoped="" ref="0x7f73c05767f0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c0576980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c056fe20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c056fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c056e1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c056e350"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c056e4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c056e670"/>
        <function-ref name="get" scoped="" ref="0x7f73c056e800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c056e990"/>
        <function-ref name="set" scoped="" ref="0x7f73c056eb20"/>
        <function-ref name="clr" scoped="" ref="0x7f73c056ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c056b0a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c056b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c056b420"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c056b5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c056b740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c056b8d0"/>
        <function-ref name="get" scoped="" ref="0x7f73c056ba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c056bbf0"/>
        <function-ref name="set" scoped="" ref="0x7f73c056bd80"/>
        <function-ref name="clr" scoped="" ref="0x7f73c056a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f73c21b8760" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f73c21b8760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21b8ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21b8c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21b8e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21b7020"/>
        <function-ref name="get" scoped="" ref="0x7f73c21b71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21b7340"/>
        <function-ref name="set" scoped="" ref="0x7f73c21b74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21b7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f73c21b5c10" loc="49:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f73c21b5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21b4020"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21b41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21b4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21b44d0"/>
        <function-ref name="get" scoped="" ref="0x7f73c21b4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21b47f0"/>
        <function-ref name="set" scoped="" ref="0x7f73c21b4980"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21b4b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f73c21ba3f0" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f73c21ba3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21ba770"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21ba900"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21baa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21bac20"/>
        <function-ref name="get" scoped="" ref="0x7f73c21badb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21b9020"/>
        <function-ref name="set" scoped="" ref="0x7f73c21b91b0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21b9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f73c21b78f0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f73c21b78f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21b7c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21b7e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21b6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21b61b0"/>
        <function-ref name="get" scoped="" ref="0x7f73c21b6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21b64d0"/>
        <function-ref name="set" scoped="" ref="0x7f73c21b6660"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21b67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f73c21b4da0" loc="50:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f73c21b4da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21b3180"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21b3310"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21b34a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21b3630"/>
        <function-ref name="get" scoped="" ref="0x7f73c21b37c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21b3950"/>
        <function-ref name="set" scoped="" ref="0x7f73c21b3ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21b3c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f73c21b95d0" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f73c21b95d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21b9950"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21b9ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21b9c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21b9e00"/>
        <function-ref name="get" scoped="" ref="0x7f73c21b8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21b81b0"/>
        <function-ref name="set" scoped="" ref="0x7f73c21b8340"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21b84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f73c21b6a80" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f73c21b6a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21b6e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21b5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21b51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21b5340"/>
        <function-ref name="get" scoped="" ref="0x7f73c21b54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21b5660"/>
        <function-ref name="set" scoped="" ref="0x7f73c21b57f0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21b5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f73c21b2020" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f73c21b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21b23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21b2530"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21b26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21b2850"/>
        <function-ref name="get" scoped="" ref="0x7f73c21b29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21b2b70"/>
        <function-ref name="set" scoped="" ref="0x7f73c21b2d00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c0512c90" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c0512c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c05110a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c0511230"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c05113c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c0511550"/>
        <function-ref name="get" scoped="" ref="0x7f73c05116e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c0511870"/>
        <function-ref name="set" scoped="" ref="0x7f73c0511a00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c0511b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c050fe20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c050fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c050e1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c050e350"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c050e4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c050e670"/>
        <function-ref name="get" scoped="" ref="0x7f73c050e800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c050e990"/>
        <function-ref name="set" scoped="" ref="0x7f73c050eb20"/>
        <function-ref name="clr" scoped="" ref="0x7f73c050ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c050b0a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c050b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c050b420"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c050b5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c050b740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c050b8d0"/>
        <function-ref name="get" scoped="" ref="0x7f73c050ba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c050bbf0"/>
        <function-ref name="set" scoped="" ref="0x7f73c050bd80"/>
        <function-ref name="clr" scoped="" ref="0x7f73c050a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c05083f0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c05083f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c0508770"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c0508900"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c0508a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c0508c20"/>
        <function-ref name="get" scoped="" ref="0x7f73c0508db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c0507020"/>
        <function-ref name="set" scoped="" ref="0x7f73c05071b0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c0507340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c05056d0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c05056d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c0505a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c0505be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c0505d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c0504020"/>
        <function-ref name="get" scoped="" ref="0x7f73c05041b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c0504340"/>
        <function-ref name="set" scoped="" ref="0x7f73c05044d0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c0504660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c05029b0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c05029b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c0502d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c0501020"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c05011b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c0501340"/>
        <function-ref name="get" scoped="" ref="0x7f73c05014d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c0501660"/>
        <function-ref name="set" scoped="" ref="0x7f73c05017f0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c0501980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c04ffe20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c04ffe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c04fe1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c04fe350"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c04fe4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c04fe670"/>
        <function-ref name="get" scoped="" ref="0x7f73c04fe800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c04fe990"/>
        <function-ref name="set" scoped="" ref="0x7f73c04feb20"/>
        <function-ref name="clr" scoped="" ref="0x7f73c04fecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c04fb0a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c04fb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c04fb420"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c04fb5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c04fb740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c04fb8d0"/>
        <function-ref name="get" scoped="" ref="0x7f73c04fba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c04fbbf0"/>
        <function-ref name="set" scoped="" ref="0x7f73c04fbd80"/>
        <function-ref name="clr" scoped="" ref="0x7f73c04fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f73c21a9a80" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f73c21a9a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21a9e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21a8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21a81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21a8340"/>
        <function-ref name="get" scoped="" ref="0x7f73c21a84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21a8660"/>
        <function-ref name="set" scoped="" ref="0x7f73c21a87f0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21a8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f73c21a5020" loc="49:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f73c21a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21a53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21a5530"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21a56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21a5850"/>
        <function-ref name="get" scoped="" ref="0x7f73c21a59e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21a5b70"/>
        <function-ref name="set" scoped="" ref="0x7f73c21a5d00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f73c21ab7a0" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f73c21ab7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21abb20"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21abcb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21abe40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21aa020"/>
        <function-ref name="get" scoped="" ref="0x7f73c21aa1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21aa340"/>
        <function-ref name="set" scoped="" ref="0x7f73c21aa4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21aa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f73c21a8c10" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f73c21a8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21a7020"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21a71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21a7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21a74d0"/>
        <function-ref name="get" scoped="" ref="0x7f73c21a7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21a77f0"/>
        <function-ref name="set" scoped="" ref="0x7f73c21a7980"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21a7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f73c21a32b0" loc="50:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f73c21a32b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21a3630"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21a37c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21a3950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21a3ae0"/>
        <function-ref name="get" scoped="" ref="0x7f73c21a3c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21a3e00"/>
        <function-ref name="set" scoped="" ref="0x7f73c21a2020"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21a21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f73c21aa8f0" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f73c21aa8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21aac70"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21aae00"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21a9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21a91b0"/>
        <function-ref name="get" scoped="" ref="0x7f73c21a9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21a94d0"/>
        <function-ref name="set" scoped="" ref="0x7f73c21a9660"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21a97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f73c21a7da0" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f73c21a7da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21a6180"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21a6310"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21a64a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21a6630"/>
        <function-ref name="get" scoped="" ref="0x7f73c21a67c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21a6950"/>
        <function-ref name="set" scoped="" ref="0x7f73c21a6ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21a6c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f73c21a2440" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f73c21a2440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21a27c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c21a2950"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21a2ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c21a2c70"/>
        <function-ref name="get" scoped="" ref="0x7f73c21a2e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c21a1020"/>
        <function-ref name="set" scoped="" ref="0x7f73c21a11b0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c21a1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c04a3c90" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c04a3c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c04a20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c04a2230"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c04a23c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c04a2550"/>
        <function-ref name="get" scoped="" ref="0x7f73c04a26e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c04a2870"/>
        <function-ref name="set" scoped="" ref="0x7f73c04a2a00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c04a2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c04a0e20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c04a0e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c049f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c049f350"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c049f4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c049f670"/>
        <function-ref name="get" scoped="" ref="0x7f73c049f800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c049f990"/>
        <function-ref name="set" scoped="" ref="0x7f73c049fb20"/>
        <function-ref name="clr" scoped="" ref="0x7f73c049fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c04980a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c04980a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c0498420"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c04985b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c0498740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c04988d0"/>
        <function-ref name="get" scoped="" ref="0x7f73c0498a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c0498bf0"/>
        <function-ref name="set" scoped="" ref="0x7f73c0498d80"/>
        <function-ref name="clr" scoped="" ref="0x7f73c0497020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c04953f0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c04953f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c0495770"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c0495900"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c0495a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c0495c20"/>
        <function-ref name="get" scoped="" ref="0x7f73c0495db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c0494020"/>
        <function-ref name="set" scoped="" ref="0x7f73c04941b0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c0494340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c04926d0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c04926d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c0492a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c0492be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c0492d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c0491020"/>
        <function-ref name="get" scoped="" ref="0x7f73c04911b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c0491340"/>
        <function-ref name="set" scoped="" ref="0x7f73c04914d0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c0491660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c048f9b0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c048f9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c048fd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c048e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c048e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c048e340"/>
        <function-ref name="get" scoped="" ref="0x7f73c048e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c048e660"/>
        <function-ref name="set" scoped="" ref="0x7f73c048e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c048e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c048ce20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c048ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c048b1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c048b350"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c048b4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c048b670"/>
        <function-ref name="get" scoped="" ref="0x7f73c048b800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c048b990"/>
        <function-ref name="set" scoped="" ref="0x7f73c048bb20"/>
        <function-ref name="clr" scoped="" ref="0x7f73c048bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c04880a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c04880a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c0488420"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c04885b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c0488740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c04888d0"/>
        <function-ref name="get" scoped="" ref="0x7f73c0488a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c0488bf0"/>
        <function-ref name="set" scoped="" ref="0x7f73c0488d80"/>
        <function-ref name="clr" scoped="" ref="0x7f73c0487020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c219ba20" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c219ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c219bda0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c217d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c217d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c217d340"/>
        <function-ref name="get" scoped="" ref="0x7f73c217d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c217d660"/>
        <function-ref name="set" scoped="" ref="0x7f73c217d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c217d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c21786d0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c21786d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c2178a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2178be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c2178d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2177020"/>
        <function-ref name="get" scoped="" ref="0x7f73c21771b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2177340"/>
        <function-ref name="set" scoped="" ref="0x7f73c21774d0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2177660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c216c160" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c216c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c216c4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c216c670"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c216c800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c216c990"/>
        <function-ref name="get" scoped="" ref="0x7f73c216cb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c216ccb0"/>
        <function-ref name="set" scoped="" ref="0x7f73c216ce40"/>
        <function-ref name="clr" scoped="" ref="0x7f73c216b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c2167c90" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c2167c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21660a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2166230"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21663c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2166550"/>
        <function-ref name="get" scoped="" ref="0x7f73c21666e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2166870"/>
        <function-ref name="set" scoped="" ref="0x7f73c2166a00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2166b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c21616d0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c21616d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c2161a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2161be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c2161d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2160020"/>
        <function-ref name="get" scoped="" ref="0x7f73c21601b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2160340"/>
        <function-ref name="set" scoped="" ref="0x7f73c21604d0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2160660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c2155160" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c2155160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21554e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2155670"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c2155800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2155990"/>
        <function-ref name="get" scoped="" ref="0x7f73c2155b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2155cb0"/>
        <function-ref name="set" scoped="" ref="0x7f73c2155e40"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2154020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c2150c90" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c2150c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c214f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c214f230"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c214f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c214f550"/>
        <function-ref name="get" scoped="" ref="0x7f73c214f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c214f870"/>
        <function-ref name="set" scoped="" ref="0x7f73c214fa00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c214fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c214a6d0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c214a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c214aa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c214abe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c214ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2149020"/>
        <function-ref name="get" scoped="" ref="0x7f73c21491b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2149340"/>
        <function-ref name="set" scoped="" ref="0x7f73c21494d0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2149660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c2145160" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c2145160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21454e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2145670"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c2145800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2145990"/>
        <function-ref name="get" scoped="" ref="0x7f73c2145b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2145cb0"/>
        <function-ref name="set" scoped="" ref="0x7f73c2145e40"/>
        <function-ref name="clr" scoped="" ref="0x7f73c213d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c2139c90" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c2139c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21380a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2138230"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21383c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2138550"/>
        <function-ref name="get" scoped="" ref="0x7f73c21386e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2138870"/>
        <function-ref name="set" scoped="" ref="0x7f73c2138a00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2138b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c21346d0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c21346d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c2134a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2134be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c2134d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2132020"/>
        <function-ref name="get" scoped="" ref="0x7f73c21321b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2132340"/>
        <function-ref name="set" scoped="" ref="0x7f73c21324d0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2132660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c212e160" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c212e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c212e4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c212e670"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c212e800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c212e990"/>
        <function-ref name="get" scoped="" ref="0x7f73c212eb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c212ecb0"/>
        <function-ref name="set" scoped="" ref="0x7f73c212ee40"/>
        <function-ref name="clr" scoped="" ref="0x7f73c212d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c2122c90" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c2122c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c21210a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c2121230"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c21213c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c2121550"/>
        <function-ref name="get" scoped="" ref="0x7f73c21216e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c2121870"/>
        <function-ref name="set" scoped="" ref="0x7f73c2121a00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c2121b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f73c211d6d0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f73c211d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c211da50"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c211dbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c211dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c211b020"/>
        <function-ref name="get" scoped="" ref="0x7f73c211b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c211b340"/>
        <function-ref name="set" scoped="" ref="0x7f73c211b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c211b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73c20bb020" loc="61:/usr/bin/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73c20bb020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f73c290fd40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f73c290fd40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c20bb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f73c20bb690" loc="62:/usr/bin/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f73c20bb690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f73c20bba10"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f73c20bbba0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f73c20bbd30"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f73c20ba020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f73c20ba1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f73c208f720" loc="60:/usr/bin/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f73c208f720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c208faa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f73c22b8dc0" loc="57:/usr/bin/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f73c22b8dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f73c2090180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f73c208f020" loc="59:/usr/bin/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f73c208f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c208f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f73c2090470" loc="58:/usr/bin/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f73c2090470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c20907f0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f73c2090980"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f73c2090b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f73c28bfe10" loc="48:/usr/bin/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f73c28bfe10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73c28d01c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f73c28d0350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f73c294e020" loc="47:/usr/bin/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f73c294e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c294e3a0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f73c294e530"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f73c294e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f73c27d2850" loc="56:/usr/bin/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f73c27d2850"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73c27d2bd0"/>
        <function-ref name="runTask" scoped="" ref="0x7f73c27d2d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f73c27d1dd0" loc="57:/usr/bin/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f73c27d1dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f73c27d0180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f73c27d38a0" loc="55:/usr/bin/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f73c27d38a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c27d3c20"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f73c27d3db0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f73c27d2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f73c27ad690" loc="88:/usr/bin/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f73c27ad690"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f73c27ada10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f73c28cea30" loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f73c28cea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f73c28cedb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f73c27b0020" loc="85:/usr/bin/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f73c27b0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f73c27b03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73c0730b40" loc="44:/usr/bin/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73c0730b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c072f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f73c072f2b0" loc="45:/usr/bin/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f73c072f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f73c072f630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f73c072f7c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f73c072f950"/>
        <function-ref name="dequeue" scoped="" ref="0x7f73c072fae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f73c072b020" loc="52:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f73c072b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f73c072b3c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f73c072b550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f73c072a0d0" loc="56:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73c072a0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f73c072a470"/>
        <function-ref name="configure" scoped="" ref="0x7f73c072a600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f73c072a890" loc="57:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f73c072a890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f73c072ac10"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f73c072ada0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f73c0729020"/>
        <function-ref name="dequeue" scoped="" ref="0x7f73c07291b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f73c072c210" loc="51:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f73c072c210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c072c5b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73c072c740"/>
        <function-ref name="request" scoped="" ref="0x7f73c072c8d0"/>
        <function-ref name="granted" scoped="" ref="0x7f73c072ca60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c072cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f73c072b7a0" loc="53:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c072b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f73c072bb20"/>
        <function-ref name="userId" scoped="" ref="0x7f73c072bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f73c0729480" loc="69:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f73c0729480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73c0729800"/>
        <function-ref name="runTask" scoped="" ref="0x7f73c0729990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f73c1fc8120" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f73c1fc8120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c1fc84a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c1fc8630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c1fc87c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f73c1fc8a50" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f73c1fc8a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c1fc8dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f73c1fcea10" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f73c1fcea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f73c1fced90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f73c2007ac0" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f73c2007ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c2007e40"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c1fcf020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c1fcf1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c1fcf340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c1fcf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7f73c1fc92e0" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f73c1fc92e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c1fc9660"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c1fc97f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c1fc9980"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c1fc9b10"/>
        <function-ref name="headerLength" scoped="" ref="0x7f73c1fc9ca0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f73c1fc9e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7f73c1fcc080" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f73c1fcc080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f73c1fcc400"/>
        <function-ref name="getDSN" scoped="" ref="0x7f73c1fcc590"/>
        <function-ref name="setFCF" scoped="" ref="0x7f73c1fcc720"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f73c1fcc8b0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f73c1fcca40"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f73c1fccbd0"/>
        <function-ref name="setDSN" scoped="" ref="0x7f73c1fccd60"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f73c1fcb020"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f73c1fcb1b0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f73c1fcb340"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f73c1fcb4d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f73c1fcb660"/>
        <function-ref name="localAddr" scoped="" ref="0x7f73c1fcb7f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f73c1fcba80"/>
        <function-ref name="localPan" scoped="" ref="0x7f73c1fcbc10"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f73c1fcbda0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f73c1fca020"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f73c1fca1b0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f73c1fca340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73c1fca4d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f73c1fca660"/>
        <function-ref name="getFCF" scoped="" ref="0x7f73c1fca7f0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f73c1fca980"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f73c1fcab10"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f73c1fcaca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f73c1fcf720" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f73c1fcf720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c1fcfaa0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c1fcfc30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c1fcfdc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c1fce020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c1fce1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f73c1fce440" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f73c1fce440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c1fce7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f73c1f7dc40" loc="69:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f73c1f7dc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c1f78020"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c1f781b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c1f78340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f73c1f785d0" loc="70:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f73c1f785d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c1f78950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f73c1f7f020" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f73c1f7f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c1f7f3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c1f7f530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c1f7f6c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c1f7f850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f73c1f7f9e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f73c1f7fb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x7f73c1f7e770" loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x7f73c1f7e770"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c1f7eaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f73c1f78be0" loc="71:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f73c1f78be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c1f77020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c1f771b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c1f77340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c1f774d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f73c1f77660"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f73c1f777f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x7f73c1f7fe00" loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x7f73c1f7fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c1f7e1c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c1f7e350"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c1f7e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f73c1f800a0" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f73c1f800a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c1f80420"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c1f805b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c1f80740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f73c1f809d0" loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f73c1f809d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c1f80d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x7f73c1f7ed80" loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x7f73c1f7ed80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c1f7d180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c1f7d310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c1f7d4a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c1f7d630"/>
        <function-ref name="headerLength" scoped="" ref="0x7f73c1f7d7c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f73c1f7d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f73c1ec9c40" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f73c1ec9c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f73c1ec8020"/>
        <function-ref name="address" scoped="" ref="0x7f73c1ec81b0"/>
        <function-ref name="destination" scoped="" ref="0x7f73c1ec8340"/>
        <function-ref name="setSource" scoped="" ref="0x7f73c1ec84d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73c1ec8660"/>
        <function-ref name="pan" scoped="" ref="0x7f73c1ec87f0"/>
        <function-ref name="setPan" scoped="" ref="0x7f73c1ec8980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73c1ec8b10"/>
        <function-ref name="localPan" scoped="" ref="0x7f73c1ec8ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f73c1ec7020" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f73c1ec7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c1ec73a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c1ec7530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c1ec76c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c1ec7850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f73c1ec79e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f73c1ec7b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7f73c1eccb20" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f73c1eccb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f73c1ecb020"/>
        <function-ref name="getDSN" scoped="" ref="0x7f73c1ecb1b0"/>
        <function-ref name="setFCF" scoped="" ref="0x7f73c1ecb340"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f73c1ecb4d0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f73c1ecb660"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f73c1ecb7f0"/>
        <function-ref name="setDSN" scoped="" ref="0x7f73c1ecb980"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f73c1ecbb10"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f73c1ecbca0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f73c1ecbe30"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f73c1eca020"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f73c1eca1b0"/>
        <function-ref name="localAddr" scoped="" ref="0x7f73c1eca340"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f73c1eca5d0"/>
        <function-ref name="localPan" scoped="" ref="0x7f73c1eca760"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f73c1eca8f0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f73c1ecaa80"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f73c1ecac10"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f73c1ecada0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73c1ec9020"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f73c1ec91b0"/>
        <function-ref name="getFCF" scoped="" ref="0x7f73c1ec9340"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f73c1ec94d0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f73c1ec9660"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f73c1ec97f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f73c1ec7e60" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f73c1ec7e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c1ec6210"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c1ec63a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c1ec6530"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c1ec66c0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f73c1ec6850"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f73c1ec69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f73c0355ab0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f73c0355ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f73c0355e30"/>
        <function-ref name="address" scoped="" ref="0x7f73c0354020"/>
        <function-ref name="destination" scoped="" ref="0x7f73c03541b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f73c0354340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73c03544d0"/>
        <function-ref name="pan" scoped="" ref="0x7f73c0354660"/>
        <function-ref name="setPan" scoped="" ref="0x7f73c03547f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73c0354980"/>
        <function-ref name="localPan" scoped="" ref="0x7f73c0354b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f73c0354d60" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f73c0354d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c0353180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c0353310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c03534a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c0353630"/>
        <function-ref name="headerLength" scoped="" ref="0x7f73c03537c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f73c0353950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7f73c03589f0" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f73c03589f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f73c0358d70"/>
        <function-ref name="getDSN" scoped="" ref="0x7f73c0357020"/>
        <function-ref name="setFCF" scoped="" ref="0x7f73c03571b0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f73c0357340"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f73c03574d0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f73c0357660"/>
        <function-ref name="setDSN" scoped="" ref="0x7f73c03577f0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f73c0357980"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f73c0357b10"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f73c0357ca0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f73c0357e30"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f73c0356020"/>
        <function-ref name="localAddr" scoped="" ref="0x7f73c03561b0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f73c0356440"/>
        <function-ref name="localPan" scoped="" ref="0x7f73c03565d0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f73c0356760"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f73c03568f0"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f73c0356a80"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f73c0356c10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73c0356da0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f73c0355020"/>
        <function-ref name="getFCF" scoped="" ref="0x7f73c03551b0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f73c0355340"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f73c03554d0"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f73c0355660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f73c0353c00" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f73c0353c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f73c0352020"/>
        <function-ref name="changed" scoped="" ref="0x7f73c03521b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f73c0352340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f73c03524d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f73c0352760" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f73c0352760"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c0352ae0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c0352c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c0352e00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c0351020"/>
        <function-ref name="headerLength" scoped="" ref="0x7f73c03511b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f73c0351340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f73c1e4b4a0" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f73c1e4b4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c1e4b820"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c1e4b9b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c1e4bb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f73c1e4bdd0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f73c1e4bdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c1e4a180"/>
        <function-ref name="header" scoped="" ref="0x7f73c1e4a310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f73c1e4d2f0" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f73c1e4d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c1e4d670"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c1e4d800"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c1e4d990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f73c1e4a5a0" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f73c1e4a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f73c1e4a920"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f73c1e4aab0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f73c1e4ac40"/>
        <function-ref name="getSender" scoped="" ref="0x7f73c1e4add0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f73c1e4dbe0" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f73c1e4dbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c1e4b020"/>
        <function-ref name="header" scoped="" ref="0x7f73c1e4b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f73c0303df0" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f73c0303df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c03021c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c0302350"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c03024e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f73c0302770" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f73c0302770"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c0302af0"/>
        <function-ref name="header" scoped="" ref="0x7f73c0302c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x7f73c02ff720" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f73c02ff720"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c02ffaa0"/>
        <function-ref name="clearAll" scoped="" ref="0x7f73c02ffc30"/>
        <function-ref name="get" scoped="" ref="0x7f73c02ffdc0"/>
        <function-ref name="set" scoped="" ref="0x7f73c02fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f73c03045c0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f73c03045c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c0304940"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c0304ad0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c0304c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x7f73c0301aa0" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f73c0301aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f73c0301e20"/>
        <function-ref name="insertNode" scoped="" ref="0x7f73c02ff020"/>
        <function-ref name="getNode" scoped="" ref="0x7f73c02ff1b0"/>
        <function-ref name="evicted" scoped="" ref="0x7f73c02ff340"/>
        <function-ref name="getIndex" scoped="" ref="0x7f73c02ff4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f73c0303020" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f73c0303020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c03033a0"/>
        <function-ref name="header" scoped="" ref="0x7f73c0303530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73c0303780" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73c0303780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c0303b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x7f73c0301020" loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7f73c0301020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f73c03013a0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f73c0301530"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f73c03016c0"/>
        <function-ref name="getSender" scoped="" ref="0x7f73c0301850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7f73c1e861c0" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f73c1e861c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f73c1e86540"/>
        <function-ref name="insertNode" scoped="" ref="0x7f73c1e866d0"/>
        <function-ref name="getNode" scoped="" ref="0x7f73c1e86860"/>
        <function-ref name="evicted" scoped="" ref="0x7f73c1e869f0"/>
        <function-ref name="getIndex" scoped="" ref="0x7f73c1e86b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7f73c1e81020" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f73c1e81020"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c1e813a0"/>
        <function-ref name="clearAll" scoped="" ref="0x7f73c1e81530"/>
        <function-ref name="get" scoped="" ref="0x7f73c1e816c0"/>
        <function-ref name="set" scoped="" ref="0x7f73c1e81850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7f73c1e85d50" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f73c1e85d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f73c1e82100"/>
        <function-ref name="insertNode" scoped="" ref="0x7f73c1e82290"/>
        <function-ref name="getNode" scoped="" ref="0x7f73c1e82420"/>
        <function-ref name="evicted" scoped="" ref="0x7f73c1e825b0"/>
        <function-ref name="getIndex" scoped="" ref="0x7f73c1e82740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73c1e85700" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73c1e85700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c1e85a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7f73c02fc020" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f73c02fc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c02fc3a0"/>
        <function-ref name="clearAll" scoped="" ref="0x7f73c02fc530"/>
        <function-ref name="get" scoped="" ref="0x7f73c02fc6c0"/>
        <function-ref name="set" scoped="" ref="0x7f73c02fc850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f73c1e367c0" loc="85:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f73c1e367c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c1e36b40"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c1e36cd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c1e36e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f73c1e35120" loc="86:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f73c1e35120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c1e354a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x7f73c1e33cb0" loc="93:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7f73c1e33cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f73c1e320a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f73c1e32230"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f73c1e323c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f73c1e45bb0" loc="77:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f73c1e45bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c1e39020"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c1e391b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c1e39340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f73c1e378b0" loc="80:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f73c1e378b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c1e37c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c1e37dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c1e36020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c1e361b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f73c1e36340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f73c1e364d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f73c1e35730" loc="87:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f73c1e35730"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c1e35ab0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c1e35c40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c1e35dd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c1e34020"/>
        <function-ref name="headerLength" scoped="" ref="0x7f73c1e341b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f73c1e34340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x7f73c1e33020" loc="92:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7f73c1e33020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f73c1e333a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f73c1e33530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f73c1e336c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f73c1e33850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f73c1e339e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f73c1e395d0" loc="78:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f73c1e395d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c1e39950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f73c1e34590" loc="88:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f73c1e34590"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f73c1e34910"/>
        <function-ref name="noAck" scoped="" ref="0x7f73c1e34aa0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f73c1e34c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f73c1e39ba0" loc="79:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f73c1e39ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f73c1e37020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f73c1e371b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f73c1e37340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f73c1e374d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f73c1e37660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f73c1e2d880" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f73c1e2d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f73c1e2dc00"/>
        <function-ref name="stopDone" scoped="" ref="0x7f73c1e2dd90"/>
        <function-ref name="start" scoped="" ref="0x7f73c1e16020"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1e161b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f73c1e118c0" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f73c1e118c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c1e11c40"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c1e11dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c1e10020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f73c1e102b0" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f73c1e102b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c1e10630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f73c1e16440" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f73c1e16440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c1e167c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c1e16950"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c1e16ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f73c1e153d0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f73c1e153d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c1e15750"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c1e158e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c1e15a70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c1e15c00"/>
        <function-ref name="headerLength" scoped="" ref="0x7f73c1e15d90"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f73c1e12020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f73c1e12270" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f73c1e12270"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f73c1e125f0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f73c1e12780"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f73c1e12910"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f73c1e12aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f73c1e12d90" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f73c1e12d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f73c1e11180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f73c1e11310"/>
        <function-ref name="start" scoped="" ref="0x7f73c1e114a0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1e11630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f73c1e16d70" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f73c1e16d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c1e15180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f73c1e108c0" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f73c1e108c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c1e10c40"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c1e10dd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c1e0e020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c1e0e1b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f73c1e0e340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f73c1e0e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f73c02d81b0" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f73c02d81b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f73c02d8530"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f73c02d86c0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f73c02d8850"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f73c02d89e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f73c1d993a0" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f73c1d993a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f73c1d99720"/>
        <function-ref name="stopDone" scoped="" ref="0x7f73c1d998b0"/>
        <function-ref name="start" scoped="" ref="0x7f73c1d99a40"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1d99bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7f73c1d96750" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f73c1d96750"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f73c1d96ad0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f73c1d96c60"/>
        <function-ref name="setChannel" scoped="" ref="0x7f73c1d96df0"/>
        <function-ref name="done" scoped="" ref="0x7f73c1d95020"/>
        <function-ref name="standby" scoped="" ref="0x7f73c1d951b0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f73c1d95340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f73c1d99e60" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f73c1d99e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c1d98210"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c1d983a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c1d98530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f73c1d95e80" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f73c1d95e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c1d94220"/>
        <function-ref name="header" scoped="" ref="0x7f73c1d943b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f73c1d987c0" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f73c1d987c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c1d98b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f73c1d95590" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f73c1d95590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c1d95910"/>
        <function-ref name="ready" scoped="" ref="0x7f73c1d95aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c1d95c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f73c1d98d90" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f73c1d98d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f73c1d96180"/>
        <function-ref name="setChannel" scoped="" ref="0x7f73c1d96310"/>
        <function-ref name="getChannel" scoped="" ref="0x7f73c1d964a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f73c02d18a0" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f73c02d18a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f73c02d1c20"/>
        <function-ref name="stopDone" scoped="" ref="0x7f73c02d1db0"/>
        <function-ref name="start" scoped="" ref="0x7f73c02d0020"/>
        <function-ref name="stop" scoped="" ref="0x7f73c02d01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7f73c02d0440" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f73c02d0440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c02d07c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7f73c02cd460" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f73c02cd460"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f73c02cd7e0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f73c02cd970"/>
        <function-ref name="setChannel" scoped="" ref="0x7f73c02cdb00"/>
        <function-ref name="done" scoped="" ref="0x7f73c02cdc90"/>
        <function-ref name="standby" scoped="" ref="0x7f73c02cde20"/>
        <function-ref name="getChannel" scoped="" ref="0x7f73c02cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f73c02d0a50" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f73c02d0a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c02d0dd0"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c02ce020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c02ce1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f73c02ca620" loc="189:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7f73c02ca620"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73c02ca9a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f73c02cab30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f73c02cb610" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f73c02cb610"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c02cb990"/>
        <function-ref name="header" scoped="" ref="0x7f73c02cbb20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x7f73c02cae00" loc="144:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x7f73c02cae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73c02c91c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f73c02c9350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f73c02ce440" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f73c02ce440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c02ce7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x7f73c02cbdf0" loc="322:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x7f73c02cbdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73c02ca1c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f73c02ca350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f73c02cccf0" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f73c02cccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c02cb0a0"/>
        <function-ref name="ready" scoped="" ref="0x7f73c02cb230"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c02cb3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f73c02cea10" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f73c02cea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f73c02ced90"/>
        <function-ref name="setChannel" scoped="" ref="0x7f73c02cd020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f73c02cd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f73c02cc270" loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f73c02cc270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f73c02cc5f0"/>
        <function-ref name="suspend" scoped="" ref="0x7f73c02cc780"/>
        <function-ref name="resume" scoped="" ref="0x7f73c02cc910"/>
        <function-ref name="run" scoped="" ref="0x7f73c02ccaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f73c1d3c520" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f73c1d3c520"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c1d3c8a0"/>
        <function-ref name="ready" scoped="" ref="0x7f73c1d3ca30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c1d3cbc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f73c1d3ce50" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f73c1d3ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c1d3a210"/>
        <function-ref name="header" scoped="" ref="0x7f73c1d3a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f73c1d3a5f0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f73c1d3a5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c1d3a970"/>
        <function-ref name="wait" scoped="" ref="0x7f73c1d3ab00"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c1d3ac90"/>
        <function-ref name="isFree" scoped="" ref="0x7f73c1d3ae20"/>
        <function-ref name="getNow" scoped="" ref="0x7f73c1d39020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f73c1d392b0" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f73c1d392b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f73c1d39630"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f73c1d397c0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f73c1d39950"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f73c1d39ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f73c1d3dce0" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f73c1d3dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c1d3c0a0"/>
        <function-ref name="header" scoped="" ref="0x7f73c1d3c230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f73c1d3d3f0" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f73c1d3d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c1d3d770"/>
        <function-ref name="ready" scoped="" ref="0x7f73c1d3d900"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c1d3da90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f73c0290820" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f73c0290820"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c0290ba0"/>
        <function-ref name="ready" scoped="" ref="0x7f73c0290d30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c028f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f73c028f2b0" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f73c028f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c028f630"/>
        <function-ref name="header" scoped="" ref="0x7f73c028f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f73c028fa10" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f73c028fa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c028fd90"/>
        <function-ref name="wait" scoped="" ref="0x7f73c028e020"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c028e1b0"/>
        <function-ref name="isFree" scoped="" ref="0x7f73c028e340"/>
        <function-ref name="getNow" scoped="" ref="0x7f73c028e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f73c028e720" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f73c028e720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f73c028eaa0"/>
        <function-ref name="rand32" scoped="" ref="0x7f73c028ec30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f73c028d020" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f73c028d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f73c028d3a0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f73c028d530"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f73c028d6c0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f73c028d850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f73c0290020" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f73c0290020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c02903a0"/>
        <function-ref name="header" scoped="" ref="0x7f73c0290530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f73c0292660" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f73c0292660"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c02929e0"/>
        <function-ref name="ready" scoped="" ref="0x7f73c0292b70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c0292d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x7f73c028db20" loc="78:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x7f73c028db20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73c028c020"/>
        <function-ref name="runTask" scoped="" ref="0x7f73c028c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f73c1d52c50" loc="46:/usr/bin/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f73c1d52c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f73c1d4f020"/>
        <function-ref name="rand32" scoped="" ref="0x7f73c1d4f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f73c1d50b70" loc="45:/usr/bin/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f73c1d50b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c1d52790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73c1d57d30" loc="44:/usr/bin/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73c1d57d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c1d530e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f73c1d4bc10" loc="48:/usr/bin/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f73c1d4bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f73c1d4a020"/>
        <function-ref name="rand32" scoped="" ref="0x7f73c1d4a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f73c1d4cac0" loc="47:/usr/bin/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f73c1d4cac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c1d4b750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73c1d4c200" loc="46:/usr/bin/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73c1d4c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c1d4c580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f73c1d08140" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f73c1d08140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c1d084c0"/>
        <function-ref name="ready" scoped="" ref="0x7f73c1d08650"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c1d087e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f73c1d08a70" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f73c1d08a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c1d08df0"/>
        <function-ref name="header" scoped="" ref="0x7f73c1d07020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f73c1d07270" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f73c1d07270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c1d075f0"/>
        <function-ref name="wait" scoped="" ref="0x7f73c1d07780"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c1d07910"/>
        <function-ref name="isFree" scoped="" ref="0x7f73c1d07aa0"/>
        <function-ref name="getNow" scoped="" ref="0x7f73c1d07c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x7f73c1d052b0" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x7f73c1d052b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c1d05630"/>
        <function-ref name="get" scoped="" ref="0x7f73c1d057c0"/>
        <function-ref name="setValue" scoped="" ref="0x7f73c1d05950"/>
        <function-ref name="set" scoped="" ref="0x7f73c1d05ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f73c1d06020" loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f73c1d06020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7f73c1d063a0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7f73c1d06530"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f73c1d066c0"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7f73c1d06850"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7f73c1d069e0"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7f73c1d06b70"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f73c1d06d00"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f73c1d05020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f73c1d09020" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f73c1d09020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c1d093a0"/>
        <function-ref name="header" scoped="" ref="0x7f73c1d09530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f73c1d345e0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f73c1d345e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c1d34960"/>
        <function-ref name="ready" scoped="" ref="0x7f73c1d34af0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c1d34c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f73c1d09780" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f73c1d09780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f73c1d09b00"/>
        <function-ref name="noAck" scoped="" ref="0x7f73c1d09c90"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f73c1d09e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f73c1cecd60" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f73c1cecd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f73c1ceb180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f73c1ceb310"/>
        <function-ref name="start" scoped="" ref="0x7f73c1ceb4a0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1ceb630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f73c1ce87c0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f73c1ce87c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f73c1ce8b40"/>
        <function-ref name="request" scoped="" ref="0x7f73c1ce8cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f73c1ce2020" loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f73c1ce2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c1ce23a0"/>
        <function-ref name="ready" scoped="" ref="0x7f73c1ce2530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c1ce26c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f73c1ce2950" loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f73c1ce2950"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c1ce2cd0"/>
        <function-ref name="header" scoped="" ref="0x7f73c1ce2e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f73c1cea840" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f73c1cea840"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f73c1ceabc0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f73c1cead50"/>
        <function-ref name="setChannel" scoped="" ref="0x7f73c1ce9020"/>
        <function-ref name="done" scoped="" ref="0x7f73c1ce91b0"/>
        <function-ref name="standby" scoped="" ref="0x7f73c1ce9340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f73c1ce94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f73c1ce7020" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f73c1ce7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c1ce73a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c1ce7530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c1ce76c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c1ce7850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f73c1ce79e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f73c1ce7b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7f73c1ce3020" loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7f73c1ce3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f73c1ce34a0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f73c1ce3630"/>
        <function-ref name="setChannel" scoped="" ref="0x7f73c1ce37c0"/>
        <function-ref name="done" scoped="" ref="0x7f73c1ce3950"/>
        <function-ref name="standby" scoped="" ref="0x7f73c1ce3ae0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f73c1ce3c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7f73c1ce7e00" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f73c1ce7e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f73c1ce61c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f73c1ce8060" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f73c1ce8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c1ce83e0"/>
        <function-ref name="header" scoped="" ref="0x7f73c1ce8570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7f73c1ce4950" loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7f73c1ce4950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c1ce4cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f73c1ce64b0" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f73c1ce64b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f73c1ce6830"/>
        <function-ref name="stopDone" scoped="" ref="0x7f73c1ce69c0"/>
        <function-ref name="start" scoped="" ref="0x7f73c1ce6b50"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1ce6ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f73c1ce18c0" loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f73c1ce18c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c1ce1c40"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c1ce1dd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c1ce0020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c1ce01b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f73c1ce0340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f73c1ce04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f73c1cea270" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f73c1cea270"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c1cea5f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f73c1ce0760" loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f73c1ce0760"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f73c1ce0ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7f73c1ce4020" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7f73c1ce4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c1ce43a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c1ce4530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c1ce46c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f73c1ce9720" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f73c1ce9720"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c1ce9aa0"/>
        <function-ref name="ready" scoped="" ref="0x7f73c1ce9c30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c1ce9dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7f73c1ce1120" loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7f73c1ce1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f73c1ce14a0"/>
        <function-ref name="request" scoped="" ref="0x7f73c1ce1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f73c1ceb880" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f73c1ceb880"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c1cebc00"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c1cebd90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c1cea020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7f73c1a4e760" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7f73c1a4e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c1a4eae0"/>
        <function-ref name="get" scoped="" ref="0x7f73c1a4ec70"/>
        <function-ref name="setValue" scoped="" ref="0x7f73c1a4ee00"/>
        <function-ref name="set" scoped="" ref="0x7f73c1a4d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f73c1a517e0" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f73c1a517e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c1a51b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c1a51cf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c1a51e80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c1a50030"/>
        <function-ref name="headerLength" scoped="" ref="0x7f73c1a501c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f73c1a50350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f73c1a4f800" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f73c1a4f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c1a4fb80"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c1a4fd10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c1a4e020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c1a4e1b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f73c1a4e340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f73c1a4e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f73c1a55bb0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f73c1a55bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f73c2703d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f73c1a53170"/>
        <function-ref name="clear" scoped="" ref="0x7f73c1a538a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f73c1a54a00"/>
        <function-ref name="set" scoped="" ref="0x7f73c1a51020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7f73c1a50760" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f73c1a50760"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f73c2703d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73c1a4f3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f73c1a59d00" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f73c1a59d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f73c1a572e0"/>
        <function-ref name="clear" scoped="" ref="0x7f73c1a57a10"/>
        <function-ref name="isValid" scoped="" ref="0x7f73c1a58b60"/>
        <function-ref name="set" scoped="" ref="0x7f73c1a55170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7f73c0235e60" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7f73c0235e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c0234210"/>
        <function-ref name="get" scoped="" ref="0x7f73c02343a0"/>
        <function-ref name="setValue" scoped="" ref="0x7f73c0234530"/>
        <function-ref name="set" scoped="" ref="0x7f73c02346c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f73c0235020" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f73c0235020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c02353a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c0235530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c02356c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c0235850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f73c02359e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f73c0235b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f73c0232cd0" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f73c0232cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c02310a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c0231230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c02313c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c0231550"/>
        <function-ref name="headerLength" scoped="" ref="0x7f73c02316e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f73c0231870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f73c02392a0" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f73c02392a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f73c2703d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f73c0238800"/>
        <function-ref name="clear" scoped="" ref="0x7f73c0237020"/>
        <function-ref name="isValid" scoped="" ref="0x7f73c02380d0"/>
        <function-ref name="set" scoped="" ref="0x7f73c0237750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7f73c0234a70" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f73c0234a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f73c2703d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73c02336f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f73c0233c40" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f73c0233c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73c02328a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f73c023d360" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f73c023d360"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f73c023c8e0"/>
        <function-ref name="clear" scoped="" ref="0x7f73c023a090"/>
        <function-ref name="isValid" scoped="" ref="0x7f73c023c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f73c023a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f73c1c75a60" loc="20:/usr/bin/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f73c1c75a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73c1c726b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f73c1c6e320" loc="46:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f73c1c6e320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73c1c6a870"/>
        <function-ref name="fired" scoped="" ref="0x7f73c1c6de40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73c1c6cc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73c1c6c780"/>
        <function-ref name="getdt" scoped="" ref="0x7f73c1c691e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f73c1c6acf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73c1c6c300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73c1c6d020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73c1c6a260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73c1c6d4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1c6d9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f73c1c697d0" loc="47:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f73c1c697d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73c1c67440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73c1c71540" loc="45:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73c1c71540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c1c718c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7f73c1c57020" loc="29:/usr/bin/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7f73c1c57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73c1c57e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73c1c56800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73c1c56340"/>
        <function-ref name="overflow" scoped="" ref="0x7f73c1c56cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73c1c5c020" loc="27:/usr/bin/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73c1c5c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c1c5c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7f73c1c5ca10" loc="28:/usr/bin/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7f73c1c5ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73c1c582a0"/>
        <function-ref name="fired" scoped="" ref="0x7f73c1c5a2a0"/>
        <function-ref name="startAt" scoped="" ref="0x7f73c1c5ac20"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73c1c5a760"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f73c1c58760"/>
        <function-ref name="start" scoped="" ref="0x7f73c1c5b890"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1c5bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f73c1b1b890" loc="61:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f73c1b1b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73c1b170d0"/>
        <function-ref name="fired" scoped="" ref="0x7f73c1b190d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f73c1b19a50"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73c1b19590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f73c1b17590"/>
        <function-ref name="start" scoped="" ref="0x7f73c1b1a6e0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1b1abf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73c1b1b080" loc="60:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73c1b1b080"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f73c290f9c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f73c290f9c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c1b1b400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f73c1b17bc0" loc="62:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f73c1b17bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73c1b16a00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73c1b154e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73c1b15020"/>
        <function-ref name="overflow" scoped="" ref="0x7f73c1b159a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7f73c01fde20" loc="66:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f73c01fde20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f73c01fb1c0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f73c01fb350"/>
        <function-ref name="getControlA" scoped="" ref="0x7f73c01fb4e0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f73c01fb670"/>
        <function-ref name="setControlB" scoped="" ref="0x7f73c01fb800"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f73c01fb990"/>
        <function-ref name="getControlB" scoped="" ref="0x7f73c01fbb20"/>
        <function-ref name="setControlA" scoped="" ref="0x7f73c01fbcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f73c020f4b0" loc="61:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f73c020f4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73c0205db0"/>
        <function-ref name="fired" scoped="" ref="0x7f73c020eda0"/>
        <function-ref name="startAt" scoped="" ref="0x7f73c0205760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73c02052a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f73c02042a0"/>
        <function-ref name="start" scoped="" ref="0x7f73c020e3d0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c020e8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73c0210c20" loc="60:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73c0210c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c020f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f73c02048d0" loc="62:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f73c02048d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73c0203780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73c0202150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73c0203c40"/>
        <function-ref name="overflow" scoped="" ref="0x7f73c0202610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7f73c01f7450" loc="68:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f73c01f7450"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f73c01f77d0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f73c01f7960"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f73c01f7af0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f73c01f7c80"/>
        <function-ref name="countBusy" scoped="" ref="0x7f73c01f7e10"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f73c01f6020"/>
        <function-ref name="getAssr" scoped="" ref="0x7f73c01f61b0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f73c01f6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7f73c01fa0a0" loc="67:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f73c01fa0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f73c01f8a10"/>
        <function-ref name="fired" scoped="" ref="0x7f73c01f96c0"/>
        <function-ref name="get" scoped="" ref="0x7f73c01facd0"/>
        <function-ref name="reset" scoped="" ref="0x7f73c01f9b80"/>
        <function-ref name="isOn" scoped="" ref="0x7f73c01f7020"/>
        <function-ref name="set" scoped="" ref="0x7f73c01f91b0"/>
        <function-ref name="start" scoped="" ref="0x7f73c01f8090"/>
        <function-ref name="stop" scoped="" ref="0x7f73c01f8550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f73c0202bc0" loc="65:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f73c0202bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f73c01fd020"/>
        <function-ref name="test" scoped="" ref="0x7f73c01fe590"/>
        <function-ref name="get" scoped="" ref="0x7f73c0200820"/>
        <function-ref name="setScale" scoped="" ref="0x7f73c01fd4e0"/>
        <function-ref name="getScale" scoped="" ref="0x7f73c01fd9f0"/>
        <function-ref name="reset" scoped="" ref="0x7f73c01ff720"/>
        <function-ref name="overflow" scoped="" ref="0x7f73c01ff260"/>
        <function-ref name="isOn" scoped="" ref="0x7f73c01fea50"/>
        <function-ref name="set" scoped="" ref="0x7f73c0200ce0"/>
        <function-ref name="start" scoped="" ref="0x7f73c01ffbe0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c01fe0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f73c1ba7020" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f73c1ba7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f73c1ba73a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f73c1ba7530"/>
        <function-ref name="getControlA" scoped="" ref="0x7f73c1ba76c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f73c1ba7850"/>
        <function-ref name="setControlB" scoped="" ref="0x7f73c1ba79e0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f73c1ba7b70"/>
        <function-ref name="getControlB" scoped="" ref="0x7f73c1ba7d00"/>
        <function-ref name="setControlA" scoped="" ref="0x7f73c1ba6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f73c1b9da40" loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f73c1b9da40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f73c1b9ddc0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f73c1b9b020"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f73c1b9b1b0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f73c1b9b340"/>
        <function-ref name="countBusy" scoped="" ref="0x7f73c1b9b4d0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f73c1b9b660"/>
        <function-ref name="getAssr" scoped="" ref="0x7f73c1b9b7f0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f73c1b9b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f73c1ba6520" loc="83:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f73c1ba6520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f73c1b9d020"/>
        <function-ref name="fired" scoped="" ref="0x7f73c1ba5b80"/>
        <function-ref name="get" scoped="" ref="0x7f73c1ba51b0"/>
        <function-ref name="reset" scoped="" ref="0x7f73c1b9e090"/>
        <function-ref name="isOn" scoped="" ref="0x7f73c1b9d4e0"/>
        <function-ref name="set" scoped="" ref="0x7f73c1ba5670"/>
        <function-ref name="start" scoped="" ref="0x7f73c1b9e550"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1b9ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f73c1bb0c70" loc="81:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f73c1bb0c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f73c1ba9020"/>
        <function-ref name="test" scoped="" ref="0x7f73c1baa610"/>
        <function-ref name="get" scoped="" ref="0x7f73c1bac8e0"/>
        <function-ref name="setScale" scoped="" ref="0x7f73c1ba94e0"/>
        <function-ref name="getScale" scoped="" ref="0x7f73c1ba99f0"/>
        <function-ref name="reset" scoped="" ref="0x7f73c1bab7a0"/>
        <function-ref name="overflow" scoped="" ref="0x7f73c1bab2e0"/>
        <function-ref name="isOn" scoped="" ref="0x7f73c1baaad0"/>
        <function-ref name="set" scoped="" ref="0x7f73c1bacda0"/>
        <function-ref name="start" scoped="" ref="0x7f73c1babc60"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1baa150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f73c1b922b0" loc="83:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f73c1b922b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f73c1b92630"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f73c1b927c0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f73c1b92950"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f73c1b92ae0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f73c1b92c70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f73c1b92e00"/>
        <function-ref name="getControlB" scoped="" ref="0x7f73c1b91020"/>
        <function-ref name="setControlA" scoped="" ref="0x7f73c1b911b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f73c1b8da70" loc="85:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f73c1b8da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f73c1b8ddf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f73c1b8c230" loc="86:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f73c1b8c230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f73c1b8c5b0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f73c1b8c740"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f73c1b8c8d0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f73c1b8ca60"/>
        <function-ref name="countBusy" scoped="" ref="0x7f73c1b8cbf0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f73c1b8cd80"/>
        <function-ref name="getAssr" scoped="" ref="0x7f73c1b8b020"/>
        <function-ref name="setAssr" scoped="" ref="0x7f73c1b8b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f73c1b916b0" loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f73c1b916b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f73c1b8d110"/>
        <function-ref name="fired" scoped="" ref="0x7f73c1b90da0"/>
        <function-ref name="get" scoped="" ref="0x7f73c1b903d0"/>
        <function-ref name="reset" scoped="" ref="0x7f73c1b8f2a0"/>
        <function-ref name="isOn" scoped="" ref="0x7f73c1b8d5d0"/>
        <function-ref name="set" scoped="" ref="0x7f73c1b90890"/>
        <function-ref name="start" scoped="" ref="0x7f73c1b8f760"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1b8fc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f73c1b97020" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f73c1b97020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f73c1b94350"/>
        <function-ref name="test" scoped="" ref="0x7f73c1b959a0"/>
        <function-ref name="get" scoped="" ref="0x7f73c1b97c50"/>
        <function-ref name="setScale" scoped="" ref="0x7f73c1b94810"/>
        <function-ref name="getScale" scoped="" ref="0x7f73c1b94d20"/>
        <function-ref name="reset" scoped="" ref="0x7f73c1b96b20"/>
        <function-ref name="overflow" scoped="" ref="0x7f73c1b96660"/>
        <function-ref name="isOn" scoped="" ref="0x7f73c1b95e60"/>
        <function-ref name="set" scoped="" ref="0x7f73c1b96150"/>
        <function-ref name="start" scoped="" ref="0x7f73c1b95020"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1b954e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f73c1ad9490" loc="74:/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7f73c1ad9490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73c1ad9810"/>
        <function-ref name="runTask" scoped="" ref="0x7f73c1ad99a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f73c1add1d0" loc="49:/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f73c1add1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73c1adab30"/>
        <function-ref name="fired" scoped="" ref="0x7f73c1adc9f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f73c1ada4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73c1ada020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f73c1ad9020"/>
        <function-ref name="start" scoped="" ref="0x7f73c1adc020"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1adc530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f73c1ae7cf0" loc="48:/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f73c1ae7cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73c1ade220"/>
        <function-ref name="fired" scoped="" ref="0x7f73c1ae57c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73c1adf590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73c1adf110"/>
        <function-ref name="getdt" scoped="" ref="0x7f73c1adeb20"/>
        <function-ref name="gett0" scoped="" ref="0x7f73c1ade6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73c1ae5c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73c1ae6940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73c1adfba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73c1ae6e10"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1ae5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f73c1a7ca00" loc="71:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7f73c1a7ca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73c1a7cd80"/>
        <function-ref name="runTask" scoped="" ref="0x7f73c1a7b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f73c1a85640" loc="49:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f73c1a85640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73c1a7dc40"/>
        <function-ref name="fired" scoped="" ref="0x7f73c1a7e1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73c1a7d020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73c1a7eae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f73c1a7c590"/>
        <function-ref name="gett0" scoped="" ref="0x7f73c1a7c110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73c1a7e660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73c1a80390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73c1a7d630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73c1a80860"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1a80d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f73c1a8b150" loc="48:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f73c1a8b150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73c1a87700"/>
        <function-ref name="fired" scoped="" ref="0x7f73c1a8ac30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73c1a88a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73c1a885b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f73c1a85090"/>
        <function-ref name="gett0" scoped="" ref="0x7f73c1a87ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73c1a88110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73c1a8bd60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73c1a870d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73c1a8a2a0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1a8a790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f73c1a79790" loc="48:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f73c1a79790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73c1a783f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f73c1a78a60" loc="49:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f73c1a78a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73c1a6d890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73c1a6c260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73c1a6dd50"/>
        <function-ref name="overflow" scoped="" ref="0x7f73c1a6c720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f73c1a652e0" loc="49:/usr/bin/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f73c1a652e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73c1a5d870"/>
        <function-ref name="fired" scoped="" ref="0x7f73c1a60e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73c1a5ec00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73c1a5e780"/>
        <function-ref name="getdt" scoped="" ref="0x7f73c1a5c1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f73c1a5dcf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73c1a5e300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73c1a60020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73c1a5d260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73c1a604f0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1a609c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f73c1a25590" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f73c1a25590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c1a25910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c1a25aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c1a25c30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c1a25dc0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f73c1a21020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f73c1a211b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f73c1a214a0" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f73c1a214a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c1a21820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c1a219b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c1a21b40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c1a21cd0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f73c1a21e60"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f73c1a20020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x7f73c1a499b0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x7f73c1a499b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c1a49d50"/>
        <function-ref name="get" scoped="" ref="0x7f73c1a25020"/>
        <function-ref name="setValue" scoped="" ref="0x7f73c1a251b0"/>
        <function-ref name="set" scoped="" ref="0x7f73c1a25340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f73c1a1e2b0" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f73c1a1e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f73c1a1e630"/>
        <function-ref name="stopDone" scoped="" ref="0x7f73c1a1e7c0"/>
        <function-ref name="start" scoped="" ref="0x7f73c1a1e950"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1a1eae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f73c1a1bb60" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f73c1a1bb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f73c1a1a020"/>
        <function-ref name="request" scoped="" ref="0x7f73c1a1a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f73c1a15440" loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f73c1a15440"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c1a157c0"/>
        <function-ref name="ready" scoped="" ref="0x7f73c1a15950"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c1a15ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f73c1a15d70" loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f73c1a15d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c1a14180"/>
        <function-ref name="header" scoped="" ref="0x7f73c1a14310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f73c1a1dc20" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f73c1a1dc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f73c1a1c020"/>
        <function-ref name="turnOn" scoped="" ref="0x7f73c1a1c1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f73c1a1c340"/>
        <function-ref name="done" scoped="" ref="0x7f73c1a1c4d0"/>
        <function-ref name="standby" scoped="" ref="0x7f73c1a1c660"/>
        <function-ref name="getChannel" scoped="" ref="0x7f73c1a1c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f73c1a1a400" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f73c1a1a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c1a1a780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c1a1a910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c1a1aaa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c1a1ac30"/>
        <function-ref name="headerLength" scoped="" ref="0x7f73c1a1adc0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f73c1a19020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7f73c1a16410" loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7f73c1a16410"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f73c1a16890"/>
        <function-ref name="turnOn" scoped="" ref="0x7f73c1a16a20"/>
        <function-ref name="setChannel" scoped="" ref="0x7f73c1a16bb0"/>
        <function-ref name="done" scoped="" ref="0x7f73c1a16d40"/>
        <function-ref name="standby" scoped="" ref="0x7f73c1a15020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f73c1a151b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7f73c1a192b0" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f73c1a192b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f73c1a19630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f73c1a1b400" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f73c1a1b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c1a1b780"/>
        <function-ref name="header" scoped="" ref="0x7f73c1a1b910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7f73c1a17d70" loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7f73c1a17d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c1a16180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f73c1a19920" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f73c1a19920"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f73c1a19ca0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f73c1a19e30"/>
        <function-ref name="start" scoped="" ref="0x7f73c1a17020"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1a171b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f73c1a14d40" loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f73c1a14d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c1a130e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c1a13270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c1a13400"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c1a13590"/>
        <function-ref name="headerLength" scoped="" ref="0x7f73c1a13720"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f73c1a138b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f73c1a1d650" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f73c1a1d650"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c1a1d9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f73c1a13b40" loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f73c1a13b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f73c1a12020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7f73c1a17440" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7f73c1a17440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c1a177c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c1a17950"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c1a17ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f73c1a1ca40" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f73c1a1ca40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c1a1cdc0"/>
        <function-ref name="ready" scoped="" ref="0x7f73c1a1b020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c1a1b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7f73c1a145a0" loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7f73c1a145a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f73c1a14920"/>
        <function-ref name="request" scoped="" ref="0x7f73c1a14ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f73c1a1ed30" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f73c1a1ed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c1a1d0e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c1a1d270"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c1a1d400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f73c1a0a5c0" loc="45:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f73c1a0a5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f73c1a0a940"/>
        <function-ref name="request" scoped="" ref="0x7f73c1a0aad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f73c1a053b0" loc="49:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f73c1a053b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c1a00ac0"/>
        <function-ref name="get" scoped="" ref="0x7f73c1a00570"/>
        <function-ref name="isSet" scoped="" ref="0x7f73c1a00020"/>
        <function-ref name="set" scoped="" ref="0x7f73c19ff090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7f73c19ecca0" loc="64:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7f73c19ecca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c19eb0a0"/>
        <function-ref name="get" scoped="" ref="0x7f73c19eb230"/>
        <function-ref name="setValue" scoped="" ref="0x7f73c19eb3c0"/>
        <function-ref name="set" scoped="" ref="0x7f73c19eb550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f73c19f02e0" loc="61:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f73c19f02e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f73c2703d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f73c19ef840"/>
        <function-ref name="clear" scoped="" ref="0x7f73c19ee020"/>
        <function-ref name="isValid" scoped="" ref="0x7f73c19ef110"/>
        <function-ref name="set" scoped="" ref="0x7f73c19ee750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f73c1a0e610" loc="42:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f73c1a0e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f73c1a0e990"/>
        <function-ref name="turnOn" scoped="" ref="0x7f73c1a0eb20"/>
        <function-ref name="setChannel" scoped="" ref="0x7f73c1a0ecb0"/>
        <function-ref name="done" scoped="" ref="0x7f73c1a0ee40"/>
        <function-ref name="standby" scoped="" ref="0x7f73c1a0b020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f73c1a0b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f73c19ea470" loc="66:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f73c19ea470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c19ea7f0"/>
        <function-ref name="wait" scoped="" ref="0x7f73c19ea980"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c19eab10"/>
        <function-ref name="isFree" scoped="" ref="0x7f73c19eaca0"/>
        <function-ref name="getNow" scoped="" ref="0x7f73c19eae30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f73c1a08e80" loc="48:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f73c1a08e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c1a065e0"/>
        <function-ref name="get" scoped="" ref="0x7f73c1a06090"/>
        <function-ref name="isSet" scoped="" ref="0x7f73c1a07ad0"/>
        <function-ref name="set" scoped="" ref="0x7f73c1a06b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f73c1a0ad90" loc="46:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f73c1a0ad90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c1a08180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c1a08310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c1a084a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c1a08630"/>
        <function-ref name="headerLength" scoped="" ref="0x7f73c1a087c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f73c1a08950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f73c19f11f0" loc="60:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f73c19f11f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c19f1670"/>
        <function-ref name="headerLength" scoped="" ref="0x7f73c19f1800"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f73c19f1990"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f73c19f1b20"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f73c19f1cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f73c1a0bdd0" loc="44:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f73c1a0bdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c1a0a180"/>
        <function-ref name="header" scoped="" ref="0x7f73c1a0a310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f73c19f7dd0" loc="55:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f73c19f7dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f73c2703d20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f73c2702180"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73c19f36e0"/>
        <function-ref name="fired" scoped="" ref="0x7f73c19f46b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f73c19f3090"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73c19f4b70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f73c19f3ba0"/>
        <function-ref name="start" scoped="" ref="0x7f73c19f5ca0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c19f41f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f73c19ff940" loc="50:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f73c19ff940"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c19fc090"/>
        <function-ref name="get" scoped="" ref="0x7f73c19feaf0"/>
        <function-ref name="isSet" scoped="" ref="0x7f73c19fe5a0"/>
        <function-ref name="set" scoped="" ref="0x7f73c19fc5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f73c19f8a40" loc="54:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f73c19f8a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f73c2703d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73c19f76b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f73c1a0b460" loc="43:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f73c1a0b460"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c1a0b7e0"/>
        <function-ref name="ready" scoped="" ref="0x7f73c1a0b970"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c1a0bb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f73c19fce70" loc="51:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f73c19fce70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c19f95e0"/>
        <function-ref name="get" scoped="" ref="0x7f73c19f9090"/>
        <function-ref name="isSet" scoped="" ref="0x7f73c19fbad0"/>
        <function-ref name="set" scoped="" ref="0x7f73c19f9b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7f73c19eb8d0" loc="65:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f73c19eb8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c19ebc50"/>
        <function-ref name="get" scoped="" ref="0x7f73c19ebde0"/>
        <function-ref name="setValue" scoped="" ref="0x7f73c19ea020"/>
        <function-ref name="set" scoped="" ref="0x7f73c19ea1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7f73c19ec110" loc="63:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f73c19ec110"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c19ec490"/>
        <function-ref name="get" scoped="" ref="0x7f73c19ec620"/>
        <function-ref name="setValue" scoped="" ref="0x7f73c19ec7b0"/>
        <function-ref name="set" scoped="" ref="0x7f73c19ec940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f73c19f81e0" loc="52:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f73c19f81e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f73c19f8560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f73c19dd2d0" loc="52:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f73c19dd2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f73c19dd650"/>
        <function-ref name="request" scoped="" ref="0x7f73c19dd7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f73c19bcd20" loc="74:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f73c19bcd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f73c282d180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f73c19c2b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f73c19d80d0" loc="56:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f73c19d80d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c19d77f0"/>
        <function-ref name="get" scoped="" ref="0x7f73c19d72a0"/>
        <function-ref name="isSet" scoped="" ref="0x7f73c19d8d00"/>
        <function-ref name="set" scoped="" ref="0x7f73c19d7d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7f73c19b9ca0" loc="80:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7f73c19b9ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c19b80a0"/>
        <function-ref name="get" scoped="" ref="0x7f73c19b8230"/>
        <function-ref name="setValue" scoped="" ref="0x7f73c19b83c0"/>
        <function-ref name="set" scoped="" ref="0x7f73c19b8550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7f73c19e1b60" loc="47:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f73c19e1b60"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f73c290fd40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f73c290fd40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c19e0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f73c19b7780" loc="83:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f73c19b7780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f73c2703d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f73c19b5020"/>
        <function-ref name="clear" scoped="" ref="0x7f73c19b5750"/>
        <function-ref name="isValid" scoped="" ref="0x7f73c19b67c0"/>
        <function-ref name="set" scoped="" ref="0x7f73c19b5e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f73c19cb980" loc="70:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f73c19cb980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c19cbd00"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c19c6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c19c61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c19c6340"/>
        <function-ref name="get" scoped="" ref="0x7f73c19c64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c19c6660"/>
        <function-ref name="set" scoped="" ref="0x7f73c19c67f0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c19c6980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f73c19b22e0" loc="86:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f73c19b22e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c19b2660"/>
        <function-ref name="wait" scoped="" ref="0x7f73c19b27f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c19b2980"/>
        <function-ref name="isFree" scoped="" ref="0x7f73c19b2b10"/>
        <function-ref name="getNow" scoped="" ref="0x7f73c19b2ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f73c19e02e0" loc="49:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f73c19e02e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f73c19e0660"/>
        <function-ref name="turnOn" scoped="" ref="0x7f73c19e07f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f73c19e0980"/>
        <function-ref name="done" scoped="" ref="0x7f73c19e0b10"/>
        <function-ref name="standby" scoped="" ref="0x7f73c19e0ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f73c19e0e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7f73c19bd1a0" loc="75:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f73c19bd1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f73c2703d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73c19bddd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f73c19dcb90" loc="55:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f73c19dcb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c19da2e0"/>
        <function-ref name="get" scoped="" ref="0x7f73c19dbd40"/>
        <function-ref name="isSet" scoped="" ref="0x7f73c19db7f0"/>
        <function-ref name="set" scoped="" ref="0x7f73c19da830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f73c19ddaa0" loc="53:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f73c19ddaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c19dde20"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c19dc020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c19dc1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c19dc340"/>
        <function-ref name="headerLength" scoped="" ref="0x7f73c19dc4d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f73c19dc660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x7f73c19cc670" loc="69:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7f73c19cc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c19cc9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c19ccb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c19ccd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c19cb020"/>
        <function-ref name="get" scoped="" ref="0x7f73c19cb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c19cb340"/>
        <function-ref name="set" scoped="" ref="0x7f73c19cb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c19cb660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f73c19ba340" loc="77:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f73c19ba340"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c19ba6c0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f73c19ba850"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f73c19ba9e0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f73c19bab70"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f73c19bad00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f73c19dea90" loc="51:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f73c19dea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c19dee10"/>
        <function-ref name="header" scoped="" ref="0x7f73c19dd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x7f73c191a920" loc="847:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x7f73c191a920"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73c191aca0"/>
        <function-ref name="runTask" scoped="" ref="0x7f73c191ae30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f73c19d6630" loc="57:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f73c19d6630"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c19d4e70"/>
        <function-ref name="get" scoped="" ref="0x7f73c19d4920"/>
        <function-ref name="isSet" scoped="" ref="0x7f73c19d43d0"/>
        <function-ref name="set" scoped="" ref="0x7f73c19d33f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f73c19e1020" loc="46:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f73c19e1020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f73c290fd40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f73c290fd40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c19e13a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f73c19ceb50" loc="65:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f73c19ceb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c19cd020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73c19cd1b0"/>
        <function-ref name="request" scoped="" ref="0x7f73c19cd340"/>
        <function-ref name="granted" scoped="" ref="0x7f73c19cd4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c19cd660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x7f73c19cf760" loc="64:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7f73c19cf760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c19cfbe0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c19cfd70"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c19ce020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c19ce1b0"/>
        <function-ref name="get" scoped="" ref="0x7f73c19ce340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c19ce4d0"/>
        <function-ref name="set" scoped="" ref="0x7f73c19ce660"/>
        <function-ref name="clr" scoped="" ref="0x7f73c19ce7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f73c19d3c80" loc="58:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f73c19d3c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c19d03c0"/>
        <function-ref name="get" scoped="" ref="0x7f73c19d2e30"/>
        <function-ref name="isSet" scoped="" ref="0x7f73c19d28e0"/>
        <function-ref name="set" scoped="" ref="0x7f73c19d0910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f73c19de120" loc="50:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f73c19de120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c19de4a0"/>
        <function-ref name="ready" scoped="" ref="0x7f73c19de630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c19de7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x7f73c19be550" loc="72:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f73c19be550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f73c19be8d0"/>
        <function-ref name="disable" scoped="" ref="0x7f73c19bea60"/>
        <function-ref name="captured" scoped="" ref="0x7f73c19bebf0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f73c19bed80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x7f73c19c7aa0" loc="67:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f73c19c7aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f73c19c7e20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f73c19cc020"/>
        <function-ref name="splitRead" scoped="" ref="0x7f73c19cc1b0"/>
        <function-ref name="write" scoped="" ref="0x7f73c19cc340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7f73c19b88d0" loc="81:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f73c19b88d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c19b8c50"/>
        <function-ref name="get" scoped="" ref="0x7f73c19b8de0"/>
        <function-ref name="setValue" scoped="" ref="0x7f73c19b7020"/>
        <function-ref name="set" scoped="" ref="0x7f73c19b71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7f73c19b9110" loc="79:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f73c19b9110"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c19b9490"/>
        <function-ref name="get" scoped="" ref="0x7f73c19b9620"/>
        <function-ref name="setValue" scoped="" ref="0x7f73c19b97b0"/>
        <function-ref name="set" scoped="" ref="0x7f73c19b9940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f73c19cf020" loc="59:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f73c19cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f73c19cf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f73c19b36b0" loc="85:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f73c19b36b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f73c19b3a30"/>
        <function-ref name="suspend" scoped="" ref="0x7f73c19b3bc0"/>
        <function-ref name="resume" scoped="" ref="0x7f73c19b3d50"/>
        <function-ref name="run" scoped="" ref="0x7f73c19b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f73c18d27f0" loc="46:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f73c18d27f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c18d2b70"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c18d2d00"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c18d1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c18d11b0"/>
        <function-ref name="get" scoped="" ref="0x7f73c18d1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c18d14d0"/>
        <function-ref name="set" scoped="" ref="0x7f73c18d1660"/>
        <function-ref name="clr" scoped="" ref="0x7f73c18d17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x7f73c18d44e0" loc="45:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7f73c18d44e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c18d4860"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c18d49f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c18d4b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c18d4d10"/>
        <function-ref name="get" scoped="" ref="0x7f73c18d2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c18d21b0"/>
        <function-ref name="set" scoped="" ref="0x7f73c18d2340"/>
        <function-ref name="clr" scoped="" ref="0x7f73c18d24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f73c18d0ac0" loc="49:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f73c18d0ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f73c2703d20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73c18cd390"/>
        <function-ref name="fired" scoped="" ref="0x7f73c18ce360"/>
        <function-ref name="startAt" scoped="" ref="0x7f73c18cece0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73c18ce820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f73c18cd850"/>
        <function-ref name="start" scoped="" ref="0x7f73c18cf970"/>
        <function-ref name="stop" scoped="" ref="0x7f73c18cfe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x7f73c18d6b50" loc="42:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f73c18d6b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c18d5020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73c18d51b0"/>
        <function-ref name="request" scoped="" ref="0x7f73c18d5340"/>
        <function-ref name="granted" scoped="" ref="0x7f73c18d54d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c18d5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x7f73c18d9950" loc="41:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7f73c18d9950"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c18d9cd0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c18d9e60"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c18d6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c18d61b0"/>
        <function-ref name="get" scoped="" ref="0x7f73c18d6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c18d64d0"/>
        <function-ref name="set" scoped="" ref="0x7f73c18d6660"/>
        <function-ref name="clr" scoped="" ref="0x7f73c18d67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7f73c18d1b10" loc="48:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f73c18d1b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f73c18d0020"/>
        <function-ref name="disable" scoped="" ref="0x7f73c18d01b0"/>
        <function-ref name="captured" scoped="" ref="0x7f73c18d0340"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f73c18d04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f73c18d5920" loc="43:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f73c18d5920"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f73c18d5ca0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f73c18d5e30"/>
        <function-ref name="splitRead" scoped="" ref="0x7f73c18d4020"/>
        <function-ref name="write" scoped="" ref="0x7f73c18d41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f73c18cb020" loc="50:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f73c18cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f73c2703d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73c18cbc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x7f73c18ba3d0" loc="46:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x7f73c18ba3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c18ba750"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c18ba8e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c18baa70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c18bac00"/>
        <function-ref name="get" scoped="" ref="0x7f73c18bad90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c18b9020"/>
        <function-ref name="set" scoped="" ref="0x7f73c18b91b0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c18b9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x7f73c18bd7f0" loc="45:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f73c18bd7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f73c18bbe60"/>
        <function-ref name="test" scoped="" ref="0x7f73c18bb4e0"/>
        <function-ref name="get" scoped="" ref="0x7f73c18c54c0"/>
        <function-ref name="captured" scoped="" ref="0x7f73c18bc020"/>
        <function-ref name="reset" scoped="" ref="0x7f73c18bc530"/>
        <function-ref name="isOn" scoped="" ref="0x7f73c18bb9a0"/>
        <function-ref name="set" scoped="" ref="0x7f73c18c5980"/>
        <function-ref name="start" scoped="" ref="0x7f73c18bc9f0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c18bb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x7f73c18b9680" loc="47:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x7f73c18b9680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c18b9a00"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c18b9b90"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c18b9d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c18b8020"/>
        <function-ref name="get" scoped="" ref="0x7f73c18b81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c18b8340"/>
        <function-ref name="set" scoped="" ref="0x7f73c18b84d0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c18b8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f73c18c7680" loc="40:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f73c18c7680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c18c7a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7f73c18ca9d0" loc="39:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f73c18ca9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f73c18cad50"/>
        <function-ref name="disable" scoped="" ref="0x7f73c18c7020"/>
        <function-ref name="captured" scoped="" ref="0x7f73c18c71b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f73c18c7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f73c189dae0" loc="84:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f73c189dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c189de60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c18a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f73c18a6840" loc="82:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f73c18a6840"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f73c18a6bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73c18a91f0" loc="81:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73c18a91f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c18a9570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f73c18a8020" loc="83:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f73c18a8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f73c18a83a0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f73c18a8530"/>
        <function-ref name="splitRead" scoped="" ref="0x7f73c18a86c0"/>
        <function-ref name="write" scoped="" ref="0x7f73c18a8850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f73c18a7850" loc="85:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f73c18a7850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c18a7bd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73c18a7d60"/>
        <function-ref name="request" scoped="" ref="0x7f73c18a4020"/>
        <function-ref name="granted" scoped="" ref="0x7f73c18a41b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c18a4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7f73c1856190" loc="296:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7f73c1856190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73c1856510"/>
        <function-ref name="runTask" scoped="" ref="0x7f73c18566a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f73c1898020" loc="94:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f73c1898020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c18983a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c1898530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7f73c1879430" loc="99:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7f73c1879430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c18797b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73c1879940"/>
        <function-ref name="request" scoped="" ref="0x7f73c1879ad0"/>
        <function-ref name="granted" scoped="" ref="0x7f73c1879c60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c1879df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f73c189ae00" loc="92:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f73c189ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f73c18991c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73c189a7e0" loc="91:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73c189a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c189ab60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7f73c1895020" loc="98:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7f73c1895020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f73c18953a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f73c187a980"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f73c18956c0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f73c187ab10"/>
        <function-ref name="initMaster" scoped="" ref="0x7f73c18959e0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f73c1895b70"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f73c1895d00"/>
        <function-ref name="read" scoped="" ref="0x7f73c1894020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f73c18941b0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f73c1894340"/>
        <function-ref name="setClock" scoped="" ref="0x7f73c18944d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f73c1894660"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f73c18947f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f73c1894a80"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f73c1894c10"/>
        <function-ref name="write" scoped="" ref="0x7f73c1894da0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f73c187a020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f73c187a1b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f73c187a340"/>
        <function-ref name="getClock" scoped="" ref="0x7f73c187a4d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f73c187a660"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f73c1895530"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f73c1895850"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f73c187a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f73c1899480" loc="93:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f73c1899480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f73c1899800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f73c1899990"/>
        <function-ref name="splitRead" scoped="" ref="0x7f73c1899b20"/>
        <function-ref name="write" scoped="" ref="0x7f73c1899cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f73c1898d20" loc="95:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f73c1898d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c18970e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73c1897270"/>
        <function-ref name="request" scoped="" ref="0x7f73c1897400"/>
        <function-ref name="granted" scoped="" ref="0x7f73c1897590"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c1897720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f73c1878130" loc="100:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c1878130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f73c18784b0"/>
        <function-ref name="userId" scoped="" ref="0x7f73c1878640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f73c1878920" loc="101:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f73c1878920"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f73c1878ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7f73c182a3e0" loc="76:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7f73c182a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f73c182a760"/>
        <function-ref name="sleep" scoped="" ref="0x7f73c1828ca0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f73c182aa80"/>
        <function-ref name="dataReady" scoped="" ref="0x7f73c1828e30"/>
        <function-ref name="initMaster" scoped="" ref="0x7f73c182ada0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f73c1829020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f73c18291b0"/>
        <function-ref name="read" scoped="" ref="0x7f73c1829340"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f73c18294d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f73c1829660"/>
        <function-ref name="setClock" scoped="" ref="0x7f73c18297f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f73c1829980"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f73c1829b10"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f73c1829da0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f73c1828020"/>
        <function-ref name="write" scoped="" ref="0x7f73c18281b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f73c1828340"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f73c18284d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f73c1828660"/>
        <function-ref name="getClock" scoped="" ref="0x7f73c18287f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f73c1828980"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f73c182a8f0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f73c182ac10"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f73c1828b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7f73c1815b10" loc="81:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7f73c1815b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c1814020"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c18141b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c1814340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c18144d0"/>
        <function-ref name="get" scoped="" ref="0x7f73c1814660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c18147f0"/>
        <function-ref name="set" scoped="" ref="0x7f73c1814980"/>
        <function-ref name="clr" scoped="" ref="0x7f73c1814b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7f73c1818650" loc="79:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7f73c1818650"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c18189d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c1818b60"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c1818cf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c1818e80"/>
        <function-ref name="get" scoped="" ref="0x7f73c1816030"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c18161c0"/>
        <function-ref name="set" scoped="" ref="0x7f73c1816350"/>
        <function-ref name="clr" scoped="" ref="0x7f73c18164e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7f73c1819390" loc="78:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7f73c1819390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c1819710"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c18198a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c1819a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c1819bc0"/>
        <function-ref name="get" scoped="" ref="0x7f73c1819d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c1818020"/>
        <function-ref name="set" scoped="" ref="0x7f73c18181b0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c1818340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f73c1817ac0" loc="75:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f73c1817ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f73c1817e40"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1819020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7f73c1814e50" loc="82:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7f73c1814e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f73c1813210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7f73c181d350" loc="74:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7f73c181d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f73c181d6d0"/>
        <function-ref name="sleep" scoped="" ref="0x7f73c181bca0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f73c181d9f0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f73c181be30"/>
        <function-ref name="initMaster" scoped="" ref="0x7f73c181dd10"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f73c181c020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f73c181c1b0"/>
        <function-ref name="read" scoped="" ref="0x7f73c181c340"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f73c181c4d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f73c181c660"/>
        <function-ref name="setClock" scoped="" ref="0x7f73c181c7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f73c181c980"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f73c181cb10"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f73c181cda0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f73c181b020"/>
        <function-ref name="write" scoped="" ref="0x7f73c181b1b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f73c181b340"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f73c181b4d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f73c181b660"/>
        <function-ref name="getClock" scoped="" ref="0x7f73c181b7f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f73c181b980"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f73c181d860"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f73c181db80"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f73c181bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7f73c1816800" loc="80:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7f73c1816800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c1816b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c1816d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c1815020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c18151b0"/>
        <function-ref name="get" scoped="" ref="0x7f73c1815340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c18154d0"/>
        <function-ref name="set" scoped="" ref="0x7f73c1815660"/>
        <function-ref name="clr" scoped="" ref="0x7f73c18157f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f73c17ba020" loc="86:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f73c17ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f73c17ba3c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f73c17ba550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f73c17b80d0" loc="89:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73c17b80d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f73c17b8470"/>
        <function-ref name="configure" scoped="" ref="0x7f73c17b8600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f73c17bb210" loc="85:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f73c17bb210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c17bb5b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73c17bb740"/>
        <function-ref name="request" scoped="" ref="0x7f73c17bb8d0"/>
        <function-ref name="granted" scoped="" ref="0x7f73c17bba60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c17bbbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f73c17ba7a0" loc="87:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c17ba7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f73c17bab20"/>
        <function-ref name="userId" scoped="" ref="0x7f73c17bacb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73c0146020" loc="44:/usr/bin/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73c0146020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c01463a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f73c0146630" loc="45:/usr/bin/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f73c0146630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f73c01469b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f73c0146b40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f73c0146cd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f73c0146e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f73c01423a0" loc="52:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f73c01423a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f73c0142740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f73c01428d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f73c0141590" loc="56:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73c0141590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f73c0141930"/>
        <function-ref name="configure" scoped="" ref="0x7f73c0141ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f73c0141d50" loc="57:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f73c0141d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f73c0140100"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f73c0140290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f73c0140420"/>
        <function-ref name="dequeue" scoped="" ref="0x7f73c01405b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f73c01435a0" loc="51:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f73c01435a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c0143940"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73c0143ad0"/>
        <function-ref name="request" scoped="" ref="0x7f73c0143c60"/>
        <function-ref name="granted" scoped="" ref="0x7f73c0143df0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c0142020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f73c0142b20" loc="53:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c0142b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f73c0141020"/>
        <function-ref name="userId" scoped="" ref="0x7f73c01411b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f73c0140880" loc="69:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f73c0140880"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73c0140c00"/>
        <function-ref name="runTask" scoped="" ref="0x7f73c0140d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f73c1799d80" loc="80:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f73c1799d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f73c17a1180"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f73c17a1310"/>
        <function-ref name="getControlA" scoped="" ref="0x7f73c17a14a0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f73c17a1630"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f73c17a17c0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f73c17a1950"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f73c17a1ae0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f73c17a1c70"/>
        <function-ref name="setControlC" scoped="" ref="0x7f73c17a1e00"/>
        <function-ref name="setControlA" scoped="" ref="0x7f73c17a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f73c17a0530" loc="81:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f73c17a0530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f73c17959a0"/>
        <function-ref name="test" scoped="" ref="0x7f73c1795020"/>
        <function-ref name="get" scoped="" ref="0x7f73c17981b0"/>
        <function-ref name="captured" scoped="" ref="0x7f73c1798b80"/>
        <function-ref name="reset" scoped="" ref="0x7f73c17960d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f73c17954e0"/>
        <function-ref name="set" scoped="" ref="0x7f73c1798670"/>
        <function-ref name="start" scoped="" ref="0x7f73c1796590"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1796a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f73c1794650" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f73c1794650"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f73c1790110"/>
        <function-ref name="fired" scoped="" ref="0x7f73c1792da0"/>
        <function-ref name="get" scoped="" ref="0x7f73c17923d0"/>
        <function-ref name="reset" scoped="" ref="0x7f73c17912a0"/>
        <function-ref name="isOn" scoped="" ref="0x7f73c17905d0"/>
        <function-ref name="set" scoped="" ref="0x7f73c1792890"/>
        <function-ref name="start" scoped="" ref="0x7f73c1791760"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1791c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f73c17b0b20" loc="79:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f73c17b0b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f73c17a4e60"/>
        <function-ref name="test" scoped="" ref="0x7f73c17a44e0"/>
        <function-ref name="get" scoped="" ref="0x7f73c17ad790"/>
        <function-ref name="setScale" scoped="" ref="0x7f73c17a2350"/>
        <function-ref name="getScale" scoped="" ref="0x7f73c17a2860"/>
        <function-ref name="reset" scoped="" ref="0x7f73c17a5670"/>
        <function-ref name="overflow" scoped="" ref="0x7f73c17a51b0"/>
        <function-ref name="isOn" scoped="" ref="0x7f73c17a49a0"/>
        <function-ref name="set" scoped="" ref="0x7f73c17adc50"/>
        <function-ref name="start" scoped="" ref="0x7f73c17a5b30"/>
        <function-ref name="stop" scoped="" ref="0x7f73c17a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f73c1786020" loc="80:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f73c1786020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f73c17863a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f73c1786530"/>
        <function-ref name="getControlA" scoped="" ref="0x7f73c17866c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f73c1786850"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f73c17869e0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f73c1786b70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f73c1786d00"/>
        <function-ref name="getControlB" scoped="" ref="0x7f73c1785020"/>
        <function-ref name="setControlC" scoped="" ref="0x7f73c17851b0"/>
        <function-ref name="setControlA" scoped="" ref="0x7f73c1785340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f73c177a5a0" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f73c177a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f73c1776020"/>
        <function-ref name="fired" scoped="" ref="0x7f73c1779c10"/>
        <function-ref name="get" scoped="" ref="0x7f73c1779240"/>
        <function-ref name="reset" scoped="" ref="0x7f73c1778110"/>
        <function-ref name="isOn" scoped="" ref="0x7f73c17764e0"/>
        <function-ref name="set" scoped="" ref="0x7f73c1779700"/>
        <function-ref name="start" scoped="" ref="0x7f73c17785d0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1778a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f73c1785850" loc="81:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f73c1785850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f73c177be60"/>
        <function-ref name="test" scoped="" ref="0x7f73c177b4e0"/>
        <function-ref name="get" scoped="" ref="0x7f73c177e4c0"/>
        <function-ref name="captured" scoped="" ref="0x7f73c177d020"/>
        <function-ref name="reset" scoped="" ref="0x7f73c177d530"/>
        <function-ref name="isOn" scoped="" ref="0x7f73c177b9a0"/>
        <function-ref name="set" scoped="" ref="0x7f73c177e980"/>
        <function-ref name="start" scoped="" ref="0x7f73c177d9f0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c177b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f73c1776ba0" loc="83:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f73c1776ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f73c1772550"/>
        <function-ref name="fired" scoped="" ref="0x7f73c17741f0"/>
        <function-ref name="get" scoped="" ref="0x7f73c17757f0"/>
        <function-ref name="reset" scoped="" ref="0x7f73c17746b0"/>
        <function-ref name="isOn" scoped="" ref="0x7f73c1772a10"/>
        <function-ref name="set" scoped="" ref="0x7f73c1775cb0"/>
        <function-ref name="start" scoped="" ref="0x7f73c1774b70"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1772090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7f73c1771120" loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7f73c1771120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f73c176fa90"/>
        <function-ref name="fired" scoped="" ref="0x7f73c1770770"/>
        <function-ref name="get" scoped="" ref="0x7f73c1771d50"/>
        <function-ref name="reset" scoped="" ref="0x7f73c1770c30"/>
        <function-ref name="isOn" scoped="" ref="0x7f73c176d020"/>
        <function-ref name="set" scoped="" ref="0x7f73c1770260"/>
        <function-ref name="start" scoped="" ref="0x7f73c176f110"/>
        <function-ref name="stop" scoped="" ref="0x7f73c176f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f73c178eb90" loc="79:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f73c178eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f73c1787020"/>
        <function-ref name="test" scoped="" ref="0x7f73c1789550"/>
        <function-ref name="get" scoped="" ref="0x7f73c178b7f0"/>
        <function-ref name="setScale" scoped="" ref="0x7f73c17874e0"/>
        <function-ref name="getScale" scoped="" ref="0x7f73c17879f0"/>
        <function-ref name="reset" scoped="" ref="0x7f73c178a6b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f73c178a1f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f73c1789a10"/>
        <function-ref name="set" scoped="" ref="0x7f73c178bcb0"/>
        <function-ref name="start" scoped="" ref="0x7f73c178ab70"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1789090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f73c16816e0" loc="30:/usr/bin/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f73c16816e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TOne" ref="0x7f73c27d9410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73c167d020"/>
        <function-ref name="fired" scoped="" ref="0x7f73c167e020"/>
        <function-ref name="startAt" scoped="" ref="0x7f73c167e9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73c167e4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f73c167d4e0"/>
        <function-ref name="start" scoped="" ref="0x7f73c16805b0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1680ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73c16d4b50" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73c16d4b50"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f73c290f9c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f73c290f9c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c16c8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f73c16c8410" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f73c16c8410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f73c16c4810"/>
        <function-ref name="test" scoped="" ref="0x7f73c16c5e60"/>
        <function-ref name="get" scoped="" ref="0x7f73c16c7090"/>
        <function-ref name="setScale" scoped="" ref="0x7f73c16c4cd0"/>
        <function-ref name="getScale" scoped="" ref="0x7f73c16c3260"/>
        <function-ref name="reset" scoped="" ref="0x7f73c16c5020"/>
        <function-ref name="overflow" scoped="" ref="0x7f73c16c7a60"/>
        <function-ref name="isOn" scoped="" ref="0x7f73c16c4350"/>
        <function-ref name="set" scoped="" ref="0x7f73c16c7550"/>
        <function-ref name="start" scoped="" ref="0x7f73c16c54e0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c16c59a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f73c0115220" loc="55:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f73c0115220"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f73c290f640"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f73c290f640"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TOne" ref="0x7f73c27d9410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73c0112b30"/>
        <function-ref name="fired" scoped="" ref="0x7f73c0114a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f73c01124e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73c0112020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f73c0111020"/>
        <function-ref name="start" scoped="" ref="0x7f73c0114090"/>
        <function-ref name="stop" scoped="" ref="0x7f73c01145a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7f73c010c8f0" loc="58:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f73c010c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f73c0108350"/>
        <function-ref name="fired" scoped="" ref="0x7f73c010a020"/>
        <function-ref name="get" scoped="" ref="0x7f73c010b5a0"/>
        <function-ref name="reset" scoped="" ref="0x7f73c010a4e0"/>
        <function-ref name="isOn" scoped="" ref="0x7f73c0108810"/>
        <function-ref name="set" scoped="" ref="0x7f73c010ba60"/>
        <function-ref name="start" scoped="" ref="0x7f73c010a9a0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c010ae60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7f73c0111570" loc="57:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f73c0111570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f73c010d9a0"/>
        <function-ref name="test" scoped="" ref="0x7f73c010d020"/>
        <function-ref name="get" scoped="" ref="0x7f73c01101f0"/>
        <function-ref name="setScale" scoped="" ref="0x7f73c010de60"/>
        <function-ref name="getScale" scoped="" ref="0x7f73c010c3a0"/>
        <function-ref name="reset" scoped="" ref="0x7f73c010f0d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f73c0110bc0"/>
        <function-ref name="isOn" scoped="" ref="0x7f73c010d4e0"/>
        <function-ref name="set" scoped="" ref="0x7f73c01106b0"/>
        <function-ref name="start" scoped="" ref="0x7f73c010f590"/>
        <function-ref name="stop" scoped="" ref="0x7f73c010fa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f73c16793a0" loc="39:/usr/bin/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f73c16793a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f73c282d180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73c1678020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f73c1675200" loc="24:/usr/bin/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f73c1675200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TOne" ref="0x7f73c27d9410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73c1674090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73c1674a10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73c1674550"/>
        <function-ref name="overflow" scoped="" ref="0x7f73c1672020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f73c165a020" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f73c165a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TOne" ref="0x7f73c27d9410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73c165ae30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73c1659800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73c1659340"/>
        <function-ref name="overflow" scoped="" ref="0x7f73c1659cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f73c1658280" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f73c1658280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f73c1654810"/>
        <function-ref name="test" scoped="" ref="0x7f73c1655e60"/>
        <function-ref name="get" scoped="" ref="0x7f73c1656020"/>
        <function-ref name="setScale" scoped="" ref="0x7f73c1654cd0"/>
        <function-ref name="getScale" scoped="" ref="0x7f73c1653260"/>
        <function-ref name="reset" scoped="" ref="0x7f73c1655020"/>
        <function-ref name="overflow" scoped="" ref="0x7f73c16569f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f73c1654350"/>
        <function-ref name="set" scoped="" ref="0x7f73c16564e0"/>
        <function-ref name="start" scoped="" ref="0x7f73c16554e0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c16559a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f73c162d0f0" loc="63:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f73c162d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f73c282d180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73c162c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73c162c9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73c162c4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f73c162ce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f73c164fcf0" loc="62:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f73c164fcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f73c282d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73c1630b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73c162f550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73c162f090"/>
        <function-ref name="overflow" scoped="" ref="0x7f73c162fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f73c162ab60" loc="48:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f73c162ab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f73c282d180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73c16287d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f73c1628e40" loc="49:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f73c1628e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f73c282d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73c1627ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73c1626670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73c16261b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f73c1626b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f73c161e9a0" loc="36:/usr/bin/tinyos-main/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f73c161e9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f73c282d180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f73c16177e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f73c15a6810" loc="46:/usr/bin/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f73c15a6810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f73c15a6b90"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f73c15a6d20"/>
        <function-ref name="led1On" scoped="" ref="0x7f73c15a3020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f73c15a31b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f73c15a3340"/>
        <function-ref name="get" scoped="" ref="0x7f73c15a34d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f73c15a3660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f73c15a3ca0"/>
        <function-ref name="set" scoped="" ref="0x7f73c15a37f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f73c15a3980"/>
        <function-ref name="led2On" scoped="" ref="0x7f73c15a3b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f73c159ea00" loc="50:/usr/bin/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f73c159ea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c159ed80"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c159d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c159d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c159d340"/>
        <function-ref name="get" scoped="" ref="0x7f73c159d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c159d660"/>
        <function-ref name="set" scoped="" ref="0x7f73c159d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c159d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73c15a2c40" loc="46:/usr/bin/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73c15a2c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c159f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f73c159dca0" loc="51:/usr/bin/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f73c159dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c159c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c159c230"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c159c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c159c550"/>
        <function-ref name="get" scoped="" ref="0x7f73c159c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c159c870"/>
        <function-ref name="set" scoped="" ref="0x7f73c159ca00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c159cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f73c159f2a0" loc="47:/usr/bin/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f73c159f2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f73c159f620"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f73c159f7b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f73c159f940"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f73c159fad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f73c159fc60"/>
        <function-ref name="get" scoped="" ref="0x7f73c159fdf0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f73c159e020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f73c159e660"/>
        <function-ref name="set" scoped="" ref="0x7f73c159e1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f73c159e340"/>
        <function-ref name="led2On" scoped="" ref="0x7f73c159e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f73c159b020" loc="52:/usr/bin/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f73c159b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c159b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c159b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c159b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c159b850"/>
        <function-ref name="get" scoped="" ref="0x7f73c159b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c159bb70"/>
        <function-ref name="set" scoped="" ref="0x7f73c159bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c159a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f73c157a020" loc="44:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f73c157a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c157a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c157a530"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c157a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c157a850"/>
        <function-ref name="get" scoped="" ref="0x7f73c157a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c157ab70"/>
        <function-ref name="set" scoped="" ref="0x7f73c157ad00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c1579020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f73c1579380" loc="45:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f73c1579380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c1579700"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c1579890"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c1579a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c1579bb0"/>
        <function-ref name="get" scoped="" ref="0x7f73c1579d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c1578020"/>
        <function-ref name="set" scoped="" ref="0x7f73c15781b0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c1578340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f73c1577920" loc="47:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73c1577920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c1577ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f73c15786a0" loc="46:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f73c15786a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c1578a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c1578bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c1578d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c1577020"/>
        <function-ref name="get" scoped="" ref="0x7f73c15771b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c1577340"/>
        <function-ref name="set" scoped="" ref="0x7f73c15774d0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c1577660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f73c1570bd0" loc="45:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="AntiTheftAppC.MyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f73c1570bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73c1561110"/>
        <function-ref name="fired" scoped="" ref="0x7f73c15676a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73c15654a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73c1565020"/>
        <function-ref name="getdt" scoped="" ref="0x7f73c1561a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f73c1561590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73c1567b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73c1568860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73c1565ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73c1568d30"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1567220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f73c155dbd0" loc="19:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoC.nc">
      <component-ref qname="AntiTheftAppC.PhotoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f73c155dbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f73c155c860"/>
        <function-ref name="readDone" scoped="" ref="0x7f73c155cce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f73c1556930" loc="3:/usr/bin/tinyos-main/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <component-ref qname="ArbitratedPhotoDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f73c1556930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f73c1555560"/>
        <function-ref name="readDone" scoped="" ref="0x7f73c15559e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadTemp" ref="0x7f73c154c5c0" loc="8:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadTemp" scoped="" ref="0x7f73c154c5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f73c154b200"/>
        <function-ref name="readDone" scoped="" ref="0x7f73c154b680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PhotoResource" ref="0x7f73c1551020" loc="5:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoResource" scoped="" ref="0x7f73c1551020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c15513a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73c1551530"/>
        <function-ref name="request" scoped="" ref="0x7f73c15516c0"/>
        <function-ref name="granted" scoped="" ref="0x7f73c1551850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c15519e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TempResource" ref="0x7f73c1550340" loc="6:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempResource" scoped="" ref="0x7f73c1550340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c15506c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73c1550850"/>
        <function-ref name="request" scoped="" ref="0x7f73c15509e0"/>
        <function-ref name="granted" scoped="" ref="0x7f73c1550b70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c1550d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadPhoto" ref="0x7f73c154e760" loc="7:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadPhoto" scoped="" ref="0x7f73c154e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f73c154d390"/>
        <function-ref name="readDone" scoped="" ref="0x7f73c154d810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1_Interrupt" ref="0x7f73c1536b70" loc="36:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1_Interrupt" scoped="" ref="0x7f73c1536b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c1535020"/>
        <function-ref name="disable" scoped="" ref="0x7f73c15351b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f73c1535340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f73c15354d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x7f73c152a7b0" loc="45:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x7f73c152a7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f73c152ab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x7f73c1544e20" loc="23:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x7f73c1544e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c15431c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c1543350"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c15434e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c1543670"/>
        <function-ref name="get" scoped="" ref="0x7f73c1543800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c1543990"/>
        <function-ref name="set" scoped="" ref="0x7f73c1543b20"/>
        <function-ref name="clr" scoped="" ref="0x7f73c1543cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x7f73c15404d0" loc="26:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x7f73c15404d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c1540850"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c15409e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c1540b70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c1540d00"/>
        <function-ref name="get" scoped="" ref="0x7f73c153f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c153f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f73c153f340"/>
        <function-ref name="clr" scoped="" ref="0x7f73c153f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x7f73c152cbf0" loc="48:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x7f73c152cbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f73c152b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x7f73c152ba00" loc="50:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x7f73c152ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f73c1529020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7f73c153dca0" loc="30:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7f73c153dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c153a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c153a230"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c153a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c153a550"/>
        <function-ref name="get" scoped="" ref="0x7f73c153a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c153a870"/>
        <function-ref name="set" scoped="" ref="0x7f73c153aa00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c153ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_TXD" ref="0x7f73c152e6a0" loc="42:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_TXD" scoped="" ref="0x7f73c152e6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c152ea20"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c152ebb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c152ed40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c152d020"/>
        <function-ref name="get" scoped="" ref="0x7f73c152d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c152d340"/>
        <function-ref name="set" scoped="" ref="0x7f73c152d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c152d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x7f73c1546970" loc="21:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x7f73c1546970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c1546cf0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c1546e80"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c1545030"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c15451c0"/>
        <function-ref name="get" scoped="" ref="0x7f73c1545350"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c15454e0"/>
        <function-ref name="set" scoped="" ref="0x7f73c1545670"/>
        <function-ref name="clr" scoped="" ref="0x7f73c1545800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x7f73c1542020" loc="24:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x7f73c1542020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c15423a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c1542530"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c15426c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c1542850"/>
        <function-ref name="get" scoped="" ref="0x7f73c15429e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c1542b70"/>
        <function-ref name="set" scoped="" ref="0x7f73c1542d00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c1541020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3_Interrupt" ref="0x7f73c1531560" loc="38:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3_Interrupt" scoped="" ref="0x7f73c1531560"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c15318e0"/>
        <function-ref name="disable" scoped="" ref="0x7f73c1531a70"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f73c1531c00"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f73c1531d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x7f73c152ae60" loc="46:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x7f73c152ae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f73c152c210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_RXD" ref="0x7f73c152f380" loc="41:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_RXD" scoped="" ref="0x7f73c152f380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c152f700"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c152f890"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c152fa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c152fbb0"/>
        <function-ref name="get" scoped="" ref="0x7f73c152fd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c152e020"/>
        <function-ref name="set" scoped="" ref="0x7f73c152e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c152e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x7f73c153f7e0" loc="27:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x7f73c153f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c153fb60"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c153fcf0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c153fe80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c153e030"/>
        <function-ref name="get" scoped="" ref="0x7f73c153e1c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c153e350"/>
        <function-ref name="set" scoped="" ref="0x7f73c153e4e0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c153e670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0_Interrupt" ref="0x7f73c1532d80" loc="35:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0_Interrupt" scoped="" ref="0x7f73c1532d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c1536310"/>
        <function-ref name="disable" scoped="" ref="0x7f73c15364a0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f73c1536630"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f73c15367c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x7f73c1529350" loc="51:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x7f73c1529350"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f73c15296d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7f73c1539020" loc="31:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7f73c1539020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c15393a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c1539530"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c15396c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c1539850"/>
        <function-ref name="get" scoped="" ref="0x7f73c15399e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c1539b70"/>
        <function-ref name="set" scoped="" ref="0x7f73c1539d00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c1538020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x7f73c1545b10" loc="22:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x7f73c1545b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c1544020"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c15441b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c1544340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c15444d0"/>
        <function-ref name="get" scoped="" ref="0x7f73c1544660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c15447f0"/>
        <function-ref name="set" scoped="" ref="0x7f73c1544980"/>
        <function-ref name="clr" scoped="" ref="0x7f73c1544b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x7f73c1541330" loc="25:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x7f73c1541330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c15416b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c1541840"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c15419d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c1541b60"/>
        <function-ref name="get" scoped="" ref="0x7f73c1541cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c1541e80"/>
        <function-ref name="set" scoped="" ref="0x7f73c1540030"/>
        <function-ref name="clr" scoped="" ref="0x7f73c15401c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x7f73c152c540" loc="47:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x7f73c152c540"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f73c152c8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x7f73c152b350" loc="49:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x7f73c152b350"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f73c152b6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7f73c153e990" loc="29:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7f73c153e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c153ed10"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c153d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c153d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c153d340"/>
        <function-ref name="get" scoped="" ref="0x7f73c153d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c153d660"/>
        <function-ref name="set" scoped="" ref="0x7f73c153d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c153d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2_Interrupt" ref="0x7f73c1535880" loc="37:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2_Interrupt" scoped="" ref="0x7f73c1535880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c1535c00"/>
        <function-ref name="disable" scoped="" ref="0x7f73c1535d90"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f73c1531020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f73c15311b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_CLK" ref="0x7f73c1530130" loc="40:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_CLK" scoped="" ref="0x7f73c1530130"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c15304b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c1530640"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c15307d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c1530960"/>
        <function-ref name="get" scoped="" ref="0x7f73c1530af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c1530c80"/>
        <function-ref name="set" scoped="" ref="0x7f73c1530e10"/>
        <function-ref name="clr" scoped="" ref="0x7f73c152f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x7f73c1529a00" loc="52:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x7f73c1529a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f73c1529d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x7f73c1549710" loc="20:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x7f73c1549710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c1549a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c1549c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c1549db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c1546020"/>
        <function-ref name="get" scoped="" ref="0x7f73c15461b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c1546340"/>
        <function-ref name="set" scoped="" ref="0x7f73c15464d0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c1546660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7f73c1538340" loc="32:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7f73c1538340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c15386c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c1538850"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c15389e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c1538b70"/>
        <function-ref name="get" scoped="" ref="0x7f73c1538d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c1537020"/>
        <function-ref name="set" scoped="" ref="0x7f73c15371b0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c1537340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x7f73c1527d10" loc="18:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x7f73c1527d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f73c15240e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x7f73c15231a0" loc="21:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x7f73c15231a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f73c1523520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x7f73c1522020" loc="23:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x7f73c1522020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f73c15223a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x7f73c1524410" loc="19:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x7f73c1524410"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f73c1524790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x7f73c15226d0" loc="24:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x7f73c15226d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f73c1522a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x7f73c1524ac0" loc="20:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x7f73c1524ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f73c1524e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x7f73c1523850" loc="22:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x7f73c1523850"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f73c1523bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x7f73c1522d80" loc="25:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x7f73c1522d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f73c1521180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7f73c1508b70" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7f73c1508b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c1507020"/>
        <function-ref name="fired" scoped="" ref="0x7f73c15071b0"/>
        <function-ref name="disable" scoped="" ref="0x7f73c1507340"/>
        <function-ref name="edge" scoped="" ref="0x7f73c15074d0"/>
        <function-ref name="enable" scoped="" ref="0x7f73c1507660"/>
        <function-ref name="getValue" scoped="" ref="0x7f73c15077f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7f73c1511d10" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7f73c1511d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c15100e0"/>
        <function-ref name="fired" scoped="" ref="0x7f73c1510270"/>
        <function-ref name="disable" scoped="" ref="0x7f73c1510400"/>
        <function-ref name="edge" scoped="" ref="0x7f73c1510590"/>
        <function-ref name="enable" scoped="" ref="0x7f73c1510720"/>
        <function-ref name="getValue" scoped="" ref="0x7f73c15108b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7f73c150ab70" loc="49:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7f73c150ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c1509020"/>
        <function-ref name="fired" scoped="" ref="0x7f73c15091b0"/>
        <function-ref name="disable" scoped="" ref="0x7f73c1509340"/>
        <function-ref name="edge" scoped="" ref="0x7f73c15094d0"/>
        <function-ref name="enable" scoped="" ref="0x7f73c1509660"/>
        <function-ref name="getValue" scoped="" ref="0x7f73c15097f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7f73c1507b70" loc="52:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7f73c1507b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c1506020"/>
        <function-ref name="fired" scoped="" ref="0x7f73c15061b0"/>
        <function-ref name="disable" scoped="" ref="0x7f73c1506340"/>
        <function-ref name="edge" scoped="" ref="0x7f73c15064d0"/>
        <function-ref name="enable" scoped="" ref="0x7f73c1506660"/>
        <function-ref name="getValue" scoped="" ref="0x7f73c15067f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7f73c1510c30" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7f73c1510c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c150b020"/>
        <function-ref name="fired" scoped="" ref="0x7f73c150b1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f73c150b340"/>
        <function-ref name="edge" scoped="" ref="0x7f73c150b4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f73c150b660"/>
        <function-ref name="getValue" scoped="" ref="0x7f73c150b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7f73c1509b70" loc="50:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7f73c1509b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c1508020"/>
        <function-ref name="fired" scoped="" ref="0x7f73c15081b0"/>
        <function-ref name="disable" scoped="" ref="0x7f73c1508340"/>
        <function-ref name="edge" scoped="" ref="0x7f73c15084d0"/>
        <function-ref name="enable" scoped="" ref="0x7f73c1508660"/>
        <function-ref name="getValue" scoped="" ref="0x7f73c15087f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7f73c150de20" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7f73c150de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c15111c0"/>
        <function-ref name="fired" scoped="" ref="0x7f73c1511350"/>
        <function-ref name="disable" scoped="" ref="0x7f73c15114e0"/>
        <function-ref name="edge" scoped="" ref="0x7f73c1511670"/>
        <function-ref name="enable" scoped="" ref="0x7f73c1511800"/>
        <function-ref name="getValue" scoped="" ref="0x7f73c1511990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7f73c150bb70" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7f73c150bb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c150a020"/>
        <function-ref name="fired" scoped="" ref="0x7f73c150a1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f73c150a340"/>
        <function-ref name="edge" scoped="" ref="0x7f73c150a4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f73c150a660"/>
        <function-ref name="getValue" scoped="" ref="0x7f73c150a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7f73c14ff830" loc="49:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7f73c14ff830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c14ffbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7f73c1502230" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7f73c1502230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c15025b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7f73c15018d0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7f73c15018d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c1501c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7f73c14fe020" loc="50:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7f73c14fe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c14fe3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7f73c15029b0" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7f73c15029b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c1502d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7f73c14ff0b0" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7f73c14ff0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c14ff430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7f73c1500a00" loc="43:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7f73c1500a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c1500d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7f73c1501150" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7f73c1501150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c15014d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f73c14df3f0" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f73c14df3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c14df770"/>
        <function-ref name="fired" scoped="" ref="0x7f73c14df900"/>
        <function-ref name="disable" scoped="" ref="0x7f73c14dfa90"/>
        <function-ref name="edge" scoped="" ref="0x7f73c14dfc20"/>
        <function-ref name="enable" scoped="" ref="0x7f73c14dfdb0"/>
        <function-ref name="getValue" scoped="" ref="0x7f73c14ca020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f73c14ca2f0" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f73c14ca2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c14ca670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f73c14c7260" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f73c14c7260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c14c75e0"/>
        <function-ref name="fired" scoped="" ref="0x7f73c14c7770"/>
        <function-ref name="disable" scoped="" ref="0x7f73c14c7900"/>
        <function-ref name="edge" scoped="" ref="0x7f73c14c7a90"/>
        <function-ref name="enable" scoped="" ref="0x7f73c14c7c20"/>
        <function-ref name="getValue" scoped="" ref="0x7f73c14c7db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f73c14c6100" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f73c14c6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c14c6480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f73c14b90a0" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f73c14b90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c14b9420"/>
        <function-ref name="fired" scoped="" ref="0x7f73c14b95b0"/>
        <function-ref name="disable" scoped="" ref="0x7f73c14b9740"/>
        <function-ref name="edge" scoped="" ref="0x7f73c14b98d0"/>
        <function-ref name="enable" scoped="" ref="0x7f73c14b9a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f73c14b9bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f73c14b8020" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f73c14b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c14b83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f73c14b5020" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f73c14b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c14b53a0"/>
        <function-ref name="fired" scoped="" ref="0x7f73c14b5530"/>
        <function-ref name="disable" scoped="" ref="0x7f73c14b56c0"/>
        <function-ref name="edge" scoped="" ref="0x7f73c14b5850"/>
        <function-ref name="enable" scoped="" ref="0x7f73c14b59e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f73c14b5b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f73c14b5e40" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f73c14b5e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c14b41e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f73c14b2d60" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f73c14b2d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c14b0180"/>
        <function-ref name="fired" scoped="" ref="0x7f73c14b0310"/>
        <function-ref name="disable" scoped="" ref="0x7f73c14b04a0"/>
        <function-ref name="edge" scoped="" ref="0x7f73c14b0630"/>
        <function-ref name="enable" scoped="" ref="0x7f73c14b07c0"/>
        <function-ref name="getValue" scoped="" ref="0x7f73c14b0950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f73c14b0c20" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f73c14b0c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c14af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f73c14adc90" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f73c14adc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c14ac0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f73c14ac230"/>
        <function-ref name="disable" scoped="" ref="0x7f73c14ac3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f73c14ac550"/>
        <function-ref name="enable" scoped="" ref="0x7f73c14ac6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f73c14ac870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f73c14acb40" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f73c14acb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c14ab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f73c14a9c90" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f73c14a9c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c14a80a0"/>
        <function-ref name="fired" scoped="" ref="0x7f73c14a8230"/>
        <function-ref name="disable" scoped="" ref="0x7f73c14a83c0"/>
        <function-ref name="edge" scoped="" ref="0x7f73c14a8550"/>
        <function-ref name="enable" scoped="" ref="0x7f73c14a86e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f73c14a8870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f73c14a8b40" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f73c14a8b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c14a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f73c14a4c90" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f73c14a4c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c14a30a0"/>
        <function-ref name="fired" scoped="" ref="0x7f73c14a3230"/>
        <function-ref name="disable" scoped="" ref="0x7f73c14a33c0"/>
        <function-ref name="edge" scoped="" ref="0x7f73c14a3550"/>
        <function-ref name="enable" scoped="" ref="0x7f73c14a36e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f73c14a3870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f73c14a3b40" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f73c14a3b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c14a2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7f73c14957a0" loc="9:/usr/bin/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f73c14957a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c1495b20"/>
        <function-ref name="fired" scoped="" ref="0x7f73c1495cb0"/>
        <function-ref name="disable" scoped="" ref="0x7f73c1495e40"/>
        <function-ref name="edge" scoped="" ref="0x7f73c1486020"/>
        <function-ref name="enable" scoped="" ref="0x7f73c14861b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f73c1486340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f73c1496b50" loc="8:/usr/bin/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7f73c1496b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c1495020"/>
        <function-ref name="disable" scoped="" ref="0x7f73c14951b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f73c1495340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f73c14954d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7f73c14822f0" loc="9:/usr/bin/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f73c14822f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c1482670"/>
        <function-ref name="fired" scoped="" ref="0x7f73c1482800"/>
        <function-ref name="disable" scoped="" ref="0x7f73c1482990"/>
        <function-ref name="edge" scoped="" ref="0x7f73c1482b20"/>
        <function-ref name="enable" scoped="" ref="0x7f73c1482cb0"/>
        <function-ref name="getValue" scoped="" ref="0x7f73c1482e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f73c1483680" loc="8:/usr/bin/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7f73c1483680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c1483a00"/>
        <function-ref name="disable" scoped="" ref="0x7f73c1483b90"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f73c1483d20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f73c1482020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7f73c147fc20" loc="9:/usr/bin/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f73c147fc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c147e020"/>
        <function-ref name="fired" scoped="" ref="0x7f73c147e1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f73c147e340"/>
        <function-ref name="edge" scoped="" ref="0x7f73c147e4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f73c147e660"/>
        <function-ref name="getValue" scoped="" ref="0x7f73c147e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f73c147f120" loc="8:/usr/bin/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7f73c147f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c147f4a0"/>
        <function-ref name="disable" scoped="" ref="0x7f73c147f630"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f73c147f7c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f73c147f950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7f73c147b7a0" loc="9:/usr/bin/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f73c147b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c147bb20"/>
        <function-ref name="fired" scoped="" ref="0x7f73c147bcb0"/>
        <function-ref name="disable" scoped="" ref="0x7f73c147be40"/>
        <function-ref name="edge" scoped="" ref="0x7f73c147a020"/>
        <function-ref name="enable" scoped="" ref="0x7f73c147a1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f73c147a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f73c147cb50" loc="8:/usr/bin/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7f73c147cb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c147b020"/>
        <function-ref name="disable" scoped="" ref="0x7f73c147b1b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f73c147b340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f73c147b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempAdc" ref="0x7f73c145e700" loc="17:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempP.nc">
      <component-ref qname="PhotoTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempAdc" scoped="" ref="0x7f73c145e700"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f73c145ea80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7f73c145ac10" loc="16:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempP.nc">
      <component-ref qname="PhotoTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f73c145ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f73c145e020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f73c145e1b0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f73c145e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f73c13df020" loc="92:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f73c13df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f73c13df3c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f73c13df550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f73c13decd0" loc="96:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73c13decd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f73c13dc0a0"/>
        <function-ref name="configure" scoped="" ref="0x7f73c13dc230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f73c13df7a0" loc="93:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73c13df7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c13dfb20"/>
        <function-ref name="requested" scoped="" ref="0x7f73c13dfcb0"/>
        <function-ref name="granted" scoped="" ref="0x7f73c13dfe40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c13de020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f73c13de1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f73c13e0210" loc="91:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f73c13e0210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c13e05b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73c13e0740"/>
        <function-ref name="request" scoped="" ref="0x7f73c13e08d0"/>
        <function-ref name="granted" scoped="" ref="0x7f73c13e0a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c13e0bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f73c13de400" loc="94:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c13de400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f73c13de780"/>
        <function-ref name="userId" scoped="" ref="0x7f73c13de910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73c00583b0" loc="44:/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73c00583b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c0058730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f73c00589c0" loc="45:/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f73c00589c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f73c0058d40"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f73c0057020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f73c00571b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f73c0057340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f73c0055a60" loc="55:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f73c0055a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f73c0055e00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f73c0054020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f73c0053790" loc="60:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73c0053790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f73c0053b30"/>
        <function-ref name="configure" scoped="" ref="0x7f73c0053cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f73c0051020" loc="61:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f73c0051020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f73c00513a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f73c0051530"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f73c00516c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f73c0051850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f73c0054270" loc="56:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73c0054270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c00545f0"/>
        <function-ref name="requested" scoped="" ref="0x7f73c0054780"/>
        <function-ref name="granted" scoped="" ref="0x7f73c0054910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c0054aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f73c0054c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f73c0051aa0" loc="62:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f73c0051aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f73c0051e20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f73c0050020"/>
        <function-ref name="led1On" scoped="" ref="0x7f73c00501b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f73c0050340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f73c00504d0"/>
        <function-ref name="get" scoped="" ref="0x7f73c0050660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f73c00507f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f73c0050e30"/>
        <function-ref name="set" scoped="" ref="0x7f73c0050b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f73c0050980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f73c0050ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f73c0056c80" loc="54:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f73c0056c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c00550a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73c0055230"/>
        <function-ref name="request" scoped="" ref="0x7f73c00553c0"/>
        <function-ref name="granted" scoped="" ref="0x7f73c0055550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c00556e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f73c0054e80" loc="57:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c0054e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f73c0053220"/>
        <function-ref name="userId" scoped="" ref="0x7f73c00533b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f73c004f160" loc="75:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f73c004f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73c004f4e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f73c004f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f73c13d9530" loc="92:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f73c13d9530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f73c13d98d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f73c13d9a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f73c13d7250" loc="96:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73c13d7250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f73c13d75f0"/>
        <function-ref name="configure" scoped="" ref="0x7f73c13d7780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f73c13d9cb0" loc="93:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73c13d9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c13d80a0"/>
        <function-ref name="requested" scoped="" ref="0x7f73c13d8230"/>
        <function-ref name="granted" scoped="" ref="0x7f73c13d83c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c13d8550"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f73c13d86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f73c13da790" loc="91:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f73c13da790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c13dab30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73c13dacc0"/>
        <function-ref name="request" scoped="" ref="0x7f73c13dae50"/>
        <function-ref name="granted" scoped="" ref="0x7f73c13d9020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c13d91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f73c13d8930" loc="94:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c13d8930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f73c13d8cb0"/>
        <function-ref name="userId" scoped="" ref="0x7f73c13d8e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73c001b4c0" loc="44:/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73c001b4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c001b840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f73c001bad0" loc="45:/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f73c001bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f73c001be50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f73c001a020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f73c001a1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f73c001a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f73c0017a60" loc="55:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f73c0017a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f73c0017e00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f73c0016020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f73c0015790" loc="60:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73c0015790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f73c0015b30"/>
        <function-ref name="configure" scoped="" ref="0x7f73c0015cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f73c0014020" loc="61:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f73c0014020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f73c00143a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f73c0014530"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f73c00146c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f73c0014850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f73c0016270" loc="56:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73c0016270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c00165f0"/>
        <function-ref name="requested" scoped="" ref="0x7f73c0016780"/>
        <function-ref name="granted" scoped="" ref="0x7f73c0016910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c0016aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f73c0016c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f73c0014aa0" loc="62:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f73c0014aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f73c0014e20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f73c0013020"/>
        <function-ref name="led1On" scoped="" ref="0x7f73c00131b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f73c0013340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f73c00134d0"/>
        <function-ref name="get" scoped="" ref="0x7f73c0013660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f73c00137f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f73c0013e30"/>
        <function-ref name="set" scoped="" ref="0x7f73c0013b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f73c0013980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f73c0013ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f73c0018c80" loc="54:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f73c0018c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c00170a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73c0017230"/>
        <function-ref name="request" scoped="" ref="0x7f73c00173c0"/>
        <function-ref name="granted" scoped="" ref="0x7f73c0017550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c00176e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f73c0016e80" loc="57:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c0016e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f73c0015220"/>
        <function-ref name="userId" scoped="" ref="0x7f73c00153b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f73c0012160" loc="75:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f73c0012160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73c00124e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f73c0012670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f73c13d4a60" loc="92:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f73c13d4a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f73c13d4e00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f73c13d2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f73c13d1770" loc="96:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73c13d1770"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f73c13d1b10"/>
        <function-ref name="configure" scoped="" ref="0x7f73c13d1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f73c13d2270" loc="93:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73c13d2270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c13d25f0"/>
        <function-ref name="requested" scoped="" ref="0x7f73c13d2780"/>
        <function-ref name="granted" scoped="" ref="0x7f73c13d2910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c13d2aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f73c13d2c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f73c13d5cb0" loc="91:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f73c13d5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c13d40a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73c13d4230"/>
        <function-ref name="request" scoped="" ref="0x7f73c13d43c0"/>
        <function-ref name="granted" scoped="" ref="0x7f73c13d4550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c13d46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f73c13d2e80" loc="94:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c13d2e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f73c13d1220"/>
        <function-ref name="userId" scoped="" ref="0x7f73c13d13b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73bffda080" loc="44:/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73bffda080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73bffda400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f73bffda690" loc="45:/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f73bffda690"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f73bffdaa10"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f73bffdaba0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f73bffdad30"/>
        <function-ref name="dequeue" scoped="" ref="0x7f73bffd9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f73bffd7850" loc="55:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f73bffd7850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f73bffd7bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f73bffd7d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f73bffd5590" loc="60:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73bffd5590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f73bffd5930"/>
        <function-ref name="configure" scoped="" ref="0x7f73bffd5ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f73bffd5d50" loc="61:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f73bffd5d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f73bffd4100"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f73bffd4290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f73bffd4420"/>
        <function-ref name="dequeue" scoped="" ref="0x7f73bffd45b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f73bffd6020" loc="56:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73bffd6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73bffd63a0"/>
        <function-ref name="requested" scoped="" ref="0x7f73bffd6530"/>
        <function-ref name="granted" scoped="" ref="0x7f73bffd66c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73bffd6850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f73bffd69e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f73bffd4800" loc="62:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f73bffd4800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f73bffd4b80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f73bffd4d10"/>
        <function-ref name="led1On" scoped="" ref="0x7f73bffd2020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f73bffd21b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f73bffd2340"/>
        <function-ref name="get" scoped="" ref="0x7f73bffd24d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f73bffd2660"/>
        <function-ref name="led0On" scoped="" ref="0x7f73bffd2ca0"/>
        <function-ref name="set" scoped="" ref="0x7f73bffd2980"/>
        <function-ref name="led2On" scoped="" ref="0x7f73bffd27f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f73bffd2b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f73bffd8970" loc="54:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f73bffd8970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73bffd8d10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73bffd7020"/>
        <function-ref name="request" scoped="" ref="0x7f73bffd71b0"/>
        <function-ref name="granted" scoped="" ref="0x7f73bffd7340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73bffd74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f73bffd6c30" loc="57:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73bffd6c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f73bffd5020"/>
        <function-ref name="userId" scoped="" ref="0x7f73bffd51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f73bffd1020" loc="75:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f73bffd1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73bffd13a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f73bffd1530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f73c13cd280" loc="69:/usr/bin/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f73c13cd280"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f73c13cd600"/>
        <function-ref name="stopDone" scoped="" ref="0x7f73c13cd790"/>
        <function-ref name="start" scoped="" ref="0x7f73c13cd920"/>
        <function-ref name="stop" scoped="" ref="0x7f73c13cdab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f73c13cdd00" loc="71:/usr/bin/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f73c13cdd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f73c13a00a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f73c13a02f0" loc="72:/usr/bin/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73c13a02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c13a0670"/>
        <function-ref name="requested" scoped="" ref="0x7f73c13a0800"/>
        <function-ref name="granted" scoped="" ref="0x7f73c13a0990"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c13a0b20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f73c13a0cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f73c139f020" loc="73:/usr/bin/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c139f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f73c139f3a0"/>
        <function-ref name="userId" scoped="" ref="0x7f73c139f530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f73bff1c400" loc="61:/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f73bff1c400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f73bff1c780"/>
        <function-ref name="stopDone" scoped="" ref="0x7f73bff1c910"/>
        <function-ref name="start" scoped="" ref="0x7f73bff1caa0"/>
        <function-ref name="stop" scoped="" ref="0x7f73bff1cc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f73bff1ce80" loc="63:/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f73bff1ce80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f73bff1b220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f73bff1a8c0" loc="78:/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7f73bff1a8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73bff1ac40"/>
        <function-ref name="runTask" scoped="" ref="0x7f73bff1add0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f73bff1b470" loc="64:/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73bff1b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73bff1b7f0"/>
        <function-ref name="requested" scoped="" ref="0x7f73bff1b980"/>
        <function-ref name="granted" scoped="" ref="0x7f73bff1bb10"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73bff1bca0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f73bff1be30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7f73bff19100" loc="73:/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7f73bff19100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73bff19480"/>
        <function-ref name="runTask" scoped="" ref="0x7f73bff19610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f73bff1db10" loc="60:/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f73bff1db10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f73bff1c020"/>
        <function-ref name="stop" scoped="" ref="0x7f73bff1c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f73bff1a0e0" loc="65:/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73bff1a0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f73bff1a460"/>
        <function-ref name="userId" scoped="" ref="0x7f73bff1a5f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f73c139d020" loc="69:/usr/bin/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f73c139d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f73c139d3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f73c139d530"/>
        <function-ref name="start" scoped="" ref="0x7f73c139d6c0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c139d850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f73c139daa0" loc="71:/usr/bin/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f73c139daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f73c139de20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f73c13950e0" loc="72:/usr/bin/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73c13950e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c1395460"/>
        <function-ref name="requested" scoped="" ref="0x7f73c13955f0"/>
        <function-ref name="granted" scoped="" ref="0x7f73c1395780"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c1395910"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f73c1395aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f73c1395cf0" loc="73:/usr/bin/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c1395cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f73c13940a0"/>
        <function-ref name="userId" scoped="" ref="0x7f73c1394230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f73bff05400" loc="61:/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f73bff05400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f73bff05780"/>
        <function-ref name="stopDone" scoped="" ref="0x7f73bff05910"/>
        <function-ref name="start" scoped="" ref="0x7f73bff05aa0"/>
        <function-ref name="stop" scoped="" ref="0x7f73bff05c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f73bff05e80" loc="63:/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f73bff05e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f73bff04220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f73bff038c0" loc="78:/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7f73bff038c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73bff03c40"/>
        <function-ref name="runTask" scoped="" ref="0x7f73bff03dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f73bff04470" loc="64:/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73bff04470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73bff047f0"/>
        <function-ref name="requested" scoped="" ref="0x7f73bff04980"/>
        <function-ref name="granted" scoped="" ref="0x7f73bff04b10"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73bff04ca0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f73bff04e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7f73bff01100" loc="73:/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7f73bff01100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73bff01480"/>
        <function-ref name="runTask" scoped="" ref="0x7f73bff01610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f73bff06b90" loc="60:/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f73bff06b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f73bff05020"/>
        <function-ref name="stop" scoped="" ref="0x7f73bff051b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f73bff030e0" loc="65:/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73bff030e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f73bff03460"/>
        <function-ref name="userId" scoped="" ref="0x7f73bff035f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f73c1372a10" loc="4:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f73c1372a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f73c1372d90"/>
        <function-ref name="stopDone" scoped="" ref="0x7f73c1371020"/>
        <function-ref name="start" scoped="" ref="0x7f73c13711b0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1371340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempResource" ref="0x7f73c136e020" loc="8:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempResource" scoped="" ref="0x7f73c136e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c136e3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73c136e530"/>
        <function-ref name="request" scoped="" ref="0x7f73c136e6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f73c136e850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c136e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f73c13717e0" loc="5:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f73c13717e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f73c136f480"/>
        <function-ref name="readDone" scoped="" ref="0x7f73c136f920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x7f73c135faa0" loc="32:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x7f73c135faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73c135fe20"/>
        <function-ref name="runTask" scoped="" ref="0x7f73c135e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x7f73c1361020" loc="10:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x7f73c1361020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c13613a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c1361530"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c13616c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c1361850"/>
        <function-ref name="get" scoped="" ref="0x7f73c13619e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c1361b70"/>
        <function-ref name="set" scoped="" ref="0x7f73c1361d00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c1360020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x7f73c13603d0" loc="11:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x7f73c13603d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f73c135f020"/>
        <function-ref name="readDone" scoped="" ref="0x7f73c135f4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f73c136ed50" loc="9:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f73c136ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73c1362220"/>
        <function-ref name="fired" scoped="" ref="0x7f73c13657d0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73c1364590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73c1364110"/>
        <function-ref name="getdt" scoped="" ref="0x7f73c1362b20"/>
        <function-ref name="gett0" scoped="" ref="0x7f73c13626a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73c1365c50"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73c136d980"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73c1364ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73c136de50"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1365350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f73c135c660" loc="4:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f73c135c660"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f73c135c9e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f73c135cb70"/>
        <function-ref name="start" scoped="" ref="0x7f73c135cd00"/>
        <function-ref name="stop" scoped="" ref="0x7f73c135a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempResource" ref="0x7f73c1359bf0" loc="8:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempResource" scoped="" ref="0x7f73c1359bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c1358020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73c13581b0"/>
        <function-ref name="request" scoped="" ref="0x7f73c1358340"/>
        <function-ref name="granted" scoped="" ref="0x7f73c13584d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c1358660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f73c135a4c0" loc="5:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f73c135a4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f73c1359110"/>
        <function-ref name="readDone" scoped="" ref="0x7f73c13595b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x7f73c13506d0" loc="32:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x7f73c13506d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73c1350a50"/>
        <function-ref name="runTask" scoped="" ref="0x7f73c1350be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x7f73c1353bd0" loc="10:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x7f73c1353bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c1352020"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c13521b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c1352340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c13524d0"/>
        <function-ref name="get" scoped="" ref="0x7f73c1352660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c13527f0"/>
        <function-ref name="set" scoped="" ref="0x7f73c1352980"/>
        <function-ref name="clr" scoped="" ref="0x7f73c1352b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x7f73c1351020" loc="11:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x7f73c1351020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f73c1351c10"/>
        <function-ref name="readDone" scoped="" ref="0x7f73c13500d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f73c13589d0" loc="9:/usr/bin/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f73c13589d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73c1354e80"/>
        <function-ref name="fired" scoped="" ref="0x7f73c13564a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73c1354260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73c1356da0"/>
        <function-ref name="getdt" scoped="" ref="0x7f73c13537a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f73c1353320"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73c1356920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73c13575f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73c1354870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73c1357ac0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1356020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f73c134c450" loc="45:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="PhotoTempDeviceC.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f73c134c450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73c1349a20"/>
        <function-ref name="fired" scoped="" ref="0x7f73c134a020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73c134ada0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73c134a920"/>
        <function-ref name="getdt" scoped="" ref="0x7f73c13484a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f73c1348020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73c134a4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73c134b090"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73c1349410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73c134b560"/>
        <function-ref name="stop" scoped="" ref="0x7f73c134ba30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f73c11f9950" loc="25:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73c11f9950"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f73c11f9cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f73c11f9e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f73c11fb980" loc="22:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f73c11fb980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f73c11fa5a0"/>
        <function-ref name="readDone" scoped="" ref="0x7f73c11faa20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f73c11f9060" loc="24:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f73c11f9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f73c11f93e0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f73c11f9570"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f73c11f9700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f73c133e920" loc="19:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f73c133e920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f73c133d560"/>
        <function-ref name="readDone" scoped="" ref="0x7f73c133d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f73c13308f0" loc="20:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f73c13308f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f73c13335a0"/>
        <function-ref name="readDone" scoped="" ref="0x7f73c1333a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f73c13326c0" loc="23:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f73c13326c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f73c1332a40"/>
        <function-ref name="getChannel" scoped="" ref="0x7f73c1332bd0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f73c1332d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f73c132e5e0" loc="24:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f73c132e5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c132e960"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73c132eaf0"/>
        <function-ref name="request" scoped="" ref="0x7f73c132ec80"/>
        <function-ref name="granted" scoped="" ref="0x7f73c132ee10"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c132d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f73c1327210" loc="58:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73c1327210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f73c1327590"/>
        <function-ref name="configure" scoped="" ref="0x7f73c1327720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7f73c131d420" loc="56:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f73c131d420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f73c131d7a0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f73c131d930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7f73c13235c0" loc="55:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f73c13235c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f73c1323940"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c1323ad0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f73c1323c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f73c132a210" loc="54:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f73c132a210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c132a590"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73c132a720"/>
        <function-ref name="request" scoped="" ref="0x7f73c132a8b0"/>
        <function-ref name="granted" scoped="" ref="0x7f73c132aa40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c132abd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73c131b830" loc="54:/usr/bin/tinyos-main/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73c131b830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c131bbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7f73c1319320" loc="57:/usr/bin/tinyos-main/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f73c1319320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f73c13196a0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f73c1319830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7f73c131a820" loc="56:/usr/bin/tinyos-main/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f73c131a820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f73c131aba0"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c131ad30"/>
        <function-ref name="dataReady" scoped="" ref="0x7f73c1319020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x7f73c12fb710" loc="60:/usr/bin/tinyos-main/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f73c12fb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f73c12fba90"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f73c12fbc20"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f73c12fbdb0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f73c1318020"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f73c13181b0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f73c1318340"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f73c13184d0"/>
        <function-ref name="isComplete" scoped="" ref="0x7f73c1318660"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c13187f0"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f73c1318980"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f73c1318b10"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f73c1318ca0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f73c1318e30"/>
        <function-ref name="isStarted" scoped="" ref="0x7f73c1317120"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f73c13172b0"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f73c1317440"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f73c13175d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f73c1317760"/>
        <function-ref name="dataReady" scoped="" ref="0x7f73c13178f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f73c131a020" loc="55:/usr/bin/tinyos-main/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f73c131a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f73c131a3a0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c131a530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7f73c1317be0" loc="61:/usr/bin/tinyos-main/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f73c1317be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f73c12fa020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f73c12fa1b0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f73c12fa340"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f73c12fa4d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f73c12fa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7f73c12c2080" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f73c12c2080"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f73c12c2400"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f73c12c2590"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f73c12c2720"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f73c12c28b0"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f73c12c2a40"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f73c12c2bd0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f73c12c2d60"/>
        <function-ref name="isComplete" scoped="" ref="0x7f73c12c1020"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c12c11b0"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f73c12c1340"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f73c12c14d0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f73c12c1660"/>
        <function-ref name="startConversion" scoped="" ref="0x7f73c12c17f0"/>
        <function-ref name="isStarted" scoped="" ref="0x7f73c12c1a80"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f73c12c1c10"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f73c12c1da0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f73c12c0020"/>
        <function-ref name="getValue" scoped="" ref="0x7f73c12c01b0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f73c12c0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7f73c12bc4a0" loc="48:/usr/bin/tinyos-main/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f73c12bc4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f73c12bc820"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f73c12bc9b0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f73c12bcb40"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f73c12bccd0"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f73c12bce60"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f73c12bb020"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f73c12bb1b0"/>
        <function-ref name="isComplete" scoped="" ref="0x7f73c12bb340"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c12bb4d0"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f73c12bb660"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f73c12bb7f0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f73c12bb980"/>
        <function-ref name="startConversion" scoped="" ref="0x7f73c12bbb10"/>
        <function-ref name="isStarted" scoped="" ref="0x7f73c12bbda0"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f73c12ba020"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f73c12ba1b0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f73c12ba340"/>
        <function-ref name="getValue" scoped="" ref="0x7f73c12ba4d0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f73c12ba660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f73c12ba980" loc="49:/usr/bin/tinyos-main/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f73c12ba980"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f73c12bad00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f73c127fbd0" loc="92:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f73c127fbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f73c127e020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f73c127e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f73c127d930" loc="96:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73c127d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f73c127dcd0"/>
        <function-ref name="configure" scoped="" ref="0x7f73c127de60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f73c127e400" loc="93:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73c127e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c127e780"/>
        <function-ref name="requested" scoped="" ref="0x7f73c127e910"/>
        <function-ref name="granted" scoped="" ref="0x7f73c127eaa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c127ec30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f73c127edc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f73c1280e40" loc="91:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f73c1280e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c127f210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73c127f3a0"/>
        <function-ref name="request" scoped="" ref="0x7f73c127f530"/>
        <function-ref name="granted" scoped="" ref="0x7f73c127f6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c127f850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f73c127d060" loc="94:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c127d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f73c127d3e0"/>
        <function-ref name="userId" scoped="" ref="0x7f73c127d570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73bfec3d70" loc="44:/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73bfec3d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73bfec1180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f73bfec1410" loc="45:/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f73bfec1410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f73bfec1790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f73bfec1920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f73bfec1ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f73bfec1c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f73bfebe530" loc="55:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f73bfebe530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f73bfebe8d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f73bfebea60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f73bfebc270" loc="60:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73bfebc270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f73bfebc610"/>
        <function-ref name="configure" scoped="" ref="0x7f73bfebc7a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f73bfebca30" loc="61:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f73bfebca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f73bfebcdb0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f73bfebb020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f73bfebb1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f73bfebb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f73bfebecb0" loc="56:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73bfebecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73bfebd0a0"/>
        <function-ref name="requested" scoped="" ref="0x7f73bfebd230"/>
        <function-ref name="granted" scoped="" ref="0x7f73bfebd3c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73bfebd550"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f73bfebd6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f73bfebb590" loc="62:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f73bfebb590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f73bfebb910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f73bfebbaa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f73bfebbc30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f73bfebbdc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f73bfeba020"/>
        <function-ref name="get" scoped="" ref="0x7f73bfeba1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f73bfeba340"/>
        <function-ref name="led0On" scoped="" ref="0x7f73bfeba980"/>
        <function-ref name="set" scoped="" ref="0x7f73bfeba660"/>
        <function-ref name="led2On" scoped="" ref="0x7f73bfeba4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f73bfeba7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f73bfebf740" loc="54:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f73bfebf740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73bfebfae0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73bfebfc70"/>
        <function-ref name="request" scoped="" ref="0x7f73bfebfe00"/>
        <function-ref name="granted" scoped="" ref="0x7f73bfebe020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73bfebe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f73bfebd930" loc="57:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73bfebd930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f73bfebdcb0"/>
        <function-ref name="userId" scoped="" ref="0x7f73bfebde40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f73bfebac50" loc="75:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f73bfebac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73bfeb8020"/>
        <function-ref name="runTask" scoped="" ref="0x7f73bfeb81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f73c125f400" loc="72:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f73c125f400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f73c125f780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f73c125f9d0" loc="73:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73c125f9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c125fd50"/>
        <function-ref name="requested" scoped="" ref="0x7f73c125e020"/>
        <function-ref name="granted" scoped="" ref="0x7f73c125e1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c125e340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f73c125e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f73c1279b20" loc="70:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f73c1279b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f73c125f020"/>
        <function-ref name="stop" scoped="" ref="0x7f73c125f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f73c125e720" loc="74:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c125e720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f73c125eaa0"/>
        <function-ref name="userId" scoped="" ref="0x7f73c125ec30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f73bfe86dc0" loc="62:/usr/bin/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f73bfe86dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f73bfe84180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f73bfe843d0" loc="63:/usr/bin/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73bfe843d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73bfe84750"/>
        <function-ref name="requested" scoped="" ref="0x7f73bfe848e0"/>
        <function-ref name="granted" scoped="" ref="0x7f73bfe84a70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73bfe84c00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f73bfe84d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f73bfe86660" loc="60:/usr/bin/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f73bfe86660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f73bfe869e0"/>
        <function-ref name="stop" scoped="" ref="0x7f73bfe86b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f73bfe83020" loc="64:/usr/bin/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73bfe83020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f73bfe833a0"/>
        <function-ref name="userId" scoped="" ref="0x7f73bfe83530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f73c124f5b0" loc="54:/usr/bin/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f73c124f5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f73c282d180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f73c124d420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f73c12541d0" loc="48:/usr/bin/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f73c12541d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f73c1254dc0"/>
        <function-ref name="readDone" scoped="" ref="0x7f73c12532a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f73c1252020" loc="49:/usr/bin/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f73c1252020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f73c1252c50"/>
        <function-ref name="readDone" scoped="" ref="0x7f73c1251150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f73c1250870" loc="53:/usr/bin/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f73c1250870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f73c1250bf0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f73c1250d80"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f73c124f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x7f73c12517f0" loc="52:/usr/bin/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f73c12517f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f73c1251b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c1251d00"/>
        <function-ref name="dataReady" scoped="" ref="0x7f73c1250020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x7f73c1238510" loc="104:/usr/bin/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x7f73c1238510"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73c1238890"/>
        <function-ref name="runTask" scoped="" ref="0x7f73c1238a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f73c1224c90" loc="24:/usr/bin/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f73c1224c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f73c1206940"/>
        <function-ref name="readDone" scoped="" ref="0x7f73c1206de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f73c12056d0" loc="26:/usr/bin/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f73c12056d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f73c1204390"/>
        <function-ref name="readDone" scoped="" ref="0x7f73c1204830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f73c1202020" loc="27:/usr/bin/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f73c1202020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c12023c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73c1202550"/>
        <function-ref name="request" scoped="" ref="0x7f73c12026e0"/>
        <function-ref name="granted" scoped="" ref="0x7f73c1202870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c1202a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f73c11e83e0" loc="24:/usr/bin/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f73c11e83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f73c11e7020"/>
        <function-ref name="readDone" scoped="" ref="0x7f73c11e74c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f73c11e7d50" loc="26:/usr/bin/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f73c11e7d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f73c11e5980"/>
        <function-ref name="readDone" scoped="" ref="0x7f73c11e5e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f73c11e0520" loc="27:/usr/bin/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f73c11e0520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c11e08c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73c11e0a50"/>
        <function-ref name="request" scoped="" ref="0x7f73c11e0be0"/>
        <function-ref name="granted" scoped="" ref="0x7f73c11e0d70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c11df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f73c11dabf0" loc="19:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelXStreamC.nc">
      <component-ref qname="AntiTheftAppC.AccelXStreamC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadStream" scoped="" ref="0x7f73c11dabf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f73c0f6f6f0"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f73c0f70860"/>
        <function-ref name="read" scoped="" ref="0x7f73c0f6f220"/>
        <function-ref name="readDone" scoped="" ref="0x7f73c0f6e220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStreamY" ref="0x7f73c11cfe10" loc="5:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelReadStreamP.nc">
      <component-ref qname="AccelReadStreamP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadStreamY" scoped="" ref="0x7f73c11cfe10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f73c11cc910"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f73c11cda80"/>
        <function-ref name="read" scoped="" ref="0x7f73c11cc440"/>
        <function-ref name="readDone" scoped="" ref="0x7f73c11cb440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualY" ref="0x7f73c11c5580" loc="9:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelReadStreamP.nc">
      <component-ref qname="AccelReadStreamP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualY" scoped="" ref="0x7f73c11c5580"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f73c11c3020"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f73c11c41b0"/>
        <function-ref name="read" scoped="" ref="0x7f73c11c4b20"/>
        <function-ref name="readDone" scoped="" ref="0x7f73c11c3ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStreamX" ref="0x7f73c11d4a80" loc="4:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelReadStreamP.nc">
      <component-ref qname="AccelReadStreamP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadStreamX" scoped="" ref="0x7f73c11d4a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f73c11d0560"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f73c11d16b0"/>
        <function-ref name="read" scoped="" ref="0x7f73c11d0090"/>
        <function-ref name="readDone" scoped="" ref="0x7f73c11cf090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualX" ref="0x7f73c11c9280" loc="8:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelReadStreamP.nc">
      <component-ref qname="AccelReadStreamP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualX" scoped="" ref="0x7f73c11c9280"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f73c11c8ce0"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f73c11c9e70"/>
        <function-ref name="read" scoped="" ref="0x7f73c11c8810"/>
        <function-ref name="readDone" scoped="" ref="0x7f73c11c77e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigY" ref="0x7f73c11bc3a0" loc="21:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <component-ref qname="AccelConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigY" scoped="" ref="0x7f73c11bc3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f73c11bc720"/>
        <function-ref name="getChannel" scoped="" ref="0x7f73c11bc8b0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f73c11bca40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigX" ref="0x7f73c11bd850" loc="20:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <component-ref qname="AccelConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigX" scoped="" ref="0x7f73c11bd850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f73c11bdbd0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f73c11bdd60"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f73c11bc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f73c11c0ad0" loc="19:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelConfigP.nc">
      <component-ref qname="AccelConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f73c11c0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c11c0e50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73c11bd020"/>
        <function-ref name="request" scoped="" ref="0x7f73c11bd1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f73c11bd340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c11bd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f73c11bb630" loc="17:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f73c11bb630"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f73c11bb9b0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f73c11bbb40"/>
        <function-ref name="start" scoped="" ref="0x7f73c11bbcd0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c11bbe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigY" ref="0x7f73c11b8c30" loc="19:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigY" scoped="" ref="0x7f73c11b8c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f73c11b7020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f73c11b71b0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f73c11b7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelAdcY" ref="0x7f73c11ac400" loc="25:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelAdcY" scoped="" ref="0x7f73c11ac400"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f73c11ac780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelAdcX" ref="0x7f73c11adce0" loc="24:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelAdcX" scoped="" ref="0x7f73c11adce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f73c11ac0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigX" ref="0x7f73c11b8210" loc="18:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigX" scoped="" ref="0x7f73c11b8210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f73c11b8590"/>
        <function-ref name="getChannel" scoped="" ref="0x7f73c11b8720"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f73c11b88b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x7f73c119e100" loc="67:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x7f73c119e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73c119e480"/>
        <function-ref name="runTask" scoped="" ref="0x7f73c119e610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelPin" ref="0x7f73c11aea80" loc="23:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelPin" scoped="" ref="0x7f73c11aea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c11aee00"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c11ad020"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c11ad1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c11ad340"/>
        <function-ref name="get" scoped="" ref="0x7f73c11ad4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c11ad660"/>
        <function-ref name="set" scoped="" ref="0x7f73c11ad7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f73c11ad980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f73c11b77b0" loc="22:/usr/bin/tinyos-main/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f73c11b77b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73c11afc40"/>
        <function-ref name="fired" scoped="" ref="0x7f73c11b0260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73c11af020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73c11b0b60"/>
        <function-ref name="getdt" scoped="" ref="0x7f73c11ae590"/>
        <function-ref name="gett0" scoped="" ref="0x7f73c11ae110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73c11b06e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73c11b6400"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73c11af630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73c11b68d0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c11b6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f73c11996d0" loc="45:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="AccelConfigP.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f73c11996d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73c1195c40"/>
        <function-ref name="fired" scoped="" ref="0x7f73c11961e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73c1195020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73c1196ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f73c1194590"/>
        <function-ref name="gett0" scoped="" ref="0x7f73c1194110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73c1196660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73c1198390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73c1195630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73c1198860"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1198d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f73c11906c0" loc="92:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f73c11906c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f73c1190a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f73c1190bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f73c118e3e0" loc="96:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73c118e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f73c118e780"/>
        <function-ref name="configure" scoped="" ref="0x7f73c118e910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f73c1190e40" loc="93:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73c1190e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c118f1e0"/>
        <function-ref name="requested" scoped="" ref="0x7f73c118f370"/>
        <function-ref name="granted" scoped="" ref="0x7f73c118f500"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c118f690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f73c118f820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f73c1192820" loc="91:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f73c1192820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c1192bc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73c1192d50"/>
        <function-ref name="request" scoped="" ref="0x7f73c1190020"/>
        <function-ref name="granted" scoped="" ref="0x7f73c11901b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c1190340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f73c118fa70" loc="94:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c118fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f73c118fdf0"/>
        <function-ref name="userId" scoped="" ref="0x7f73c118e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73bfe58540" loc="44:/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="AccelConfigP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73bfe58540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73bfe588c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f73bfe58b50" loc="45:/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="AccelConfigP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f73bfe58b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f73bfe57020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f73bfe571b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f73bfe57340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f73bfe574d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f73bfe54bd0" loc="55:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f73bfe54bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f73bfe53020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f73bfe531b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f73bfe52950" loc="60:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73bfe52950"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f73bfe52cf0"/>
        <function-ref name="configure" scoped="" ref="0x7f73bfe52e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f73bfe51130" loc="61:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f73bfe51130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f73bfe514b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f73bfe51640"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f73bfe517d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f73bfe51960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f73bfe53400" loc="56:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73bfe53400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73bfe53780"/>
        <function-ref name="requested" scoped="" ref="0x7f73bfe53910"/>
        <function-ref name="granted" scoped="" ref="0x7f73bfe53aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73bfe53c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f73bfe53dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f73bfe51bb0" loc="62:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f73bfe51bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f73bfe50020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f73bfe501b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f73bfe50340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f73bfe504d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f73bfe50660"/>
        <function-ref name="get" scoped="" ref="0x7f73bfe507f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f73bfe50980"/>
        <function-ref name="led0On" scoped="" ref="0x7f73bfe4f020"/>
        <function-ref name="set" scoped="" ref="0x7f73bfe50ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f73bfe50b10"/>
        <function-ref name="led2Off" scoped="" ref="0x7f73bfe50e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f73bfe56e40" loc="54:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f73bfe56e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73bfe54210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73bfe543a0"/>
        <function-ref name="request" scoped="" ref="0x7f73bfe54530"/>
        <function-ref name="granted" scoped="" ref="0x7f73bfe546c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73bfe54850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f73bfe52060" loc="57:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73bfe52060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f73bfe523e0"/>
        <function-ref name="userId" scoped="" ref="0x7f73bfe52570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f73bfe4f2f0" loc="75:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f73bfe4f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73bfe4f670"/>
        <function-ref name="runTask" scoped="" ref="0x7f73bfe4f800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f73c118c5e0" loc="69:/usr/bin/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f73c118c5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f73c118c960"/>
        <function-ref name="stopDone" scoped="" ref="0x7f73c118caf0"/>
        <function-ref name="start" scoped="" ref="0x7f73c118cc80"/>
        <function-ref name="stop" scoped="" ref="0x7f73c118ce10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f73c118b0e0" loc="71:/usr/bin/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f73c118b0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f73c118b460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f73c118b6b0" loc="72:/usr/bin/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73c118b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c118ba30"/>
        <function-ref name="requested" scoped="" ref="0x7f73c118bbc0"/>
        <function-ref name="granted" scoped="" ref="0x7f73c118bd50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c118a020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f73c118a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f73c118a400" loc="73:/usr/bin/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73c118a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f73c118a780"/>
        <function-ref name="userId" scoped="" ref="0x7f73c118a910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f73bfe1c780" loc="61:/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f73bfe1c780"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f73bfe1cb00"/>
        <function-ref name="stopDone" scoped="" ref="0x7f73bfe1cc90"/>
        <function-ref name="start" scoped="" ref="0x7f73bfe1ce20"/>
        <function-ref name="stop" scoped="" ref="0x7f73bfe1b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f73bfe1b270" loc="63:/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f73bfe1b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f73bfe1b5f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f73bfe19d70" loc="78:/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7f73bfe19d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73bfe18180"/>
        <function-ref name="runTask" scoped="" ref="0x7f73bfe18310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f73bfe1b840" loc="64:/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f73bfe1b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73bfe1bbc0"/>
        <function-ref name="requested" scoped="" ref="0x7f73bfe1bd50"/>
        <function-ref name="granted" scoped="" ref="0x7f73bfe19020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73bfe191b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f73bfe19340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7f73bfe185e0" loc="73:/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7f73bfe185e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73bfe18960"/>
        <function-ref name="runTask" scoped="" ref="0x7f73bfe18af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f73bfe1c020" loc="60:/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f73bfe1c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f73bfe1c3a0"/>
        <function-ref name="stop" scoped="" ref="0x7f73bfe1c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f73bfe19590" loc="65:/usr/bin/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f73bfe19590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f73bfe19910"/>
        <function-ref name="userId" scoped="" ref="0x7f73bfe19aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f73c114e6d0" loc="26:/usr/bin/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="AccelReadStreamP.MultiplexX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f73c114e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f73c114b260"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f73c114c390"/>
        <function-ref name="read" scoped="" ref="0x7f73c114cd20"/>
        <function-ref name="readDone" scoped="" ref="0x7f73c114bd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f73c117d830" loc="24:/usr/bin/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="AccelReadStreamP.MultiplexX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadStream" scoped="" ref="0x7f73c117d830"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f73c114f340"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f73c1151480"/>
        <function-ref name="read" scoped="" ref="0x7f73c1151e10"/>
        <function-ref name="readDone" scoped="" ref="0x7f73c114fe10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f73c1149430" loc="27:/usr/bin/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="AccelReadStreamP.MultiplexX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f73c1149430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c11497d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73c1149960"/>
        <function-ref name="request" scoped="" ref="0x7f73c1149af0"/>
        <function-ref name="granted" scoped="" ref="0x7f73c1149c80"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c1149e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f73c11420d0" loc="26:/usr/bin/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="AccelReadStreamP.MultiplexY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f73c11420d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f73c1140b80"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f73c1142ce0"/>
        <function-ref name="read" scoped="" ref="0x7f73c1140690"/>
        <function-ref name="readDone" scoped="" ref="0x7f73c113f690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f73c1146270" loc="24:/usr/bin/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="AccelReadStreamP.MultiplexY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadStream" scoped="" ref="0x7f73c1146270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f73c1145d20"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f73c1146e80"/>
        <function-ref name="read" scoped="" ref="0x7f73c1145830"/>
        <function-ref name="readDone" scoped="" ref="0x7f73c1143820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f73c113fd60" loc="27:/usr/bin/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="AccelReadStreamP.MultiplexY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f73c113fd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c113e180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73c113e310"/>
        <function-ref name="request" scoped="" ref="0x7f73c113e4a0"/>
        <function-ref name="granted" scoped="" ref="0x7f73c113e630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c113e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f73bfe68400" loc="25:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadStreamClientC.nc">
      <component-ref qname="AntiTheftAppC.AccelXStreamC.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f73bfe68400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f73bfe68780"/>
        <function-ref name="configure" scoped="" ref="0x7f73bfe68910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f73bfe69a20" loc="24:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadStreamClientC.nc">
      <component-ref qname="AntiTheftAppC.AccelXStreamC.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f73bfe69a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f73bfe69da0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f73bfe68020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f73bfe681b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f73bfe6ddc0" loc="22:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadStreamClientC.nc">
      <component-ref qname="AntiTheftAppC.AccelXStreamC.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadStream" scoped="" ref="0x7f73bfe6ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f73bfe6a910"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f73bfe6ba80"/>
        <function-ref name="read" scoped="" ref="0x7f73bfe6a440"/>
        <function-ref name="readDone" scoped="" ref="0x7f73bfe69440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f73c112b1d0" loc="21:/usr/bin/tinyos-main/tos/chips/atm128/adc/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f73c112b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f73c112b550"/>
        <function-ref name="getChannel" scoped="" ref="0x7f73c112b6e0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f73c112b870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f73c112f020" loc="19:/usr/bin/tinyos-main/tos/chips/atm128/adc/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadStream" scoped="" ref="0x7f73c112f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f73c112eab0"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f73c112fc10"/>
        <function-ref name="read" scoped="" ref="0x7f73c112e5e0"/>
        <function-ref name="readDone" scoped="" ref="0x7f73c112c5a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f73c112a1d0" loc="22:/usr/bin/tinyos-main/tos/chips/atm128/adc/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f73c112a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c112a550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73c112a6e0"/>
        <function-ref name="request" scoped="" ref="0x7f73c112a870"/>
        <function-ref name="granted" scoped="" ref="0x7f73c112aa00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c112ab90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="bufferDone" ref="0x7f73c10ee900" loc="161:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="bufferDone" scoped="" ref="0x7f73c10ee900"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73c10eec80"/>
        <function-ref name="runTask" scoped="" ref="0x7f73c10eee10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamDone" ref="0x7f73c10fd660" loc="126:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readStreamDone" scoped="" ref="0x7f73c10fd660"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73c10fd9e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f73c10fdb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamFail" ref="0x7f73c10f8800" loc="140:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readStreamFail" scoped="" ref="0x7f73c10f8800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73c10f8b80"/>
        <function-ref name="runTask" scoped="" ref="0x7f73c10f8d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f73c111dcf0" loc="53:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f73c111dcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f73c111c0a0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f73c111c230"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f73c111c3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73c11253a0" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73c11253a0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f73c290f9c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f73c290f9c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c1125720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f73c111b720" loc="55:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f73c111b720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f73c282d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73c1117020"/>
        <function-ref name="fired" scoped="" ref="0x7f73c1119020"/>
        <function-ref name="startAt" scoped="" ref="0x7f73c11199a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73c11194e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f73c11174e0"/>
        <function-ref name="start" scoped="" ref="0x7f73c111a5b0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c111aac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x7f73c111fdd0" loc="52:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f73c111fdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f73c111d180"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c111d310"/>
        <function-ref name="dataReady" scoped="" ref="0x7f73c111d4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f73c11211d0" loc="49:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadStream" scoped="" ref="0x7f73c11211d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f73c1120c40"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f73c1121dc0"/>
        <function-ref name="read" scoped="" ref="0x7f73c1120770"/>
        <function-ref name="readDone" scoped="" ref="0x7f73c111f730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7f73c111c6b0" loc="54:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f73c111c6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f73c111ca30"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f73c111cbc0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f73c111cd50"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f73c111b020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f73c111b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f73c0f904e0" loc="30:/usr/bin/tinyos-main/tos/platforms/mica/AlarmMicro32C.nc">
      <component-ref qname="WireAdcStreamP.AlarmMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f73c0f904e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f73c282d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73c0f8ddb0"/>
        <function-ref name="fired" scoped="" ref="0x7f73c0f8eda0"/>
        <function-ref name="startAt" scoped="" ref="0x7f73c0f8d760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73c0f8d2a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f73c0f8c2a0"/>
        <function-ref name="start" scoped="" ref="0x7f73c0f8e3d0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c0f8e8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f73bfde1b90" loc="32:/usr/bin/tinyos-main/tos/platforms/mica/AlarmThree16C.nc">
      <component-ref qname="WireAdcStreamP.AlarmMicro32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f73bfde1b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TThree" ref="0x7f73c27d97b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73bfddd4e0"/>
        <function-ref name="fired" scoped="" ref="0x7f73bfdde4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f73bfddee60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73bfdde9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f73bfddd9a0"/>
        <function-ref name="start" scoped="" ref="0x7f73bfde09d0"/>
        <function-ref name="stop" scoped="" ref="0x7f73bfdde020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f73c10b1dc0" loc="80:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f73c10b1dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f73c10b0180"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f73c10b0310"/>
        <function-ref name="getControlA" scoped="" ref="0x7f73c10b04a0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f73c10b0630"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f73c10b07c0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f73c10b0950"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f73c10b0ae0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f73c10b0c70"/>
        <function-ref name="setControlC" scoped="" ref="0x7f73c10b0e00"/>
        <function-ref name="setControlA" scoped="" ref="0x7f73c10af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f73c10af530" loc="81:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f73c10af530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f73c10ab9a0"/>
        <function-ref name="test" scoped="" ref="0x7f73c10ab020"/>
        <function-ref name="get" scoped="" ref="0x7f73c10ae1b0"/>
        <function-ref name="captured" scoped="" ref="0x7f73c10aeb80"/>
        <function-ref name="reset" scoped="" ref="0x7f73c10ac0d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f73c10ab4e0"/>
        <function-ref name="set" scoped="" ref="0x7f73c10ae670"/>
        <function-ref name="start" scoped="" ref="0x7f73c10ac590"/>
        <function-ref name="stop" scoped="" ref="0x7f73c10aca50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f73c10aa650" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f73c10aa650"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f73c10a6110"/>
        <function-ref name="fired" scoped="" ref="0x7f73c10a9da0"/>
        <function-ref name="get" scoped="" ref="0x7f73c10a93d0"/>
        <function-ref name="reset" scoped="" ref="0x7f73c10a72a0"/>
        <function-ref name="isOn" scoped="" ref="0x7f73c10a65d0"/>
        <function-ref name="set" scoped="" ref="0x7f73c10a9890"/>
        <function-ref name="start" scoped="" ref="0x7f73c10a7760"/>
        <function-ref name="stop" scoped="" ref="0x7f73c10a7c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f73c10b8b30" loc="79:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f73c10b8b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f73c10b2e60"/>
        <function-ref name="test" scoped="" ref="0x7f73c10b24e0"/>
        <function-ref name="get" scoped="" ref="0x7f73c10b5790"/>
        <function-ref name="setScale" scoped="" ref="0x7f73c10b1350"/>
        <function-ref name="getScale" scoped="" ref="0x7f73c10b1860"/>
        <function-ref name="reset" scoped="" ref="0x7f73c10b4670"/>
        <function-ref name="overflow" scoped="" ref="0x7f73c10b41b0"/>
        <function-ref name="isOn" scoped="" ref="0x7f73c10b29a0"/>
        <function-ref name="set" scoped="" ref="0x7f73c10b5c50"/>
        <function-ref name="start" scoped="" ref="0x7f73c10b4b30"/>
        <function-ref name="stop" scoped="" ref="0x7f73c10b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f73c109c020" loc="80:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f73c109c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f73c109c3a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f73c109c530"/>
        <function-ref name="getControlA" scoped="" ref="0x7f73c109c6c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f73c109c850"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f73c109c9e0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f73c109cb70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f73c109cd00"/>
        <function-ref name="getControlB" scoped="" ref="0x7f73c109b020"/>
        <function-ref name="setControlC" scoped="" ref="0x7f73c109b1b0"/>
        <function-ref name="setControlA" scoped="" ref="0x7f73c109b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f73c10965a0" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f73c10965a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f73c1090020"/>
        <function-ref name="fired" scoped="" ref="0x7f73c1095c10"/>
        <function-ref name="get" scoped="" ref="0x7f73c1095240"/>
        <function-ref name="reset" scoped="" ref="0x7f73c1092110"/>
        <function-ref name="isOn" scoped="" ref="0x7f73c10904e0"/>
        <function-ref name="set" scoped="" ref="0x7f73c1095700"/>
        <function-ref name="start" scoped="" ref="0x7f73c10925d0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1092a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f73c109b850" loc="81:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f73c109b850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f73c1098e60"/>
        <function-ref name="test" scoped="" ref="0x7f73c10984e0"/>
        <function-ref name="get" scoped="" ref="0x7f73c109a4c0"/>
        <function-ref name="captured" scoped="" ref="0x7f73c1099020"/>
        <function-ref name="reset" scoped="" ref="0x7f73c1099530"/>
        <function-ref name="isOn" scoped="" ref="0x7f73c10989a0"/>
        <function-ref name="set" scoped="" ref="0x7f73c109a980"/>
        <function-ref name="start" scoped="" ref="0x7f73c10999f0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c1098020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f73c1090ba0" loc="83:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f73c1090ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f73c108d550"/>
        <function-ref name="fired" scoped="" ref="0x7f73c108e1f0"/>
        <function-ref name="get" scoped="" ref="0x7f73c108f7f0"/>
        <function-ref name="reset" scoped="" ref="0x7f73c108e6b0"/>
        <function-ref name="isOn" scoped="" ref="0x7f73c108da10"/>
        <function-ref name="set" scoped="" ref="0x7f73c108fcb0"/>
        <function-ref name="start" scoped="" ref="0x7f73c108eb70"/>
        <function-ref name="stop" scoped="" ref="0x7f73c108d090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7f73c108b120" loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7f73c108b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f73c1089a90"/>
        <function-ref name="fired" scoped="" ref="0x7f73c108a770"/>
        <function-ref name="get" scoped="" ref="0x7f73c108bd50"/>
        <function-ref name="reset" scoped="" ref="0x7f73c108ac30"/>
        <function-ref name="isOn" scoped="" ref="0x7f73c1088020"/>
        <function-ref name="set" scoped="" ref="0x7f73c108a260"/>
        <function-ref name="start" scoped="" ref="0x7f73c1089110"/>
        <function-ref name="stop" scoped="" ref="0x7f73c10895d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f73c10a4b90" loc="79:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f73c10a4b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f73c109e020"/>
        <function-ref name="test" scoped="" ref="0x7f73c109f550"/>
        <function-ref name="get" scoped="" ref="0x7f73c10a17f0"/>
        <function-ref name="setScale" scoped="" ref="0x7f73c109e4e0"/>
        <function-ref name="getScale" scoped="" ref="0x7f73c109e9f0"/>
        <function-ref name="reset" scoped="" ref="0x7f73c10a06b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f73c10a01f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f73c109fa10"/>
        <function-ref name="set" scoped="" ref="0x7f73c10a1cb0"/>
        <function-ref name="start" scoped="" ref="0x7f73c10a0b70"/>
        <function-ref name="stop" scoped="" ref="0x7f73c109f090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73c100cc60" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73c100cc60"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f73c290f9c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f73c290f9c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c100b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f73c100b410" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f73c100b410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f73c1007810"/>
        <function-ref name="test" scoped="" ref="0x7f73c1008e60"/>
        <function-ref name="get" scoped="" ref="0x7f73c1009090"/>
        <function-ref name="setScale" scoped="" ref="0x7f73c1007cd0"/>
        <function-ref name="getScale" scoped="" ref="0x7f73c1005260"/>
        <function-ref name="reset" scoped="" ref="0x7f73c1008020"/>
        <function-ref name="overflow" scoped="" ref="0x7f73c1009a60"/>
        <function-ref name="isOn" scoped="" ref="0x7f73c1007350"/>
        <function-ref name="set" scoped="" ref="0x7f73c1009550"/>
        <function-ref name="start" scoped="" ref="0x7f73c10084e0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c10089a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f73bfdc9270" loc="55:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="WireAdcStreamP.AlarmMicro32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f73bfdc9270"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f73c290f640"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f73c290f640"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TThree" ref="0x7f73c27d97b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73bfdc7b30"/>
        <function-ref name="fired" scoped="" ref="0x7f73bfdc8aa0"/>
        <function-ref name="startAt" scoped="" ref="0x7f73bfdc74e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73bfdc7020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f73bfdc6020"/>
        <function-ref name="start" scoped="" ref="0x7f73bfdc80d0"/>
        <function-ref name="stop" scoped="" ref="0x7f73bfdc85e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7f73bfdc18f0" loc="58:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="WireAdcStreamP.AlarmMicro32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f73bfdc18f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f73bfdbd350"/>
        <function-ref name="fired" scoped="" ref="0x7f73bfdbe020"/>
        <function-ref name="get" scoped="" ref="0x7f73bfdc05a0"/>
        <function-ref name="reset" scoped="" ref="0x7f73bfdbe4e0"/>
        <function-ref name="isOn" scoped="" ref="0x7f73bfdbd810"/>
        <function-ref name="set" scoped="" ref="0x7f73bfdc0a60"/>
        <function-ref name="start" scoped="" ref="0x7f73bfdbe9a0"/>
        <function-ref name="stop" scoped="" ref="0x7f73bfdbee60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7f73bfdc6570" loc="57:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="WireAdcStreamP.AlarmMicro32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f73bfdc6570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f73bfdc29a0"/>
        <function-ref name="test" scoped="" ref="0x7f73bfdc2020"/>
        <function-ref name="get" scoped="" ref="0x7f73bfdc51f0"/>
        <function-ref name="setScale" scoped="" ref="0x7f73bfdc2e60"/>
        <function-ref name="getScale" scoped="" ref="0x7f73bfdc13a0"/>
        <function-ref name="reset" scoped="" ref="0x7f73bfdc30d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f73bfdc5bc0"/>
        <function-ref name="isOn" scoped="" ref="0x7f73bfdc24e0"/>
        <function-ref name="set" scoped="" ref="0x7f73bfdc56b0"/>
        <function-ref name="start" scoped="" ref="0x7f73bfdc3590"/>
        <function-ref name="stop" scoped="" ref="0x7f73bfdc3a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f73c0febd40" loc="24:/usr/bin/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f73c0febd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f73c282d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73c0fe8ba0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73c0fe6550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73c0fe6090"/>
        <function-ref name="overflow" scoped="" ref="0x7f73c0fe6a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f73c0fe5d10" loc="24:/usr/bin/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f73c0fe5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TThree" ref="0x7f73c27d97b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73c0fe1b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73c0fe0550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73c0fe0090"/>
        <function-ref name="overflow" scoped="" ref="0x7f73c0fe0a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f73c0fddc40" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f73c0fddc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TThree" ref="0x7f73c27d97b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73c0fdca80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73c0fdb4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73c0fdb020"/>
        <function-ref name="overflow" scoped="" ref="0x7f73c0fdb9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f73c0fd9020" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f73c0fd9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f73c0fd6350"/>
        <function-ref name="test" scoped="" ref="0x7f73c0fd79a0"/>
        <function-ref name="get" scoped="" ref="0x7f73c0fd9c50"/>
        <function-ref name="setScale" scoped="" ref="0x7f73c0fd6810"/>
        <function-ref name="getScale" scoped="" ref="0x7f73c0fd6d20"/>
        <function-ref name="reset" scoped="" ref="0x7f73c0fd8b20"/>
        <function-ref name="overflow" scoped="" ref="0x7f73c0fd8660"/>
        <function-ref name="isOn" scoped="" ref="0x7f73c0fd7e60"/>
        <function-ref name="set" scoped="" ref="0x7f73c0fd8150"/>
        <function-ref name="start" scoped="" ref="0x7f73c0fd7020"/>
        <function-ref name="stop" scoped="" ref="0x7f73c0fd74e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f73c0fce6d0" loc="63:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f73c0fce6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TThree" ref="0x7f73c27d97b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73c0fcd5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73c0fcb020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73c0fcda70"/>
        <function-ref name="overflow" scoped="" ref="0x7f73c0fcb4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f73c0fd12e0" loc="62:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f73c0fd12e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f73c282d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73c0fcf110"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73c0fcfa90"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73c0fcf5d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f73c0fce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f73bfdda020" loc="61:/usr/bin/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.AlarmMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f73bfdda020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f73c282d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73bfdd7870"/>
        <function-ref name="fired" scoped="" ref="0x7f73bfdd9840"/>
        <function-ref name="startAt" scoped="" ref="0x7f73bfdd7220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73bfdd9d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f73bfdd7d30"/>
        <function-ref name="start" scoped="" ref="0x7f73bfddae30"/>
        <function-ref name="stop" scoped="" ref="0x7f73bfdd9380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f73bfdd4780" loc="73:/usr/bin/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.AlarmMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x7f73bfdd4780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TThree" ref="0x7f73c27d97b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73bfdd0020"/>
        <function-ref name="fired" scoped="" ref="0x7f73bfdd2020"/>
        <function-ref name="startAt" scoped="" ref="0x7f73bfdd29a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73bfdd24e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f73bfdd04e0"/>
        <function-ref name="start" scoped="" ref="0x7f73bfdd35d0"/>
        <function-ref name="stop" scoped="" ref="0x7f73bfdd3ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f73bfdd63d0" loc="68:/usr/bin/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.AlarmMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f73bfdd63d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c282ed50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f73c282d180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73bfdd5240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f73bfdd5bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f73bfdd5700"/>
        <function-ref name="overflow" scoped="" ref="0x7f73bfdd40d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f73c0f868b0" loc="26:/usr/bin/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f73c0f868b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f73c0f83510"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f73c0f84560"/>
        <function-ref name="read" scoped="" ref="0x7f73c0f83020"/>
        <function-ref name="readDone" scoped="" ref="0x7f73c0f81020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f73c0f8aa30" loc="24:/usr/bin/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadStream" scoped="" ref="0x7f73c0f8aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f73c0f87510"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f73c0f88670"/>
        <function-ref name="read" scoped="" ref="0x7f73c0f87020"/>
        <function-ref name="readDone" scoped="" ref="0x7f73c0f86020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f73c0f816f0" loc="27:/usr/bin/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f73c0f816f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f73c0f81a90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f73c0f81c20"/>
        <function-ref name="request" scoped="" ref="0x7f73c0f81db0"/>
        <function-ref name="granted" scoped="" ref="0x7f73c0f80020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f73c0f801b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mts300Sounder" ref="0x7f73c0f6d540" loc="3:/usr/bin/tinyos-main/tos/sensorboards/mts300/SounderC.nc">
      <component-ref qname="SounderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mts300Sounder" scoped="" ref="0x7f73c0f6d540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beep" scoped="" ref="0x7f73c0f6d8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mts300Sounder" ref="0x7f73c0f69400" loc="3:/usr/bin/tinyos-main/tos/sensorboards/mts300/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mts300Sounder" scoped="" ref="0x7f73c0f69400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beep" scoped="" ref="0x7f73c0f69780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SounderPin" ref="0x7f73c0f61020" loc="6:/usr/bin/tinyos-main/tos/sensorboards/mts300/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SounderPin" scoped="" ref="0x7f73c0f61020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f73c0f613a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f73c0f61530"/>
        <function-ref name="toggle" scoped="" ref="0x7f73c0f616c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f73c0f61850"/>
        <function-ref name="get" scoped="" ref="0x7f73c0f619e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f73c0f61b70"/>
        <function-ref name="set" scoped="" ref="0x7f73c0f61d00"/>
        <function-ref name="clr" scoped="" ref="0x7f73c0f60020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f73c0f69bd0" loc="5:/usr/bin/tinyos-main/tos/sensorboards/mts300/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f73c0f69bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73c0f63110"/>
        <function-ref name="fired" scoped="" ref="0x7f73c0f656a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73c0f644a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73c0f64020"/>
        <function-ref name="getdt" scoped="" ref="0x7f73c0f63a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f73c0f63590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73c0f65b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73c0f66860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73c0f64ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73c0f66d30"/>
        <function-ref name="stop" scoped="" ref="0x7f73c0f65220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f73c0f68dc0" loc="45:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="SounderC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f73c0f68dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73c0f57390"/>
        <function-ref name="fired" scoped="" ref="0x7f73c0f59970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73c0f58720"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73c0f582a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f73c0f57c90"/>
        <function-ref name="gett0" scoped="" ref="0x7f73c0f57810"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73c0f59df0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73c0f67a80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73c0f58d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73c0f59020"/>
        <function-ref name="stop" scoped="" ref="0x7f73c0f594f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f73c0f4eb40" loc="47:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationC.nc">
      <component-ref qname="DisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f73c0f4eb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f73c0f4d020"/>
        <function-ref name="stop" scoped="" ref="0x7f73c0f4d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x7f73c0f3a020" loc="52:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x7f73c0f3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c0f3a3a0"/>
        <function-ref name="incrementCounter" scoped="" ref="0x7f73c0f3a530"/>
        <function-ref name="reset" scoped="" ref="0x7f73c0f3a6c0"/>
        <function-ref name="start" scoped="" ref="0x7f73c0f3a850"/>
        <function-ref name="stop" scoped="" ref="0x7f73c0f3a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x7f73c0f48020" loc="51:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x7f73c0f48020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x7f73c0f48530"/>
        <function-ref name="stop" scoped="" ref="0x7f73c0f48b70"/>
        <function-ref name="newData" scoped="" ref="0x7f73c0f486c0"/>
        <function-ref name="start" scoped="" ref="0x7f73c0f48850"/>
        <function-ref name="requestSeqno" scoped="" ref="0x7f73c0f489e0"/>
        <function-ref name="requestData" scoped="" ref="0x7f73c0f483a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f73c0f49020" loc="48:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f73c0f49020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f73c0f493a0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c0f49530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x7f73c0f39320" loc="53:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x7f73c0f39320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f73c0f396a0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c0f39830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeReceive" ref="0x7f73c0f2c510" loc="57:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeReceive" scoped="" ref="0x7f73c0f2c510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c0f2c890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeAMSend" ref="0x7f73c0f2d780" loc="56:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeAMSend" scoped="" ref="0x7f73c0f2d780"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c0f2db00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c0f2dc90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c0f2de20"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c0f2c020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c0f2c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f73c0f2e440" loc="53:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f73c0f2e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c0f2e7c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c0f2e950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c0f2eae0"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c0f2ec70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c0f2ee00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x7f73c0f31840" loc="50:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x7f73c0f31840"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c0f31bc0"/>
        <function-ref name="incrementCounter" scoped="" ref="0x7f73c0f31d50"/>
        <function-ref name="reset" scoped="" ref="0x7f73c0f2f020"/>
        <function-ref name="start" scoped="" ref="0x7f73c0f2f1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c0f2f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x7f73c0f32400" loc="49:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x7f73c0f32400"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x7f73c0f32910"/>
        <function-ref name="stop" scoped="" ref="0x7f73c0f31020"/>
        <function-ref name="newData" scoped="" ref="0x7f73c0f32aa0"/>
        <function-ref name="start" scoped="" ref="0x7f73c0f32c30"/>
        <function-ref name="requestSeqno" scoped="" ref="0x7f73c0f32dc0"/>
        <function-ref name="requestData" scoped="" ref="0x7f73c0f32780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f73c0f2d0c0" loc="54:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f73c0f2d0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c0f2d440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f73c0f2cb10" loc="59:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f73c0f2cb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f73c0f2b020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f73c0f2b1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f73c0f2b340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f73c0f2b4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f73c0f2b660"/>
        <function-ref name="get" scoped="" ref="0x7f73c0f2b7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f73c0f2b980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f73c0f2a020"/>
        <function-ref name="set" scoped="" ref="0x7f73c0f2bb10"/>
        <function-ref name="led0On" scoped="" ref="0x7f73c0f2bca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f73c0f2be30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f73c0f355e0" loc="46:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f73c0f355e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f73c0f35960"/>
        <function-ref name="stop" scoped="" ref="0x7f73c0f35af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x7f73c0f2fc50" loc="51:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x7f73c0f2fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f73c0f2e020"/>
        <function-ref name="stop" scoped="" ref="0x7f73c0f2e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f73c0e40020" loc="49:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f73c0e40020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c0e403a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c0e40530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c0e406c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c0e40850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c0e409e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f73c0e40c30" loc="50:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f73c0e40c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c0e3f020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c0e3f1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c0e3f340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c0e3f4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c0e3f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f73c0e3f8b0" loc="51:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f73c0e3f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73c0e3fc30"/>
        <function-ref name="source" scoped="" ref="0x7f73c0e3fdc0"/>
        <function-ref name="address" scoped="" ref="0x7f73c0e3e020"/>
        <function-ref name="destination" scoped="" ref="0x7f73c0e3e1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f73c0e3e340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73c0e3e4d0"/>
        <function-ref name="type" scoped="" ref="0x7f73c0e3e660"/>
        <function-ref name="setType" scoped="" ref="0x7f73c0e3e7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73c0e3e980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73c0e3eb10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f73c0e3eca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f73c0e3d020" loc="52:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f73c0e3d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f73c0e3d3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f73c0e3d530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f73c0e3d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f73bfd5d420" loc="49:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f73bfd5d420"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73bfd5d7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73bfd5d930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73bfd5dac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f73bfd5dc50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73bfd5dde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f73bfd5c060" loc="50:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f73bfd5c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73bfd5c3e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73bfd5c570"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73bfd5c700"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73bfd5c890"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73bfd5ca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f73bfd5cc70" loc="51:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f73bfd5cc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73bfd5b020"/>
        <function-ref name="source" scoped="" ref="0x7f73bfd5b1b0"/>
        <function-ref name="address" scoped="" ref="0x7f73bfd5b340"/>
        <function-ref name="destination" scoped="" ref="0x7f73bfd5b4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f73bfd5b660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73bfd5b7f0"/>
        <function-ref name="type" scoped="" ref="0x7f73bfd5b980"/>
        <function-ref name="setType" scoped="" ref="0x7f73bfd5bb10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73bfd5bca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73bfd5be30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f73bfd5a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f73bfd5a2b0" loc="52:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f73bfd5a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f73bfd5a630"/>
        <function-ref name="noAck" scoped="" ref="0x7f73bfd5a7c0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f73bfd5a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f73bfd49660" loc="44:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f73bfd49660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73bfd499e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73bfd49b70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73bfd49d00"/>
        <function-ref name="cancel" scoped="" ref="0x7f73bfd48020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73bfd481b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f73bfd48460" loc="46:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f73bfd48460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73bfd487e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73bfd48970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73bfd48b00"/>
        <function-ref name="cancel" scoped="" ref="0x7f73bfd48c90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73bfd48e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f73bfd460e0" loc="47:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f73bfd460e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73bfd46460"/>
        <function-ref name="source" scoped="" ref="0x7f73bfd465f0"/>
        <function-ref name="address" scoped="" ref="0x7f73bfd46780"/>
        <function-ref name="destination" scoped="" ref="0x7f73bfd46910"/>
        <function-ref name="setSource" scoped="" ref="0x7f73bfd46aa0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73bfd46c30"/>
        <function-ref name="type" scoped="" ref="0x7f73bfd46dc0"/>
        <function-ref name="setType" scoped="" ref="0x7f73bfd45020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73bfd451b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73bfd45340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f73bfd454d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f73c0eafdd0" loc="43:/usr/bin/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f73c0eafdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c0eac180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c0eac310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c0eac4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c0eac630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c0eac7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f73c0e55400" loc="48:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f73c0e55400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c0e557a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c0e55930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c0e55ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c0e55c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c0e55de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f73c0e56580" loc="46:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f73c0e56580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c0e56920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c0e56ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c0e56c40"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c0e56dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c0e55020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f73c0e53720" loc="50:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f73c0e53720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c0e53aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c0e53c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c0e53dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c0e52020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c0e521b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f73c0e52480" loc="169:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7f73c0e52480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73c0e52800"/>
        <function-ref name="runTask" scoped="" ref="0x7f73c0e52990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f73c0e52c60" loc="126:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7f73c0e52c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73c0e51020"/>
        <function-ref name="runTask" scoped="" ref="0x7f73c0e511b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f73c0e54060" loc="49:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f73c0e54060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73c0e543e0"/>
        <function-ref name="source" scoped="" ref="0x7f73c0e54570"/>
        <function-ref name="address" scoped="" ref="0x7f73c0e54700"/>
        <function-ref name="destination" scoped="" ref="0x7f73c0e54890"/>
        <function-ref name="setSource" scoped="" ref="0x7f73c0e54a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73c0e54bb0"/>
        <function-ref name="type" scoped="" ref="0x7f73c0e54d40"/>
        <function-ref name="setType" scoped="" ref="0x7f73c0e53020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73c0e531b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73c0e53340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f73c0e534d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f73c0e336b0" loc="46:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f73c0e336b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c0e33a30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c0e33bc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c0e33d50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c0e32020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c0e321b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f73c0e330e0" loc="45:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f73c0e330e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c0e33460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f73c0e32400" loc="47:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f73c0e32400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73c0e32780"/>
        <function-ref name="source" scoped="" ref="0x7f73c0e32910"/>
        <function-ref name="address" scoped="" ref="0x7f73c0e32aa0"/>
        <function-ref name="destination" scoped="" ref="0x7f73c0e32c30"/>
        <function-ref name="setSource" scoped="" ref="0x7f73c0e32dc0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73c0e31020"/>
        <function-ref name="type" scoped="" ref="0x7f73c0e311b0"/>
        <function-ref name="setType" scoped="" ref="0x7f73c0e31340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73c0e314d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73c0e31660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f73c0e317f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f73c0e2fdf0" loc="49:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f73c0e2fdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c0e2e1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c0e2e350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c0e2e4e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c0e2e670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c0e2e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f73c0e2ea50" loc="50:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f73c0e2ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c0e2edd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c0e2d020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c0e2d1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c0e2d340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c0e2d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f73c0e2d720" loc="51:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f73c0e2d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73c0e2daa0"/>
        <function-ref name="source" scoped="" ref="0x7f73c0e2dc30"/>
        <function-ref name="address" scoped="" ref="0x7f73c0e2ddc0"/>
        <function-ref name="destination" scoped="" ref="0x7f73c0e27020"/>
        <function-ref name="setSource" scoped="" ref="0x7f73c0e271b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73c0e27340"/>
        <function-ref name="type" scoped="" ref="0x7f73c0e274d0"/>
        <function-ref name="setType" scoped="" ref="0x7f73c0e27660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73c0e277f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73c0e27980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f73c0e27b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f73c0e27da0" loc="52:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f73c0e27da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f73c0e26180"/>
        <function-ref name="noAck" scoped="" ref="0x7f73c0e26310"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f73c0e264a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f73bfcf2540" loc="49:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f73bfcf2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73bfcf28c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73bfcf2a50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73bfcf2be0"/>
        <function-ref name="cancel" scoped="" ref="0x7f73bfcf2d70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73bfcf0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f73bfcf0270" loc="50:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f73bfcf0270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73bfcf05f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73bfcf0780"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73bfcf0910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73bfcf0aa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73bfcf0c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f73bfcf0e80" loc="51:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f73bfcf0e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73bfcef220"/>
        <function-ref name="source" scoped="" ref="0x7f73bfcef3b0"/>
        <function-ref name="address" scoped="" ref="0x7f73bfcef540"/>
        <function-ref name="destination" scoped="" ref="0x7f73bfcef6d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f73bfcef860"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73bfcef9f0"/>
        <function-ref name="type" scoped="" ref="0x7f73bfcefb80"/>
        <function-ref name="setType" scoped="" ref="0x7f73bfcefd10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73bfcee020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73bfcee1b0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f73bfcee340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f73bfcee5d0" loc="52:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f73bfcee5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f73bfcee950"/>
        <function-ref name="noAck" scoped="" ref="0x7f73bfceeae0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f73bfceec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f73bfce4940" loc="44:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f73bfce4940"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73bfce4cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73bfce4e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73bfce3020"/>
        <function-ref name="cancel" scoped="" ref="0x7f73bfce31b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73bfce3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f73bfce35f0" loc="46:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f73bfce35f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73bfce3970"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73bfce3b00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73bfce3c90"/>
        <function-ref name="cancel" scoped="" ref="0x7f73bfce3e20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73bfce2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f73bfce2270" loc="47:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f73bfce2270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73bfce25f0"/>
        <function-ref name="source" scoped="" ref="0x7f73bfce2780"/>
        <function-ref name="address" scoped="" ref="0x7f73bfce2910"/>
        <function-ref name="destination" scoped="" ref="0x7f73bfce2aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f73bfce2c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73bfce2dc0"/>
        <function-ref name="type" scoped="" ref="0x7f73bfce1020"/>
        <function-ref name="setType" scoped="" ref="0x7f73bfce11b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73bfce1340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73bfce14d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f73bfce1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f73c0e235f0" loc="46:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f73c0e235f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c0e23970"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c0e23b00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c0e23c90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c0e23e20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c0e21020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f73c0e23020" loc="45:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f73c0e23020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c0e233a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f73c0e21270" loc="47:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f73c0e21270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73c0e215f0"/>
        <function-ref name="source" scoped="" ref="0x7f73c0e21780"/>
        <function-ref name="address" scoped="" ref="0x7f73c0e21910"/>
        <function-ref name="destination" scoped="" ref="0x7f73c0e21aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f73c0e21c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73c0e21dc0"/>
        <function-ref name="type" scoped="" ref="0x7f73c0e20020"/>
        <function-ref name="setType" scoped="" ref="0x7f73c0e201b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73c0e20340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73c0e204d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f73c0e20660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73c0e1c380" loc="46:/usr/bin/tinyos-main/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73c0e1c380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c0e1c700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f73c0e1c9c0" loc="47:/usr/bin/tinyos-main/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f73c0e1c9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f73c0e1cd40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f73c0e1b020"/>
        <function-ref name="led1On" scoped="" ref="0x7f73c0e1b1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f73c0e1b340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f73c0e1b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f73c0e1b660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f73c0e1b7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f73c0e1be30"/>
        <function-ref name="set" scoped="" ref="0x7f73c0e1b980"/>
        <function-ref name="led0On" scoped="" ref="0x7f73c0e1bb10"/>
        <function-ref name="led2On" scoped="" ref="0x7f73c0e1bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x7f73c0d18330" loc="51:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="AntiTheftAppC.DisseminatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x7f73c0d18330"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="settings" ref="0x7f73c278bbc0"/>
            <typename><typedef-ref name="settings_t" ref="0x7f73c278a670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x7f73c0d17020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x7f73c0d1b730" loc="50:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="AntiTheftAppC.DisseminatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x7f73c0d1b730"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="settings" ref="0x7f73c278bbc0"/>
            <typename><typedef-ref name="settings_t" ref="0x7f73c278a670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x7f73c0d19da0"/>
        <function-ref name="get" scoped="" ref="0x7f73c0d193d0"/>
        <function-ref name="set" scoped="" ref="0x7f73c0d19890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="changedTask" ref="0x7f73bfcc2de0" loc="62:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="AntiTheftAppC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="changedTask" scoped="" ref="0x7f73bfcc2de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73bfcc1180"/>
        <function-ref name="runTask" scoped="" ref="0x7f73bfcc1310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationCache" ref="0x7f73bfcc5830" loc="50:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="AntiTheftAppC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x7f73bfcc5830"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-functions>
        <function-ref name="requestData" scoped="" ref="0x7f73bfcc5d40"/>
        <function-ref name="storeData" scoped="" ref="0x7f73bfcc34d0"/>
        <function-ref name="newData" scoped="" ref="0x7f73bfcc3020"/>
        <function-ref name="start" scoped="" ref="0x7f73bfcc31b0"/>
        <function-ref name="requestSeqno" scoped="" ref="0x7f73bfcc3340"/>
        <function-ref name="stop" scoped="" ref="0x7f73bfcc5bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x7f73bfcc6570" loc="49:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="AntiTheftAppC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x7f73bfcc6570"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="settings" ref="0x7f73c278bbc0"/>
            <typename><typedef-ref name="settings_t" ref="0x7f73c278a670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x7f73bfcc51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f73bfcc3760" loc="52:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="AntiTheftAppC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f73bfcc3760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f73bfcc3ae0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f73bfcc3c70"/>
        <function-ref name="led1On" scoped="" ref="0x7f73bfcc3e00"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f73bfcc2020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f73bfcc21b0"/>
        <function-ref name="get" scoped="" ref="0x7f73bfcc2340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f73bfcc24d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f73bfcc2b10"/>
        <function-ref name="set" scoped="" ref="0x7f73bfcc27f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f73bfcc2660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f73bfcc2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x7f73bfcc98e0" loc="48:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="AntiTheftAppC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x7f73bfcc98e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="settings" ref="0x7f73c278bbc0"/>
            <typename><typedef-ref name="settings_t" ref="0x7f73c278a670"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x7f73bfcc6020"/>
        <function-ref name="get" scoped="" ref="0x7f73bfcc85a0"/>
        <function-ref name="set" scoped="" ref="0x7f73bfcc8a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f73bfcc9020" loc="46:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="AntiTheftAppC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f73bfcc9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f73bfcc93a0"/>
        <function-ref name="stop" scoped="" ref="0x7f73bfcc9530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x7f73c0dc8e00" loc="45:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationTimerP.nc">
      <component-ref qname="DisseminationTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x7f73c0dc8e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c0dc41c0"/>
        <function-ref name="incrementCounter" scoped="" ref="0x7f73c0dc4350"/>
        <function-ref name="reset" scoped="" ref="0x7f73c0dc44e0"/>
        <function-ref name="start" scoped="" ref="0x7f73c0dc4670"/>
        <function-ref name="stop" scoped="" ref="0x7f73c0dc4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x7f73c0d1f780" loc="55:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x7f73c0d1f780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73c0d1fb20"/>
        <function-ref name="incrementCounter" scoped="" ref="0x7f73c0d1fcb0"/>
        <function-ref name="reset" scoped="" ref="0x7f73c0d1fe40"/>
        <function-ref name="start" scoped="" ref="0x7f73c0d1e020"/>
        <function-ref name="stop" scoped="" ref="0x7f73c0d1e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pending" ref="0x7f73bfc9a450" loc="62:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pending" scoped="" ref="0x7f73bfc9a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7f73bfc9a7d0"/>
        <function-ref name="clear" scoped="" ref="0x7f73bfc9a960"/>
        <function-ref name="toggle" scoped="" ref="0x7f73bfc9aaf0"/>
        <function-ref name="get" scoped="" ref="0x7f73bfc9ac80"/>
        <function-ref name="assign" scoped="" ref="0x7f73bfc9ae10"/>
        <function-ref name="setAll" scoped="" ref="0x7f73bfc99020"/>
        <function-ref name="set" scoped="" ref="0x7f73bfc991b0"/>
        <function-ref name="size" scoped="" ref="0x7f73bfc99340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Changed" ref="0x7f73bfc995d0" loc="63:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Changed" scoped="" ref="0x7f73bfc995d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7f73bfc99950"/>
        <function-ref name="clear" scoped="" ref="0x7f73bfc99ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73bfc99c70"/>
        <function-ref name="get" scoped="" ref="0x7f73bfc99e00"/>
        <function-ref name="assign" scoped="" ref="0x7f73bfc98020"/>
        <function-ref name="setAll" scoped="" ref="0x7f73bfc981b0"/>
        <function-ref name="set" scoped="" ref="0x7f73bfc98340"/>
        <function-ref name="size" scoped="" ref="0x7f73bfc984d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f73bfc98720" loc="64:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f73bfc98720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f73bfc98aa0"/>
        <function-ref name="rand32" scoped="" ref="0x7f73bfc98c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x7f73bfca5150" loc="58:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x7f73bfca5150"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f73bfca54f0"/>
        <function-ref name="incrementCounter" scoped="" ref="0x7f73bfca5680"/>
        <function-ref name="reset" scoped="" ref="0x7f73bfca5810"/>
        <function-ref name="start" scoped="" ref="0x7f73bfca59a0"/>
        <function-ref name="stop" scoped="" ref="0x7f73bfca5b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73bfca6a00" loc="57:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73bfca6a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73bfca6d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="timerTask" ref="0x7f73bfc96610" loc="154:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="timerTask" scoped="" ref="0x7f73bfc96610"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73bfc96990"/>
        <function-ref name="runTask" scoped="" ref="0x7f73bfc96b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f73bfc98e80" loc="65:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f73bfc98e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f73bfc97220"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f73bfc973b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f73bfc97540"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f73bfc976d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f73bfc97860"/>
        <function-ref name="get" scoped="" ref="0x7f73bfc979f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f73bfc97b80"/>
        <function-ref name="led0On" scoped="" ref="0x7f73bfc96340"/>
        <function-ref name="set" scoped="" ref="0x7f73bfc96020"/>
        <function-ref name="led2On" scoped="" ref="0x7f73bfc97d10"/>
        <function-ref name="led2Off" scoped="" ref="0x7f73bfc961b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f73bfc9f020" loc="61:/usr/bin/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f73bfc9f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73bfc9c630"/>
        <function-ref name="fired" scoped="" ref="0x7f73bfc9ea60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73bfc9d920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73bfc9d4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f73bfc9a020"/>
        <function-ref name="gett0" scoped="" ref="0x7f73bfc9cab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73bfc9d020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73bfc9fc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73bfc9c020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73bfc9e110"/>
        <function-ref name="stop" scoped="" ref="0x7f73bfc9e5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f73bfc93990" loc="45:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f73bfc93990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73bfc8fe80"/>
        <function-ref name="fired" scoped="" ref="0x7f73bfc914a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73bfc8f260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73bfc91da0"/>
        <function-ref name="getdt" scoped="" ref="0x7f73bfc8e7a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f73bfc8e320"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73bfc91920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73bfc925a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73bfc8f870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73bfc92a70"/>
        <function-ref name="stop" scoped="" ref="0x7f73bfc91020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73bfc8c190" loc="46:/usr/bin/tinyos-main/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73bfc8c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73bfc8c510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7f73bfc8c7a0" loc="47:/usr/bin/tinyos-main/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7f73bfc8c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7f73bfc8cb20"/>
        <function-ref name="clear" scoped="" ref="0x7f73bfc8ccb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f73bfc8ce40"/>
        <function-ref name="get" scoped="" ref="0x7f73bfc8b020"/>
        <function-ref name="assign" scoped="" ref="0x7f73bfc8b1b0"/>
        <function-ref name="setAll" scoped="" ref="0x7f73bfc8b340"/>
        <function-ref name="set" scoped="" ref="0x7f73bfc8b4d0"/>
        <function-ref name="size" scoped="" ref="0x7f73bfc8b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73bfc89020" loc="46:/usr/bin/tinyos-main/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73bfc89020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73bfc893a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x7f73bfc89630" loc="47:/usr/bin/tinyos-main/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x7f73bfc89630"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x7f73bfc899b0"/>
        <function-ref name="clear" scoped="" ref="0x7f73bfc89b40"/>
        <function-ref name="toggle" scoped="" ref="0x7f73bfc89cd0"/>
        <function-ref name="get" scoped="" ref="0x7f73bfc89e60"/>
        <function-ref name="assign" scoped="" ref="0x7f73bfc87020"/>
        <function-ref name="setAll" scoped="" ref="0x7f73bfc871b0"/>
        <function-ref name="set" scoped="" ref="0x7f73bfc87340"/>
        <function-ref name="size" scoped="" ref="0x7f73bfc874d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f73c0cd3630" loc="59:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x7f73c0cd3630"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f73c0cd39b0"/>
        <function-ref name="setRoot" scoped="" ref="0x7f73c0cd3b40"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f73c0cd3cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x7f73c0cf78a0" loc="54:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x7f73c0cf78a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f73c0cf7c20"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f73c0cf7db0"/>
        <function-ref name="setType" scoped="" ref="0x7f73c0cff020"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f73c0cff1b0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f73c0cff340"/>
        <function-ref name="getType" scoped="" ref="0x7f73c0cff4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x7f73c0cc98d0" loc="64:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x7f73c0cc98d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7f73c0cc9d50"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7f73c0cd1020"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7f73c0cd11b0"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7f73c0cd1340"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7f73c0cd14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7f73c0cfe950" loc="51:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7f73c0cfe950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f73c0d0f660"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7f73c0cfecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f73c0d01020" loc="53:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f73c0d01020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c0d013a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c0d01530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c0d016c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c0d01850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c0d019e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f73c0d04870" loc="50:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f73c0d04870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f73c0d0f660"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c0d04bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f73c0d07800" loc="48:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f73c0d07800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c0d07b80"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c0d07d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c0d06020"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c0d061b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c0d06340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x7f73c0cd86d0" loc="57:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x7f73c0cd86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x7f73c0cd8a50"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f73c0cd8be0"/>
        <function-ref name="numNeighbors" scoped="" ref="0x7f73c0cd8d70"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x7f73c0ce5020"/>
        <function-ref name="getEtx" scoped="" ref="0x7f73c0ce51b0"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x7f73c0ce5340"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x7f73c0ce54d0"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x7f73c0ce5660"/>
        <function-ref name="getParent" scoped="" ref="0x7f73c0ce57f0"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x7f73c0ce5980"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x7f73c0ce5b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f73c0d06b70" loc="49:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f73c0d06b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f73c0d0f660"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c0d04020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x7f73c0cd53c0" loc="58:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x7f73c0cd53c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7f73c0cd5740"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7f73c0cd58d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x7f73c0ce6640" loc="55:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x7f73c0ce6640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f73c0ce69c0"/>
        <function-ref name="option" scoped="" ref="0x7f73c0ce6b50"/>
        <function-ref name="setEtx" scoped="" ref="0x7f73c0ce6ce0"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f73c0ce6e70"/>
        <function-ref name="clearOption" scoped="" ref="0x7f73c0cfd030"/>
        <function-ref name="getEtx" scoped="" ref="0x7f73c0cfd1c0"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f73c0cfd350"/>
        <function-ref name="setType" scoped="" ref="0x7f73c0cfd4e0"/>
        <function-ref name="setOption" scoped="" ref="0x7f73c0cfd670"/>
        <function-ref name="matchPacket" scoped="" ref="0x7f73c0cfd800"/>
        <function-ref name="getThl" scoped="" ref="0x7f73c0cfd990"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f73c0cfdb20"/>
        <function-ref name="matchInstance" scoped="" ref="0x7f73c0cfdcb0"/>
        <function-ref name="getType" scoped="" ref="0x7f73c0cf6020"/>
        <function-ref name="setThl" scoped="" ref="0x7f73c0cf61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f73c0d089c0" loc="47:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f73c0d089c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f73c0d08d40"/>
        <function-ref name="stop" scoped="" ref="0x7f73c0d07020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x7f73c0cd6390" loc="63:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x7f73c0cd6390"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x7f73c0cd6710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f73c0cbb470" loc="92:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x7f73c0cbb470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f73c0cbb7f0"/>
        <function-ref name="setRoot" scoped="" ref="0x7f73c0cbb980"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f73c0cbbb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x7f73c0cc2ce0" loc="86:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x7f73c0cc2ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f73c0cc10a0"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f73c0cc1230"/>
        <function-ref name="setType" scoped="" ref="0x7f73c0cc13c0"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f73c0cc1550"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f73c0cc16e0"/>
        <function-ref name="getType" scoped="" ref="0x7f73c0cc1870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x7f73c0cb5a30" loc="90:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x7f73c0cb5a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x7f73c0cb5db0"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x7f73c0cbc020"/>
        <function-ref name="txNoAck" scoped="" ref="0x7f73c0cbc1b0"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x7f73c0cbc340"/>
        <function-ref name="evicted" scoped="" ref="0x7f73c0cbc4d0"/>
        <function-ref name="clearDLQ" scoped="" ref="0x7f73c0cbc660"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x7f73c0cbc7f0"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x7f73c0cbc980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x7f73c0cb3b80" loc="97:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x7f73c0cb3b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7f73c0cb2020"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7f73c0cb21b0"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7f73c0cb2340"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7f73c0cb24d0"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7f73c0cb2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7f73c0cc39c0" loc="83:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7f73c0cc39c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f73c0d0f660"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7f73c0cc3d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f73c0cc2020" loc="85:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f73c0cc2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c0cc23a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c0cc2530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c0cc26c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c0cc2850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c0cc29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f73c0cc4da0" loc="82:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f73c0cc4da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f73c0d0f660"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c0cc3180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f73c0cc7e60" loc="80:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f73c0cc7e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c0cc6210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c0cc63a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c0cc6530"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c0cc66c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c0cc6850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x7f73c0cbfa00" loc="89:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x7f73c0cbfa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x7f73c0cbfd80"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f73c0cbe020"/>
        <function-ref name="numNeighbors" scoped="" ref="0x7f73c0cbe1b0"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x7f73c0cbe340"/>
        <function-ref name="getEtx" scoped="" ref="0x7f73c0cbe4d0"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x7f73c0cbe660"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x7f73c0cbe7f0"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x7f73c0cbe980"/>
        <function-ref name="getParent" scoped="" ref="0x7f73c0cbeb10"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x7f73c0cbeca0"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x7f73c0cbee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f73c0cc41d0" loc="81:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f73c0cc41d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f73c0d0f660"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c0cc4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x7f73c0cbcc60" loc="91:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x7f73c0cbcc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7f73c0cbb020"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7f73c0cbb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x7f73c0cc1b20" loc="87:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x7f73c0cc1b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f73c0cc0020"/>
        <function-ref name="option" scoped="" ref="0x7f73c0cc01b0"/>
        <function-ref name="setEtx" scoped="" ref="0x7f73c0cc0340"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f73c0cc04d0"/>
        <function-ref name="clearOption" scoped="" ref="0x7f73c0cc0660"/>
        <function-ref name="getEtx" scoped="" ref="0x7f73c0cc07f0"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f73c0cc0980"/>
        <function-ref name="setType" scoped="" ref="0x7f73c0cc0b10"/>
        <function-ref name="setOption" scoped="" ref="0x7f73c0cc0ca0"/>
        <function-ref name="matchPacket" scoped="" ref="0x7f73c0cc0e30"/>
        <function-ref name="getThl" scoped="" ref="0x7f73c0cbf020"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f73c0cbf1b0"/>
        <function-ref name="matchInstance" scoped="" ref="0x7f73c0cbf340"/>
        <function-ref name="getType" scoped="" ref="0x7f73c0cbf5d0"/>
        <function-ref name="setThl" scoped="" ref="0x7f73c0cbf760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f73c0cc7170" loc="79:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f73c0cc7170"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f73c0cc74f0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c0cc7680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x7f73c0cb3410" loc="96:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x7f73c0cb3410"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x7f73c0cb3890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f73c0b46780" loc="142:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f73c0b46780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c0b46b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x7f73c0b44a40" loc="145:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x7f73c0b44a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f73c0b44dc0"/>
        <function-ref name="setRoot" scoped="" ref="0x7f73c0b43020"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f73c0b431b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f73c0b5fc00" loc="126:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f73c0b5fc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c0b5d020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c0b5d1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c0b5d340"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c0b5d4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c0b5d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x7f73c0b3e270" loc="156:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x7f73c0b3e270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7f73c0b3e5f0"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7f73c0b3e780"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7f73c0b3e910"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7f73c0b3eaa0"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7f73c0b3ec30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x7f73c0b62720" loc="116:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x7f73c0b62720"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f73c0b62aa0"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f73c0b62c30"/>
        <function-ref name="setType" scoped="" ref="0x7f73c0b62dc0"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f73c0b61020"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f73c0b611b0"/>
        <function-ref name="getType" scoped="" ref="0x7f73c0b61340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x7f73c0b57890" loc="129:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x7f73c0b57890"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x7f73c0b57c10"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x7f73c0b57da0"/>
        <function-ref name="txNoAck" scoped="" ref="0x7f73c0b56020"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x7f73c0b561b0"/>
        <function-ref name="evicted" scoped="" ref="0x7f73c0b56340"/>
        <function-ref name="clearDLQ" scoped="" ref="0x7f73c0b564d0"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x7f73c0b56660"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x7f73c0b567f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SentCache" ref="0x7f73c0b49d40" loc="140:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SentCache" scoped="" ref="0x7f73c0b49d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
              <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x7f73c0b48980"/>
        <function-ref name="flush" scoped="" ref="0x7f73c0b46350"/>
        <function-ref name="lookup" scoped="" ref="0x7f73c0b48e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7f73c0b633a0" loc="114:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7f73c0b633a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f73c0d0f660"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7f73c0b63740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f73c0b63990" loc="115:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f73c0b63990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c0b63d10"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c0b62020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c0b621b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c0b62340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c0b624d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f73c0b64b00" loc="113:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f73c0b64b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f73c0d0f660"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c0b63020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f73c0b40a40" loc="149:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f73c0b40a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f73c0b40dc0"/>
        <function-ref name="rand32" scoped="" ref="0x7f73c0b3e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f73c0b65530" loc="111:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f73c0b65530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c0b658d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c0b65a60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c0b65bf0"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c0b65d80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c0b64020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RetxmitTimer" ref="0x7f73c0b5c3d0" loc="128:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RetxmitTimer" scoped="" ref="0x7f73c0b5c3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73c0b59a20"/>
        <function-ref name="fired" scoped="" ref="0x7f73c0b5a020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73c0b5ada0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73c0b5a920"/>
        <function-ref name="getdt" scoped="" ref="0x7f73c0b574a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f73c0b57020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73c0b5a4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73c0b5b110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73c0b59410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73c0b5b5e0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c0b5bab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f73c0b3d020" loc="162:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7f73c0b3d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f73c0b3d3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f73c0b3d530"/>
        <function-ref name="start" scoped="" ref="0x7f73c0b3d6c0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c0b3d850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f73c0b3db20" loc="234:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7f73c0b3db20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73c0b3c020"/>
        <function-ref name="runTask" scoped="" ref="0x7f73c0b3c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x7f73c0b54410" loc="137:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x7f73c0b54410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f73c0ca8db0"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f73c0ca72e0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f73c0b53da0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f73c0b51b40"/>
        <function-ref name="element" scoped="" ref="0x7f73c0b50220"/>
        <function-ref name="maxSize" scoped="" ref="0x7f73c0b53920"/>
        <function-ref name="dequeue" scoped="" ref="0x7f73c0b51490"/>
        <function-ref name="empty" scoped="" ref="0x7f73c0b53020"/>
        <function-ref name="size" scoped="" ref="0x7f73c0b534a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpInfo" ref="0x7f73c0b453d0" loc="144:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x7f73c0b453d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x7f73c0b45750"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f73c0b458e0"/>
        <function-ref name="numNeighbors" scoped="" ref="0x7f73c0b45a70"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x7f73c0b45c00"/>
        <function-ref name="getEtx" scoped="" ref="0x7f73c0b45d90"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x7f73c0b44020"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x7f73c0b441b0"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x7f73c0b44340"/>
        <function-ref name="getParent" scoped="" ref="0x7f73c0b444d0"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x7f73c0b44660"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x7f73c0b447f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f73c0b555d0" loc="131:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f73c0b555d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c0b55950"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c0b55ae0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c0b55c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c0b55e00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c0b54020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73c0b66550" loc="109:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73c0b66550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c0b668d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f73c0b643a0" loc="112:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f73c0b643a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f73c0d0f660"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c0b64740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x7f73c0b5f400" loc="118:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x7f73c0b5f400"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7f73c0b5f780"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7f73c0b5f910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnicastNameFreeRouting" ref="0x7f73c0b56a40" loc="130:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x7f73c0b56a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x7f73c0b56dc0"/>
        <function-ref name="routeFound" scoped="" ref="0x7f73c0b55020"/>
        <function-ref name="nextHop" scoped="" ref="0x7f73c0b551b0"/>
        <function-ref name="noRoute" scoped="" ref="0x7f73c0b55340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f73c0b41400" loc="148:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f73c0b41400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f73c0b41780"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f73c0b41910"/>
        <function-ref name="led1On" scoped="" ref="0x7f73c0b41aa0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f73c0b41c30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f73c0b41dc0"/>
        <function-ref name="get" scoped="" ref="0x7f73c0b40020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f73c0b401b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f73c0b407f0"/>
        <function-ref name="set" scoped="" ref="0x7f73c0b404d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f73c0b40340"/>
        <function-ref name="led0On" scoped="" ref="0x7f73c0b40660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f73c0b5d8b0" loc="127:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f73c0b5d8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f73c0b5dc30"/>
        <function-ref name="noAck" scoped="" ref="0x7f73c0b5ddc0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f73c0b5c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x7f73c0b61590" loc="117:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x7f73c0b61590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f73c0b61910"/>
        <function-ref name="option" scoped="" ref="0x7f73c0b61aa0"/>
        <function-ref name="setEtx" scoped="" ref="0x7f73c0b61c30"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f73c0b61dc0"/>
        <function-ref name="clearOption" scoped="" ref="0x7f73c0b60020"/>
        <function-ref name="getEtx" scoped="" ref="0x7f73c0b601b0"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f73c0b60340"/>
        <function-ref name="setType" scoped="" ref="0x7f73c0b604d0"/>
        <function-ref name="setOption" scoped="" ref="0x7f73c0b60660"/>
        <function-ref name="matchPacket" scoped="" ref="0x7f73c0b607f0"/>
        <function-ref name="getThl" scoped="" ref="0x7f73c0b60980"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f73c0b60b10"/>
        <function-ref name="matchInstance" scoped="" ref="0x7f73c0b60ca0"/>
        <function-ref name="getType" scoped="" ref="0x7f73c0b5f020"/>
        <function-ref name="setThl" scoped="" ref="0x7f73c0b5f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QEntryPool" ref="0x7f73c0b509f0" loc="138:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QEntryPool" scoped="" ref="0x7f73c0b509f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f73c0ca8db0"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f73c0ca72e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73c0b4db90"/>
        <function-ref name="maxSize" scoped="" ref="0x7f73c0b4d020"/>
        <function-ref name="empty" scoped="" ref="0x7f73c0b4e670"/>
        <function-ref name="put" scoped="" ref="0x7f73c0b4d4a0"/>
        <function-ref name="size" scoped="" ref="0x7f73c0b4eaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f73c0b43d20" loc="147:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f73c0b43d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73c0b420e0"/>
        <function-ref name="source" scoped="" ref="0x7f73c0b42270"/>
        <function-ref name="address" scoped="" ref="0x7f73c0b42400"/>
        <function-ref name="destination" scoped="" ref="0x7f73c0b42590"/>
        <function-ref name="setSource" scoped="" ref="0x7f73c0b42720"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73c0b428b0"/>
        <function-ref name="type" scoped="" ref="0x7f73c0b42a40"/>
        <function-ref name="setType" scoped="" ref="0x7f73c0b42bd0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73c0b42d60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73c0b41020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f73c0b411b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f73c0b66b20" loc="110:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f73c0b66b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f73c0b65020"/>
        <function-ref name="stop" scoped="" ref="0x7f73c0b651b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x7f73c0b46d90" loc="143:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSnoop" scoped="" ref="0x7f73c0b46d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c0b45180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MessagePool" ref="0x7f73c0b4c400" loc="139:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MessagePool" scoped="" ref="0x7f73c0b4c400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
            <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73c0b494c0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f73c0b4b920"/>
        <function-ref name="empty" scoped="" ref="0x7f73c0b4b020"/>
        <function-ref name="put" scoped="" ref="0x7f73c0b4bda0"/>
        <function-ref name="size" scoped="" ref="0x7f73c0b4b4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x7f73c0b43530" loc="146:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x7f73c0b43530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x7f73c0b43ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f73c0b32cd0" loc="42:/usr/bin/tinyos-main/tos/system/PoolC.nc">
      <component-ref qname="CtpP.MessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f73c0b32cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
            <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73c0b05e10"/>
        <function-ref name="maxSize" scoped="" ref="0x7f73c0b052a0"/>
        <function-ref name="empty" scoped="" ref="0x7f73c0b06940"/>
        <function-ref name="put" scoped="" ref="0x7f73c0b05720"/>
        <function-ref name="size" scoped="" ref="0x7f73c0b06dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f73bfb53e40" loc="56:/usr/bin/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f73bfb53e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
            <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73bfb4f090"/>
        <function-ref name="maxSize" scoped="" ref="0x7f73bfb514a0"/>
        <function-ref name="empty" scoped="" ref="0x7f73bfb52a80"/>
        <function-ref name="put" scoped="" ref="0x7f73bfb51920"/>
        <function-ref name="size" scoped="" ref="0x7f73bfb51020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73bfb53750" loc="55:/usr/bin/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73bfb53750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73bfb53ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f73c0b011e0" loc="42:/usr/bin/tinyos-main/tos/system/PoolC.nc">
      <component-ref qname="CtpP.QEntryPoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f73c0b011e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f73c0ca8db0"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f73c0ca72e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73c0aff2f0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f73c0b00720"/>
        <function-ref name="empty" scoped="" ref="0x7f73c0b01dd0"/>
        <function-ref name="put" scoped="" ref="0x7f73c0b00ba0"/>
        <function-ref name="size" scoped="" ref="0x7f73c0b002a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f73bfb3db40" loc="56:/usr/bin/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f73bfb3db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f73c0ca8db0"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f73c0ca72e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f73bfb3ac00"/>
        <function-ref name="maxSize" scoped="" ref="0x7f73bfb3a090"/>
        <function-ref name="empty" scoped="" ref="0x7f73bfb3c750"/>
        <function-ref name="put" scoped="" ref="0x7f73bfb3a510"/>
        <function-ref name="size" scoped="" ref="0x7f73bfb3cbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73bfb3d450" loc="55:/usr/bin/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73bfb3d450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73bfb3d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f73c0afbb70" loc="43:/usr/bin/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="CtpP.SendQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f73c0afbb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f73c0ca8db0"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f73c0ca72e0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f73c0ae0550"/>
        <function-ref name="enqueue" scoped="" ref="0x7f73c0ade2f0"/>
        <function-ref name="element" scoped="" ref="0x7f73c0ade960"/>
        <function-ref name="maxSize" scoped="" ref="0x7f73c0ae00d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f73c0ae0c00"/>
        <function-ref name="empty" scoped="" ref="0x7f73c0afa790"/>
        <function-ref name="size" scoped="" ref="0x7f73c0afac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x7f73c0aa5360" loc="39:/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <component-ref qname="CtpP.SentCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x7f73c0aa5360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
              <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x7f73c0aa3020"/>
        <function-ref name="flush" scoped="" ref="0x7f73c0aa39c0"/>
        <function-ref name="lookup" scoped="" ref="0x7f73c0aa34f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x7f73bfb204b0" loc="46:/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x7f73bfb204b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
              <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x7f73bfb1e0d0"/>
        <function-ref name="flush" scoped="" ref="0x7f73bfb1ea70"/>
        <function-ref name="lookup" scoped="" ref="0x7f73bfb1e5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73bfb21d50" loc="45:/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73bfb21d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73bfb20100"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpPacket" ref="0x7f73bfb1d020" loc="49:/usr/bin/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x7f73bfb1d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f73bfb1d3a0"/>
        <function-ref name="option" scoped="" ref="0x7f73bfb1d530"/>
        <function-ref name="setEtx" scoped="" ref="0x7f73bfb1d6c0"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f73bfb1d850"/>
        <function-ref name="clearOption" scoped="" ref="0x7f73bfb1d9e0"/>
        <function-ref name="getEtx" scoped="" ref="0x7f73bfb1db70"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f73bfb1dd00"/>
        <function-ref name="setType" scoped="" ref="0x7f73bfb1c020"/>
        <function-ref name="setOption" scoped="" ref="0x7f73bfb1c1b0"/>
        <function-ref name="matchPacket" scoped="" ref="0x7f73bfb1c340"/>
        <function-ref name="getThl" scoped="" ref="0x7f73bfb1c4d0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f73bfb1c660"/>
        <function-ref name="matchInstance" scoped="" ref="0x7f73bfb1c7f0"/>
        <function-ref name="getType" scoped="" ref="0x7f73bfb1ca80"/>
        <function-ref name="setThl" scoped="" ref="0x7f73bfb1cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f73c0aa1560" loc="45:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RoutingBeaconTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f73c0aa1560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73c0a9da20"/>
        <function-ref name="fired" scoped="" ref="0x7f73c0a9f020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73c0a9fda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73c0a9f920"/>
        <function-ref name="getdt" scoped="" ref="0x7f73c0a954a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f73c0a95020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73c0a9f4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73c0aa01b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73c0a9d410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73c0aa0680"/>
        <function-ref name="stop" scoped="" ref="0x7f73c0aa0b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f73c0a93020" loc="45:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RouteUpdateTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f73c0a93020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73c0a8f630"/>
        <function-ref name="fired" scoped="" ref="0x7f73c0a92a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73c0a90920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73c0a904a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f73c0a8e020"/>
        <function-ref name="gett0" scoped="" ref="0x7f73c0a8fab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73c0a90020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73c0a93c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73c0a8f020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73c0a92110"/>
        <function-ref name="stop" scoped="" ref="0x7f73c0a925e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f73c0a79020" loc="57:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f73c0a79020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c0a793a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x7f73c0a81180" loc="47:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x7f73c0a81180"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x7f73c0a81500"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x7f73c0a81690"/>
        <function-ref name="txNoAck" scoped="" ref="0x7f73c0a81820"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x7f73c0a819b0"/>
        <function-ref name="evicted" scoped="" ref="0x7f73c0a81b40"/>
        <function-ref name="clearDLQ" scoped="" ref="0x7f73c0a81cd0"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x7f73c0a81e60"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x7f73c0a80020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f73c0a808b0" loc="49:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f73c0a808b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c0a80c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c0a80dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c0a7f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c0a7f1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c0a7f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f73c0a7bd40" loc="54:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f73c0a7bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c0a7e0e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c0a7e270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c0a7e400"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c0a7e590"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c0a7e720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f73c0a84e50" loc="45:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f73c0a84e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c0a83210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c0a833a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c0a83530"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c0a836c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c0a83850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f73c0a79cc0" loc="59:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f73c0a79cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f73c0a78180"/>
        <function-ref name="rand32" scoped="" ref="0x7f73c0a78310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f73c0a7a1a0" loc="56:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f73c0a7a1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c0a7a520"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c0a7a6b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c0a7a840"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c0a7a9d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c0a7ab60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73c0a802a0" loc="48:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73c0a802a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c0a80620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x7f73c0a7ea80" loc="55:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMPacket" scoped="" ref="0x7f73c0a7ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73c0a7ee00"/>
        <function-ref name="source" scoped="" ref="0x7f73c0a7d020"/>
        <function-ref name="address" scoped="" ref="0x7f73c0a7d1b0"/>
        <function-ref name="destination" scoped="" ref="0x7f73c0a7d340"/>
        <function-ref name="setSource" scoped="" ref="0x7f73c0a7d4d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73c0a7d660"/>
        <function-ref name="type" scoped="" ref="0x7f73c0a7d7f0"/>
        <function-ref name="setType" scoped="" ref="0x7f73c0a7d980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73c0a7db10"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73c0a7dca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f73c0a7de30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f73c0a83af0" loc="46:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f73c0a83af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c0a83e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareBit" ref="0x7f73c0a7b6b0" loc="50:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x7f73c0a7b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x7f73c0a7ba30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f73c0a84640" loc="44:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f73c0a84640"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f73c0a849c0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c0a84b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkPacketMetadata" ref="0x7f73c0a796b0" loc="58:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f73c0a796b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f73c0a79a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f73c09af4b0" loc="49:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f73c09af4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c09af830"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c09af9c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c09afb50"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c09afce0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c09afe70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f73c09ae0f0" loc="50:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f73c09ae0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c09ae470"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c09ae600"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c09ae790"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c09ae920"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c09aeab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f73c09aed00" loc="51:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f73c09aed00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73c09ad0a0"/>
        <function-ref name="source" scoped="" ref="0x7f73c09ad230"/>
        <function-ref name="address" scoped="" ref="0x7f73c09ad3c0"/>
        <function-ref name="destination" scoped="" ref="0x7f73c09ad550"/>
        <function-ref name="setSource" scoped="" ref="0x7f73c09ad6e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73c09ad870"/>
        <function-ref name="type" scoped="" ref="0x7f73c09ada00"/>
        <function-ref name="setType" scoped="" ref="0x7f73c09adb90"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73c09add20"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73c09ac020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f73c09ac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f73c09ac440" loc="52:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f73c09ac440"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f73c09ac7c0"/>
        <function-ref name="noAck" scoped="" ref="0x7f73c09ac950"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f73c09acae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f73bfaf3020" loc="49:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f73bfaf3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73bfaf33a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73bfaf3530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73bfaf36c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f73bfaf3850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73bfaf39e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f73bfaf3c30" loc="50:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f73bfaf3c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73bfaf2020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73bfaf21b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73bfaf2340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73bfaf24d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73bfaf2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f73bfaf28b0" loc="51:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f73bfaf28b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73bfaf2c30"/>
        <function-ref name="source" scoped="" ref="0x7f73bfaf2dc0"/>
        <function-ref name="address" scoped="" ref="0x7f73bfaf1020"/>
        <function-ref name="destination" scoped="" ref="0x7f73bfaf11b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f73bfaf1340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73bfaf14d0"/>
        <function-ref name="type" scoped="" ref="0x7f73bfaf1660"/>
        <function-ref name="setType" scoped="" ref="0x7f73bfaf17f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73bfaf1980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73bfaf1b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f73bfaf1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f73bfaf0020" loc="52:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f73bfaf0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f73bfaf03a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f73bfaf0530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f73bfaf06c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f73bfae4830" loc="44:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f73bfae4830"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73bfae4bb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73bfae4d40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73bfae3020"/>
        <function-ref name="cancel" scoped="" ref="0x7f73bfae31b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73bfae3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f73bfae35f0" loc="46:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f73bfae35f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73bfae3970"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73bfae3b00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73bfae3c90"/>
        <function-ref name="cancel" scoped="" ref="0x7f73bfae3e20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73bfae2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f73bfae2270" loc="47:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f73bfae2270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73bfae25f0"/>
        <function-ref name="source" scoped="" ref="0x7f73bfae2780"/>
        <function-ref name="address" scoped="" ref="0x7f73bfae2910"/>
        <function-ref name="destination" scoped="" ref="0x7f73bfae2aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f73bfae2c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73bfae2dc0"/>
        <function-ref name="type" scoped="" ref="0x7f73bfae1020"/>
        <function-ref name="setType" scoped="" ref="0x7f73bfae11b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73bfae1340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73bfae14d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f73bfae1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f73c09a93d0" loc="46:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f73c09a93d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c09a9750"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c09a98e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c09a9a70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c09a9c00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c09a9d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f73c09aadc0" loc="45:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f73c09aadc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c09a9180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f73c09a7020" loc="47:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f73c09a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73c09a73a0"/>
        <function-ref name="source" scoped="" ref="0x7f73c09a7530"/>
        <function-ref name="address" scoped="" ref="0x7f73c09a76c0"/>
        <function-ref name="destination" scoped="" ref="0x7f73c09a7850"/>
        <function-ref name="setSource" scoped="" ref="0x7f73c09a79e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73c09a7b70"/>
        <function-ref name="type" scoped="" ref="0x7f73c09a7d00"/>
        <function-ref name="setType" scoped="" ref="0x7f73c09a6020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73c09a61b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73c09a6340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f73c09a64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f73c099eb00" loc="47:/usr/bin/tinyos-main/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f73c099eb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c099ee80"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c099d030"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c099d1c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c099d350"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c099d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f73c099e530" loc="46:/usr/bin/tinyos-main/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f73c099e530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c099e8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f73c099d730" loc="48:/usr/bin/tinyos-main/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f73c099d730"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73c099dab0"/>
        <function-ref name="source" scoped="" ref="0x7f73c099dc40"/>
        <function-ref name="address" scoped="" ref="0x7f73c099ddd0"/>
        <function-ref name="destination" scoped="" ref="0x7f73c0997020"/>
        <function-ref name="setSource" scoped="" ref="0x7f73c09971b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73c0997340"/>
        <function-ref name="type" scoped="" ref="0x7f73c09974d0"/>
        <function-ref name="setType" scoped="" ref="0x7f73c0997660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73c09977f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73c0997980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f73c0997b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f73c088a7a0" loc="110:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x7f73c088a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f73c088ab20"/>
        <function-ref name="setRoot" scoped="" ref="0x7f73c088acb0"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f73c088ae40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateRouteTask" ref="0x7f73c0873480" loc="271:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateRouteTask" scoped="" ref="0x7f73c0873480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73c0873800"/>
        <function-ref name="runTask" scoped="" ref="0x7f73c0873990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x7f73c0875270" loc="125:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x7f73c0875270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7f73c08755f0"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7f73c0875780"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7f73c0875910"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7f73c0875aa0"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7f73c0875c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x7f73c0885a10" loc="119:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x7f73c0885a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x7f73c0885d90"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x7f73c0884020"/>
        <function-ref name="txNoAck" scoped="" ref="0x7f73c08841b0"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x7f73c0884340"/>
        <function-ref name="evicted" scoped="" ref="0x7f73c08844d0"/>
        <function-ref name="clearDLQ" scoped="" ref="0x7f73c0884660"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x7f73c08847f0"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x7f73c0884980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpRoutingPacket" ref="0x7f73c0888e80" loc="113:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpRoutingPacket" scoped="" ref="0x7f73c0888e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpRoutingPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clearOptions" scoped="" ref="0x7f73c0887220"/>
        <function-ref name="setEtx" scoped="" ref="0x7f73c08873b0"/>
        <function-ref name="clearOption" scoped="" ref="0x7f73c0887540"/>
        <function-ref name="getEtx" scoped="" ref="0x7f73c08876d0"/>
        <function-ref name="setOption" scoped="" ref="0x7f73c0887860"/>
        <function-ref name="setParent" scoped="" ref="0x7f73c08879f0"/>
        <function-ref name="getParent" scoped="" ref="0x7f73c0887b80"/>
        <function-ref name="getOption" scoped="" ref="0x7f73c0887d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f73c08822b0" loc="121:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7f73c08822b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f73c0882630"/>
        <function-ref name="stopDone" scoped="" ref="0x7f73c08827c0"/>
        <function-ref name="start" scoped="" ref="0x7f73c0882950"/>
        <function-ref name="stop" scoped="" ref="0x7f73c0882ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f73c0877980" loc="124:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f73c0877980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f73c0877d00"/>
        <function-ref name="rand32" scoped="" ref="0x7f73c0875020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x7f73c08890e0" loc="111:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x7f73c08890e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x7f73c0889460"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f73c08895f0"/>
        <function-ref name="numNeighbors" scoped="" ref="0x7f73c0889780"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x7f73c0889910"/>
        <function-ref name="getEtx" scoped="" ref="0x7f73c0889aa0"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x7f73c0889c30"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x7f73c0889dc0"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x7f73c0888020"/>
        <function-ref name="getParent" scoped="" ref="0x7f73c08881b0"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x7f73c0888340"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x7f73c08884d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBeaconTask" ref="0x7f73c0874c50" loc="390:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendBeaconTask" scoped="" ref="0x7f73c0874c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f73c0873020"/>
        <function-ref name="runTask" scoped="" ref="0x7f73c08731b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f73c0886020" loc="114:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f73c0886020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f73c08863a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSend" ref="0x7f73c0886690" loc="117:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSend" scoped="" ref="0x7f73c0886690"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c0886a10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c0886ba0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c0886d30"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c0885020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c08851b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconTimer" ref="0x7f73c0880020" loc="122:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconTimer" scoped="" ref="0x7f73c0880020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73c087d630"/>
        <function-ref name="fired" scoped="" ref="0x7f73c087fa60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73c087e920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73c087e4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f73c087b020"/>
        <function-ref name="gett0" scoped="" ref="0x7f73c087dab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73c087e020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73c0880c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73c087d020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73c087f110"/>
        <function-ref name="stop" scoped="" ref="0x7f73c087f5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteTimer" ref="0x7f73c087b570" loc="123:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteTimer" scoped="" ref="0x7f73c087b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73c0878c40"/>
        <function-ref name="fired" scoped="" ref="0x7f73c08791e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73c0878020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73c0879ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f73c0877590"/>
        <function-ref name="gett0" scoped="" ref="0x7f73c0877110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73c0879660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73c087a390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73c0878630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73c087a860"/>
        <function-ref name="stop" scoped="" ref="0x7f73c087ad30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpCongestion" ref="0x7f73c0875e80" loc="126:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x7f73c0875e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7f73c0874220"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7f73c08743b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareBit" ref="0x7f73c0874600" loc="128:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x7f73c0874600"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x7f73c0874980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconReceive" ref="0x7f73c0885440" loc="118:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconReceive" scoped="" ref="0x7f73c0885440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c08857c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f73c0884bd0" loc="120:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f73c0884bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73c0883020"/>
        <function-ref name="source" scoped="" ref="0x7f73c08831b0"/>
        <function-ref name="address" scoped="" ref="0x7f73c0883340"/>
        <function-ref name="destination" scoped="" ref="0x7f73c08834d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f73c0883660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73c08837f0"/>
        <function-ref name="type" scoped="" ref="0x7f73c0883980"/>
        <function-ref name="setType" scoped="" ref="0x7f73c0883b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73c0883ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73c0883e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f73c0882020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f73c0888720" loc="112:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f73c0888720"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f73c0888aa0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c0888c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Routing" ref="0x7f73c088bcf0" loc="109:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Routing" scoped="" ref="0x7f73c088bcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x7f73c088a0a0"/>
        <function-ref name="routeFound" scoped="" ref="0x7f73c088a230"/>
        <function-ref name="nextHop" scoped="" ref="0x7f73c088a3c0"/>
        <function-ref name="noRoute" scoped="" ref="0x7f73c088a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f73c086a8c0" loc="45:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RetxmitTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f73c086a8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f73c28309b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f73c2830d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f73c0866cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f73c0868320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f73c08660d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f73c0868c20"/>
        <function-ref name="getdt" scoped="" ref="0x7f73c0865660"/>
        <function-ref name="gett0" scoped="" ref="0x7f73c08651e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f73c08687a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f73c08694e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f73c08666e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f73c08699b0"/>
        <function-ref name="stop" scoped="" ref="0x7f73c0869e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f73c0860b30" loc="49:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f73c0860b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c085f020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c085f1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c085f340"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c085f4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c085f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f73c085f8b0" loc="50:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f73c085f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c085fc30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c085fdc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c085d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c085d1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c085d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f73c085d590" loc="51:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f73c085d590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73c085d910"/>
        <function-ref name="source" scoped="" ref="0x7f73c085daa0"/>
        <function-ref name="address" scoped="" ref="0x7f73c085dc30"/>
        <function-ref name="destination" scoped="" ref="0x7f73c085ddc0"/>
        <function-ref name="setSource" scoped="" ref="0x7f73c085a020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73c085a1b0"/>
        <function-ref name="type" scoped="" ref="0x7f73c085a340"/>
        <function-ref name="setType" scoped="" ref="0x7f73c085a4d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73c085a660"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73c085a7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f73c085a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f73c085ac10" loc="52:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f73c085ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f73c0859020"/>
        <function-ref name="noAck" scoped="" ref="0x7f73c08591b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f73c0859340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f73bfa49d90" loc="49:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f73bfa49d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73bfa47180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73bfa47310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73bfa474a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f73bfa47630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73bfa477c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f73bfa47a10" loc="50:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f73bfa47a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73bfa47d90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73bfa46020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73bfa461b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73bfa46340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73bfa464d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f73bfa46720" loc="51:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f73bfa46720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73bfa46aa0"/>
        <function-ref name="source" scoped="" ref="0x7f73bfa46c30"/>
        <function-ref name="address" scoped="" ref="0x7f73bfa46dc0"/>
        <function-ref name="destination" scoped="" ref="0x7f73bfa45020"/>
        <function-ref name="setSource" scoped="" ref="0x7f73bfa451b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73bfa45340"/>
        <function-ref name="type" scoped="" ref="0x7f73bfa454d0"/>
        <function-ref name="setType" scoped="" ref="0x7f73bfa45660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73bfa457f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73bfa45980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f73bfa45b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f73bfa45da0" loc="52:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f73bfa45da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f73bfa44180"/>
        <function-ref name="noAck" scoped="" ref="0x7f73bfa44310"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f73bfa444a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f73bfa3a7f0" loc="44:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f73bfa3a7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73bfa3ab70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73bfa3ad00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73bfa39020"/>
        <function-ref name="cancel" scoped="" ref="0x7f73bfa391b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73bfa39340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f73bfa395f0" loc="46:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f73bfa395f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73bfa39970"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73bfa39b00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73bfa39c90"/>
        <function-ref name="cancel" scoped="" ref="0x7f73bfa39e20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73bfa38020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f73bfa38270" loc="47:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f73bfa38270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73bfa385f0"/>
        <function-ref name="source" scoped="" ref="0x7f73bfa38780"/>
        <function-ref name="address" scoped="" ref="0x7f73bfa38910"/>
        <function-ref name="destination" scoped="" ref="0x7f73bfa38aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f73bfa38c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73bfa38dc0"/>
        <function-ref name="type" scoped="" ref="0x7f73bfa37020"/>
        <function-ref name="setType" scoped="" ref="0x7f73bfa371b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73bfa37340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73bfa374d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f73bfa37660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f73c0857c70" loc="46:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f73c0857c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c0856020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c08561b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c0856340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c08564d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c0856660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f73c08576a0" loc="45:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f73c08576a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c0857a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f73c08568b0" loc="47:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f73c08568b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73c0856c30"/>
        <function-ref name="source" scoped="" ref="0x7f73c0856dc0"/>
        <function-ref name="address" scoped="" ref="0x7f73c0855020"/>
        <function-ref name="destination" scoped="" ref="0x7f73c08551b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f73c0855340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73c08554d0"/>
        <function-ref name="type" scoped="" ref="0x7f73c0855660"/>
        <function-ref name="setType" scoped="" ref="0x7f73c08557f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73c0855980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73c0855b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f73c0855ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f73c0809a70" loc="46:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="AntiTheftAppC.AlertSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f73c0809a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c0809df0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c0808020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c08081b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c0808340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c08084d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f73c082fe40" loc="45:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="AntiTheftAppC.AlertSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f73c082fe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c08091e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c0809370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c0809500"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c0809690"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c0809820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f73bfa1e8b0" loc="38:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="AntiTheftAppC.AlertSender.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f73bfa1e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73bfa1ec30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73bfa1edc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73bfa1d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73bfa1d1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73bfa1d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f73bfa1fb30" loc="37:/usr/bin/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="AntiTheftAppC.AlertSender.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f73bfa1fb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73bfa1e020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73bfa1e1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73bfa1e340"/>
        <function-ref name="cancel" scoped="" ref="0x7f73bfa1e4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73bfa1e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionId" ref="0x7f73bfa189e0" loc="46:/usr/bin/tinyos-main/tos/lib/net/CollectionIdP.nc">
      <component-ref qname="AntiTheftAppC.AlertSender.CollectionSenderP.CollectionIdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x7f73bfa189e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x7f73bfa18d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f73c0806860" loc="49:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="AntiTheftAppC.SendTheft"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f73c0806860"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73c0806be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c0806d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c0805020"/>
        <function-ref name="cancel" scoped="" ref="0x7f73c08051b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73c0805340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f73c0805590" loc="50:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="AntiTheftAppC.SendTheft"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f73c0805590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c0805910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c0805aa0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c0805c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c0805dc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c0804020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f73c0804270" loc="51:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="AntiTheftAppC.SendTheft"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f73c0804270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73c08045f0"/>
        <function-ref name="source" scoped="" ref="0x7f73c0804780"/>
        <function-ref name="address" scoped="" ref="0x7f73c0804910"/>
        <function-ref name="destination" scoped="" ref="0x7f73c0804aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f73c0804c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73c0804dc0"/>
        <function-ref name="type" scoped="" ref="0x7f73c0803020"/>
        <function-ref name="setType" scoped="" ref="0x7f73c08031b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73c0803340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73c08034d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f73c0803660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f73c08038f0" loc="52:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="AntiTheftAppC.SendTheft"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f73c08038f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f73c0803c70"/>
        <function-ref name="noAck" scoped="" ref="0x7f73c0803e00"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f73c0802020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f73bfa10e70" loc="49:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="AntiTheftAppC.SendTheft.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f73bfa10e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73bfa0f220"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73bfa0f3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73bfa0f540"/>
        <function-ref name="cancel" scoped="" ref="0x7f73bfa0f6d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73bfa0f860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f73bfa0fab0" loc="50:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="AntiTheftAppC.SendTheft.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f73bfa0fab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73bfa0fe30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73bfa0d020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73bfa0d1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73bfa0d340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73bfa0d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f73bfa0d720" loc="51:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="AntiTheftAppC.SendTheft.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f73bfa0d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73bfa0daa0"/>
        <function-ref name="source" scoped="" ref="0x7f73bfa0dc30"/>
        <function-ref name="address" scoped="" ref="0x7f73bfa0ddc0"/>
        <function-ref name="destination" scoped="" ref="0x7f73bfa0c020"/>
        <function-ref name="setSource" scoped="" ref="0x7f73bfa0c1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73bfa0c340"/>
        <function-ref name="type" scoped="" ref="0x7f73bfa0c4d0"/>
        <function-ref name="setType" scoped="" ref="0x7f73bfa0c660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73bfa0c7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73bfa0c980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f73bfa0cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f73bfa0cda0" loc="52:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="AntiTheftAppC.SendTheft.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f73bfa0cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f73bfa0b180"/>
        <function-ref name="noAck" scoped="" ref="0x7f73bfa0b310"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f73bfa0b4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f73bfa01020" loc="44:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="AntiTheftAppC.SendTheft.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f73bfa01020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73bfa013a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73bfa01530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73bfa016c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f73bfa01850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73bfa019e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f73bfa01c90" loc="46:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="AntiTheftAppC.SendTheft.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f73bfa01c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f73bfa000a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73bfa00230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73bfa003c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f73bfa00550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f73bfa006e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f73bfa00930" loc="47:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="AntiTheftAppC.SendTheft.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f73bfa00930"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73bfa00cb0"/>
        <function-ref name="source" scoped="" ref="0x7f73bfa00e40"/>
        <function-ref name="address" scoped="" ref="0x7f73bf9ff020"/>
        <function-ref name="destination" scoped="" ref="0x7f73bf9ff1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f73bf9ff340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73bf9ff4d0"/>
        <function-ref name="type" scoped="" ref="0x7f73bf9ff660"/>
        <function-ref name="setType" scoped="" ref="0x7f73bf9ff7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73bf9ff980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73bf9ffb10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f73bf9ffca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f73c0800970" loc="46:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="AntiTheftAppC.ReceiveTheft"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f73c0800970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f73c0800cf0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f73c0800e80"/>
        <function-ref name="getPayload" scoped="" ref="0x7f73c07fe030"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f73c07fe1c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f73c07fe350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f73c08003a0" loc="45:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="AntiTheftAppC.ReceiveTheft"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f73c08003a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f73c0800720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f73c07fe5a0" loc="47:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="AntiTheftAppC.ReceiveTheft"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f73c07fe5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f73c07fe920"/>
        <function-ref name="source" scoped="" ref="0x7f73c07feab0"/>
        <function-ref name="address" scoped="" ref="0x7f73c07fec40"/>
        <function-ref name="destination" scoped="" ref="0x7f73c07fedd0"/>
        <function-ref name="setSource" scoped="" ref="0x7f73c07fd020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f73c07fd1b0"/>
        <function-ref name="type" scoped="" ref="0x7f73c07fd340"/>
        <function-ref name="setType" scoped="" ref="0x7f73c07fd4d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f73c07fd660"/>
        <function-ref name="setGroup" scoped="" ref="0x7f73c07fd7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f73c07fd980"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Boot" loc="50:/usr/bin/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/usr/bin/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f73c2764a90" loc="60:/usr/bin/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/usr/bin/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Mts300Sounder" loc="1:/usr/bin/tinyos-main/tos/sensorboards/mts300/Mts300Sounder.nc">
      <function command="" provided="0" name="beep" ref="0x7f73c2755020" loc="3:/usr/bin/tinyos-main/tos/sensorboards/mts300/Mts300Sounder.nc">
        <interfacedef-ref qname="Mts300Sounder"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="length" ref="0x7f73c2759d60" loc="3:/usr/bin/tinyos-main/tos/sensorboards/mts300/Mts300Sounder.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/usr/bin/tinyos-main/tos/interfaces/Read.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f73c27722b0" loc="49:/usr/bin/tinyos-main/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f73c27722b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f73c2772b70" loc="55:/usr/bin/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="50:/usr/bin/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f73c27718f0" loc="63:/usr/bin/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f73c27722b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f73c2771340" loc="63:/usr/bin/tinyos-main/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f73c2771660" loc="63:/usr/bin/tinyos-main/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f73c27722b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/usr/bin/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/usr/bin/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f73c26bd270" loc="95:/usr/bin/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/usr/bin/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f73c26bda80" loc="105:/usr/bin/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/usr/bin/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationValue" loc="44:/usr/bin/tinyos-main/tos/lib/net/DisseminationValue.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/lib/net/DisseminationValue.nc">
        <short>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.</short>
        <long>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10;&#10; @date   Jan 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f73c2754020" loc="44:/usr/bin/tinyos-main/tos/lib/net/DisseminationValue.nc">
          <interfacedef-ref qname="DisseminationValue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f73c2754020"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="changed" ref="0x7f73c2753bd0" loc="69:/usr/bin/tinyos-main/tos/lib/net/DisseminationValue.nc">
        <documentation loc="66:/usr/bin/tinyos-main/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Signalled whenever variable may have changed.</short>
          <long>&#10; Signalled whenever variable may have changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f73c2754910" loc="55:/usr/bin/tinyos-main/tos/lib/net/DisseminationValue.nc">
        <documentation loc="46:/usr/bin/tinyos-main/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Obtain a pointer to the variable.</short>
          <long>&#10; Obtain a pointer to the variable. The provider of this&#10; interface only will change the memory the pointer references&#10; in tasks. Therefore the memory region does not change during&#10; the execution of any other task. A user of this interface&#10; must not in any circumstance write to this memory location.&#10;&#10; @return A const pointer to the variable.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f73c2754020"/></type-var>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f73c27533d0" loc="64:/usr/bin/tinyos-main/tos/lib/net/DisseminationValue.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Set the variable to a new value.</short>
          <long>&#10; Set the variable to a new value. The provider of this interface&#10; will copy the value from the pointer. NOTE: This command does&#10; not cause the new value to begin disseminating. It is intended to&#10; be used for setting default values.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f73c2754020"/></type-var>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x7f73c2753150" loc="64:/usr/bin/tinyos-main/tos/lib/net/DisseminationValue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f73c2754020"/></type-var>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f73c2783430" loc="53:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f73c2783430"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f73c277b1f0" loc="136:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f73c2781a60" loc="83:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f73c277e820" loc="114:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f73c277e250" loc="114:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f73c277e590" loc="114:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f73c277fa60" loc="98:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f73c2779270" loc="151:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f73c277b980" loc="144:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f73c277f270" loc="92:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f73c2782020" loc="64:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f73c2783d20" loc="64:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f73c277d820" loc="129:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f73c277d250" loc="129:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f73c277d590" loc="129:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f73c2782ae0" loc="73:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f73c2782860" loc="73:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f73c2781350" loc="78:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f73c26b8ab0" loc="113:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f73c26b8830" loc="113:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f73c26b5020" loc="138:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f73c26b7d30" loc="138:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f73c26d5d70" loc="104:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f73c26b7350" loc="130:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f73c26ab680" loc="65:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c26ab060" loc="65:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f73c26ab3f0" loc="65:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f73c26aa850" loc="71:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c26aa5d0" loc="71:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f73c26ac810" loc="57:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f73c26bad30" loc="52:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f73c26baab0" loc="52:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f73c26a6020" loc="80:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f73c26a75d0" loc="80:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f73c26a7950" loc="80:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f73c26a7c80" loc="80:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f73c269b660" loc="135:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c269b060" loc="135:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f73c269b390" loc="135:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f73c269a790" loc="123:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f73c26a5390" loc="96:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c26a5110" loc="96:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f73c269c8b0" loc="110:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c269c2d0" loc="110:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f73c269c620" loc="110:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/usr/bin/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f73c26967f0" loc="78:/usr/bin/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/usr/bin/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
              <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c26b9e60" loc="78:/usr/bin/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f73c26961e0" loc="78:/usr/bin/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f73c2696510" loc="78:/usr/bin/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/usr/bin/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f73c28c1c50" loc="67:/usr/bin/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f73c28bf4f0" loc="75:/usr/bin/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/usr/bin/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f73c2760a00" loc="61:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f73c275f1f0" loc="67:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f73c275f9d0" loc="72:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f73c275e940" loc="83:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f73c275b120" loc="100:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f73c275b930" loc="117:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f73c275e190" loc="77:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f73c275a4c0" loc="134:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f73c275a240" loc="134:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f73c2760270" loc="56:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f73c275d190" loc="89:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f73c275d920" loc="94:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadStream" loc="57:/usr/bin/tinyos-main/tos/interfaces/ReadStream.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/interfaces/ReadStream.nc">
        <short>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices.</short>
        <long>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices. The type of the values being&#10; read is given as a template argument. &#10;&#10; &#60;p> To use this interface, allocate one or more buffers in your own&#10; space. Then, call postBuffer to pass these buffers into the&#10; device. Call read() to begin the sampling process. The buffers will&#10; be filled in the order originally posted, and a bufferDone() event&#10; will be signaled once each buffer has been filled with data. At any&#10; time while the read() is running, you may post new buffers to be&#10; filled. If the lower layer finishes signaling readDone() and then&#10; finds that no more buffers have been posted, it will consider the&#10; read to be finished, and signal readDone(). &#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f73c276d020" loc="57:/usr/bin/tinyos-main/tos/interfaces/ReadStream.nc">
          <interfacedef-ref qname="ReadStream"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f73c276d020"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="bufferDone" ref="0x7f73c276a490" loc="89:/usr/bin/tinyos-main/tos/interfaces/ReadStream.nc">
        <documentation loc="80:/usr/bin/tinyos-main/tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a previously posted buffer has been filled by the&#10; device.</short>
          <long>&#10; Signalled when a previously posted buffer has been filled by the&#10; device. In the event of a read error, result will not equal&#10; SUCCESS, and the buffer will be filled with zeroes.&#10;&#10; @param result SUCCESS if the buffer was filled without errors&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer that has been filled&#10; @param count the number of values actually read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f73c276d020"/></type-var>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f73c276bac0" loc="89:/usr/bin/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f73c276be40" loc="90:/usr/bin/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f73c276d020"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7f73c276a1f0" loc="90:/usr/bin/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="postBuffer" ref="0x7f73c276c020" loc="68:/usr/bin/tinyos-main/tos/interfaces/ReadStream.nc">
        <documentation loc="58:/usr/bin/tinyos-main/tos/interfaces/ReadStream.nc">
          <short>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer.</short>
          <long>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer. Make sure your count doesn't&#10; overrun the buffer.&#10;&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer&#10; @param count the number of values the buffer should hold&#10;&#10; @return SUCCESS if the post was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f73c276d020"/></type-var>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f73c276d920" loc="68:/usr/bin/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f73c276d020"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7f73c276dc80" loc="68:/usr/bin/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f73c276b2a0" loc="78:/usr/bin/tinyos-main/tos/interfaces/ReadStream.nc">
        <documentation loc="70:/usr/bin/tinyos-main/tos/interfaces/ReadStream.nc">
          <short>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period.</short>
          <long>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period. &#10; &#10; @param usPeriod the between-sample period in microseconds&#10; &#10; @return SUCCESS if the reading process began&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="usPeriod" ref="0x7f73c276b020" loc="78:/usr/bin/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f73c2768ab0" loc="102:/usr/bin/tinyos-main/tos/interfaces/ReadStream.nc">
        <documentation loc="92:/usr/bin/tinyos-main/tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted.</short>
          <long>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted. In the event of a read error, all previously posted&#10; buffers will have their bufferDone() event signalled, and then&#10; this event will be signalled with a non-SUCCESS argument.&#10;&#10; @param result SUCCESS if all buffers were filled without errors&#10; @param usActualPeriod Actual sampling period used - may be different&#10;   from period requested at read time. Undefined if result != SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f73c2768470" loc="102:/usr/bin/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
            </type-int>
          </variable>
          <variable name="usActualPeriod" ref="0x7f73c2768820" loc="102:/usr/bin/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
      <function command="" provided="0" name="send" ref="0x7f73c26ca2b0" loc="75:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c26ccc50" loc="75:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f73c26ca020" loc="75:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f73c26c6890" loc="125:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c26c6290" loc="125:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f73c26c65c0" loc="125:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f73c26c59b0" loc="112:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f73c26c95f0" loc="89:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c26c9370" loc="89:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f73c26c8ac0" loc="100:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c26c84e0" loc="100:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f73c26c8830" loc="100:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/usr/bin/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/usr/bin/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f73c261b440" loc="59:/usr/bin/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/usr/bin/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f73c2625de0" loc="59:/usr/bin/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f73c261b1b0" loc="59:/usr/bin/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f73c2619550" loc="65:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c26192d0" loc="65:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f73c26185f0" loc="78:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c2618370" loc="78:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f73c2615970" loc="126:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c2615370" loc="126:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f73c26156a0" loc="126:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f73c260da10" loc="106:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f73c2616ab0" loc="94:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c26164f0" loc="94:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f73c2616820" loc="94:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f73c25eb020" loc="59:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c260bcc0" loc="59:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f73c25ea2a0" loc="71:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c25ea020" loc="71:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f73c25e8430" loc="85:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c25e81b0" loc="85:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f73c25db2e0" loc="65:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c25db060" loc="65:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f73c25de2b0" loc="46:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c25ecc20" loc="46:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f73c25de020" loc="46:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f73c25dc2a0" loc="59:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c25dc020" loc="59:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f73c25dd6f0" loc="53:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c25dd0d0" loc="53:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f73c25dd460" loc="53:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f73c25d92e0" loc="71:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c25d9060" loc="71:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f73c25f74a0" loc="177:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f73c26f4dc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f73c25f7220" loc="177:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f73c2607020" loc="88:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f73c2608c60" loc="88:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f73c2609350" loc="68:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f73c2609e10" loc="78:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f73c2609b90" loc="78:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f73c25fe960" loc="121:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f73c25fe380" loc="121:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f73c25fe6d0" loc="121:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f73c2605410" loc="103:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f73c2607e10" loc="103:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f73c2605180" loc="103:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f73c25fadc0" loc="147:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f73c25fab40" loc="147:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f73c25f82b0" loc="162:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f73c25f9be0" loc="162:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f73c25f8020" loc="162:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f73c26f49e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f73c25fbbc0" loc="136:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f73c25fb940" loc="136:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f73c25f6960" loc="187:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f73c26f4dc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f73c25f6380" loc="187:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f73c25f66d0" loc="187:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f73c26f4dc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f73c25ed7a0" loc="195:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f73c26f4dc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x7f73c25d7d40" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f73c25d7530" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f73c25d72b0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f73c25d55e0" loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f73c25e67a0" loc="35:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f73c25e67a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f73c25e69e0" loc="35:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73c25e69e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f73c25cb840" loc="63:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73c25e69e0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c25cb5c0" loc="63:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f73c25c89d0" loc="70:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c25c8750" loc="70:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f73c25cc5f0" loc="49:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c25cc370" loc="49:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f73c25c7d00" loc="78:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73c25e69e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c25c7710" loc="78:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f73c25c7a70" loc="78:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73c25e69e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x7f73c25a5380" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f73c25a5380"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x7f73c259b550" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c259b2d0" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f73c259caa0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f73c25a5380"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c259c820" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f73c259c020" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c25a5cb0" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f73c25992f0" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f73c25a5380"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c259bca0" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f73c2599060" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f73c25a5380"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/usr/bin/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f73c258bc50" loc="53:/usr/bin/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f73c258bc50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f73c25865a0" loc="61:/usr/bin/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/usr/bin/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/usr/bin/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/usr/bin/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f73c2589490" loc="47:/usr/bin/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c2589210" loc="47:/usr/bin/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f73c254ebf0" loc="120:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f73c2555be0" loc="97:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f73c2555270" loc="88:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f73c254e420" loc="102:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f73c254d8b0" loc="128:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x7f73c2549e80" loc="41:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f73c26ff630"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c2549c00" loc="41:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f73c254ca30" loc="37:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f73c26ff630"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f73c2549490" loc="39:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f73c26ff630"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c2549210" loc="39:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f73c2547990" loc="45:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f73c26ff630"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c2547370" loc="45:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f73c2547700" loc="45:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f73c26ff630"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f73c2548be0" loc="43:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f73c26ff630"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c25485c0" loc="43:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f73c2548950" loc="43:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f73c26ff630"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x7f73c2545d20" loc="49:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f73c26ff210"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c2545aa0" loc="49:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x7f73c253ea50" loc="51:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7f73c26ff210"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c253e440" loc="51:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f73c253e7c0" loc="51:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7f73c26ff210"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f73c2545350" loc="47:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c25450d0" loc="47:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7f73c253d1f0" loc="53:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f73c26ff210"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f73c255ecd0" loc="67:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f73c26ff630"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f73c255e380" loc="67:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f73c26ff630"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f73c255e700" loc="67:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f73c255ea30" loc="67:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f73c2559660" loc="122:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c2559060" loc="122:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f73c2559390" loc="122:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f73c255a790" loc="110:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f73c255cc00" loc="83:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c255c980" loc="83:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f73c255bde0" loc="97:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c255b800" loc="97:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f73c255bb50" loc="97:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x7f73c24e6b50" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x7f73c24f79b0" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24f7730" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x7f73c24dc2a0" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f73c26f4dc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24dc020" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x7f73c24dba30" loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24db7b0" loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f73c24dfa50" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24df7d0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f73c24e52e0" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24e5060" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f73c24de790" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24de1b0" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f73c24de500" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f73c24df050" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24e5a40" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f73c24e5d90" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f73c24db020" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f73c26f4dc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24dc9d0" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f73c24dcd20" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f73c26f4dc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x7f73c24fa960" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x7f73c24ea350" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x7f73c24e75f0" loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24e7370" loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x7f73c24eae60" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24eabe0" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x7f73c24e99a0" loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24e9720" loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x7f73c24a91f0" loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x7f73c24aa2a0" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7f73c2702180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x7f73c24aa020" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7f73c2702180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f73c24aaa40" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x7f73c24ac660" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x7f73c24a9a10" loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f73c2702180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x7f73c249d020" loc="70:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c249ec20" loc="70:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f73c24a62a0" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24a6020" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f73c249f950" loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f73c249f120" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24a6ad0" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f73c24a6e20" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7f73c24a7630" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24a73b0" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7f73c249e430" loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c249e1b0" loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f73c2515020" loc="46:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7f73c25166c0" loc="40:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c2516440" loc="40:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7f73c2515b50" loc="52:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c25158d0" loc="52:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x7f73c250f420" loc="59:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x7f73c250d020" loc="65:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c250fd20" loc="65:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x7f73c24f82a0" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24f8020" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x7f73c25051f0" loc="86:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x7f73c25069d0" loc="80:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f73c25063c0" loc="80:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f73c2506740" loc="80:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7f73c250a3f0" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c250a170" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x7f73c2508020" loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c250ac80" loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x7f73c2507020" loc="69:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f73c2508910" loc="69:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f73c2508c90" loc="69:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x7f73c2518a80" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7f73c250b910" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c250b370" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f73c250b680" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7f73c2507b90" loc="75:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c2507910" loc="75:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x7f73c24be3d0" loc="131:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24be150" loc="131:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x7f73c24c5a80" loc="120:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24c5800" loc="120:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x7f73c24d52b0" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24d6c10" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x7f73c24d5020" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x7f73c24cd3d0" loc="75:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24cd150" loc="75:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x7f73c24b93a0" loc="156:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24bad90" loc="156:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f73c24b9110" loc="156:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x7f73c24cf8a0" loc="69:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24cf620" loc="69:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x7f73c24bf930" loc="125:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24bf370" loc="125:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x7f73c24bf6a0" loc="125:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x7f73c24ccd00" loc="88:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f73c24cc6f0" loc="88:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f73c24cca70" loc="88:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x7f73c24ba5f0" loc="151:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24ba370" loc="151:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x7f73c24d5d60" loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24d5ae0" loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x7f73c24c9750" loc="99:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24c94d0" loc="99:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x7f73c24cbc00" loc="94:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f73c24cb5f0" loc="94:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f73c24cb970" loc="94:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x7f73c24b6b50" loc="178:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f73c26ff630"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7f73c24b9e20" loc="162:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24b9ba0" loc="162:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7f73c24b6350" loc="173:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f73c26ff210"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x7f73c24bbad0" loc="146:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24bb4f0" loc="146:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f73c24bb840" loc="146:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x7f73c24cde50" loc="81:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24cdbd0" loc="81:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x7f73c24c5020" loc="115:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24c7920" loc="115:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x7f73c24c7c60" loc="115:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x7f73c24bd2b0" loc="136:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24beb90" loc="136:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x7f73c24bd020" loc="136:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f73c24b55f0" loc="185:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24b5370" loc="185:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7f73c24c85c0" loc="105:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24c8020" loc="105:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f73c24c8330" loc="105:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x7f73c24d6430" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24d61b0" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7f73c24b7a00" loc="168:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24b7780" loc="168:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x7f73c24bdd30" loc="141:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24bdab0" loc="141:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x7f73c24c7110" loc="110:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24c8e40" loc="110:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x7f73c24fce00" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24fc820" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x7f73c24fcb70" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x7f73c24fb620" loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7f73c24fd430" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24fd1b0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x7f73c24fc020" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24fdc40" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x7f73c24f5c50" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24f59d0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x7f73c24f5110" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24fee20" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x7f73c24ef4d0" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x7f73c24ed020" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c24efd20" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f73c2419570" loc="56:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f73c2419570"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f73c24197b0" loc="56:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73c24197b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f73c2415350" loc="109:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73c24197b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f73c2417390" loc="78:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f73c2416990" loc="103:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73c24197b0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73c24197b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f73c24163c0" loc="103:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73c24197b0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f73c2416700" loc="103:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73c24197b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f73c2417b70" loc="88:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f73c2415b40" loc="116:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73c24197b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f73c2418350" loc="66:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73c24197b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f73c24180d0" loc="66:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73c24197b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f73c2418b80" loc="73:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x7f73c23fd020" loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x7f73c23fd930" loc="72:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x7f73c23fb350" loc="79:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x7f73c23fe740" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x7f73c23b56c0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c23b5440" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f73c23af2a0" loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c23af020" loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f73c23b1600" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c23b1020" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f73c23b1370" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7f73c23b7d20" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
              <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c23b7a60" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f73c23961f0" loc="50:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f73c2395190" loc="60:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f73c23969d0" loc="55:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f73c26f4dc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f73c2398940" loc="45:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f73c26f4dc0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f73c2398360" loc="45:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f73c26f4dc0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f73c23986b0" loc="45:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/usr/bin/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f73c22c7540" loc="53:/usr/bin/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f73c22c7e70" loc="61:/usr/bin/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/usr/bin/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/usr/bin/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/usr/bin/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f73c22bf660" loc="65:/usr/bin/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f73c22c5db0" loc="59:/usr/bin/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/usr/bin/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/usr/bin/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/usr/bin/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f73c22c8c80" loc="90:/usr/bin/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/usr/bin/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f73c22c1530" loc="98:/usr/bin/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/usr/bin/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/usr/bin/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f73c22ba0e0" loc="62:/usr/bin/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f73c22a8bc0" loc="60:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f73c22a8940" loc="60:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f73c22aa190" loc="31:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f73c22aac10" loc="39:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f73c22aa990" loc="39:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f73c22a9780" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f73c22a9500" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f73c22a8070" loc="53:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f73c22940e0" loc="44:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f73c2294810" loc="45:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f73c22952b0" loc="42:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f73c2293760" loc="47:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f73c22959b0" loc="43:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f73c2293020" loc="46:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f73c22974c0" loc="40:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f73c2297b90" loc="41:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/usr/bin/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/usr/bin/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f73c3835c40" loc="57:/usr/bin/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/usr/bin/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f73c28cfbf0" loc="72:/usr/bin/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/usr/bin/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f73c28cf3e0" loc="65:/usr/bin/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/usr/bin/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/usr/bin/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f73c27d1ab0" loc="76:/usr/bin/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/usr/bin/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/usr/bin/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/usr/bin/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f73c27ad1f0" loc="62:/usr/bin/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/usr/bin/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f73c286d470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/usr/bin/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f73c27edb80" loc="52:/usr/bin/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f73c20742a0" loc="79:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f73c207a1a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f73c2074020" loc="79:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f73c207a1a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f73c20761f0" loc="53:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f73c2076cf0" loc="62:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f73c207a1a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f73c2076a70" loc="62:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f73c207a1a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f73c2075640" loc="70:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f73c207a1a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7f73c1ebd7f0" loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
              <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c1ebd530" loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x7f73c1ec0b60" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c1ec08e0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f73c1ea85e0" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f73c1ea8360" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x7f73c1ea8dc0" loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f73c1ea92a0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f73c1ea9020" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f73c1ea9c20" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f73c1ea99a0" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x7f73c1eae0b0" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f73c1eafdf0" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x7f73c1eac680" loc="71:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f73c1eac400" loc="71:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x7f73c1eaebc0" loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f73c1eae940" loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x7f73c1eab2a0" loc="80:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f73c1eab020" loc="80:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x7f73c1eaf5b0" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f73c1eaf330" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x7f73c1e030e0" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x7f73c1e02270" loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f73c1e02d00" loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f73c1e02a80" loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x7f73c1e01510" loc="69:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x7f73c1e03980" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f73c1e01dc0" loc="74:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x7f73c1e05b10" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c1e05890" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x7f73c1dfa020" loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f73c1dfd6f0" loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f73c1dfd470" loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/usr/bin/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f73c1d81990" loc="52:/usr/bin/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f73c1d81190" loc="46:/usr/bin/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/usr/bin/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/usr/bin/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f73c1d53980" loc="53:/usr/bin/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f73c1d53980"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f73c1d504f0" loc="64:/usr/bin/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/usr/bin/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f73c1d53980"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f73c1d50270" loc="64:/usr/bin/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f73c1d53980"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x7f73c1d29d70" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c1d29af0" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f73c1d2eb10" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c1d2e890" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x7f73c1d2b930" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c1d2b370" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f73c1d2b6a0" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f73c1d29390" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c1d29110" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x7f73c1cf62a0" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f73c1cf6020" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f73c1cf97b0" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f73c1c55460" loc="57:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f73c1c55460"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f73c1c556a0" loc="57:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73c1c556a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f73c1c54020" loc="64:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73c1c556a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f73c1c53120" loc="76:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f73c1c548a0" loc="71:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f73c1c53880" loc="82:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f73c1c19b20" loc="89:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f73c1c1a8e0" loc="85:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f73c1c1c5a0" loc="79:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f73c1c19350" loc="86:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f73c1c190d0" loc="86:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f73c1c1a110" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f73c1c1be30" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f73c1c175c0" loc="90:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f73c1c17340" loc="90:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f73c1c1cd40" loc="80:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f73c1c1b710" loc="81:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f73c1c1b490" loc="81:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x7f73c1c07910" loc="92:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x7f73c1c0a880" loc="68:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7f73c1c09030" loc="74:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7f73c1c09860" loc="80:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f73c1c06190" loc="98:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7f73c1c070e0" loc="86:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f73c1c0b5e0" loc="57:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f73c280ada0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f73c2809230"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f73c1c0a040" loc="63:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f73c280ada0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f73c2809230"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f73c1c0bda0" loc="63:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f73c280ada0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f73c2809230"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f73c1c150d0" loc="41:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73c1c150d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f73c1c119f0" loc="74:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f73c1c14bf0" loc="58:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f73c1c15a10" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73c1c150d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f73c1c13390" loc="62:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f73c1c101f0" loc="80:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f73c1c14440" loc="54:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73c1c150d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f73c1c141c0" loc="54:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73c1c150d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f73c1c13b00" loc="65:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f73c1c11270" loc="68:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f73c1c30430" loc="55:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f73c1c30430"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f73c1c2a020" loc="98:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f73c1c2b020" loc="87:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f73c1c30d60" loc="61:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f73c1c30430"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f73c1c2aa00" loc="104:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f73c1c2a780" loc="104:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f73c1c29270" loc="110:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f73c1c2e7b0" loc="75:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f73c1c2e020" loc="70:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f73c1c2b7e0" loc="93:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f73c1c2f760" loc="67:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f73c1c30430"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f73c1c2f4e0" loc="67:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f73c1c30430"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f73c1c2c020" loc="78:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f73c1c2c770" loc="81:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/usr/bin/tinyos-main/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f73c19c5910" loc="59:/usr/bin/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f73c19c5910"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f73c19c5b50" loc="59:/usr/bin/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73c19c5b50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f73c19bc6b0" loc="66:/usr/bin/tinyos-main/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73c19c5b50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f73c19bc430" loc="66:/usr/bin/tinyos-main/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73c19c5b50"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f73c19bf020" loc="54:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f73c19be1f0" loc="66:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f73c19bf9c0" loc="61:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f73c19bf740" loc="61:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f73c19c1760" loc="53:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f73c19ca810" loc="62:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f73c19ca590" loc="62:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f73c19c8bf0" loc="74:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f73c19c8970" loc="74:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f73c19c80e0" loc="68:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f73c19c76c0" loc="81:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f73c19c7440" loc="81:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f73c18c6350" loc="40:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73c18c6350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7f73c18bd2a0" loc="88:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7f73c18bd020" loc="88:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f73c18be020" loc="76:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f73c18c6c90" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73c18c6350"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f73c18c1110" loc="60:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73c18c6350"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f73c18c2e10" loc="60:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73c18c6350"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f73c18c18c0" loc="64:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f73c18be7e0" loc="82:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f73c18c2670" loc="53:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73c18c6350"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f73c18c23f0" loc="53:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f73c18c6350"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f73c18bf070" loc="67:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f73c18bf7c0" loc="70:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f73c18a22c0" loc="70:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f73c18a38b0" loc="70:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f73c18a3c40" loc="70:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f73c18a2020" loc="70:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f73c18a0800" loc="82:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f73c189fae0" loc="82:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f73c189fe70" loc="82:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f73c18a01e0" loc="82:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f73c18a0550" loc="83:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/usr/bin/tinyos-main/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f73c18a64c0" loc="45:/usr/bin/tinyos-main/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/usr/bin/tinyos-main/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f73c18a6240" loc="45:/usr/bin/tinyos-main/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7f73c188b560" loc="86:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7f73c18814d0" loc="126:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7f73c1886dd0" loc="117:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7f73c187f020" loc="128:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7f73c1881c70" loc="128:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7f73c188cd80" loc="83:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7f73c18839e0" loc="122:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7f73c1883760" loc="122:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f73c1887510" loc="113:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7f73c1887290" loc="113:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f73c188a4e0" loc="97:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7f73c187cc20" loc="141:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f73c187c9a0" loc="141:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f73c1887cb0" loc="114:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7f73c187e2a0" loc="131:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7f73c187e020" loc="131:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f73c187d270" loc="136:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7f73c1882c80" loc="125:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7f73c1882a00" loc="125:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7f73c187c270" loc="140:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7f73c18857d0" loc="119:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7f73c1885550" loc="119:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f73c1888020" loc="103:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f73c188ac40" loc="103:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f73c1886670" loc="116:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7f73c18863f0" loc="116:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7f73c1882270" loc="123:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7f73c187f790" loc="129:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7f73c187ea00" loc="132:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f73c187da20" loc="138:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7f73c1883020" loc="120:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f73c188bcf0" loc="89:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f73c1888a20" loc="109:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f73c18887a0" loc="109:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/usr/bin/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/usr/bin/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f73c181ae10" loc="95:/usr/bin/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/usr/bin/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f73c18176a0" loc="105:/usr/bin/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/usr/bin/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x7f73c179e850" loc="81:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f73c179bde0" loc="87:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f73c179f8f0" loc="79:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f73c1799020" loc="91:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f73c179a810" loc="88:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f73c179a590" loc="88:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f73c179dc40" loc="83:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f73c179d9c0" loc="83:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f73c1799a20" loc="92:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f73c17997a0" loc="92:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f73c179e0e0" loc="80:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x7f73c179b610" loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f73c179b390" loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f73c179d2a0" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f73c179d020" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/usr/bin/tinyos-main/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f73c1532950" loc="68:/usr/bin/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/usr/bin/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f73c1532190" loc="61:/usr/bin/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/usr/bin/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f73c15349a0" loc="54:/usr/bin/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f73c15340e0" loc="53:/usr/bin/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/usr/bin/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicaBusAdc" loc="16:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusAdc.nc">
      <documentation loc="11:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusAdc.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus. Just provides the PW0-PW7 digital I/O pins.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x7f73c152a3e0" loc="20:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusAdc.nc">
        <documentation loc="17:/usr/bin/tinyos-main/tos/platforms/mica/MicaBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.</short>
          <long>&#10; Return the A/D channel number to use for one of the ADCn pins.&#10;</long>
        </documentation>
        <interfacedef-ref qname="MicaBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f73c150e020" loc="56:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f73c150dac0" loc="75:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f73c150f780" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f73c150d2a0" loc="70:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f73c150d020" loc="70:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f73c150f020" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f73c150e7d0" loc="63:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f73c1500680" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x7f73c145a070" loc="32:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f73c145b7f0" loc="25:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x7f73c145a8c0" loc="39:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f73c144de00" loc="56:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f73c144b020" loc="73:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f73c144d570" loc="46:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f73c144c6d0" loc="65:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f73c144b950" loc="81:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/usr/bin/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/usr/bin/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f73c13c9770" loc="62:/usr/bin/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/usr/bin/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/usr/bin/tinyos-main/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f73c13347c0" loc="52:/usr/bin/tinyos-main/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f73c13347c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f73c13310e0" loc="58:/usr/bin/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f73c1331e50" loc="66:/usr/bin/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/usr/bin/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f73c13347c0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f73c13318a0" loc="66:/usr/bin/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f73c1331bc0" loc="66:/usr/bin/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f73c13347c0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f73c1321d40" loc="100:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f73c1321020" loc="100:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f73c13213a0" loc="100:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f73c1321720" loc="101:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f73c1321a90" loc="101:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f73c131fb90" loc="119:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f73c1320a40" loc="119:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f73c1320d80" loc="119:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7f73c131f110" loc="119:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x7f73c131f4f0" loc="120:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x7f73c131f8d0" loc="120:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f73c13267a0" loc="70:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f73c1329a60" loc="70:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f73c1329de0" loc="70:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f73c1326180" loc="71:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f73c13264f0" loc="71:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f73c1323190" loc="91:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f73c1324830" loc="81:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f73c1324260" loc="81:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f73c13245a0" loc="81:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x7f73c130ec00" loc="114:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x7f73c13167d0" loc="53:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f73c28486c0"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x7f73c2848b90"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x7f73c12fc020" loc="140:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f73c12fed30" loc="140:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f73c130d4c0" loc="122:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x7f73c1312560" loc="82:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x7f73c13152a0" loc="58:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f73c28486c0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7f73c2848b90"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x7f73c1315020" loc="58:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f73c28486c0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7f73c2848b90"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x7f73c13114e0" loc="91:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x7f73c12fe4d0" loc="133:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f73c12fc820" loc="150:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x7f73c1312cc0" loc="86:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x7f73c13104b0" loc="99:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x7f73c1311c90" loc="95:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7f73c1310c40" loc="106:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x7f73c130dc90" loc="127:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x7f73c1313560" loc="69:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f73c2837590"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f73c2837c70"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x7f73c13132e0" loc="69:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f73c2837590"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f73c2837c70"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x7f73c130e4b0" loc="110:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x7f73c1315ae0" loc="64:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f73c2837590"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f73c2837c70"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f73c1313d70" loc="75:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f73c12fb400" loc="156:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f73c12fb180" loc="156:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrickleTimer" loc="57:/usr/bin/tinyos-main/tos/lib/net/TrickleTimer.nc">
      <function event="" provided="0" name="fired" ref="0x7f73c0f36760" loc="90:/usr/bin/tinyos-main/tos/lib/net/TrickleTimer.nc">
        <documentation loc="87:/usr/bin/tinyos-main/tos/lib/net/TrickleTimer.nc">
          <short>&#10; The trickle timer has fired.</short>
          <long>&#10; The trickle timer has fired. Signaled if C &#38;gt; K.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="incrementCounter" ref="0x7f73c0f36020" loc="85:/usr/bin/tinyos-main/tos/lib/net/TrickleTimer.nc">
        <documentation loc="82:/usr/bin/tinyos-main/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Increment the counter C.</short>
          <long>&#10; Increment the counter C. When an interval ends, C is set to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f73c0f38760" loc="80:/usr/bin/tinyos-main/tos/lib/net/TrickleTimer.nc">
        <documentation loc="76:/usr/bin/tinyos-main/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Reset the timer period to L.</short>
          <long>&#10; Reset the timer period to L. If called while the timer is running,&#10; then a new interval (of length L) begins immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f73c0f47780" loc="68:/usr/bin/tinyos-main/tos/lib/net/TrickleTimer.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Start the trickle timer.</short>
          <long>&#10; Start the trickle timer. At boot, the timer period is its maximum&#10; value (H). If a protocol requires starting at the minimum value&#10; (e.g., fast start), then it should call &#60;tt>reset&#60;/tt> before&#10; &#60;tt>start&#60;/tt>.&#10;&#10; @return error_t SUCCESS if the timer was started, EBUSY if it is already&#10; running, and FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f73c0f38020" loc="74:/usr/bin/tinyos-main/tos/lib/net/TrickleTimer.nc">
        <documentation loc="70:/usr/bin/tinyos-main/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Stop the trickle timer.</short>
          <long>&#10; Stop the trickle timer. This call sets the timer period to H and&#10; C to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationCache" loc="44:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <short>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.</short>
        <long>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-04 04:31:08 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestData" ref="0x7f73c0f45480" loc="47:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x7f73c0f451c0" loc="47:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="storeData" ref="0x7f73c0f3d960" loc="48:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f73c0f3d020" loc="48:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7f73c0f3d360" loc="48:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
          <variable name="seqno" ref="0x7f73c0f3d6c0" loc="48:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="newData" ref="0x7f73c0f3b7a0" loc="50:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="start" ref="0x7f73c0f46390" loc="45:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestSeqno" ref="0x7f73c0f3b0e0" loc="49:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f73c37cd090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="stop" ref="0x7f73c0f46a80" loc="46:/usr/bin/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationUpdate" loc="48:/usr/bin/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
        <short>&#10; Update a network shared (disseminated) value.</short>
        <long>&#10; Update a network shared (disseminated) value. Updates are assured&#10; to be eventually consistent across a connected network. If multiple&#10; nodes update a value simultaneously, then nodes within the network&#10; will see a series of one or more updates, the last update will&#10; be the same for all nodes. Components that need to use the&#10; variable should use the DisseminationValue interface.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10; @date   January 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f73c0e026f0" loc="48:/usr/bin/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
          <interfacedef-ref qname="DisseminationUpdate"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f73c0e026f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="change" ref="0x7f73c0dff5c0" loc="60:/usr/bin/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
        <documentation loc="49:/usr/bin/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
          <short>&#10; Update the variable to a new value.</short>
          <long>&#10; Update the variable to a new value. This changes the local copy&#10; and begins to disseminate the new value throughout the network.&#10; As other nodes may have also changed the variable, it is possible&#10; that an update may not 'stick,' but will instead be overwritten by&#10; a separate update.&#10;&#10; @param newVal A pointer to the new value. The memory pointed to&#10; by newVal is copied out, so newVal can be reclaimed when&#10; &#60;tt>change&#60;/tt> returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f73c0e026f0"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f73c0dff340" loc="60:/usr/bin/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f73c0e026f0"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVector" loc="40:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
        <short>&#10; Interface to a bit vector.</short>
        <long>&#10; Interface to a bit vector.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearAll" ref="0x7f73c0dae840" loc="45:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
        <documentation loc="42:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
          <short>&#10; Clear all bits in the vector.</short>
          <long>&#10; Clear all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f73c0da9e00" loc="69:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
        <documentation loc="65:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to clear.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7f73c0da9b80" loc="69:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f73c0da8820" loc="75:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
        <documentation loc="71:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
          <short>&#10; Toggle a bit in the vector.</short>
          <long>&#10; Toggle a bit in the vector.&#10; @param bitnum Bit to toggle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7f73c0da85a0" loc="75:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f73c0dab9e0" loc="57:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
        <documentation loc="52:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
          <short>&#10; Read a bit from the vector.</short>
          <long>&#10; Read a bit from the vector.&#10; @param bitnum Bit to read.&#10; @return Bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7f73c0dab760" loc="57:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="assign" ref="0x7f73c0da75e0" loc="82:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
        <documentation loc="77:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
          <short>&#10; Write a bit in the vector.</short>
          <long>&#10; Write a bit in the vector.&#10; @param bitnum Bit to clear.&#10; @param value New bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7f73c0da7020" loc="82:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x7f73c0da7350" loc="82:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x7f73c0dab020" loc="50:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
          <short>&#10; Set all bits in the vector.</short>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f73c0da9410" loc="63:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to set.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x7f73c0da9190" loc="63:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f73c0da7dc0" loc="88:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
        <documentation loc="84:/usr/bin/tinyos-main/tos/interfaces/BitVector.nc">
          <short>&#10; Return bit vector length.</short>
          <long>&#10; Return bit vector length.&#10; @return Bit vector length.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RootControl" loc="40:/usr/bin/tinyos-main/tos/lib/net/RootControl.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x7f73c0cd3390" loc="43:/usr/bin/tinyos-main/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x7f73c0cd4560" loc="41:/usr/bin/tinyos-main/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x7f73c0cd4c80" loc="42:/usr/bin/tinyos-main/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionPacket" loc="42:/usr/bin/tinyos-main/tos/lib/net/CollectionPacket.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x7f73c0cf7600" loc="50:/usr/bin/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c0cf7020" loc="50:/usr/bin/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x7f73c0cf7370" loc="50:/usr/bin/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x7f73c0cfb6b0" loc="44:/usr/bin/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c0cfb0d0" loc="44:/usr/bin/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f73c0cfb420" loc="44:/usr/bin/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f73c0cfae00" loc="47:/usr/bin/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x7f73c0d0f660"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c0cfa7f0" loc="47:/usr/bin/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x7f73c0cfab70" loc="47:/usr/bin/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x7f73c0d0f660"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x7f73c0cfc970" loc="43:/usr/bin/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c0cfc6f0" loc="43:/usr/bin/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7f73c0cf8840" loc="49:/usr/bin/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c0cf85c0" loc="49:/usr/bin/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x7f73c0cfa110" loc="46:/usr/bin/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x7f73c0d0f660"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c0cfbe30" loc="46:/usr/bin/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionDebug" loc="59:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <short> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure.</short>
        <long> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure. An implementer can choose to send the event&#10;  information to different destinations. Primary examples can include:&#10;  &#60;ul>&#10;    &#60;li> logging to the UART, in case of a testbed of network-connected&#10;         nodes;&#10;    &#60;li> logging to flash, if the logs are to be retrieved later&#10;    &#60;li> logging to the standard output, in the case of TOSSIM.&#10;  &#60;/ul>&#10;  &#10;  The interface does not specify in what format the log is to be produced,&#10;  or if other information, like timestamps, should be added, and this is&#10;  up to the implementer.&#10; &#10;  Some commands are generic, like Event, EventSimple, and EventDbg, while others&#10;  are for more specific events related to collection, like EventRoute and EventMsg.&#10;&#10; @author Rodrigo Fonseca&#10; @author Kyle Jamieson&#10; @date   $Date: 2010-06-29 22:07:47 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="logEvent" ref="0x7f73c0ccfb60" loc="61:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f73c0ccf8e0" loc="61:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventMsg" ref="0x7f73c0cca140" loc="73:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f73c0ccb470" loc="73:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f73c0ccb7b0" loc="73:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </variable>
          <variable name="origin" ref="0x7f73c0ccbb10" loc="73:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </variable>
          <variable name="node" ref="0x7f73c0ccbe60" loc="73:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventSimple" ref="0x7f73c0cce900" loc="64:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f73c0cce330" loc="64:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
          <variable name="arg" ref="0x7f73c0cce670" loc="64:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventRoute" ref="0x7f73c0cc9630" loc="79:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f73c0cca890" loc="79:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
          <variable name="parent" ref="0x7f73c0ccabf0" loc="79:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </variable>
          <variable name="hopcount" ref="0x7f73c0cc9020" loc="79:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
          <variable name="metric" ref="0x7f73c0cc9380" loc="79:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventDbg" ref="0x7f73c0ccdd00" loc="67:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f73c0ccd060" loc="67:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
          <variable name="arg1" ref="0x7f73c0ccd3b0" loc="67:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </variable>
          <variable name="arg2" ref="0x7f73c0ccd700" loc="67:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </variable>
          <variable name="arg3" ref="0x7f73c0ccda50" loc="67:/usr/bin/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/usr/bin/tinyos-main/tos/interfaces/Intercept.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x7f73c0d002c0" loc="31:/usr/bin/tinyos-main/tos/interfaces/Intercept.nc">
        <documentation loc="16:/usr/bin/tinyos-main/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c0d03900" loc="31:/usr/bin/tinyos-main/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f73c0d03c50" loc="31:/usr/bin/tinyos-main/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f73c0d00020" loc="31:/usr/bin/tinyos-main/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpInfo" loc="44:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
      <function command="" provided="0" name="getNeighborLinkQuality" ref="0x7f73c0cdd020" loc="96:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f73c0cdeca0" loc="96:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="recomputeRoutes" ref="0x7f73c0ce0540" loc="83:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="80:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short> &#10; Tell the routing engine it might want to recompute its routes.</short>
          <long> &#10; Tell the routing engine it might want to recompute its routes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="numNeighbors" ref="0x7f73c0cde530" loc="95:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerRouteUpdate" ref="0x7f73c0ce2420" loc="71:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="66:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.</short>
          <long>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x7f73c0ce3b00" loc="64:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="55:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the ETX for the current path to the root through the current&#10; parent.</short>
          <long>&#10; Get the ETX for the current path to the root through the current&#10; parent. Sets etx argument to ETX*10.  The pointer is allocated by&#10; the caller.  If the parent is invalid, return FAIL (no info).&#10; The caller MUST NOT use the value in parent if the return is not&#10; SUCCESS. Calling getEtx at the root will set the etx argument to&#10; 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="etx" ref="0x7f73c0ce3880" loc="64:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerImmediateRouteUpdate" ref="0x7f73c0ce2ca0" loc="78:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="73:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.</short>
          <long>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNeighborCongested" ref="0x7f73c0cdf360" loc="88:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="85:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Informs the routing engine that a neighbor is congested&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f73c0ce0d10" loc="88:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </variable>
          <variable name="congested" ref="0x7f73c0cdf0d0" loc="88:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborAddr" ref="0x7f73c0cd8430" loc="98:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f73c0cd81b0" loc="98:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x7f73c0ce3040" loc="53:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="46:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the parent of the node in the tree.</short>
          <long>&#10; Get the parent of the node in the tree.  The pointer is allocated&#10; by the caller.  If the parent is invalid, return FAIL.  The&#10; caller MUST NOT use the value in parent if the return is not&#10; SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent" ref="0x7f73c0cf6d90" loc="53:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborRouteQuality" ref="0x7f73c0cdda20" loc="97:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f73c0cdd7a0" loc="97:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isNeighborCongested" ref="0x7f73c0cdfd70" loc="93:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="90:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10;  Returns the currently known state about a neighbor's congestion state&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f73c0cdfaf0" loc="93:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpCongestion" loc="1:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpCongestion.nc">
      <function command="" provided="0" name="isCongested" ref="0x7f73c0ce4740" loc="7:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClientCongested" ref="0x7f73c0cd5120" loc="14:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="congested" ref="0x7f73c0ce4e80" loc="14:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpCongestion.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpPacket" loc="44:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <short>&#10;  ADT for CTP data frames.</short>
        <long>&#10;  ADT for CTP data frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007-11-28 04:42:52 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSequenceNumber" ref="0x7f73c0cea020" loc="64:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c0cec9e0" loc="64:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x7f73c0cecd30" loc="64:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="option" ref="0x7f73c0cf23a0" loc="52:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f73c0d0dba0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c0cf4d60" loc="52:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x7f73c0cf2110" loc="52:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f73c0d0dba0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x7f73c0cee0c0" loc="58:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c0cf0ac0" loc="58:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x7f73c0cf0e00" loc="58:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x7f73c0ced790" loc="61:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c0ced1b0" loc="61:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f73c0ced500" loc="61:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x7f73c0cf4640" loc="49:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f73c0d0dba0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c0cf4020" loc="49:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x7f73c0cf43b0" loc="49:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f73c0d0dba0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x7f73c0cf03f0" loc="57:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c0cf0170" loc="57:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x7f73c0ceea90" loc="60:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c0cee810" loc="60:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f73c0ce9690" loc="67:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c0ce90d0" loc="67:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x7f73c0ce9400" loc="67:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x7f73c0cf57d0" loc="46:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f73c0d0dba0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c0cf51b0" loc="46:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x7f73c0cf5540" loc="46:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f73c0d0dba0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchPacket" ref="0x7f73c0ce63a0" loc="70:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x7f73c0ce8d60" loc="70:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x7f73c0ce6110" loc="70:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getThl" ref="0x7f73c0cf2d40" loc="54:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c0cf2ac0" loc="54:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7f73c0cec2a0" loc="63:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c0cec020" loc="63:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchInstance" ref="0x7f73c0ce8630" loc="69:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x7f73c0ce8020" loc="69:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x7f73c0ce83a0" loc="69:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x7f73c0cea9d0" loc="66:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c0cea750" loc="66:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setThl" ref="0x7f73c0cf1a00" loc="55:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c0cf1440" loc="55:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="thl" ref="0x7f73c0cf1770" loc="55:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionId" loc="45:/usr/bin/tinyos-main/tos/lib/net/CollectionId.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/lib/net/CollectionId.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="fetch" ref="0x7f73c0cd7b30" loc="46:/usr/bin/tinyos-main/tos/lib/net/CollectionId.nc">
        <interfacedef-ref qname="CollectionId"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x7f73c0d0f660"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkEstimator" loc="46:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
        <short> Provides an additive quality measure for a neighbor.</short>
        <long> Provides an additive quality measure for a neighbor. The&#10; provided quality increases when the true link quality increases.&#10;  @author Rodrigo Fonseca&#10;  @author Omprakash Gnawali&#10;  @date   $Date: 2010-06-29 22:07:47 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="txAck" ref="0x7f73c0cb79e0" loc="62:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f73c0cb7760" loc="62:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pinNeighbor" ref="0x7f73c0cb9490" loc="55:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f73c0cb9210" loc="55:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txNoAck" ref="0x7f73c0cb63f0" loc="66:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f73c0cb6170" loc="66:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNeighbor" ref="0x7f73c0cbaa30" loc="52:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f73c0cba7b0" loc="52:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x7f73c0cb5790" loc="72:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f73c0cb5510" loc="72:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearDLQ" ref="0x7f73c0cb6dd0" loc="69:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f73c0cb6b50" loc="69:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="unpinNeighbor" ref="0x7f73c0cb7020" loc="58:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f73c0cb9c20" loc="58:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLinkQuality" ref="0x7f73c0cba020" loc="49:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f73c0cbdc40" loc="49:/usr/bin/tinyos-main/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Cache" loc="44:/usr/bin/tinyos-main/tos/interfaces/Cache.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/interfaces/Cache.nc">
        <short>&#10; A data item cache.</short>
        <long>&#10; A data item cache. The cache does not own the items it caches:&#10; there is no allocation/deallocation policy, or notification of&#10; eviction. Correspondingly, using references (pointers) as data&#10; items can be difficult.&#10; &#10; @author Rodrigo Fonseca&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f73c0c62020" loc="44:/usr/bin/tinyos-main/tos/interfaces/Cache.nc">
          <interfacedef-ref qname="Cache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f73c0c62020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="insert" ref="0x7f73c0c62ac0" loc="51:/usr/bin/tinyos-main/tos/interfaces/Cache.nc">
        <documentation loc="45:/usr/bin/tinyos-main/tos/interfaces/Cache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary.</short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.&#10; An atomic lookup after insert should return true.&#10;&#10; @param item - the data item to insert.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f73c0c62020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7f73c0c62840" loc="51:/usr/bin/tinyos-main/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f73c0c62020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f73c0c61c80" loc="65:/usr/bin/tinyos-main/tos/interfaces/Cache.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/interfaces/Cache.nc">
          <short>&#10; Flush the cache of all entries.</short>
          <long>&#10; Flush the cache of all entries.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="lookup" ref="0x7f73c0c614f0" loc="59:/usr/bin/tinyos-main/tos/interfaces/Cache.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/interfaces/Cache.nc">
          <short>&#10; Return whether the data item is in the cache.</short>
          <long>&#10; Return whether the data item is in the cache.&#10;&#10; @param item - the data item to query&#10; @return Whether the item is in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f73c0c62020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7f73c0c61270" loc="59:/usr/bin/tinyos-main/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f73c0c62020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f73c0c819c0" loc="43:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f73c0c819c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f73c0c7b9e0" loc="73:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="67:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f73c0c819c0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f73c0c794a0" loc="90:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="83:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f73c0c819c0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f73c0c79220" loc="90:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f73c0c819c0"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7f73c3805b50"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x7f73c3805b50"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f73c0c77440" loc="101:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="92:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f73c0c819c0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f73c0c771c0" loc="101:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f73c0c7b270" loc="65:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="60:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f73c0c78610" loc="81:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="75:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f73c0c819c0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f73c0c7c2b0" loc="50:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="45:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f73c0c7ca40" loc="58:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="52:/usr/bin/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UnicastNameFreeRouting" loc="41:/usr/bin/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <short>&#10;  Provides a single next hop on a name-free protocol.</short>
        <long>&#10;  Provides a single next hop on a name-free protocol.&#10;&#10;  @author Philip Levis&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="hasRoute" ref="0x7f73c0c80930" loc="49:/usr/bin/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="routeFound" ref="0x7f73c0c7f070" loc="51:/usr/bin/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="nextHop" ref="0x7f73c0c80120" loc="48:/usr/bin/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <documentation loc="43:/usr/bin/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
          <short>&#10; Get the address of the best next hop set to the destination.</short>
          <long>&#10; Get the address of the best next hop set to the destination.&#10; If there is not best next hop, the address is the local address.&#10; @return : The next best hop, or the local address if there is no route.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="noRoute" ref="0x7f73c0c7f730" loc="52:/usr/bin/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/usr/bin/tinyos-main/tos/interfaces/Pool.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f73c0c73b60" loc="50:/usr/bin/tinyos-main/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f73c0c73b60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f73c0c6ed40" loc="97:/usr/bin/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="91:/usr/bin/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f73c0c73b60"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f73c0c6f560" loc="80:/usr/bin/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="74:/usr/bin/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f73c0c70460" loc="61:/usr/bin/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="52:/usr/bin/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x7f73c0c6e020" loc="89:/usr/bin/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="82:/usr/bin/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f73c28c6600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f73c0c73b60"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f73c0c6fd20" loc="89:/usr/bin/tinyos-main/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f73c0c73b60"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f73c0c70cb0" loc="72:/usr/bin/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="63:/usr/bin/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CompareBit" loc="47:/usr/bin/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
        <short> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table.</short>
        <long> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table. The return value is the &#34;pin bit&#34; - if true&#10; insert into the neighbor table. In the reference implementation&#10; the router will return true if the path through the source&#10; will be better than a path through at least one current neighbor.&#10;@ author Omprakash Gnawali&#10;@ Created: September 16, 2006&#10;@date   $Date: 2010-06-29 22:07:49 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="shouldInsert" ref="0x7f73c0a7b410" loc="51:/usr/bin/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
        <interfacedef-ref qname="CompareBit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c0a7c5e0" loc="51:/usr/bin/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f73c0a7ce00" loc="51:/usr/bin/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f73c0a7b170" loc="51:/usr/bin/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f73c37dda90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpRoutingPacket" loc="43:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <short>&#10;  ADT for CTP routing frames.</short>
        <long>&#10;  ADT for CTP routing frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2009-09-21 02:19:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearOptions" ref="0x7f73c09806e0" loc="51:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c0980460" loc="51:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x7f73c097b2f0" loc="57:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c097ccc0" loc="57:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x7f73c097b060" loc="57:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x7f73c09819b0" loc="48:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f73c0d0dba0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c09813b0" loc="48:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x7f73c0981720" loc="48:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f73c0d0dba0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x7f73c097c2a0" loc="56:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f73c37d55a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c097c020" loc="56:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x7f73c0983920" loc="47:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f73c0d0dba0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c0983320" loc="47:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x7f73c0983690" loc="47:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f73c0d0dba0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setParent" ref="0x7f73c097d480" loc="54:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c097fe70" loc="54:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f73c097d1f0" loc="54:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x7f73c097f430" loc="53:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f73c26f31d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c097f1b0" loc="53:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOption" ref="0x7f73c0984840" loc="46:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f73c2910020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f73c0d0dba0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f73c0984240" loc="46:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f73c26d6e30"/>
                <typename><typedef-ref name="message_t" ref="0x7f73c26cc470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x7f73c09845b0" loc="46:/usr/bin/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f73c0d0dba0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
