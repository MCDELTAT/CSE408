<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="16:LedToRadioAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f5dc781d020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f5dc7b28a20"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f5dc7b28a20"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f5dc7b26dc0"/></to>
    </wire>
    <wire loc="17:LedToRadioAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5dc781d660"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5dc7861a80"/></to>
    </wire>
    <wire loc="51:/usr/bin/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5dc7861a80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5dc785d400"/></to>
    </wire>
    <wire loc="18:LedToRadioAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x7f5dc78089e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5dc7512140"/></to>
    </wire>
    <wire loc="52:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5dc7512140"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5dc77047d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:LedToRadioAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5dc77605f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5dc68b5c30"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5dc68b5c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5dc5f82e40"/></to>
    </wire>
    <wire loc="20:LedToRadioAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5dc774e7e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5dc68b38b0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5dc68b38b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5dc5f81a70"/></to>
    </wire>
    <wire loc="21:LedToRadioAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5dc773f8f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5dc68b5020"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5dc68b5020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5dc5f82230"/></to>
    </wire>
    <wire loc="22:LedToRadioAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5dc7736180"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5dc68ae910"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5dc68ae910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5dc7507800"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:LedToRadioAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7f5dc7734a50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5dc750c500"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5dc750c500"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5dc74c5610"/></to>
    </wire>
    <wire loc="24:LedToRadioAppC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f5dc77307b0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f5dc68a3e00"/></to>
    </wire>
    <wire loc="49:/usr/bin/tinyos-main/tos/platforms/micaz/DemoSensorC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f5dc68a3e00"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f5dc5f28990"/></to>
    </wire>
    <wire loc="103:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5dc7b29020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5dc5f100e0"/></to>
    </wire>
    <wire loc="96:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5dc7b29020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5dc600a3b0"/></to>
    </wire>
    <wire loc="119:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5dc7b29020"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f5dc6d89b60"/></to>
    </wire>
    <wire loc="52:/usr/bin/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5dc7b29020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5dc6ee6080"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5dc7b29020"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f5dc60f90a0"/></to>
    </wire>
    <wire loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5dc7b29020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5dc7051700"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5dc7b29020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5dc6130560"/></to>
    </wire>
    <wire loc="96:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5dc7b29020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5dc6205b40"/></to>
    </wire>
    <wire loc="53:/usr/bin/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5dc7b29020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5dc76f9410"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f5dc7885470"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f5dc7cef020"/></to>
    </wire>
    <wire loc="53:/usr/bin/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f5dc7cef020"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f5dc7b758a0"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f5dc7884020"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f5dc6c6f680"/></to>
    </wire>
    <wire loc="122:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f5dc7884020"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f5dc6d89020"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f5dc7884020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5dc7b25080"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5dc7b25080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5dc7b12380"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5dc7884720"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f5dc7b29020"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f5dc7b1b020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5dc6872150"/></to>
    </wire>
    <wire loc="26:/usr/bin/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f5dc7b1b020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5dc6a7cb50"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f5dc7b151d0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f5dc78b4690"/></to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f5dc7b11180"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5dc78b4020"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f5dc7b12a60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5dc7825920"/></to>
    </wire>
    <wire loc="62:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f5dc7b12a60"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f5dc7b1aaf0"/></to>
    </wire>
    <wire loc="46:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f5dc7b1aaf0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f5dc7b08660"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f5dc7b0b1f0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f5dc7b1b020"/></to>
    </wire>
    <wire loc="48:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7f5dc7b01b90"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7f5dc7af6060"/></to>
    </wire>
    <wire loc="141:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f5dc7af6060"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f5dc7a4dda0"/></to>
    </wire>
    <wire loc="49:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f5dc7b07e60"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f5dc7b0b1f0"/></to>
    </wire>
    <wire loc="191:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f5dc7ac0cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc7949160"/></to>
    </wire>
    <wire loc="165:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f5dc7adc4e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f5dc7a062b0"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f5dc7a062b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc6521e20"/></to>
    </wire>
    <wire loc="176:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f5dc7acf350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f5dc79e68f0"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f5dc79e68f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc64a93f0"/></to>
    </wire>
    <wire loc="185:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f5dc7ac6cb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f5dc79c9c10"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f5dc79c9c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc64383f0"/></to>
    </wire>
    <wire loc="196:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f5dc7ab8060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc791d6d0"/></to>
    </wire>
    <wire loc="143:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f5dc7af3670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f5dc7a4a2b0"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f5dc7a4a2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc66720a0"/></to>
    </wire>
    <wire loc="183:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f5dc7ac8670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f5dc79cb8f0"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f5dc79cb8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc6441e20"/></to>
    </wire>
    <wire loc="146:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f5dc7af1cb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f5dc7a3ba20"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f5dc7a3ba20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc6610060"/></to>
    </wire>
    <wire loc="157:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f5dc7ae5cb0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f5dc7a1b020"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f5dc7a1b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc65940a0"/></to>
    </wire>
    <wire loc="168:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f5dc7ad9e40"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f5dc79fc760"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f5dc79fc760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc65176d0"/></to>
    </wire>
    <wire loc="179:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f5dc7acccb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f5dc79dcda0"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f5dc79dcda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc64a0e20"/></to>
    </wire>
    <wire loc="138:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f5dc7afa800"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f5dc7a588f0"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f5dc7a588f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc66910a0"/></to>
    </wire>
    <wire loc="149:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f5dc7aed670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f5dc7a37020"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f5dc7a37020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc66079b0"/></to>
    </wire>
    <wire loc="160:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f5dc7ae1670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f5dc7a185d0"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f5dc7a185d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc65879b0"/></to>
    </wire>
    <wire loc="171:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f5dc7ad4670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f5dc79f8c10"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f5dc79f8c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc650c0a0"/></to>
    </wire>
    <wire loc="188:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f5dc7ac2670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f5dc79c52b0"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f5dc79c52b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc642fe20"/></to>
    </wire>
    <wire loc="194:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f5dc7abcb20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc792d160"/></to>
    </wire>
    <wire loc="174:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f5dc7ad2cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f5dc79e95d0"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f5dc79e95d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc64b0e20"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f5dc7a4dda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc66889b0"/></to>
    </wire>
    <wire loc="152:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f5dc7ae9020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f5dc7a2d5d0"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f5dc7a2d5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc65fc3f0"/></to>
    </wire>
    <wire loc="192:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f5dc7abe4e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc7945c90"/></to>
    </wire>
    <wire loc="155:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f5dc7ae7670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f5dc7a25d30"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f5dc7a25d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc659ba60"/></to>
    </wire>
    <wire loc="166:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f5dc7adb800"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f5dc7a05440"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f5dc7a05440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc651d0a0"/></to>
    </wire>
    <wire loc="177:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f5dc7ace670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f5dc79e5a80"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f5dc79e5a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc64a66d0"/></to>
    </wire>
    <wire loc="186:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f5dc7ac4020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f5dc79c8da0"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f5dc79c8da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc64356d0"/></to>
    </wire>
    <wire loc="144:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f5dc7af2990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f5dc7a49440"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f5dc7a49440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc666f3f0"/></to>
    </wire>
    <wire loc="147:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f5dc7aef020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f5dc7a3ac10"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f5dc7a3ac10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc660d3f0"/></to>
    </wire>
    <wire loc="158:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f5dc7ae3020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f5dc7a1a2b0"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f5dc7a1a2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc65913f0"/></to>
    </wire>
    <wire loc="169:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f5dc7ad6060"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f5dc79fa8f0"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f5dc79fa8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc65149b0"/></to>
    </wire>
    <wire loc="180:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f5dc7aca020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f5dc79da020"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f5dc79da020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc64990a0"/></to>
    </wire>
    <wire loc="139:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f5dc7af9b20"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f5dc7a56a80"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f5dc7a56a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc668e3f0"/></to>
    </wire>
    <wire loc="150:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f5dc7aec990"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f5dc7a362b0"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f5dc7a362b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc6604e20"/></to>
    </wire>
    <wire loc="161:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f5dc7ae0990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f5dc7a17760"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f5dc7a17760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc6583e20"/></to>
    </wire>
    <wire loc="189:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f5dc7ac1990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f5dc79bd440"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f5dc79bd440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc642b0a0"/></to>
    </wire>
    <wire loc="164:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f5dc7add020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f5dc7a07020"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f5dc7a07020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc6524c90"/></to>
    </wire>
    <wire loc="175:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f5dc7ad0020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f5dc79e7760"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f5dc79e7760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc64ac0a0"/></to>
    </wire>
    <wire loc="184:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f5dc7ac7990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f5dc79caa80"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f5dc79caa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc643d0a0"/></to>
    </wire>
    <wire loc="195:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f5dc7abae40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc7929c90"/></to>
    </wire>
    <wire loc="142:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f5dc7af5350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f5dc7a4b020"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f5dc7a4b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc6676e20"/></to>
    </wire>
    <wire loc="153:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f5dc7ae8350"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f5dc7a2c760"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f5dc7a2c760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc65f96d0"/></to>
    </wire>
    <wire loc="182:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f5dc7ac9350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f5dc79cc7a0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f5dc79cc7a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc6444c90"/></to>
    </wire>
    <wire loc="156:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f5dc7ae6990"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f5dc7a1de60"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f5dc7a1de60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc6598e20"/></to>
    </wire>
    <wire loc="167:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f5dc7adab20"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f5dc79fd5d0"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f5dc79fd5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc651a3f0"/></to>
    </wire>
    <wire loc="178:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f5dc7acd990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f5dc79ddc10"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f5dc79ddc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc64a39b0"/></to>
    </wire>
    <wire loc="187:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f5dc7ac3350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f5dc79c6020"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f5dc79c6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc64329b0"/></to>
    </wire>
    <wire loc="137:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f5dc7b09540"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f5dc7a596b0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f5dc7a596b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc6695e20"/></to>
    </wire>
    <wire loc="148:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f5dc7aee350"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f5dc7a39da0"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f5dc7a39da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc660a6d0"/></to>
    </wire>
    <wire loc="159:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f5dc7ae2350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f5dc7a19440"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f5dc7a19440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc658e6d0"/></to>
    </wire>
    <wire loc="170:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f5dc7ad5350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f5dc79f9a80"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f5dc79f9a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc6511e20"/></to>
    </wire>
    <wire loc="193:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f5dc7abd800"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc79396d0"/></to>
    </wire>
    <wire loc="173:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f5dc7ad3990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f5dc79ea3f0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f5dc79ea3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc64b3c90"/></to>
    </wire>
    <wire loc="162:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f5dc7adfcb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f5dc7a168f0"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f5dc7a168f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc657f0a0"/></to>
    </wire>
    <wire loc="140:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f5dc7af8e40"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f5dc7a55c10"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f5dc7a55c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc668b6d0"/></to>
    </wire>
    <wire loc="151:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f5dc7aebcb0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f5dc7a35440"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f5dc7a35440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5dc66000a0"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f5dc7c60e10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5dc7b73850"/></to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f5dc7b72dd0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f5dc7c6fa30"/></to>
    </wire>
    <wire loc="92:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f5dc7b4e690"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f5dc761ea70"/></to>
    </wire>
    <wire loc="53:/usr/bin/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5dc7825920"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5dc786fdc0"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f5dc7857b90"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f5dc782e020"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f5dc782e020"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7f5dc7af9b20"/></to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f5dc7856e30"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f5dc782d380"/></to>
    </wire>
    <wire loc="57:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f5dc782d380"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7f5dc7afa800"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f5dc7854020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f5dc78276a0"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f5dc78276a0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7f5dc7b09540"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f5dc77047d0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f5dc76f8210"/></to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f5dc76f8210"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5dc7539150"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5dc76f9410"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5dc76e92c0"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f5dc76efa80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f5dc752b790"/></to>
    </wire>
    <wire loc="35:/usr/bin/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5dc76e92c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5dc75b8080"/></to>
    </wire>
    <wire loc="62:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f5dc7533640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5dc7588cf0"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f5dc75821d0"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7f5dc76e7260"/></to>
    </wire>
    <wire loc="36:/usr/bin/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7f5dc76e7260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5dc75b8890"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5dc752aa60"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7f5dc76d5910"/></to>
    </wire>
    <wire loc="37:/usr/bin/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7f5dc76d5910"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5dc75b5bc0"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5dc75b5bc0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5dc6347650"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5dc75b8080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5dc634c910"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f5dc75b8890"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5dc634b140"/></to>
    </wire>
    <wire loc="74:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5dc6345a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5dc763ec70"/></to>
    </wire>
    <wire loc="94:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5dc763ec70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5dc7627020"/></to>
    </wire>
    <wire loc="75:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f5dc6330c90"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f5dc7634020"/></to>
    </wire>
    <wire loc="95:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f5dc7634020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f5dc76222b0"/></to>
    </wire>
    <wire loc="76:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f5dc632e020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5dc7633520"/></to>
    </wire>
    <wire loc="96:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f5dc7633520"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5dc76216b0"/></to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f5dc632a2c0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f5dc762fa40"/></to>
    </wire>
    <wire loc="97:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f5dc762fa40"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f5dc761b230"/></to>
    </wire>
    <wire loc="74:/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f5dc757e490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5dc7c60e10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f5dc752ea00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5dc7c60e10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5dc74c5610"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5dc748e770"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f5dc74fabf0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f5dc74be020"/></to>
    </wire>
    <wire loc="84:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f5dc74be020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f5dc7481430"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5dc75052b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5dc74b5020"/></to>
    </wire>
    <wire loc="89:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5dc74b5020"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f5dc747dba0"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5dc7508530"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5dc74c2640"/></to>
    </wire>
    <wire loc="81:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5dc74c2640"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5dc74847f0"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f5dc7506430"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f5dc74bf430"/></to>
    </wire>
    <wire loc="83:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f5dc74bf430"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f5dc7482880"/></to>
    </wire>
    <wire loc="76:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f5dc74edcb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f5dc74b3e80"/></to>
    </wire>
    <wire loc="93:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f5dc74b3e80"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f5dc7456080"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5dc7507800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5dc74c1810"/></to>
    </wire>
    <wire loc="82:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5dc74c1810"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5dc7483b20"/></to>
    </wire>
    <wire loc="75:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5dc74f1350"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5dc74b34e0"/></to>
    </wire>
    <wire loc="92:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5dc74b34e0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5dc7465670"/></to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f5dc74f7020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f5dc74b2990"/></to>
    </wire>
    <wire loc="94:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f5dc74b2990"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f5dc7456b70"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5dc74fd020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5dc74b5c90"/></to>
    </wire>
    <wire loc="90:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5dc74b5c90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5dc747e470"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f5dc74dbc30"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f5dc74b17a0"/></to>
    </wire>
    <wire loc="95:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f5dc74b17a0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f5dc7455930"/></to>
    </wire>
    <wire loc="81:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7f5dc74cdcd0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f5dc7499020"/></to>
    </wire>
    <wire loc="104:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f5dc7499020"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f5dc7448130"/></to>
    </wire>
    <wire loc="80:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5dc74cadc0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5dc7492130"/></to>
    </wire>
    <wire loc="103:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5dc7492130"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5dc743e3f0"/></to>
    </wire>
    <wire loc="215:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5dc748e770"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5dc6fd30e0"/></to>
    </wire>
    <wire loc="99:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f5dc74a56e0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f5dc744d020"/></to>
    </wire>
    <wire loc="305:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f5dc744d020"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f5dc6da93b0"/></to>
    </wire>
    <wire loc="270:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5dc743e3f0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5dc6e01b00"/></to>
    </wire>
    <wire loc="124:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f5dc7481430"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f5dc723b420"/></to>
    </wire>
    <wire loc="126:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f5dc747dba0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5dc723e8b0"/></to>
    </wire>
    <wire loc="121:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5dc74847f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5dc723d6c0"/></to>
    </wire>
    <wire loc="123:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f5dc7482880"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f5dc723cc90"/></to>
    </wire>
    <wire loc="98:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f5dc74a8210"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f5dc7451a90"/></to>
    </wire>
    <wire loc="303:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f5dc7451a90"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f5dc6db0e80"/></to>
    </wire>
    <wire loc="216:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f5dc7456080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f5dc6fd1a40"/></to>
    </wire>
    <wire loc="122:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5dc7483b20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5dc723c530"/></to>
    </wire>
    <wire loc="269:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f5dc7448130"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f5dc6dfda60"/></to>
    </wire>
    <wire loc="102:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5dc7496a40"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5dc744abb0"/></to>
    </wire>
    <wire loc="307:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5dc744abb0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5dc6da0a40"/></to>
    </wire>
    <wire loc="97:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f5dc74aac40"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f5dc7454540"/></to>
    </wire>
    <wire loc="304:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f5dc7454540"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f5dc6da4e70"/></to>
    </wire>
    <wire loc="248:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5dc7465670"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5dc6e99560"/></to>
    </wire>
    <wire loc="86:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f5dc74bec70"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f5dc747f1d0"/></to>
    </wire>
    <wire loc="128:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f5dc747f1d0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f5dc723bb80"/></to>
    </wire>
    <wire loc="187:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f5dc7456b70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f5dc6ff9330"/></to>
    </wire>
    <wire loc="125:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5dc747e470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5dc723f280"/></to>
    </wire>
    <wire loc="224:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f5dc7455930"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f5dc6f3d700"/></to>
    </wire>
    <wire loc="100:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5dc74961e0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5dc744a350"/></to>
    </wire>
    <wire loc="306:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5dc744a350"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5dc6da01e0"/></to>
    </wire>
    <wire loc="87:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f5dc74bd8c0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f5dc747fdf0"/></to>
    </wire>
    <wire loc="129:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f5dc747fdf0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f5dc723a3e0"/></to>
    </wire>
    <wire loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5dc6fd30e0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f5dc6fcf630"/></to>
    </wire>
    <wire loc="88:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f5dc6da93b0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f5dc6d800d0"/></to>
    </wire>
    <wire loc="160:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x7f5dc747a020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f5dc7170a10"/></to>
    </wire>
    <wire loc="148:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x7f5dc746c2c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5dc71aba90"/></to>
    </wire>
    <wire loc="98:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5dc71aba90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5dc6201210"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f5dc723b420"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f5dc6269b00"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5dc723d6c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5dc626bd60"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f5dc723cc90"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f5dc62693e0"/></to>
    </wire>
    <wire loc="161:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7f5dc745d490"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f5dc7094c40"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7f5dc7094c40"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f5dc618a2e0"/></to>
    </wire>
    <wire loc="162:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7f5dc7466890"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5dc71a5ac0"/></to>
    </wire>
    <wire loc="85:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f5dc6db0e80"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f5dc6d84b90"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f5dc6fd1a40"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f5dc6105020"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5dc723e8b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5dc626b020"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5dc723c530"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5dc626ab40"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f5dc6dfda60"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f5dc6063bb0"/></to>
    </wire>
    <wire loc="81:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5dc6da0a40"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5dc6c73020"/></to>
    </wire>
    <wire loc="94:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f5dc6da4e70"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f5dc6d7bc80"/></to>
    </wire>
    <wire loc="158:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x7f5dc746da60"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7f5dc7171720"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f5dc723bb80"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f5dc62673e0"/></to>
    </wire>
    <wire loc="117:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f5dc6ff9330"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7f5dc6ff5610"/></to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f5dc6f3d700"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f5dc60f85f0"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5dc723f280"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5dc626d8b0"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5dc6e01b00"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5dc6067cb0"/></to>
    </wire>
    <wire loc="159:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x7f5dc747b840"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7f5dc7170440"/></to>
    </wire>
    <wire loc="96:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5dc6da01e0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5dc6d77020"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f5dc723a3e0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f5dc6267b40"/></to>
    </wire>
    <wire loc="102:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f5dc73da880"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f5dc7097b20"/></to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f5dc7097b20"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f5dc618d100"/></to>
    </wire>
    <wire loc="103:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f5dc73d38d0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f5dc73559b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f5dc73d2160"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f5dc6dfda60"/></to>
    </wire>
    <wire loc="105:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x7f5dc73d7020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f5dc6db1d90"/></to>
    </wire>
    <wire loc="79:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f5dc6db1d90"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f5dc6d85aa0"/></to>
    </wire>
    <wire loc="110:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f5dc731bb40"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5dc6d9fdd0"/></to>
    </wire>
    <wire loc="100:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f5dc6d9fdd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5dc6c78ac0"/></to>
    </wire>
    <wire loc="116:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f5dc72378c0"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7f5dc7402e30"/></to>
    </wire>
    <wire loc="117:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5dc72388f0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f5dc722c550"/></to>
    </wire>
    <wire loc="118:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5dc72372b0"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x7f5dc712e770"/></to>
    </wire>
    <wire loc="119:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f5dc723aa70"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x7f5dc712ed80"/></to>
    </wire>
    <wire loc="137:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5dc721d910"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5dc71aba90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5dc721d020"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x7f5dc712fe00"/></to>
    </wire>
    <wire loc="153:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f5dc716f080"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f5dc7097b20"/></to>
    </wire>
    <wire loc="154:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5dc716b120"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7f5dc71300a0"/></to>
    </wire>
    <wire loc="155:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5dc716ba50"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7f5dc71309d0"/></to>
    </wire>
    <wire loc="156:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f5dc716c2e0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f5dc712f020"/></to>
    </wire>
    <wire loc="169:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5dc712bc40"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5dc7012a40"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5dc7012a40"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5dc61314a0"/></to>
    </wire>
    <wire loc="170:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5dc712a5d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5dc6ffad30"/></to>
    </wire>
    <wire loc="114:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5dc6ffad30"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f5dc6ff77c0"/></to>
    </wire>
    <wire loc="171:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f5dc712abe0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f5dc7092020"/></to>
    </wire>
    <wire loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f5dc7092020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f5dc6189590"/></to>
    </wire>
    <wire loc="176:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f5dc7092e60"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f5dc6ff8020"/></to>
    </wire>
    <wire loc="115:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f5dc6ff8020"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f5dc6ff7dd0"/></to>
    </wire>
    <wire loc="181:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f5dc7010d70"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x7f5dc741d9c0"/></to>
    </wire>
    <wire loc="182:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5dc7011c00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5dc6ffa400"/></to>
    </wire>
    <wire loc="113:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5dc6ffa400"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f5dc6ff8e60"/></to>
    </wire>
    <wire loc="191:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5dc6ff6ba0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5dc6e99560"/></to>
    </wire>
    <wire loc="193:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5dc6ff8e60"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5dc6fd3ba0"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5dc6fd3ba0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f5dc6fce120"/></to>
    </wire>
    <wire loc="194:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5dc6ff77c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5dc6fd25d0"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5dc6fd25d0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f5dc6fcea50"/></to>
    </wire>
    <wire loc="195:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f5dc6ff7dd0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f5dc6fd2ba0"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f5dc6fd2ba0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f5dc6fcd0a0"/></to>
    </wire>
    <wire loc="211:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f5dc6fcf630"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5dc6f3fcc0"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5dc6f3fcc0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5dc60fa590"/></to>
    </wire>
    <wire loc="212:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5dc6fce120"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5dc6f3e7e0"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5dc6f3e7e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5dc60f96b0"/></to>
    </wire>
    <wire loc="213:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5dc6fcea50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5dc6f3d130"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5dc6f3d130"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5dc60f8020"/></to>
    </wire>
    <wire loc="214:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f5dc6fcd0a0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f5dc6df9660"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f5dc6df9660"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f5dc60607e0"/></to>
    </wire>
    <wire loc="221:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f5dc6f3ce20"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f5dc6ed61d0"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f5dc6ed61d0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f5dc60b73a0"/></to>
    </wire>
    <wire loc="222:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f5dc6f3b730"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f5dc7011400"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f5dc7011400"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f5dc6131d90"/></to>
    </wire>
    <wire loc="223:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f5dc6f3c080"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f5dc6dc5c20"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f5dc6dc5c20"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7f5dc6dbe410"/></to>
    </wire>
    <wire loc="228:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5dc70105d0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f5dc6ed6ac0"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f5dc6ed6ac0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f5dc60b7c90"/></to>
    </wire>
    <wire loc="237:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f5dc6ed30a0"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7f5dc7415340"/></to>
    </wire>
    <wire loc="238:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5dc6ed5310"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f5dc6ece470"/></to>
    </wire>
    <wire loc="239:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5dc6ed5c40"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f5dc6eced60"/></to>
    </wire>
    <wire loc="240:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f5dc6ed4400"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f5dc73559b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x7f5dc6e95e60"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f5dc6df09b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f5dc6e970e0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f5dc73559b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f5dc6e97d30"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7f5dc7422550"/></to>
    </wire>
    <wire loc="253:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5dc6e98020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f5dc6e75270"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f5dc6e75270"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f5dc6e6fb00"/></to>
    </wire>
    <wire loc="254:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5dc6e98950"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f5dc6e75b60"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f5dc6e75b60"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f5dc6e6e450"/></to>
    </wire>
    <wire loc="259:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f5dc6e682b0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7f5dc7409a40"/></to>
    </wire>
    <wire loc="260:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5dc6e6fb00"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f5dc6dc4a40"/></to>
    </wire>
    <wire loc="71:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f5dc6dc4a40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f5dc6dbd440"/></to>
    </wire>
    <wire loc="261:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5dc6e6e450"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f5dc6dc3400"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f5dc6dc3400"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f5dc6dbdd70"/></to>
    </wire>
    <wire loc="262:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x7f5dc6e6ebf0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7f5dc6db15c0"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f5dc6db15c0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7f5dc6d852d0"/></to>
    </wire>
    <wire loc="267:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5dc6df8750"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5dc6da0a40"/></to>
    </wire>
    <wire loc="268:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f5dc6df7800"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f5dc6def590"/></to>
    </wire>
    <wire loc="271:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7f5dc6df6760"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f5dc6df09b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="276:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f5dc6dc94a0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f5dc6db1d90"/></to>
    </wire>
    <wire loc="286:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f5dc6dbbb40"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7f5dc7409a40"/></to>
    </wire>
    <wire loc="287:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5dc6dbd440"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f5dc6db2460"/></to>
    </wire>
    <wire loc="76:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f5dc6db2460"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f5dc6d86120"/></to>
    </wire>
    <wire loc="288:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5dc6dbdd70"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f5dc6db2dd0"/></to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f5dc6db2dd0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f5dc6d86a90"/></to>
    </wire>
    <wire loc="289:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x7f5dc6dbe410"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f5dc6db5610"/></to>
    </wire>
    <wire loc="75:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f5dc6db5610"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f5dc6d872e0"/></to>
    </wire>
    <wire loc="301:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f5dc6d991f0"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x7f5dc7431350"/></to>
    </wire>
    <wire loc="302:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f5dc6d982e0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f5dc6dfda60"/></to>
    </wire>
    <wire loc="309:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f5dc6d94110"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f5dc6df09b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="310:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7f5dc6d94ca0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f5dc6df09b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="311:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f5dc6d938d0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f5dc6df09b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="312:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f5dc6d92470"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f5dc73559b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f5dc73559b0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f5dc62998a0"/></to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f5dc6298830"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5dc731bb40"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f5dc6285940"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f5dc731d750"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5dc62630f0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5dc72595a0"/></to>
    </wire>
    <wire loc="75:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f5dc6266310"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f5dc723aa70"/></to>
    </wire>
    <wire loc="76:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5dc6265120"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f5dc72388f0"/></to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5dc6265a50"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f5dc72372b0"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f5dc62640a0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f5dc72378c0"/></to>
    </wire>
    <wire loc="99:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f5dc71aa850"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f5dc6200020"/></to>
    </wire>
    <wire loc="100:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5dc71a9020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5dc62007a0"/></to>
    </wire>
    <wire loc="101:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5dc61ff0d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5dc71a98f0"/></to>
    </wire>
    <wire loc="103:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f5dc61ff890"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f5dc62042b0"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f5dc61fe480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5dc7c60e10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5dc6188460"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5dc72595a0"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f5dc6187020"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f5dc7092e60"/></to>
    </wire>
    <wire loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7f5dc612e7e0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7f5dc70521c0"/></to>
    </wire>
    <wire loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7f5dc70521c0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7f5dc7051d50"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f5dc612d410"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f5dc612bd40"/></to>
    </wire>
    <wire loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f5dc612bd40"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f5dc704d020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5dc6130bd0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f5dc7011c00"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5dc612f5d0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f5dc70105d0"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x7f5dc612fd30"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f5dc7010d70"/></to>
    </wire>
    <wire loc="118:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7f5dc6ff42f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5dc6ff6ba0"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f5dc60f6020"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f5dc6f3c080"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f5dc60f6dc0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f5dc731d750"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f5dc60f5880"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f5dc6f3ce20"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f5dc60f4270"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f5dc6f3b730"/></to>
    </wire>
    <wire loc="189:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f5dc60f32f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5dc7c60e10"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x7f5dc60f3ad0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5dc7c60e10"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x7f5dc60f4a50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5dc7c60e10"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5dc60b6520"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f5dc6ed5310"/></to>
    </wire>
    <wire loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f5dc60b3a10"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f5dc6ed30a0"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5dc60b6e50"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f5dc6ed5c40"/></to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f5dc60b45f0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f5dc6ed4400"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f5dc60b3270"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f5dc6ef1a20"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f5dc6ef1a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f5dc6ee5a20"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x7f5dc60b2610"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5dc7c60e10"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f5dc6eee920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f5dc6ee6940"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5dc6ef59b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5dc6ee6080"/></to>
    </wire>
    <wire loc="76:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5dc6e78a00"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f5dc6e71120"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f5dc6e73400"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7f5dc6e6ebf0"/></to>
    </wire>
    <wire loc="70:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f5dc6e76470"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7f5dc6e70be0"/></to>
    </wire>
    <wire loc="74:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f5dc6e73b60"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f5dc6e6d440"/></to>
    </wire>
    <wire loc="80:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f5dc6e72a80"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f5dc6e682b0"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f5dc6e77e80"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7f5dc6e705d0"/></to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f5dc6e77590"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7f5dc6e71be0"/></to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f5dc60584c0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f5dc6df7800"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5dc605d250"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5dc6df8750"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f5dc60593f0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f5dc6e04080"/></to>
    </wire>
    <wire loc="26:/usr/bin/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f5dc6e04080"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f5dc76efa80"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7f5dc605e640"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x7f5dc6df6760"/></to>
    </wire>
    <wire loc="76:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5dc6dc62b0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f5dc6dc0920"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f5dc6dc3b60"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7f5dc6dbc5a0"/></to>
    </wire>
    <wire loc="74:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f5dc6dc1400"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f5dc6dbcd40"/></to>
    </wire>
    <wire loc="80:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f5dc6dc02b0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f5dc6dbbb40"/></to>
    </wire>
    <wire loc="78:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f5dc6dc5650"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7f5dc6dbfd70"/></to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f5dc6dc6d30"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7f5dc6dbf440"/></to>
    </wire>
    <wire loc="75:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f5dc6c78ac0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5dc6a296e0"/></to>
    </wire>
    <wire loc="91:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f5dc6da7940"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f5dc6d7d630"/></to>
    </wire>
    <wire loc="81:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5dc6c73020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f5dc6a213a0"/></to>
    </wire>
    <wire loc="83:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f5dc6d62340"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f5dc6d991f0"/></to>
    </wire>
    <wire loc="86:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f5dc6d61110"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f5dc6d94110"/></to>
    </wire>
    <wire loc="89:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7f5dc6d61ca0"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x7f5dc6d94ca0"/></to>
    </wire>
    <wire loc="92:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f5dc6d608d0"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f5dc6d938d0"/></to>
    </wire>
    <wire loc="95:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f5dc6d5f780"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f5dc6d982e0"/></to>
    </wire>
    <wire loc="98:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f5dc6d631a0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5dc6c73020"/></to>
    </wire>
    <wire loc="101:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f5dc6d5a2e0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f5dc6d92470"/></to>
    </wire>
    <wire loc="103:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7f5dc6d77760"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x7f5dc6c81950"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7f5dc6c81950"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f5dc7af1cb0"/></to>
    </wire>
    <wire loc="104:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f5dc6d75b50"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x7f5dc6c7db50"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f5dc6c7db50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5dc6c4f850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f5dc6d6faa0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f5dc6c7c920"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f5dc6c7c920"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f5dc6c50020"/></to>
    </wire>
    <wire loc="107:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7f5dc6d73670"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x7f5dc6c7b4e0"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7f5dc6c7b4e0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7f5dc7ae8350"/></to>
    </wire>
    <wire loc="108:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f5dc6d72980"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f5dc6c7a7f0"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f5dc6c7a7f0"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7f5dc7af3670"/></to>
    </wire>
    <wire loc="110:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7f5dc6d66550"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7f5dc6c79b10"/></to>
    </wire>
    <wire loc="57:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7f5dc6c79b10"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7f5dc6c729d0"/></to>
    </wire>
    <wire loc="111:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f5dc6d5b6b0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f5dc731d750"/></to>
    </wire>
    <wire loc="112:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f5dc6d64d20"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f5dc69c69a0"/></to>
    </wire>
    <wire loc="847:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x7f5dc6cc2920"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5dc7c60e10"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/usr/bin/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f5dc6a296e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5dc5fbf610"/></to>
    </wire>
    <wire loc="95:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f5dc6c50020"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f5dc6c41480"/></to>
    </wire>
    <wire loc="48:/usr/bin/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f5dc6a213a0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f5dc69d1b60"/></to>
    </wire>
    <wire loc="59:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x7f5dc6c623d0"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7f5dc7ad5350"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x7f5dc6c60680"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7f5dc7ad9e40"/></to>
    </wire>
    <wire loc="72:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f5dc6c657f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5dc6b48530"/></to>
    </wire>
    <wire loc="91:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f5dc6b48530"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5dc6b2d850"/></to>
    </wire>
    <wire loc="96:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f5dc6c44ae0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f5dc6c40020"/></to>
    </wire>
    <wire loc="94:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f5dc6c4e840"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f5dc6c42e00"/></to>
    </wire>
    <wire loc="92:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5dc6c511f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5dc6c427e0"/></to>
    </wire>
    <wire loc="97:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5dc6c4f850"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5dc6c40d20"/></to>
    </wire>
    <wire loc="99:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7f5dc6c21430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5dc6b63210"/></to>
    </wire>
    <wire loc="98:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5dc6b63210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5dc60089d0"/></to>
    </wire>
    <wire loc="100:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5dc6c20130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5dc6b627a0"/></to>
    </wire>
    <wire loc="100:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5dc6b627a0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5dc6006020"/></to>
    </wire>
    <wire loc="101:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7f5dc6c3d020"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7f5dc6bd23e0"/></to>
    </wire>
    <wire loc="83:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7f5dc6bd23e0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7f5dc6bc5350"/></to>
    </wire>
    <wire loc="102:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f5dc6c20920"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f5dc7b51020"/></to>
    </wire>
    <wire loc="296:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7f5dc6bfe190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5dc7c60e10"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7f5dc6bbbe50"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f5dc7b51020"/></to>
    </wire>
    <wire loc="86:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7f5dc6bc1390"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f5dc7af1cb0"/></to>
    </wire>
    <wire loc="87:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f5dc6bc0650"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7f5dc7aef020"/></to>
    </wire>
    <wire loc="88:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7f5dc6bbe800"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7f5dc7aee350"/></to>
    </wire>
    <wire loc="89:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7f5dc6bbdb10"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7f5dc7aed670"/></to>
    </wire>
    <wire loc="99:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f5dc6b62020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f5dc6007850"/></to>
    </wire>
    <wire loc="101:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5dc6006910"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5dc6b600d0"/></to>
    </wire>
    <wire loc="103:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f5dc6005120"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f5dc600a9c0"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f5dc6005c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5dc7c60e10"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f5dc6b41d80"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f5dc6b2e020"/></to>
    </wire>
    <wire loc="89:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5dc6b58b20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5dc6b36b90"/></to>
    </wire>
    <wire loc="93:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f5dc6b3b650"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f5dc6b225a0"/></to>
    </wire>
    <wire loc="94:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f5dc6b3b650"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f5dc6b1eba0"/></to>
    </wire>
    <wire loc="95:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f5dc6b3b650"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7f5dc6b19120"/></to>
    </wire>
    <wire loc="43:/usr/bin/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f5dc5fbca30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5dc6b58b20"/></to>
    </wire>
    <wire loc="44:/usr/bin/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f5dc5fb7db0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5dc6b3b650"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/usr/bin/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5dc6a70410"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5dc6b58b20"/></to>
    </wire>
    <wire loc="49:/usr/bin/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5dc69d0e40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5dc69f7cf0"/></to>
    </wire>
    <wire loc="50:/usr/bin/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f5dc69d50f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5dc6a1d200"/></to>
    </wire>
    <wire loc="31:/usr/bin/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5dc6a1d200"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5dc6a17020"/></to>
    </wire>
    <wire loc="32:/usr/bin/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5dc6a00280"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5dc6b58b20"/></to>
    </wire>
    <wire loc="63:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5dc5f82230"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5dc5f76b20"/></to>
    </wire>
    <wire loc="64:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5dc5f82e40"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5dc75052b0"/></to>
    </wire>
    <wire loc="65:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5dc5f81a70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5dc74fd020"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f5dc68b1020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f5dc5f7f120"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f5dc5f7f120"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5dc74f1350"/></to>
    </wire>
    <wire loc="60:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5dc5f75910"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5dc691ec20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5dc5f74590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5dc74fd020"/></to>
    </wire>
    <wire loc="53:/usr/bin/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5dc691ec20"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5dc68cd580"/></to>
    </wire>
    <wire loc="54:/usr/bin/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5dc68cc400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5dc7508530"/></to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5dc68ca060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5dc74fd020"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5dc68c9720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5dc75052b0"/></to>
    </wire>
    <wire loc="169:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f5dc68c8480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5dc7c60e10"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f5dc68c8c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5dc7c60e10"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5dc68a7020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5dc75052b0"/></to>
    </wire>
    <wire loc="56:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5dc68a7c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5dc74fd020"/></to>
    </wire>
    <wire loc="48:/usr/bin/tinyos-main/tos/platforms/mica/VoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f5dc5f28990"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f5dc5f24980"/></to>
    </wire>
    <wire loc="36:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f5dc5f24980"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f5dc6895e70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/usr/bin/tinyos-main/tos/platforms/mica/VoltageC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f5dc5f22060"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f5dc66e7160"/></to>
    </wire>
    <wire loc="37:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f5dc688ac20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f5dc5f22060"/></to>
    </wire>
    <wire loc="38:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5dc6886b50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5dc6882860"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5dc687faf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5dc5f22950"/></to>
    </wire>
    <wire loc="31:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f5dc6895e70"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f5dc6717150"/></to>
    </wire>
    <wire loc="32:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7f5dc6888e60"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7f5dc6749300"/></to>
    </wire>
    <wire loc="33:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5dc66fc300"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5dc6886b50"/></to>
    </wire>
    <wire loc="34:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f5dc6746b90"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f5dc688ac20"/></to>
    </wire>
    <wire loc="36:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f5dc66ffaf0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f5dc674b580"/></to>
    </wire>
    <wire loc="37:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f5dc6748b80"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f5dc687bdd0"/></to>
    </wire>
    <wire loc="68:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f5dc687bdd0"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f5dc6871020"/></to>
    </wire>
    <wire loc="38:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f5dc67458d0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f5dc69c69a0"/></to>
    </wire>
    <wire loc="69:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f5dc6875c90"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f5dc68719c0"/></to>
    </wire>
    <wire loc="66:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5dc6882860"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5dc67797f0"/></to>
    </wire>
    <wire loc="105:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5dc67797f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5dc5f0e970"/></to>
    </wire>
    <wire loc="67:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5dc67763e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5dc687faf0"/></to>
    </wire>
    <wire loc="73:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f5dc686f020"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f5dc6873cc0"/></to>
    </wire>
    <wire loc="50:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f5dc6873cc0"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f5dc68251f0"/></to>
    </wire>
    <wire loc="74:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f5dc685e630"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f5dc7b151d0"/></to>
    </wire>
    <wire loc="76:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5dc6772200"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5dc68727c0"/></to>
    </wire>
    <wire loc="77:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5dc675c020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5dc6778e40"/></to>
    </wire>
    <wire loc="107:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5dc6778e40"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5dc5f0c020"/></to>
    </wire>
    <wire loc="51:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f5dc68237f0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f5dc7b51020"/></to>
    </wire>
    <wire loc="106:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f5dc67786c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f5dc5f0d850"/></to>
    </wire>
    <wire loc="108:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5dc6777a70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5dc5f0cc30"/></to>
    </wire>
    <wire loc="109:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5dc5f0b590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5dc67763e0"/></to>
    </wire>
    <wire loc="111:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f5dc5f0bd50"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f5dc5f106f0"/></to>
    </wire>
    <wire loc="75:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f5dc5f07020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5dc7c60e10"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5dc5ed5ad0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5dc6772200"/></to>
    </wire>
    <wire loc="82:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f5dc5ed4270"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f5dc6772960"/></to>
    </wire>
    <wire loc="84:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5dc5ed4840"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5dc675c020"/></to>
    </wire>
    <wire loc="85:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5dc5ed3590"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5dc675cc30"/></to>
    </wire>
    <wire loc="104:/usr/bin/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x7f5dc6733660"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5dc7c60e10"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/usr/bin/tinyos-main/tos/system/MainC.nc">
      <documentation loc="1:/usr/bin/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/usr/bin/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/usr/bin/tinyos-main/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/usr/bin/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/usr/bin/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/usr/bin/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/usr/bin/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/usr/bin/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/usr/bin/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/usr/bin/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/usr/bin/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/usr/bin/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/usr/bin/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/usr/bin/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/usr/bin/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedToRadioC" loc="4:LedToRadioC.nc">
      <module/>
    </component>
    <component qname="LedToRadioAppC.Timer0" loc="44(LedToRadioAppC.Timer0):/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/usr/bin/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/usr/bin/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/usr/bin/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bd19b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5dc7bd1d20"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f5dc76d39f0"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bd19b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5dc7bd1d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bd19b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5dc7bd1d20"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bd19b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5dc7bd1d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="37:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/usr/bin/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/usr/bin/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/usr/bin/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/usr/bin/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/usr/bin/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/usr/bin/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/usr/bin/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/usr/bin/tinyos-main/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/usr/bin/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/usr/bin/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/usr/bin/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TOne" ref="0x7f5dc7b7a410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/usr/bin/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/usr/bin/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/usr/bin/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TOne" ref="0x7f5dc7b7a410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5dc7bce180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5dc7bce180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5dc7bce180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/usr/bin/tinyos-main/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="LedToRadioAppC.AMSenderC" loc="47(LedToRadioAppC.AMSenderC):/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LedToRadioAppC.AMSenderC.SenderC" loc="47(LedToRadioAppC.AMSenderC.SenderC):/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LedToRadioAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(LedToRadioAppC.AMSenderC.SenderC.AMQueueEntryP):/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/usr/bin/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LedToRadioAppC.AMReceiverC" loc="43(LedToRadioAppC.AMReceiverC):/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LedToRadioAppC.Sensor" loc="41(LedToRadioAppC.Sensor):/usr/bin/tinyos-main/tos/platforms/micaz/DemoSensorC.nc">
      <documentation loc="32:/usr/bin/tinyos-main/tos/platforms/micaz/DemoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DemoSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LedToRadioAppC.Sensor.DemoChannel" loc="39(LedToRadioAppC.Sensor.DemoChannel):/usr/bin/tinyos-main/tos/platforms/mica/VoltageC.nc">
      <documentation loc="31:/usr/bin/tinyos-main/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LedToRadioAppC.Sensor.DemoChannel.AdcReadClientC" loc="21(LedToRadioAppC.Sensor.DemoChannel.AdcReadClientC):/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="17:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <documentation loc="10:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="51:/usr/bin/tinyos-main/tos/chips/atm1281/adc/Atm128AdcP.nc" safe="">
      <documentation loc="40:/usr/bin/tinyos-main/tos/chips/atm1281/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega1281 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega1281 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="47:/usr/bin/tinyos-main/tos/chips/atm1281/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="38:/usr/bin/tinyos-main/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega1281 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1281 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/usr/bin/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/usr/bin/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/usr/bin/tinyos-main/tos/chips/atm1281/adc/AdcP.nc" safe="">
      <documentation loc="39:/usr/bin/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/usr/bin/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/usr/bin/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageP" loc="38:/usr/bin/tinyos-main/tos/platforms/mica/VoltageP.nc">
      <documentation loc="31:/usr/bin/tinyos-main/tos/platforms/mica/VoltageP.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f5dc7ab55a0" loc="40:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f5dc7ab5910" loc="40:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f5dc7ab5c80" loc="40:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f5dc7aa69f0" loc="41:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f5dc7aa6d80" loc="42:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f5dc7aa3170" loc="43:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f5dc7aa34c0" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f5dc79ad0d0" loc="42:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f5dc79ad460" loc="43:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f5dc79ad7f0" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f5dc79adb40" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f5dc76d39f0" loc="58:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f5dc76d39f0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f5dc76d3d00" loc="58:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f5dc76c2600" loc="58:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f5dc76c2600"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f5dc76c2910" loc="58:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5dc75ae430" loc="46:/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5dc75ae430"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5dc757c880" loc="46:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5dc757c880"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f5dc757cbb0" loc="46:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5dc752cde0" loc="46:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5dc752cde0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f5dc7214210" loc="83:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/usr/bin/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f5dc7206540" loc="42:/usr/bin/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/usr/bin/tinyos-main/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/usr/bin/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f5dc6a7b290" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f5dc6a7b290"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7f5dc6a7b600" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f5dc6a69d60" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f5dc6a69d60"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f5dc6a66580" loc="52:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f5dc6a66580"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7f5dc6a668a0" loc="53:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f5dc6a19910" loc="42:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f5dc6a19910"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f5dc6a16120" loc="43:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f5dc6a16120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f5dc69f6600" loc="55:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f5dc69f6600"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f5dc69f6dd0" loc="56:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f5dc69f6dd0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f5dc69f5220" loc="57:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f5dc69f5220"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f5dc69f5a00" loc="58:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f5dc69f5a00"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f5dc69f5dd0" loc="59:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f5dc69f3630" loc="60:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f5dc69f3630"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/usr/bin/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f5dc694e800" loc="47:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f5dc69443a0" loc="47:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f5dc693d0d0" loc="43:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f5dc6916020" loc="45:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f5dc68ad330" loc="43:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DemoSensorC" loc="41:/usr/bin/tinyos-main/tos/platforms/micaz/DemoSensorC.nc" abstract="">
      <documentation loc="32:/usr/bin/tinyos-main/tos/platforms/micaz/DemoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VoltageC" loc="39:/usr/bin/tinyos-main/tos/platforms/mica/VoltageC.nc" abstract="">
      <documentation loc="31:/usr/bin/tinyos-main/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f5dc67eeb50" loc="89:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f5dc67e1700" loc="42:/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/usr/bin/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f5dc67c45e0" loc="52:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/usr/bin/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/usr/bin/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/usr/bin/tinyos-main/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/usr/bin/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x7f5dc67161f0" loc="23:/usr/bin/tinyos-main/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x7f5dc67161f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f5dc7b29020" loc="58:/usr/bin/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f5dc7b29020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc7b293a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f5dc7b28a20" loc="57:/usr/bin/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f5dc7b28a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f5dc7b28da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f5dc7b1b020" loc="52:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f5dc7b1b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc7b1b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5dc7b25080" loc="46:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5dc7b25080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc7b25400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f5dc7b151d0" loc="50:/usr/bin/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f5dc7b151d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f5dc7b15550"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f5dc7b156e0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f5dc7b15870"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f5dc7b15a00"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f5dc7b15b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f5dc7b12a60" loc="45:/usr/bin/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f5dc7b12a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc7b12de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5dc7b12380" loc="44:/usr/bin/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5dc7b12380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc7b12700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f5dc7b11180" loc="46:/usr/bin/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f5dc7b11180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc7b11500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f5dc7b0b1f0" loc="41:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f5dc7b0b1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc7b0b570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f5dc7b1aaf0" loc="40:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f5dc7b1aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc7b1ae70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f5dc7b07e60" loc="45:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f5dc7b07e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc7b06210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7f5dc7b01b90" loc="44:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7f5dc7b01b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7b07020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7b071b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7b07340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7b074d0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7b07660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7b077f0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7b07980"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7b07b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f5dc7b08660" loc="43:/usr/bin/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f5dc7b08660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc7b089e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f5dc7ac0cb0" loc="98:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f5dc7ac0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7abf610"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7abf7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7abf930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7abfac0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7abfc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7abfde0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7abe020"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7abe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f5dc7adc4e0" loc="72:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f5dc7adc4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7adc860"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7adc9f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7adcb80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7adcd10"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7adb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7adb1b0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7adb340"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7adb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f5dc7acf350" loc="83:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f5dc7acf350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7acf6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7acf860"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7acf9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7acfb80"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7acfd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7ace020"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7ace1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7ace340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f5dc7ac6cb0" loc="92:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f5dc7ac6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7ac50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7ac5230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7ac53c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7ac5550"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7ac56e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7ac5870"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7ac5a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7ac5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f5dc7ab8060" loc="103:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f5dc7ab8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7ab83e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7ab8570"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7ab8700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7ab8890"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7ab8a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7ab8bb0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7ab8d40"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7ab7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f5dc7af3670" loc="50:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f5dc7af3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7af39f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7af3b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7af3d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7af2020"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7af21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7af2340"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7af24d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7af2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f5dc7ac8670" loc="90:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f5dc7ac8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7ac89f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7ac8b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7ac8d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7ac7020"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7ac71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7ac7340"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7ac74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7ac7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f5dc7af1cb0" loc="53:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f5dc7af1cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7af00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7af0230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7af03c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7af0550"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7af06e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7af0870"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7af0a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7af0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f5dc7ae5cb0" loc="64:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f5dc7ae5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7ae40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7ae4230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7ae43c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7ae4550"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7ae46e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7ae4870"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7ae4a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7ae4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f5dc7ad9e40" loc="75:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f5dc7ad9e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7ad71e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7ad7370"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7ad7500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7ad7690"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7ad7820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7ad79b0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7ad7b40"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7ad7cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f5dc7acccb0" loc="86:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f5dc7acccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7acb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7acb230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7acb3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7acb550"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7acb6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7acb870"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7acba00"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7acbb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f5dc7afa800" loc="45:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f5dc7afa800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7afab80"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7afad10"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7af9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7af91b0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7af9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7af94d0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7af9660"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7af97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f5dc7aed670" loc="56:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f5dc7aed670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7aed9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7aedb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7aedd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7aec020"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7aec1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7aec340"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7aec4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7aec660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f5dc7ae1670" loc="67:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f5dc7ae1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7ae19f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7ae1b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7ae1d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7ae0020"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7ae01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7ae0340"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7ae04d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7ae0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f5dc7ad4670" loc="78:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f5dc7ad4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7ad49f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7ad4b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7ad4d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7ad3020"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7ad31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7ad3340"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7ad34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7ad3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f5dc7ac2670" loc="95:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f5dc7ac2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7ac29f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7ac2b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7ac2d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7ac1020"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7ac11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7ac1340"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7ac14d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7ac1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f5dc7abcb20" loc="101:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f5dc7abcb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7aba020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7aba1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7aba340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7aba4d0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7aba660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7aba7f0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7aba980"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7abab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f5dc7ad2cb0" loc="81:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f5dc7ad2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7ad10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7ad1230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7ad13c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7ad1550"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7ad16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7ad1870"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7ad1a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7ad1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f5dc7af6060" loc="48:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f5dc7af6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7af63e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7af6570"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7af6700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7af6890"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7af6a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7af6bb0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7af6d40"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7af5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f5dc7ae9020" loc="59:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f5dc7ae9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7ae93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7ae9530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7ae96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7ae9850"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7ae99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7ae9b70"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7ae9d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7ae8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f5dc7abe4e0" loc="99:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f5dc7abe4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7abe860"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7abe9f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7abeb80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7abed10"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7abd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7abd1b0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7abd340"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7abd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f5dc7ae7670" loc="62:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f5dc7ae7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7ae79f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7ae7b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7ae7d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7ae6020"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7ae61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7ae6340"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7ae64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7ae6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f5dc7adb800" loc="73:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f5dc7adb800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7adbb80"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7adbd10"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7ada020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7ada1b0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7ada340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7ada4d0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7ada660"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7ada7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f5dc7ace670" loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f5dc7ace670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7ace9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7aceb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7aced10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7acd020"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7acd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7acd340"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7acd4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7acd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f5dc7ac4020" loc="93:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f5dc7ac4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7ac43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7ac4530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7ac46c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7ac4850"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7ac49e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7ac4b70"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7ac4d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7ac3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f5dc7af2990" loc="51:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f5dc7af2990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7af2d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7af1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7af11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7af1340"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7af14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7af1660"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7af17f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7af1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f5dc7aef020" loc="54:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f5dc7aef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7aef3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7aef530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7aef6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7aef850"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7aef9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7aefb70"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7aefd00"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7aee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f5dc7ae3020" loc="65:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f5dc7ae3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7ae33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7ae3530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7ae36c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7ae3850"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7ae39e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7ae3b70"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7ae3d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7ae2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f5dc7ad6060" loc="76:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f5dc7ad6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7ad63e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7ad6570"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7ad6700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7ad6890"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7ad6a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7ad6bb0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7ad6d40"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7ad5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f5dc7aca020" loc="87:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f5dc7aca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7aca3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7aca530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7aca6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7aca850"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7aca9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7acab70"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7acad00"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7ac9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f5dc7af9b20" loc="46:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f5dc7af9b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7af8020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7af81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7af8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7af84d0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7af8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7af87f0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7af8980"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7af8b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f5dc7aec990" loc="57:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f5dc7aec990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7aece10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7aeb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7aeb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7aeb340"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7aeb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7aeb660"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7aeb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7aeb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f5dc7ae0990" loc="68:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f5dc7ae0990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7ae0d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7adf020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7adf1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7adf340"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7adf4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7adf660"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7adf7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7adf980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f5dc7ac1990" loc="96:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f5dc7ac1990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7ac1d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7ac0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7ac01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7ac0340"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7ac04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7ac0660"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7ac07f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7ac0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f5dc7add020" loc="71:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f5dc7add020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7add5a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7add730"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7add8c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7adda50"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7addbe0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7addd70"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7adc020"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7adc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f5dc7ad0020" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f5dc7ad0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7ad03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7ad0530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7ad06c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7ad0850"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7ad09e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7ad0b70"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7ad0d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7acf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f5dc7ac7990" loc="91:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f5dc7ac7990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7ac7d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7ac6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7ac61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7ac6340"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7ac64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7ac6660"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7ac67f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7ac6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f5dc7abae40" loc="102:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f5dc7abae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7ab91e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7ab9370"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7ab9500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7ab9690"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7ab9820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7ab99b0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7ab9b40"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7ab9cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f5dc7af5350" loc="49:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f5dc7af5350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7af56d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7af5860"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7af59f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7af5b80"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7af5d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7af3020"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7af31b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7af3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f5dc7ae8350" loc="60:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f5dc7ae8350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7ae86d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7ae8860"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7ae89f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7ae8b80"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7ae8d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7ae7020"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7ae71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7ae7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f5dc7ac9350" loc="89:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f5dc7ac9350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7ac96d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7ac9860"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7ac99f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7ac9b80"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7ac9d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7ac8020"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7ac81b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7ac8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f5dc7ae6990" loc="63:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f5dc7ae6990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7ae6d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7ae5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7ae51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7ae5340"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7ae54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7ae5660"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7ae57f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7ae5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f5dc7adab20" loc="74:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f5dc7adab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7ad9020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7ad91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7ad9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7ad94d0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7ad9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7ad97f0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7ad9980"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7ad9b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f5dc7acd990" loc="85:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f5dc7acd990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7acdd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7acc020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7acc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7acc340"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7acc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7acc660"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7acc7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7acc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f5dc7ac3350" loc="94:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f5dc7ac3350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7ac36d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7ac3860"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7ac39f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7ac3b80"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7ac3d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7ac2020"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7ac21b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7ac2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f5dc7b09540" loc="44:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f5dc7b09540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7b098c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7b09a50"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7b09be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7b09d70"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7afa020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7afa1b0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7afa340"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7afa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f5dc7aee350" loc="55:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f5dc7aee350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7aee6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7aee860"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7aee9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7aeeb80"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7aeed10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7aed020"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7aed1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7aed340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f5dc7ae2350" loc="66:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f5dc7ae2350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7ae26d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7ae2860"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7ae29f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7ae2b80"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7ae2d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7ae1020"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7ae11b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7ae1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f5dc7ad5350" loc="77:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f5dc7ad5350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7ad56d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7ad5860"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7ad59f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7ad5b80"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7ad5d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7ad4020"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7ad41b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7ad4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f5dc7abd800" loc="100:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f5dc7abd800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7abdb80"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7abdd10"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7abc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7abc1b0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7abc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7abc4d0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7abc660"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7abc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f5dc7ad3990" loc="80:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f5dc7ad3990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7ad3d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7ad2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7ad21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7ad2340"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7ad24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7ad2660"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7ad27f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7ad2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f5dc7adfcb0" loc="69:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f5dc7adfcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7ade0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7ade230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7ade3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7ade550"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7ade6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7ade870"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7adea00"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7adeb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f5dc7af8e40" loc="47:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f5dc7af8e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7af71e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7af7370"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7af7500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7af7690"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7af7820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7af79b0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7af7b40"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7af7cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f5dc7aebcb0" loc="58:/usr/bin/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f5dc7aebcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7aea0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7aea230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7aea3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7aea550"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7aea6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7aea870"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7aeaa00"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7aeab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f5dc7a56a80" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f5dc7a56a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7a56e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7a55020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7a551b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7a55340"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7a554d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7a55660"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7a557f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7a55980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f5dc7a4b020" loc="49:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f5dc7a4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7a4b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7a4b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7a4b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7a4b850"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7a4b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7a4bb70"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7a4bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7a4a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f5dc7a596b0" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f5dc7a596b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7a59a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7a59bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7a59d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7a58020"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7a581b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7a58340"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7a584d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7a58660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f5dc7a55c10" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f5dc7a55c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7a4d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7a4d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7a4d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7a4d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7a4d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7a4d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7a4d980"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7a4db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f5dc7a4a2b0" loc="50:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f5dc7a4a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7a4a630"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7a4a7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7a4a950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7a4aae0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7a4ac70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7a4ae00"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7a49020"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7a491b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f5dc7a588f0" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f5dc7a588f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7a58c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7a58e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7a56020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7a561b0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7a56340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7a564d0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7a56660"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7a567f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f5dc7a4dda0" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f5dc7a4dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7a4c180"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7a4c310"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7a4c4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7a4c630"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7a4c7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7a4c950"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7a4cae0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7a4cc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f5dc7a49440" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f5dc7a49440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7a497c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7a49950"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7a49ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7a49c70"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7a49e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7a48020"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7a481b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7a48340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc6695e20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc6695e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc66941c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc6694350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc66944e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc6694670"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6694800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6694990"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6694b20"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6694cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc66910a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc66910a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc6691420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc66915b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc6691740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc66918d0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6691a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6691bf0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6691d80"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6690020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc668e3f0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc668e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc668e770"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc668e900"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc668ea90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc668ec20"/>
        <function-ref name="get" scoped="" ref="0x7f5dc668edb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc668d020"/>
        <function-ref name="set" scoped="" ref="0x7f5dc668d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc668d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc668b6d0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc668b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc668ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc668bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc668bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc668a020"/>
        <function-ref name="get" scoped="" ref="0x7f5dc668a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc668a340"/>
        <function-ref name="set" scoped="" ref="0x7f5dc668a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc668a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc66889b0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc66889b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc6688d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc6686020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc66861b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc6686340"/>
        <function-ref name="get" scoped="" ref="0x7f5dc66864d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6686660"/>
        <function-ref name="set" scoped="" ref="0x7f5dc66867f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6686980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc6676e20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc6676e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc66751c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc6675350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc66754e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc6675670"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6675800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6675990"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6675b20"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6675cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc66720a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc66720a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc6672420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc66725b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc6672740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc66728d0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6672a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6672bf0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6672d80"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6671020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc666f3f0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc666f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc666f770"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc666f900"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc666fa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc666fc20"/>
        <function-ref name="get" scoped="" ref="0x7f5dc666fdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc666e020"/>
        <function-ref name="set" scoped="" ref="0x7f5dc666e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc666e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f5dc7a39da0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f5dc7a39da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7a38180"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7a38310"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7a384a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7a38630"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7a387c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7a38950"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7a38ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7a38c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f5dc7a35440" loc="49:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f5dc7a35440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7a357c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7a35950"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7a35ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7a35c70"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7a35e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7a2d020"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7a2d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7a2d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f5dc7a3ba20" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f5dc7a3ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7a3bda0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7a3a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7a3a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7a3a340"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7a3a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7a3a660"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7a3a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7a3a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f5dc7a37020" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f5dc7a37020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7a373a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7a37530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7a376c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7a37850"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7a379e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7a37b70"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7a37d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7a36020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f5dc7a2d5d0" loc="50:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f5dc7a2d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7a2d950"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7a2dae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7a2dc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7a2de00"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7a2c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7a2c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7a2c340"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7a2c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f5dc7a3ac10" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f5dc7a3ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7a39020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7a391b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7a39340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7a394d0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7a39660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7a397f0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7a39980"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7a39b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f5dc7a362b0" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f5dc7a362b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7a36630"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7a367c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7a36950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7a36ae0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7a36c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7a36e00"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7a35020"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7a351b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f5dc7a2c760" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f5dc7a2c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7a2cae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7a2cc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7a2ce00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7a2b020"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7a2b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7a2b340"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7a2b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7a2b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc6610060" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc6610060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc66103e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc6610570"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc6610700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc6610890"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6610a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6610bb0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6610d40"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc660f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc660d3f0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc660d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc660d770"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc660d900"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc660da90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc660dc20"/>
        <function-ref name="get" scoped="" ref="0x7f5dc660ddb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc660c020"/>
        <function-ref name="set" scoped="" ref="0x7f5dc660c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc660c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc660a6d0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc660a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc660aa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc660abe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc660ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc6609020"/>
        <function-ref name="get" scoped="" ref="0x7f5dc66091b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6609340"/>
        <function-ref name="set" scoped="" ref="0x7f5dc66094d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6609660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc66079b0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc66079b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc6607d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc6606020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc66061b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc6606340"/>
        <function-ref name="get" scoped="" ref="0x7f5dc66064d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6606660"/>
        <function-ref name="set" scoped="" ref="0x7f5dc66067f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6606980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc6604e20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc6604e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc66031c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc6603350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc66034e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc6603670"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6603800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6603990"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6603b20"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6603cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc66000a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc66000a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc6600420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc66005b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc6600740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc66008d0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6600a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6600bf0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6600d80"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc65fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc65fc3f0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc65fc3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc65fc770"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc65fc900"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc65fca90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc65fcc20"/>
        <function-ref name="get" scoped="" ref="0x7f5dc65fcdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc65fb020"/>
        <function-ref name="set" scoped="" ref="0x7f5dc65fb1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc65fb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc65f96d0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc65f96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc65f9a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc65f9be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc65f9d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc65f8020"/>
        <function-ref name="get" scoped="" ref="0x7f5dc65f81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc65f8340"/>
        <function-ref name="set" scoped="" ref="0x7f5dc65f84d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc65f8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f5dc7a1b020" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f5dc7a1b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7a1b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7a1b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7a1b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7a1b850"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7a1b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7a1bb70"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7a1bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7a1a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f5dc7a185d0" loc="49:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f5dc7a185d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7a18950"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7a18ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7a18c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7a18e00"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7a17020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7a171b0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7a17340"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7a174d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f5dc7a25d30" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f5dc7a25d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7a1d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7a1d270"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7a1d400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7a1d590"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7a1d720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7a1d8b0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7a1da40"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7a1dbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f5dc7a1a2b0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f5dc7a1a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7a1a630"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7a1a7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7a1a950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7a1aae0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7a1ac70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7a1ae00"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7a19020"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7a191b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f5dc7a17760" loc="50:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f5dc7a17760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7a17ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7a17c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7a17e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7a16020"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7a161b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7a16340"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7a164d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7a16660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f5dc7a1de60" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f5dc7a1de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7a1c210"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7a1c3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7a1c530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7a1c6c0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7a1c850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7a1c9e0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7a1cb70"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7a1cd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f5dc7a19440" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f5dc7a19440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7a197c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7a19950"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7a19ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7a19c70"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7a19e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7a18020"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7a181b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7a18340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f5dc7a168f0" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f5dc7a168f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7a16c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7a16e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7a0d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7a0d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7a0d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7a0d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7a0d660"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7a0d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc659ba60" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc659ba60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc659bde0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc659a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc659a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc659a340"/>
        <function-ref name="get" scoped="" ref="0x7f5dc659a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc659a660"/>
        <function-ref name="set" scoped="" ref="0x7f5dc659a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc659a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc6598e20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc6598e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc65971c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc6597350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc65974e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc6597670"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6597800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6597990"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6597b20"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6597cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc65940a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc65940a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc6594420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc65945b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc6594740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc65948d0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6594a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6594bf0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6594d80"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6593020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc65913f0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc65913f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc6591770"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc6591900"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc6591a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc6591c20"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6591db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6590020"/>
        <function-ref name="set" scoped="" ref="0x7f5dc65901b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6590340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc658e6d0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc658e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc658ea50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc658ebe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc658ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc658d020"/>
        <function-ref name="get" scoped="" ref="0x7f5dc658d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc658d340"/>
        <function-ref name="set" scoped="" ref="0x7f5dc658d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc658d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc65879b0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc65879b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc6587d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc6585020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc65851b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc6585340"/>
        <function-ref name="get" scoped="" ref="0x7f5dc65854d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6585660"/>
        <function-ref name="set" scoped="" ref="0x7f5dc65857f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6585980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc6583e20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc6583e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc65821c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc6582350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc65824e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc6582670"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6582800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6582990"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6582b20"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6582cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc657f0a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc657f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc657f420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc657f5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc657f740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc657f8d0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc657fa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc657fbf0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc657fd80"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc657e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f5dc7a05440" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f5dc7a05440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7a057c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7a05950"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7a05ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7a05c70"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7a05e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc79fd020"/>
        <function-ref name="set" scoped="" ref="0x7f5dc79fd1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc79fd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f5dc79fa8f0" loc="49:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f5dc79fa8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc79fac70"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc79fae00"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc79f9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc79f91b0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc79f9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc79f94d0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc79f9660"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc79f97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f5dc7a07020" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f5dc7a07020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7a073a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7a07530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7a076c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7a07850"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7a079e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7a07b70"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7a07d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7a06020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f5dc79fd5d0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f5dc79fd5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc79fd950"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc79fdae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc79fdc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc79fde00"/>
        <function-ref name="get" scoped="" ref="0x7f5dc79fc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc79fc1b0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc79fc340"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc79fc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f5dc79f9a80" loc="50:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f5dc79f9a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc79f9e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc79f8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc79f81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc79f8340"/>
        <function-ref name="get" scoped="" ref="0x7f5dc79f84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc79f8660"/>
        <function-ref name="set" scoped="" ref="0x7f5dc79f87f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc79f8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f5dc7a062b0" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f5dc7a062b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7a06630"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7a067c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7a06950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7a06ae0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7a06c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7a06e00"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7a05020"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7a051b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f5dc79fc760" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f5dc79fc760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc79fcae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc79fcc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc79fce00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc79fa020"/>
        <function-ref name="get" scoped="" ref="0x7f5dc79fa1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc79fa340"/>
        <function-ref name="set" scoped="" ref="0x7f5dc79fa4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc79fa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f5dc79f8c10" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f5dc79f8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc79f7020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc79f71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc79f7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc79f74d0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc79f7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc79f77f0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc79f7980"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc79f7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc6524c90" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc6524c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc65230a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc6523230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc65233c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc6523550"/>
        <function-ref name="get" scoped="" ref="0x7f5dc65236e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6523870"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6523a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6523b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc6521e20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc6521e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc65201c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc6520350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc65204e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc6520670"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6520800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6520990"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6520b20"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6520cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc651d0a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc651d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc651d420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc651d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc651d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc651d8d0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc651da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc651dbf0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc651dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc651c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc651a3f0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc651a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc651a770"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc651a900"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc651aa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc651ac20"/>
        <function-ref name="get" scoped="" ref="0x7f5dc651adb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6519020"/>
        <function-ref name="set" scoped="" ref="0x7f5dc65191b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6519340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc65176d0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc65176d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc6517a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc6517be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc6517d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc6516020"/>
        <function-ref name="get" scoped="" ref="0x7f5dc65161b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6516340"/>
        <function-ref name="set" scoped="" ref="0x7f5dc65164d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6516660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc65149b0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc65149b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc6514d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc6513020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc65131b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc6513340"/>
        <function-ref name="get" scoped="" ref="0x7f5dc65134d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6513660"/>
        <function-ref name="set" scoped="" ref="0x7f5dc65137f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6513980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc6511e20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc6511e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc650f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc650f350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc650f4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc650f670"/>
        <function-ref name="get" scoped="" ref="0x7f5dc650f800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc650f990"/>
        <function-ref name="set" scoped="" ref="0x7f5dc650fb20"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc650fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc650c0a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc650c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc650c420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc650c5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc650c740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc650c8d0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc650ca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc650cbf0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc650cd80"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc650b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f5dc79e7760" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f5dc79e7760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc79e7ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc79e7c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc79e7e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc79e6020"/>
        <function-ref name="get" scoped="" ref="0x7f5dc79e61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc79e6340"/>
        <function-ref name="set" scoped="" ref="0x7f5dc79e64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc79e6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f5dc79ddc10" loc="49:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f5dc79ddc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc79dc020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc79dc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc79dc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc79dc4d0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc79dc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc79dc7f0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc79dc980"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc79dcb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f5dc79ea3f0" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f5dc79ea3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc79ea770"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc79ea900"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc79eaa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc79eac20"/>
        <function-ref name="get" scoped="" ref="0x7f5dc79eadb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc79e9020"/>
        <function-ref name="set" scoped="" ref="0x7f5dc79e91b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc79e9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f5dc79e68f0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f5dc79e68f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc79e6c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc79e6e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc79e5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc79e51b0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc79e5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc79e54d0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc79e5660"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc79e57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f5dc79dcda0" loc="50:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f5dc79dcda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc79db180"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc79db310"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc79db4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc79db630"/>
        <function-ref name="get" scoped="" ref="0x7f5dc79db7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc79db950"/>
        <function-ref name="set" scoped="" ref="0x7f5dc79dbae0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc79dbc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f5dc79e95d0" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f5dc79e95d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc79e9950"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc79e9ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc79e9c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc79e9e00"/>
        <function-ref name="get" scoped="" ref="0x7f5dc79e7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc79e71b0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc79e7340"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc79e74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f5dc79e5a80" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f5dc79e5a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc79e5e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc79dd020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc79dd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc79dd340"/>
        <function-ref name="get" scoped="" ref="0x7f5dc79dd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc79dd660"/>
        <function-ref name="set" scoped="" ref="0x7f5dc79dd7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc79dd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f5dc79da020" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f5dc79da020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc79da3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc79da530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc79da6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc79da850"/>
        <function-ref name="get" scoped="" ref="0x7f5dc79da9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc79dab70"/>
        <function-ref name="set" scoped="" ref="0x7f5dc79dad00"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc79d9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc64b3c90" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc64b3c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc64b20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc64b2230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc64b23c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc64b2550"/>
        <function-ref name="get" scoped="" ref="0x7f5dc64b26e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc64b2870"/>
        <function-ref name="set" scoped="" ref="0x7f5dc64b2a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc64b2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc64b0e20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc64b0e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc64af1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc64af350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc64af4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc64af670"/>
        <function-ref name="get" scoped="" ref="0x7f5dc64af800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc64af990"/>
        <function-ref name="set" scoped="" ref="0x7f5dc64afb20"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc64afcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc64ac0a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc64ac0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc64ac420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc64ac5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc64ac740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc64ac8d0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc64aca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc64acbf0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc64acd80"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc64ab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc64a93f0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc64a93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc64a9770"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc64a9900"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc64a9a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc64a9c20"/>
        <function-ref name="get" scoped="" ref="0x7f5dc64a9db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc64a8020"/>
        <function-ref name="set" scoped="" ref="0x7f5dc64a81b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc64a8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc64a66d0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc64a66d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc64a6a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc64a6be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc64a6d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc64a5020"/>
        <function-ref name="get" scoped="" ref="0x7f5dc64a51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc64a5340"/>
        <function-ref name="set" scoped="" ref="0x7f5dc64a54d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc64a5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc64a39b0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc64a39b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc64a3d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc64a2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc64a21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc64a2340"/>
        <function-ref name="get" scoped="" ref="0x7f5dc64a24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc64a2660"/>
        <function-ref name="set" scoped="" ref="0x7f5dc64a27f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc64a2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc64a0e20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc64a0e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc649e1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc649e350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc649e4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc649e670"/>
        <function-ref name="get" scoped="" ref="0x7f5dc649e800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc649e990"/>
        <function-ref name="set" scoped="" ref="0x7f5dc649eb20"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc649ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc64990a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc64990a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc6499420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc64995b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc6499740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc64998d0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6499a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6499bf0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6499d80"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6498020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f5dc79caa80" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f5dc79caa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc79cae00"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc79c9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc79c91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc79c9340"/>
        <function-ref name="get" scoped="" ref="0x7f5dc79c94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc79c9660"/>
        <function-ref name="set" scoped="" ref="0x7f5dc79c97f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc79c9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f5dc79c6020" loc="49:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f5dc79c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc79c63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc79c6530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc79c66c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc79c6850"/>
        <function-ref name="get" scoped="" ref="0x7f5dc79c69e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc79c6b70"/>
        <function-ref name="set" scoped="" ref="0x7f5dc79c6d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc79c5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f5dc79cc7a0" loc="44:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f5dc79cc7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc79ccb20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc79cccb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc79cce40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc79cb020"/>
        <function-ref name="get" scoped="" ref="0x7f5dc79cb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc79cb340"/>
        <function-ref name="set" scoped="" ref="0x7f5dc79cb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc79cb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f5dc79c9c10" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f5dc79c9c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc79c8020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc79c81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc79c8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc79c84d0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc79c8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc79c87f0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc79c8980"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc79c8b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f5dc79c52b0" loc="50:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f5dc79c52b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc79c5630"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc79c57c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc79c5950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc79c5ae0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc79c5c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc79c5e00"/>
        <function-ref name="set" scoped="" ref="0x7f5dc79bd020"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc79bd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f5dc79cb8f0" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f5dc79cb8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc79cbc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc79cbe00"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc79ca020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc79ca1b0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc79ca340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc79ca4d0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc79ca660"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc79ca7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f5dc79c8da0" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f5dc79c8da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc79c7180"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc79c7310"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc79c74a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc79c7630"/>
        <function-ref name="get" scoped="" ref="0x7f5dc79c77c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc79c7950"/>
        <function-ref name="set" scoped="" ref="0x7f5dc79c7ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc79c7c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f5dc79bd440" loc="51:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f5dc79bd440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc79bd7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc79bd950"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc79bdae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc79bdc70"/>
        <function-ref name="get" scoped="" ref="0x7f5dc79bde00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc79bc020"/>
        <function-ref name="set" scoped="" ref="0x7f5dc79bc1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc79bc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc6444c90" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc6444c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc64430a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc6443230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc64433c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc6443550"/>
        <function-ref name="get" scoped="" ref="0x7f5dc64436e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6443870"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6443a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6443b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc6441e20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc6441e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc64401c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc6440350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc64404e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc6440670"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6440800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6440990"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6440b20"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6440cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc643d0a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc643d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc643d420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc643d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc643d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc643d8d0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc643da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc643dbf0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc643dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc643a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc64383f0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc64383f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc6438770"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc6438900"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc6438a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc6438c20"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6438db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6437020"/>
        <function-ref name="set" scoped="" ref="0x7f5dc64371b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6437340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc64356d0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc64356d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc6435a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc6435be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc6435d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc6434020"/>
        <function-ref name="get" scoped="" ref="0x7f5dc64341b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6434340"/>
        <function-ref name="set" scoped="" ref="0x7f5dc64344d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6434660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc64329b0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc64329b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc6432d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc6431020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc64311b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc6431340"/>
        <function-ref name="get" scoped="" ref="0x7f5dc64314d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6431660"/>
        <function-ref name="set" scoped="" ref="0x7f5dc64317f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6431980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc642fe20" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc642fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc642e1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc642e350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc642e4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc642e670"/>
        <function-ref name="get" scoped="" ref="0x7f5dc642e800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc642e990"/>
        <function-ref name="set" scoped="" ref="0x7f5dc642eb20"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc642ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc642b0a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc642b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc642b420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc642b5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc642b740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc642b8d0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc642ba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc642bbf0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc642bd80"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6429020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc79b5a20" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc79b5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc79b5da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc798b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc798b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc798b340"/>
        <function-ref name="get" scoped="" ref="0x7f5dc798b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc798b660"/>
        <function-ref name="set" scoped="" ref="0x7f5dc798b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc798b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc79876d0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc79876d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7987a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7987be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7987d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7986020"/>
        <function-ref name="get" scoped="" ref="0x7f5dc79861b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7986340"/>
        <function-ref name="set" scoped="" ref="0x7f5dc79864d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7986660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc797b160" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc797b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc797b4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc797b670"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc797b800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc797b990"/>
        <function-ref name="get" scoped="" ref="0x7f5dc797bb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc797bcb0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc797be40"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc797a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc7976c90" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc7976c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc79750a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7975230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc79753c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7975550"/>
        <function-ref name="get" scoped="" ref="0x7f5dc79756e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7975870"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7975a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7975b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc796b6d0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc796b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc796ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc796bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc796bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc796a020"/>
        <function-ref name="get" scoped="" ref="0x7f5dc796a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc796a340"/>
        <function-ref name="set" scoped="" ref="0x7f5dc796a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc796a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc7965160" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc7965160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc79654e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7965670"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7965800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7965990"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7965b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7965cb0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7965e40"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc795e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc795bc90" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc795bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc79590a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7959230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc79593c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7959550"/>
        <function-ref name="get" scoped="" ref="0x7f5dc79596e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7959870"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7959a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7959b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc79556d0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc79556d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7955a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7955be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7955d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc794e020"/>
        <function-ref name="get" scoped="" ref="0x7f5dc794e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc794e340"/>
        <function-ref name="set" scoped="" ref="0x7f5dc794e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc794e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc7949160" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc7949160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc79494e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7949670"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7949800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7949990"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7949b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7949cb0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7949e40"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7948020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc7945c90" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc7945c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc793d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc793d230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc793d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc793d550"/>
        <function-ref name="get" scoped="" ref="0x7f5dc793d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc793d870"/>
        <function-ref name="set" scoped="" ref="0x7f5dc793da00"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc793db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc79396d0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc79396d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7939a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7939be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7939d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7938020"/>
        <function-ref name="get" scoped="" ref="0x7f5dc79381b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7938340"/>
        <function-ref name="set" scoped="" ref="0x7f5dc79384d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7938660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc792d160" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc792d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc792d4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc792d670"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc792d800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc792d990"/>
        <function-ref name="get" scoped="" ref="0x7f5dc792db20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc792dcb0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc792de40"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc792c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc7929c90" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc7929c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc79280a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7928230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc79283c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7928550"/>
        <function-ref name="get" scoped="" ref="0x7f5dc79286e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7928870"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7928a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7928b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5dc791d6d0" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5dc791d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc791da50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc791dbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc791dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc791c020"/>
        <function-ref name="get" scoped="" ref="0x7f5dc791c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc791c340"/>
        <function-ref name="set" scoped="" ref="0x7f5dc791c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc791c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5dc78b4020" loc="61:/usr/bin/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5dc78b4020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f5dc7cb0d40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f5dc7cb0d40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc78b43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f5dc78b4690" loc="62:/usr/bin/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f5dc78b4690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f5dc78b4a10"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f5dc78b4ba0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f5dc78b4d30"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f5dc78b3020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f5dc78b31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f5dc7884720" loc="60:/usr/bin/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f5dc7884720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc7884aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f5dc7b26dc0" loc="57:/usr/bin/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f5dc7b26dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f5dc7885180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f5dc7884020" loc="59:/usr/bin/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f5dc7884020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc78843a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f5dc7885470" loc="58:/usr/bin/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f5dc7885470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc78857f0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f5dc7885980"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f5dc7885b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f5dc7c60e10" loc="48:/usr/bin/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f5dc7c60e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5dc7c711c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5dc7c71350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f5dc7cef020" loc="47:/usr/bin/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f5dc7cef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc7cef3a0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f5dc7cef530"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f5dc7cef6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f5dc7b73850" loc="56:/usr/bin/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f5dc7b73850"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5dc7b73bd0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5dc7b73d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f5dc7b72dd0" loc="57:/usr/bin/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f5dc7b72dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f5dc7b71180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f5dc7b758a0" loc="55:/usr/bin/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f5dc7b758a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc7b75c20"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f5dc7b75db0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f5dc7b73020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f5dc7b4e690" loc="88:/usr/bin/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f5dc7b4e690"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f5dc7b4ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f5dc7c6fa30" loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f5dc7c6fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f5dc7c6fdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f5dc7b51020" loc="85:/usr/bin/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f5dc7b51020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f5dc7b513a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f5dc7861a80" loc="46:/usr/bin/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f5dc7861a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5dc7861e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5dc7870020"/>
        <function-ref name="led1On" scoped="" ref="0x7f5dc78701b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5dc7870340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5dc78704d0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7870660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5dc78707f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5dc7870e30"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7870980"/>
        <function-ref name="led0On" scoped="" ref="0x7f5dc7870b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f5dc7870ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f5dc7857b90" loc="50:/usr/bin/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f5dc7857b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7856020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc78561b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7856340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc78564d0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7856660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc78567f0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7856980"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7856b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5dc786fdc0" loc="46:/usr/bin/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5dc786fdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc785d180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f5dc7856e30" loc="51:/usr/bin/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f5dc7856e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc78551e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7855370"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7855500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7855690"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7855820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc78559b0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7855b40"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7855cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f5dc785d400" loc="47:/usr/bin/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f5dc785d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5dc785d780"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5dc785d910"/>
        <function-ref name="led1On" scoped="" ref="0x7f5dc785daa0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5dc785dc30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5dc785ddc0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7857020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5dc78571b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5dc78577f0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7857340"/>
        <function-ref name="led0On" scoped="" ref="0x7f5dc78574d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f5dc7857660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f5dc7854020" loc="52:/usr/bin/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f5dc7854020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc78543a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7854530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc78546c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7854850"/>
        <function-ref name="get" scoped="" ref="0x7f5dc78549e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7854b70"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7854d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7853020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f5dc782e020" loc="44:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f5dc782e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc782e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc782e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc782e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc782e850"/>
        <function-ref name="get" scoped="" ref="0x7f5dc782e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc782eb70"/>
        <function-ref name="set" scoped="" ref="0x7f5dc782ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc782d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f5dc782d380" loc="45:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f5dc782d380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc782d700"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc782d890"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc782da20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc782dbb0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc782dd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7827020"/>
        <function-ref name="set" scoped="" ref="0x7f5dc78271b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7827340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f5dc7825920" loc="47:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5dc7825920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc7825ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f5dc78276a0" loc="46:/usr/bin/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f5dc78276a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc7827a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc7827bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc7827d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc7825020"/>
        <function-ref name="get" scoped="" ref="0x7f5dc78251b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc7825340"/>
        <function-ref name="set" scoped="" ref="0x7f5dc78254d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc7825660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x7f5dc78089e0" loc="7:LedToRadioC.nc">
      <component-ref qname="LedToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x7f5dc78089e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bd19b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5dc7bd1d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5dc7805020"/>
        <function-ref name="fired" scoped="" ref="0x7f5dc7814510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5dc7806300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5dc7814e10"/>
        <function-ref name="getdt" scoped="" ref="0x7f5dc7805920"/>
        <function-ref name="gett0" scoped="" ref="0x7f5dc78054a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5dc7814990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5dc7815670"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5dc7806910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5dc7815b40"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc7814090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7f5dc7734a50" loc="12:LedToRadioC.nc">
      <component-ref qname="LedToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0x7f5dc7734a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5dc7734dd0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5dc7748020"/>
        <function-ref name="start" scoped="" ref="0x7f5dc77481b0"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc7748340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f5dc781d020" loc="5:LedToRadioC.nc">
      <component-ref qname="LedToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f5dc781d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f5dc781d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f5dc77605f0" loc="8:LedToRadioC.nc">
      <component-ref qname="LedToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5dc77605f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc7760970"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc7760b00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5dc7760c90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc7760e20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc7802020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f5dc773f8f0" loc="10:LedToRadioC.nc">
      <component-ref qname="LedToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5dc773f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc773fc70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5dc773fe00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc7749020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc77491b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc7749340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0x7f5dc77307b0" loc="13:LedToRadioC.nc">
      <component-ref qname="LedToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f5dc77307b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5dc7740400"/>
        <function-ref name="readDone" scoped="" ref="0x7f5dc7740880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f5dc7736180" loc="11:LedToRadioC.nc">
      <component-ref qname="LedToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5dc7736180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc7736500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5dc781d660" loc="6:LedToRadioC.nc">
      <component-ref qname="LedToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f5dc781d660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5dc781d9e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5dc781db70"/>
        <function-ref name="led1On" scoped="" ref="0x7f5dc781dd00"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5dc7817020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5dc78171b0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7817340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5dc78174d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5dc7817b10"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7817660"/>
        <function-ref name="led0On" scoped="" ref="0x7f5dc78177f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f5dc7817980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f5dc774e7e0" loc="9:LedToRadioC.nc">
      <component-ref qname="LedToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5dc774e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5dc774eb60"/>
        <function-ref name="source" scoped="" ref="0x7f5dc774ecf0"/>
        <function-ref name="address" scoped="" ref="0x7f5dc774ee80"/>
        <function-ref name="destination" scoped="" ref="0x7f5dc7801030"/>
        <function-ref name="setSource" scoped="" ref="0x7f5dc78011c0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5dc7801350"/>
        <function-ref name="type" scoped="" ref="0x7f5dc78014e0"/>
        <function-ref name="setType" scoped="" ref="0x7f5dc7801670"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5dc7801800"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5dc7801990"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5dc7801b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5dc7512140" loc="45:/usr/bin/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="LedToRadioAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f5dc7512140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bd19b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5dc7bd1d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5dc750e630"/>
        <function-ref name="fired" scoped="" ref="0x7f5dc7510b70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5dc750f920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5dc750f4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5dc750d020"/>
        <function-ref name="gett0" scoped="" ref="0x7f5dc750eab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5dc750f020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5dc7512d30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5dc750e020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5dc7510220"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc75106f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f5dc77047d0" loc="49:/usr/bin/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f5dc77047d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bd19b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5dc7bd1d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5dc7701c40"/>
        <function-ref name="fired" scoped="" ref="0x7f5dc7702260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5dc7701020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5dc7702b60"/>
        <function-ref name="getdt" scoped="" ref="0x7f5dc76ff590"/>
        <function-ref name="gett0" scoped="" ref="0x7f5dc76ff110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5dc77026e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5dc7703400"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5dc7701630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5dc77038d0"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc7703da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f5dc76f8210" loc="46:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f5dc76f8210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bd19b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5dc7bd1d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5dc76f46e0"/>
        <function-ref name="fired" scoped="" ref="0x7f5dc76f6c90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5dc76f5a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5dc76f55f0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5dc76f3020"/>
        <function-ref name="gett0" scoped="" ref="0x7f5dc76f4b60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5dc76f5170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5dc76f8e00"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5dc76f40d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5dc76f6340"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc76f6810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f5dc76efa80" loc="47:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f5dc76efa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bd19b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5dc7bd1d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5dc76f16f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5dc76f9410" loc="45:/usr/bin/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5dc76f9410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc76f9790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7f5dc76d5910" loc="29:/usr/bin/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7f5dc76d5910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bd19b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5dc7bd1d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5dc76d9780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5dc76d4150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5dc76d9c40"/>
        <function-ref name="overflow" scoped="" ref="0x7f5dc76d4610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5dc76e92c0" loc="27:/usr/bin/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5dc76e92c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc76e9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7f5dc76e7260" loc="28:/usr/bin/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7f5dc76e7260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bd19b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5dc7bd1d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5dc76dfb30"/>
        <function-ref name="fired" scoped="" ref="0x7f5dc76e6a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f5dc76df4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5dc76df020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5dc76dd020"/>
        <function-ref name="start" scoped="" ref="0x7f5dc76e6090"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc76e65a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5dc75b8890" loc="61:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f5dc75b8890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bd19b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5dc7bd1d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5dc75b50d0"/>
        <function-ref name="fired" scoped="" ref="0x7f5dc75b60d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f5dc75b6a50"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5dc75b6590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5dc75b5590"/>
        <function-ref name="start" scoped="" ref="0x7f5dc75b76e0"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc75b7bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5dc75b8080" loc="60:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5dc75b8080"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f5dc7cb09c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f5dc7cb09c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc75b8400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5dc75b5bc0" loc="62:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f5dc75b5bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bd19b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5dc7bd1d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5dc75b3a00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5dc75b24e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5dc75b2020"/>
        <function-ref name="overflow" scoped="" ref="0x7f5dc75b29a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7f5dc6330c90" loc="66:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f5dc6330c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f5dc632f0a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f5dc632f230"/>
        <function-ref name="getControlA" scoped="" ref="0x7f5dc632f3c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f5dc632f550"/>
        <function-ref name="setControlB" scoped="" ref="0x7f5dc632f6e0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f5dc632f870"/>
        <function-ref name="getControlB" scoped="" ref="0x7f5dc632fa00"/>
        <function-ref name="setControlA" scoped="" ref="0x7f5dc632fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5dc634b140" loc="61:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f5dc634b140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bd19b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5dc7bd1d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5dc6349b30"/>
        <function-ref name="fired" scoped="" ref="0x7f5dc634a9f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f5dc63494e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5dc6349020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5dc6347020"/>
        <function-ref name="start" scoped="" ref="0x7f5dc634a020"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc634a530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5dc634c910" loc="60:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5dc634c910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc634cc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5dc6347650" loc="62:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f5dc6347650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bd19b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5dc7bd1d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5dc63465b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5dc6345020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5dc6346a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f5dc63454e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7f5dc632a2c0" loc="68:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f5dc632a2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f5dc632a640"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f5dc632a7d0"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f5dc632a960"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f5dc632aaf0"/>
        <function-ref name="countBusy" scoped="" ref="0x7f5dc632ac80"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f5dc632ae10"/>
        <function-ref name="getAssr" scoped="" ref="0x7f5dc6329020"/>
        <function-ref name="setAssr" scoped="" ref="0x7f5dc63291b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7f5dc632e020" loc="67:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f5dc632e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f5dc632b9a0"/>
        <function-ref name="fired" scoped="" ref="0x7f5dc632c660"/>
        <function-ref name="get" scoped="" ref="0x7f5dc632ec50"/>
        <function-ref name="reset" scoped="" ref="0x7f5dc632cb20"/>
        <function-ref name="isOn" scoped="" ref="0x7f5dc632be60"/>
        <function-ref name="set" scoped="" ref="0x7f5dc632c150"/>
        <function-ref name="start" scoped="" ref="0x7f5dc632b020"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc632b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5dc6345a90" loc="65:/usr/bin/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f5dc6345a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f5dc6331e60"/>
        <function-ref name="test" scoped="" ref="0x7f5dc63314e0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc63346f0"/>
        <function-ref name="setScale" scoped="" ref="0x7f5dc6330350"/>
        <function-ref name="getScale" scoped="" ref="0x7f5dc6330860"/>
        <function-ref name="reset" scoped="" ref="0x7f5dc63325d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5dc6332110"/>
        <function-ref name="isOn" scoped="" ref="0x7f5dc63319a0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6334bb0"/>
        <function-ref name="start" scoped="" ref="0x7f5dc6332a90"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc6331020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f5dc7634020" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f5dc7634020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f5dc76343a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f5dc7634530"/>
        <function-ref name="getControlA" scoped="" ref="0x7f5dc76346c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f5dc7634850"/>
        <function-ref name="setControlB" scoped="" ref="0x7f5dc76349e0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f5dc7634b70"/>
        <function-ref name="getControlB" scoped="" ref="0x7f5dc7634d00"/>
        <function-ref name="setControlA" scoped="" ref="0x7f5dc7633020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f5dc762fa40" loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f5dc762fa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f5dc762fdc0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f5dc762e020"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f5dc762e1b0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f5dc762e340"/>
        <function-ref name="countBusy" scoped="" ref="0x7f5dc762e4d0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f5dc762e660"/>
        <function-ref name="getAssr" scoped="" ref="0x7f5dc762e7f0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f5dc762e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5dc7633520" loc="83:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f5dc7633520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f5dc762f020"/>
        <function-ref name="fired" scoped="" ref="0x7f5dc7631b80"/>
        <function-ref name="get" scoped="" ref="0x7f5dc76311b0"/>
        <function-ref name="reset" scoped="" ref="0x7f5dc7630090"/>
        <function-ref name="isOn" scoped="" ref="0x7f5dc762f4e0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7631670"/>
        <function-ref name="start" scoped="" ref="0x7f5dc7630550"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc7630a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5dc763ec70" loc="81:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f5dc763ec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f5dc7635020"/>
        <function-ref name="test" scoped="" ref="0x7f5dc7636610"/>
        <function-ref name="get" scoped="" ref="0x7f5dc76398e0"/>
        <function-ref name="setScale" scoped="" ref="0x7f5dc76354e0"/>
        <function-ref name="getScale" scoped="" ref="0x7f5dc76359f0"/>
        <function-ref name="reset" scoped="" ref="0x7f5dc76377a0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5dc76372e0"/>
        <function-ref name="isOn" scoped="" ref="0x7f5dc7636ad0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7639da0"/>
        <function-ref name="start" scoped="" ref="0x7f5dc7637c60"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc7636150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f5dc76222b0" loc="83:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f5dc76222b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f5dc7622630"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f5dc76227c0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f5dc7622950"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f5dc7622ae0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f5dc7622c70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f5dc7622e00"/>
        <function-ref name="getControlB" scoped="" ref="0x7f5dc7621020"/>
        <function-ref name="setControlA" scoped="" ref="0x7f5dc76211b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f5dc761ea70" loc="85:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f5dc761ea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f5dc761edf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f5dc761b230" loc="86:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f5dc761b230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f5dc761b5b0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f5dc761b740"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f5dc761b8d0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f5dc761ba60"/>
        <function-ref name="countBusy" scoped="" ref="0x7f5dc761bbf0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f5dc761bd80"/>
        <function-ref name="getAssr" scoped="" ref="0x7f5dc761a020"/>
        <function-ref name="setAssr" scoped="" ref="0x7f5dc761a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5dc76216b0" loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f5dc76216b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f5dc761e110"/>
        <function-ref name="fired" scoped="" ref="0x7f5dc7620da0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc76203d0"/>
        <function-ref name="reset" scoped="" ref="0x7f5dc761f2a0"/>
        <function-ref name="isOn" scoped="" ref="0x7f5dc761e5d0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7620890"/>
        <function-ref name="start" scoped="" ref="0x7f5dc761f760"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc761fc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5dc7627020" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f5dc7627020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f5dc7624350"/>
        <function-ref name="test" scoped="" ref="0x7f5dc76259a0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7627c50"/>
        <function-ref name="setScale" scoped="" ref="0x7f5dc7624810"/>
        <function-ref name="getScale" scoped="" ref="0x7f5dc7624d20"/>
        <function-ref name="reset" scoped="" ref="0x7f5dc7626b20"/>
        <function-ref name="overflow" scoped="" ref="0x7f5dc7626660"/>
        <function-ref name="isOn" scoped="" ref="0x7f5dc7625e60"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7626150"/>
        <function-ref name="start" scoped="" ref="0x7f5dc7625020"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc76254e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f5dc757e490" loc="74:/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7f5dc757e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5dc757e810"/>
        <function-ref name="runTask" scoped="" ref="0x7f5dc757e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f5dc75821d0" loc="49:/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f5dc75821d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bd19b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5dc7bd1d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5dc7580b30"/>
        <function-ref name="fired" scoped="" ref="0x7f5dc75819f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f5dc75804e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5dc7580020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5dc757e020"/>
        <function-ref name="start" scoped="" ref="0x7f5dc7581020"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc7581530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5dc7588cf0" loc="48:/usr/bin/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f5dc7588cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bd19b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5dc7bd1d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5dc7583220"/>
        <function-ref name="fired" scoped="" ref="0x7f5dc75867c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5dc7585590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5dc7585110"/>
        <function-ref name="getdt" scoped="" ref="0x7f5dc7583b20"/>
        <function-ref name="gett0" scoped="" ref="0x7f5dc75836a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5dc7586c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5dc7587940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5dc7585ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5dc7587e10"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc7586340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f5dc752ea00" loc="71:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7f5dc752ea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5dc752ed80"/>
        <function-ref name="runTask" scoped="" ref="0x7f5dc752d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f5dc7533640" loc="49:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f5dc7533640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bd19b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5dc7bd1d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5dc752fc40"/>
        <function-ref name="fired" scoped="" ref="0x7f5dc75311e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5dc752f020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5dc7531ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5dc752e590"/>
        <function-ref name="gett0" scoped="" ref="0x7f5dc752e110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5dc7531660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5dc7532390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5dc752f630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5dc7532860"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc7532d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5dc7539150" loc="48:/usr/bin/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f5dc7539150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bd19b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5dc7bd1d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5dc7535700"/>
        <function-ref name="fired" scoped="" ref="0x7f5dc7538c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5dc7536a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5dc75365b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5dc7533090"/>
        <function-ref name="gett0" scoped="" ref="0x7f5dc7535ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5dc7536110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5dc7539d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5dc75350d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5dc75382a0"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc7538790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f5dc752b790" loc="48:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f5dc752b790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bd19b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5dc7bd1d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5dc752a3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f5dc752aa60" loc="49:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f5dc752aa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bd19b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5dc7bd1d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5dc7520890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5dc751e260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5dc7520d50"/>
        <function-ref name="overflow" scoped="" ref="0x7f5dc751e720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5dc750c500" loc="41:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f5dc750c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5dc750c880"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5dc750ca10"/>
        <function-ref name="start" scoped="" ref="0x7f5dc750cba0"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc750cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f5dc74fabf0" loc="46:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f5dc74fabf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f5dc7505020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5dc75052b0" loc="48:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5dc75052b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc7505630"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc75057c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5dc7505950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc7505ae0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc7505c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5dc7508530" loc="43:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5dc7508530"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc75088b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5dc7508a40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc7508bd0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc7508d60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc7507020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f5dc7506430" loc="45:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f5dc7506430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc75067b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f5dc74edcb0" loc="52:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f5dc74edcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f5dc74f80a0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f5dc74f8230"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f5dc74f83c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f5dc74f8550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5dc7507800" loc="44:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5dc7507800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc7507b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f5dc74f1350" loc="51:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5dc74f1350"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5dc74f16d0"/>
        <function-ref name="noAck" scoped="" ref="0x7f5dc74f1860"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5dc74f19f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f5dc74f7020" loc="53:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f5dc74f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f5dc74f73a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f5dc74f7530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f5dc74f76c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f5dc74f7850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f5dc74f79e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5dc74fd020" loc="49:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5dc74fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5dc74fd3a0"/>
        <function-ref name="source" scoped="" ref="0x7f5dc74fd530"/>
        <function-ref name="address" scoped="" ref="0x7f5dc74fd6c0"/>
        <function-ref name="destination" scoped="" ref="0x7f5dc74fd850"/>
        <function-ref name="setSource" scoped="" ref="0x7f5dc74fd9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5dc74fdb70"/>
        <function-ref name="type" scoped="" ref="0x7f5dc74fdd00"/>
        <function-ref name="setType" scoped="" ref="0x7f5dc74fb020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5dc74fb1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5dc74fb340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5dc74fb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f5dc74dbc30" loc="54:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f5dc74dbc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f5dc74e5020"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5dc74e51b0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5dc74e5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x7f5dc74cdcd0" loc="56:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7f5dc74cdcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5dc7bce180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5dc74cb2e0"/>
        <function-ref name="clear" scoped="" ref="0x7f5dc74cba10"/>
        <function-ref name="isValid" scoped="" ref="0x7f5dc74dab60"/>
        <function-ref name="set" scoped="" ref="0x7f5dc74ca170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f5dc74cadc0" loc="57:/usr/bin/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5dc74cadc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bd19b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5dc7bd1d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5dc74c7500"/>
        <function-ref name="clear" scoped="" ref="0x7f5dc74c7c30"/>
        <function-ref name="isValid" scoped="" ref="0x7f5dc74c9da0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc74c63b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5dc74c5610" loc="45:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f5dc74c5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5dc74c5990"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5dc74c5b20"/>
        <function-ref name="start" scoped="" ref="0x7f5dc74c5cb0"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc74c5e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f5dc74a56e0" loc="66:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f5dc74a56e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc749de70"/>
        <function-ref name="get" scoped="" ref="0x7f5dc749d920"/>
        <function-ref name="isSet" scoped="" ref="0x7f5dc749d3d0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc749b3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f5dc7492130" loc="71:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5dc7492130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bd19b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5dc7bd1d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5dc7491750"/>
        <function-ref name="clear" scoped="" ref="0x7f5dc7491e80"/>
        <function-ref name="isValid" scoped="" ref="0x7f5dc7491020"/>
        <function-ref name="set" scoped="" ref="0x7f5dc74905d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f5dc74be020" loc="50:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f5dc74be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f5dc74be3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5dc74b5020" loc="56:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5dc74b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc74b53a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc74b5530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5dc74b56c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc74b5850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc74b59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5dc74c2640" loc="47:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5dc74c2640"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc74c29c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5dc74c2b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc74c2ce0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc74c2e70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc74c1030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f5dc74bf430" loc="49:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f5dc74bf430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc74bf7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f5dc74a8210" loc="65:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f5dc74a8210"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc74a6910"/>
        <function-ref name="get" scoped="" ref="0x7f5dc74a63c0"/>
        <function-ref name="isSet" scoped="" ref="0x7f5dc74a8e40"/>
        <function-ref name="set" scoped="" ref="0x7f5dc74a6e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f5dc74b3e80" loc="60:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f5dc74b3e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f5dc74b2220"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f5dc74b23b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f5dc74b2540"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f5dc74b26d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5dc74c1810" loc="48:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5dc74c1810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc74c1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f5dc7499020" loc="70:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f5dc7499020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5dc77b2d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5dc74975a0"/>
        <function-ref name="clear" scoped="" ref="0x7f5dc7497cd0"/>
        <function-ref name="isValid" scoped="" ref="0x7f5dc7499e30"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7493460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f5dc7496a40" loc="69:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5dc7496a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5dc77b2d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5dc749a6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f5dc74aac40" loc="64:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f5dc74aac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc74a93c0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc74afdf0"/>
        <function-ref name="isSet" scoped="" ref="0x7f5dc74af8a0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc74a9910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f5dc74b34e0" loc="59:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5dc74b34e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5dc74b3860"/>
        <function-ref name="noAck" scoped="" ref="0x7f5dc74b39f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5dc74b3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f5dc74bec70" loc="53:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f5dc74bec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc74bd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f5dc74b2990" loc="61:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f5dc74b2990"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f5dc74b2d10"/>
        <function-ref name="setRetries" scoped="" ref="0x7f5dc74b1020"/>
        <function-ref name="getRetries" scoped="" ref="0x7f5dc74b11b0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f5dc74b1340"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f5dc74b14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5dc74b5c90" loc="57:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5dc74b5c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5dc74b40a0"/>
        <function-ref name="source" scoped="" ref="0x7f5dc74b4230"/>
        <function-ref name="address" scoped="" ref="0x7f5dc74b43c0"/>
        <function-ref name="destination" scoped="" ref="0x7f5dc74b4550"/>
        <function-ref name="setSource" scoped="" ref="0x7f5dc74b46e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5dc74b4870"/>
        <function-ref name="type" scoped="" ref="0x7f5dc74b4a00"/>
        <function-ref name="setType" scoped="" ref="0x7f5dc74b4b90"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5dc74b4d20"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5dc74b3020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5dc74b31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f5dc74b17a0" loc="62:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f5dc74b17a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f5dc74b1c20"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5dc74b1db0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5dc74b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f5dc74961e0" loc="67:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5dc74961e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f5dc7496560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f5dc74bd8c0" loc="54:/usr/bin/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f5dc74bd8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc74bdc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5dc748e770" loc="41:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f5dc748e770"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5dc748eaf0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5dc748ec80"/>
        <function-ref name="start" scoped="" ref="0x7f5dc748ee10"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc7484020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f5dc744d020" loc="80:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f5dc744d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc744c740"/>
        <function-ref name="get" scoped="" ref="0x7f5dc744c1f0"/>
        <function-ref name="isSet" scoped="" ref="0x7f5dc744dc50"/>
        <function-ref name="set" scoped="" ref="0x7f5dc744cc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x7f5dc747a020" loc="60:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x7f5dc747a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f5dc747a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x7f5dc746c2c0" loc="62:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x7f5dc746c2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5dc746c740"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5dc746c8d0"/>
        <function-ref name="request" scoped="" ref="0x7f5dc746ca60"/>
        <function-ref name="granted" scoped="" ref="0x7f5dc746cbf0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5dc746cd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f5dc7481430" loc="47:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f5dc7481430"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f5dc74817b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5dc74847f0" loc="44:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5dc74847f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc7484b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5dc7484d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc7483020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc74831b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc7483340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f5dc7482880" loc="46:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f5dc7482880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc7482c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f5dc745d490" loc="64:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f5dc745d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f5dc745d810"/>
        <function-ref name="address" scoped="" ref="0x7f5dc745d9a0"/>
        <function-ref name="destination" scoped="" ref="0x7f5dc745db30"/>
        <function-ref name="setSource" scoped="" ref="0x7f5dc745dcc0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5dc745de50"/>
        <function-ref name="pan" scoped="" ref="0x7f5dc7466020"/>
        <function-ref name="setPan" scoped="" ref="0x7f5dc74661b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5dc7466340"/>
        <function-ref name="localPan" scoped="" ref="0x7f5dc74664d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x7f5dc7466890" loc="65:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7f5dc7466890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc7466c10"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc7466da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5dc7465020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc74651b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc7465340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f5dc7451a90" loc="79:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f5dc7451a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc744e1f0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7450c40"/>
        <function-ref name="isSet" scoped="" ref="0x7f5dc74506f0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc744e740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f5dc7456080" loc="69:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f5dc7456080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f5dc7456400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f5dc7456590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f5dc7456720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f5dc74568b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x7f5dc747dba0" loc="54:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f5dc747dba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc747c020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc747c1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5dc747c340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc747c4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc747c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5dc7483b20" loc="45:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5dc7483b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc7482020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f5dc7448130" loc="84:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f5dc7448130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5dc77b2d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5dc74468a0"/>
        <function-ref name="clear" scoped="" ref="0x7f5dc7445020"/>
        <function-ref name="isValid" scoped="" ref="0x7f5dc7446170"/>
        <function-ref name="set" scoped="" ref="0x7f5dc7445750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f5dc744abb0" loc="83:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5dc744abb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5dc77b2d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5dc7449820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f5dc7454540" loc="78:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f5dc7454540"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc7453c50"/>
        <function-ref name="get" scoped="" ref="0x7f5dc7453700"/>
        <function-ref name="isSet" scoped="" ref="0x7f5dc74531b0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc74511f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f5dc7465670" loc="68:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5dc7465670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5dc74659f0"/>
        <function-ref name="noAck" scoped="" ref="0x7f5dc7465b80"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5dc7465d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f5dc746da60" loc="58:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f5dc746da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc746dde0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5dc747b020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc747b1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc747b340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc747b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f5dc747f1d0" loc="50:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f5dc747f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc747f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f5dc7456b70" loc="70:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f5dc7456b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f5dc7455020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f5dc74551b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f5dc7455340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f5dc74554d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f5dc7455660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f5dc7455930" loc="76:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f5dc7455930"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f5dc7455cb0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5dc7455e40"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5dc7454020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5dc747e470" loc="53:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5dc747e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5dc747e7f0"/>
        <function-ref name="source" scoped="" ref="0x7f5dc747e980"/>
        <function-ref name="address" scoped="" ref="0x7f5dc747eb10"/>
        <function-ref name="destination" scoped="" ref="0x7f5dc747eca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5dc747ee30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5dc747d020"/>
        <function-ref name="type" scoped="" ref="0x7f5dc747d1b0"/>
        <function-ref name="setType" scoped="" ref="0x7f5dc747d340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5dc747d4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5dc747d660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5dc747d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f5dc743e3f0" loc="85:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5dc743e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bd19b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5dc7bd1d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5dc743c970"/>
        <function-ref name="clear" scoped="" ref="0x7f5dc743b0d0"/>
        <function-ref name="isValid" scoped="" ref="0x7f5dc743c240"/>
        <function-ref name="set" scoped="" ref="0x7f5dc743b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f5dc747b840" loc="59:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f5dc747b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc747bbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f5dc744a350" loc="81:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5dc744a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f5dc744a6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f5dc747fdf0" loc="51:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f5dc747fdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc747e1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x7f5dc7409a40" loc="51:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x7f5dc7409a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f5dc7409dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x7f5dc741ac80" loc="47:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x7f5dc741ac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x7f5dc74210a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x7f5dc7402e30" loc="50:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7f5dc7402e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5dc740e1e0"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f5dc740e370"/>
        <function-ref name="source" scoped="" ref="0x7f5dc740e500"/>
        <function-ref name="destination" scoped="" ref="0x7f5dc740e690"/>
        <function-ref name="setSource" scoped="" ref="0x7f5dc740e820"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5dc740e9b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5dc740eb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x7f5dc740a8e0" loc="49:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x7f5dc740a8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x7f5dc740ac60"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x7f5dc740adf0"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x7f5dc7418020"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x7f5dc74181b0"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x7f5dc7418340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f5dc73d38d0" loc="61:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f5dc73d38d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5dc73d3c50"/>
        <function-ref name="wait" scoped="" ref="0x7f5dc73d3de0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc73d8020"/>
        <function-ref name="isFree" scoped="" ref="0x7f5dc73d81b0"/>
        <function-ref name="getNow" scoped="" ref="0x7f5dc73d8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x7f5dc73d7020" loc="62:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x7f5dc73d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc73d73a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc73d7530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc73d76c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc73d7850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5dc73d79e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5dc73d7b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f5dc73d2160" loc="64:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f5dc73d2160"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5dc77b2d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5dc73c77c0"/>
        <function-ref name="clear" scoped="" ref="0x7f5dc73c5020"/>
        <function-ref name="isValid" scoped="" ref="0x7f5dc73c7090"/>
        <function-ref name="set" scoped="" ref="0x7f5dc73c5750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x7f5dc7431350" loc="43:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x7f5dc7431350"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc74316d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5dc7431860"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5dc74319f0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f5dc7431b80"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f5dc7431d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x7f5dc741b640" loc="46:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x7f5dc741b640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x7f5dc741b9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x7f5dc7422550" loc="44:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7f5dc7422550"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7f5dc74228d0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7f5dc7422a60"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f5dc7422bf0"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7f5dc7422d80"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7f5dc7436020"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7f5dc74361b0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f5dc7436340"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f5dc74364d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7f5dc73da880" loc="60:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f5dc73da880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f5dc73dac00"/>
        <function-ref name="getDSN" scoped="" ref="0x7f5dc73dad90"/>
        <function-ref name="setFCF" scoped="" ref="0x7f5dc7400020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f5dc74001b0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f5dc7400340"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f5dc74004d0"/>
        <function-ref name="setDSN" scoped="" ref="0x7f5dc7400660"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f5dc74007f0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f5dc7400980"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f5dc7400b10"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f5dc7400ca0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f5dc7400e30"/>
        <function-ref name="localAddr" scoped="" ref="0x7f5dc73ff020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f5dc73ff2b0"/>
        <function-ref name="localPan" scoped="" ref="0x7f5dc73ff440"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f5dc73ff5d0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f5dc73ff760"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f5dc73ff8f0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f5dc73ffa80"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5dc73ffc10"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f5dc73ffda0"/>
        <function-ref name="getFCF" scoped="" ref="0x7f5dc73d9020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f5dc73d91b0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f5dc73d9340"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f5dc73d94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x7f5dc741d9c0" loc="45:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7f5dc741d9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f5dc741dd40"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f5dc7430020"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f5dc74301b0"/>
        <function-ref name="getSender" scoped="" ref="0x7f5dc7430340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x7f5dc7415340" loc="48:/usr/bin/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7f5dc7415340"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f5dc74156c0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f5dc7415850"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f5dc74159e0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f5dc7415b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7f5dc73559b0" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f5dc73559b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5dc7355d50"/>
        <function-ref name="wait" scoped="" ref="0x7f5dc731b020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc731b1b0"/>
        <function-ref name="isFree" scoped="" ref="0x7f5dc731b340"/>
        <function-ref name="getNow" scoped="" ref="0x7f5dc731b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f5dc731bb40" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f5dc731bb40"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f5dc7cb0d40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f5dc7cb0d40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5dc77b2d20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f5dc77b1180"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5dc7308390"/>
        <function-ref name="fired" scoped="" ref="0x7f5dc730d360"/>
        <function-ref name="startAt" scoped="" ref="0x7f5dc730dce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5dc730d820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5dc7308850"/>
        <function-ref name="start" scoped="" ref="0x7f5dc730e970"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc730ee80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7f5dc62998a0" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f5dc62998a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5dc6299c40"/>
        <function-ref name="wait" scoped="" ref="0x7f5dc6299dd0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc6298020"/>
        <function-ref name="isFree" scoped="" ref="0x7f5dc62981b0"/>
        <function-ref name="getNow" scoped="" ref="0x7f5dc6298340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f5dc6298830" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f5dc6298830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5dc77b2d20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f5dc77b1180"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5dc6285090"/>
        <function-ref name="fired" scoped="" ref="0x7f5dc6295090"/>
        <function-ref name="startAt" scoped="" ref="0x7f5dc6295a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5dc6295550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5dc6285550"/>
        <function-ref name="start" scoped="" ref="0x7f5dc62966a0"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc6296bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f5dc6285940" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f5dc6285940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f5dc6285cc0"/>
        <function-ref name="suspend" scoped="" ref="0x7f5dc6285e50"/>
        <function-ref name="resume" scoped="" ref="0x7f5dc6284020"/>
        <function-ref name="run" scoped="" ref="0x7f5dc62841b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x7f5dc731d750" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f5dc731d750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f5dc731dad0"/>
        <function-ref name="suspend" scoped="" ref="0x7f5dc731dc60"/>
        <function-ref name="resume" scoped="" ref="0x7f5dc731ddf0"/>
        <function-ref name="run" scoped="" ref="0x7f5dc731a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5dc72388f0" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f5dc72388f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc7238c70"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc7238e00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc7237020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5dc72372b0" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f5dc72372b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc7237630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f5dc723b420" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f5dc723b420"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f5dc723b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5dc723e8b0" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5dc723e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc723ec30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc723edc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5dc723d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc723d1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc723d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5dc723d6c0" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5dc723d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc723da60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5dc723dbf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc723dd80"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc723c020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc723c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f5dc723cc90" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f5dc723cc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc723b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f5dc723aa70" loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f5dc723aa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc723adf0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc7238020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc72381b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc7238340"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5dc72384d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5dc7238660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f5dc72378c0" loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f5dc72378c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5dc7237c40"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f5dc7237dd0"/>
        <function-ref name="source" scoped="" ref="0x7f5dc7236020"/>
        <function-ref name="destination" scoped="" ref="0x7f5dc72361b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5dc7236340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5dc72364d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5dc7236660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5dc723c530" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5dc723c530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc723c8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f5dc723bb80" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f5dc723bb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc723a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5dc723f280" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5dc723f280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5dc723f600"/>
        <function-ref name="source" scoped="" ref="0x7f5dc723f790"/>
        <function-ref name="address" scoped="" ref="0x7f5dc723f920"/>
        <function-ref name="destination" scoped="" ref="0x7f5dc723fab0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5dc723fc40"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5dc723fdd0"/>
        <function-ref name="type" scoped="" ref="0x7f5dc723e020"/>
        <function-ref name="setType" scoped="" ref="0x7f5dc723e1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5dc723e340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5dc723e4d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5dc723e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f5dc723a3e0" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f5dc723a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc723a780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5dc6265a50" loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f5dc6265a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc6265dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5dc6265120" loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f5dc6265120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc62654a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc6265630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc62657c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f5dc6269b00" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f5dc6269b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f5dc6267020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5dc626b020" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5dc626b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc626b3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc626b530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5dc626b6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc626b850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc626b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5dc626bd60" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5dc626bd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc626a180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5dc626a310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc626a4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc626a630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc626a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f5dc62693e0" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f5dc62693e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc6269780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f5dc626ead0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f5dc626ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc626ee50"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc626d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc626d1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc626d340"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5dc626d4d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5dc626d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f5dc62640a0" loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f5dc62640a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5dc6264520"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f5dc62646b0"/>
        <function-ref name="source" scoped="" ref="0x7f5dc6264840"/>
        <function-ref name="destination" scoped="" ref="0x7f5dc62649d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5dc6264b60"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5dc6264cf0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5dc6264e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f5dc62630f0" loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5dc62630f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f5dc6263470"/>
        <function-ref name="changed" scoped="" ref="0x7f5dc6263600"/>
        <function-ref name="amGroup" scoped="" ref="0x7f5dc6263790"/>
        <function-ref name="setAddress" scoped="" ref="0x7f5dc6263920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f5dc6266310" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f5dc6266310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6266690"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc6266820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc62669b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc6266b40"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5dc6266cd0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5dc6266e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5dc626ab40" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5dc626ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc6269020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f5dc62673e0" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f5dc62673e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc6267780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5dc626d8b0" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5dc626d8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5dc626dc30"/>
        <function-ref name="source" scoped="" ref="0x7f5dc626ddc0"/>
        <function-ref name="address" scoped="" ref="0x7f5dc626c020"/>
        <function-ref name="destination" scoped="" ref="0x7f5dc626c1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5dc626c340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5dc626c4d0"/>
        <function-ref name="type" scoped="" ref="0x7f5dc626c660"/>
        <function-ref name="setType" scoped="" ref="0x7f5dc626c7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5dc626c980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5dc626cb10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5dc626cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f5dc6267b40" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f5dc6267b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc6266020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f5dc72595a0" loc="54:/usr/bin/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5dc72595a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f5dc7259920"/>
        <function-ref name="changed" scoped="" ref="0x7f5dc7259ab0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f5dc7259c40"/>
        <function-ref name="setAddress" scoped="" ref="0x7f5dc7259dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5dc721d020" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f5dc721d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc721d3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc721d530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc721d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f5dc721d910" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f5dc721d910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5dc721dc90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5dc721de20"/>
        <function-ref name="request" scoped="" ref="0x7f5dc7219020"/>
        <function-ref name="granted" scoped="" ref="0x7f5dc72191b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5dc7219340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f5dc722c550" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f5dc722c550"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc722c8d0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc722ca60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc722cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5dc71aa850" loc="86:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5dc71aa850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5dc71aabf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5dc71aad80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5dc71a98f0" loc="89:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5dc71a98f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5dc71a9c90"/>
        <function-ref name="configure" scoped="" ref="0x7f5dc71a9e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5dc71aba90" loc="85:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f5dc71aba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5dc71abe30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5dc71aa020"/>
        <function-ref name="request" scoped="" ref="0x7f5dc71aa1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f5dc71aa340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5dc71aa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5dc71a9020" loc="87:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5dc71a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5dc71a93a0"/>
        <function-ref name="userId" scoped="" ref="0x7f5dc71a9530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5dc6205b40" loc="44:/usr/bin/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5dc6205b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc6204020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f5dc62042b0" loc="45:/usr/bin/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f5dc62042b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f5dc6204630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f5dc62047c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f5dc6204950"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5dc6204ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5dc6200020" loc="52:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5dc6200020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5dc62003c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5dc6200550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5dc61ff0d0" loc="56:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5dc61ff0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5dc61ff470"/>
        <function-ref name="configure" scoped="" ref="0x7f5dc61ff600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f5dc61ff890" loc="57:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f5dc61ff890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f5dc61ffc10"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f5dc61ffda0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f5dc61fe020"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5dc61fe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5dc6201210" loc="51:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f5dc6201210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5dc62015b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5dc6201740"/>
        <function-ref name="request" scoped="" ref="0x7f5dc62018d0"/>
        <function-ref name="granted" scoped="" ref="0x7f5dc6201a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5dc6201bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5dc62007a0" loc="53:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5dc62007a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5dc6200b20"/>
        <function-ref name="userId" scoped="" ref="0x7f5dc6200cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f5dc61fe480" loc="69:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f5dc61fe480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5dc61fe800"/>
        <function-ref name="runTask" scoped="" ref="0x7f5dc61fe990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5dc716b120" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f5dc716b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc716b4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc716b630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc716b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5dc716ba50" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f5dc716ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc716bdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f5dc7170a10" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f5dc7170a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f5dc7170d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5dc71a5ac0" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5dc71a5ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc71a5e40"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc7171020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5dc71711b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc7171340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc71714d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7f5dc716c2e0" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f5dc716c2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc716c660"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc716c7f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc716c980"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc716cb10"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5dc716cca0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5dc716ce30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7f5dc716f080" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f5dc716f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f5dc716f400"/>
        <function-ref name="getDSN" scoped="" ref="0x7f5dc716f590"/>
        <function-ref name="setFCF" scoped="" ref="0x7f5dc716f720"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f5dc716f8b0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f5dc716fa40"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f5dc716fbd0"/>
        <function-ref name="setDSN" scoped="" ref="0x7f5dc716fd60"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f5dc716e020"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f5dc716e1b0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f5dc716e340"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f5dc716e4d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f5dc716e660"/>
        <function-ref name="localAddr" scoped="" ref="0x7f5dc716e7f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f5dc716ea80"/>
        <function-ref name="localPan" scoped="" ref="0x7f5dc716ec10"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f5dc716eda0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f5dc716d020"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f5dc716d1b0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f5dc716d340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5dc716d4d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f5dc716d660"/>
        <function-ref name="getFCF" scoped="" ref="0x7f5dc716d7f0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f5dc716d980"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f5dc716db10"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f5dc716dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f5dc7171720" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f5dc7171720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc7171aa0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5dc7171c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc7171dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc7170020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc71701b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f5dc7170440" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f5dc7170440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc71707c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5dc712bc40" loc="69:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f5dc712bc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc712a020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc712a1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc712a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5dc712a5d0" loc="70:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f5dc712a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc712a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f5dc712f020" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f5dc712f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc712f3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc712f530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc712f6c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc712f850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5dc712f9e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5dc712fb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x7f5dc712e770" loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x7f5dc712e770"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc712eaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f5dc712abe0" loc="71:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f5dc712abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc7129020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc71291b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc7129340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc71294d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5dc7129660"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5dc71297f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x7f5dc712fe00" loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x7f5dc712fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc712e1c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc712e350"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc712e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f5dc71300a0" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f5dc71300a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc7130420"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc71305b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc7130740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f5dc71309d0" loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f5dc71309d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc7130d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x7f5dc712ed80" loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x7f5dc712ed80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc712b180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc712b310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc712b4a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc712b630"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5dc712b7c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5dc712b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f5dc7094c40" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f5dc7094c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f5dc7093020"/>
        <function-ref name="address" scoped="" ref="0x7f5dc70931b0"/>
        <function-ref name="destination" scoped="" ref="0x7f5dc7093340"/>
        <function-ref name="setSource" scoped="" ref="0x7f5dc70934d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5dc7093660"/>
        <function-ref name="pan" scoped="" ref="0x7f5dc70937f0"/>
        <function-ref name="setPan" scoped="" ref="0x7f5dc7093980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5dc7093b10"/>
        <function-ref name="localPan" scoped="" ref="0x7f5dc7093ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f5dc7092020" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f5dc7092020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc70923a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc7092530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc70926c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc7092850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5dc70929e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5dc7092b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7f5dc7097b20" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f5dc7097b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f5dc7096020"/>
        <function-ref name="getDSN" scoped="" ref="0x7f5dc70961b0"/>
        <function-ref name="setFCF" scoped="" ref="0x7f5dc7096340"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f5dc70964d0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f5dc7096660"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f5dc70967f0"/>
        <function-ref name="setDSN" scoped="" ref="0x7f5dc7096980"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f5dc7096b10"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f5dc7096ca0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f5dc7096e30"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f5dc7095020"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f5dc70951b0"/>
        <function-ref name="localAddr" scoped="" ref="0x7f5dc7095340"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f5dc70955d0"/>
        <function-ref name="localPan" scoped="" ref="0x7f5dc7095760"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f5dc70958f0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f5dc7095a80"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f5dc7095c10"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f5dc7095da0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5dc7094020"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f5dc70941b0"/>
        <function-ref name="getFCF" scoped="" ref="0x7f5dc7094340"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f5dc70944d0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f5dc7094660"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f5dc70947f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f5dc7092e60" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f5dc7092e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc7091210"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc70913a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc7091530"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc70916c0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5dc7091850"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5dc70919e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f5dc618a2e0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f5dc618a2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f5dc618a660"/>
        <function-ref name="address" scoped="" ref="0x7f5dc618a7f0"/>
        <function-ref name="destination" scoped="" ref="0x7f5dc618a980"/>
        <function-ref name="setSource" scoped="" ref="0x7f5dc618ab10"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5dc618aca0"/>
        <function-ref name="pan" scoped="" ref="0x7f5dc618ae30"/>
        <function-ref name="setPan" scoped="" ref="0x7f5dc6189020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5dc61891b0"/>
        <function-ref name="localPan" scoped="" ref="0x7f5dc6189340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f5dc6189590" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f5dc6189590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6189910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc6189aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc6189c30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc6189dc0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5dc6188020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5dc61881b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7f5dc618d100" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f5dc618d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f5dc618d480"/>
        <function-ref name="getDSN" scoped="" ref="0x7f5dc618d610"/>
        <function-ref name="setFCF" scoped="" ref="0x7f5dc618d7a0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f5dc618d930"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f5dc618dac0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f5dc618dc50"/>
        <function-ref name="setDSN" scoped="" ref="0x7f5dc618dde0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f5dc618c020"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f5dc618c1b0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f5dc618c340"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f5dc618c4d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f5dc618c660"/>
        <function-ref name="localAddr" scoped="" ref="0x7f5dc618c7f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f5dc618ca80"/>
        <function-ref name="localPan" scoped="" ref="0x7f5dc618cc10"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f5dc618cda0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f5dc618b020"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f5dc618b1b0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f5dc618b340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5dc618b4d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f5dc618b660"/>
        <function-ref name="getFCF" scoped="" ref="0x7f5dc618b7f0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f5dc618b980"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f5dc618bb10"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f5dc618bca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f5dc6188460" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5dc6188460"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f5dc61887e0"/>
        <function-ref name="changed" scoped="" ref="0x7f5dc6188970"/>
        <function-ref name="amGroup" scoped="" ref="0x7f5dc6188b00"/>
        <function-ref name="setAddress" scoped="" ref="0x7f5dc6188c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f5dc6187020" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f5dc6187020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc61873a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc6187530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc61876c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc6187850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5dc61879e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5dc6187b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5dc7011c00" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f5dc7011c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc7010020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc70101b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc7010340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5dc70105d0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f5dc70105d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc7010950"/>
        <function-ref name="header" scoped="" ref="0x7f5dc7010ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5dc7012a40" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f5dc7012a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc7012dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc7011020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc70111b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f5dc7010d70" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f5dc7010d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f5dc700f180"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f5dc700f310"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f5dc700f4a0"/>
        <function-ref name="getSender" scoped="" ref="0x7f5dc700f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f5dc7011400" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f5dc7011400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc7011780"/>
        <function-ref name="header" scoped="" ref="0x7f5dc7011910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5dc6130bd0" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f5dc6130bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc612f020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc612f1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc612f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5dc612f5d0" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f5dc612f5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc612f950"/>
        <function-ref name="header" scoped="" ref="0x7f5dc612fae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x7f5dc612d410" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f5dc612d410"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc612d790"/>
        <function-ref name="clearAll" scoped="" ref="0x7f5dc612d920"/>
        <function-ref name="get" scoped="" ref="0x7f5dc612dab0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc612dc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5dc61314a0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f5dc61314a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc6131820"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc61319b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc6131b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x7f5dc612e7e0" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f5dc612e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f5dc612eb60"/>
        <function-ref name="insertNode" scoped="" ref="0x7f5dc612ecf0"/>
        <function-ref name="getNode" scoped="" ref="0x7f5dc612ee80"/>
        <function-ref name="evicted" scoped="" ref="0x7f5dc612d030"/>
        <function-ref name="getIndex" scoped="" ref="0x7f5dc612d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f5dc6131d90" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f5dc6131d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc6130180"/>
        <function-ref name="header" scoped="" ref="0x7f5dc6130310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5dc6130560" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5dc6130560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc61308e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x7f5dc612fd30" loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7f5dc612fd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f5dc612e0e0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f5dc612e270"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f5dc612e400"/>
        <function-ref name="getSender" scoped="" ref="0x7f5dc612e590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7f5dc70521c0" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f5dc70521c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f5dc7052540"/>
        <function-ref name="insertNode" scoped="" ref="0x7f5dc70526d0"/>
        <function-ref name="getNode" scoped="" ref="0x7f5dc7052860"/>
        <function-ref name="evicted" scoped="" ref="0x7f5dc70529f0"/>
        <function-ref name="getIndex" scoped="" ref="0x7f5dc7052b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7f5dc704d020" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f5dc704d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc704d3a0"/>
        <function-ref name="clearAll" scoped="" ref="0x7f5dc704d530"/>
        <function-ref name="get" scoped="" ref="0x7f5dc704d6c0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc704d850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7f5dc7051d50" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f5dc7051d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f5dc704e100"/>
        <function-ref name="insertNode" scoped="" ref="0x7f5dc704e290"/>
        <function-ref name="getNode" scoped="" ref="0x7f5dc704e420"/>
        <function-ref name="evicted" scoped="" ref="0x7f5dc704e5b0"/>
        <function-ref name="getIndex" scoped="" ref="0x7f5dc704e740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5dc7051700" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5dc7051700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc7051a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7f5dc612bd40" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f5dc612bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc61290e0"/>
        <function-ref name="clearAll" scoped="" ref="0x7f5dc6129270"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6129400"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6129590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5dc6ff8e60" loc="85:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f5dc6ff8e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc6ff7210"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc6ff73a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc6ff7530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5dc6ff77c0" loc="86:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f5dc6ff77c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc6ff7b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x7f5dc6ff42f0" loc="93:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7f5dc6ff42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5dc6ff4670"/>
        <function-ref name="noAck" scoped="" ref="0x7f5dc6ff4800"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5dc6ff4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5dc6ffa400" loc="77:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f5dc6ffa400"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc6ffa780"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc6ffa910"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc6ffaaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f5dc6ff8020" loc="80:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f5dc6ff8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6ff83a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc6ff8530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc6ff86c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc6ff8850"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5dc6ff89e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5dc6ff8b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f5dc6ff7dd0" loc="87:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f5dc6ff7dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6ff6180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc6ff6310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc6ff64a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc6ff6630"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5dc6ff67c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5dc6ff6950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x7f5dc6ff5610" loc="92:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7f5dc6ff5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f5dc6ff5990"/>
        <function-ref name="setRetries" scoped="" ref="0x7f5dc6ff5b20"/>
        <function-ref name="getRetries" scoped="" ref="0x7f5dc6ff5cb0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f5dc6ff5e40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f5dc6ff4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5dc6ffad30" loc="78:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5dc6ffad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc6ff90e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f5dc6ff6ba0" loc="88:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5dc6ff6ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5dc6ff5020"/>
        <function-ref name="noAck" scoped="" ref="0x7f5dc6ff51b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5dc6ff5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f5dc6ff9330" loc="79:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f5dc6ff9330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f5dc6ff96b0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f5dc6ff9840"/>
        <function-ref name="getRetries" scoped="" ref="0x7f5dc6ff99d0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f5dc6ff9b60"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f5dc6ff9cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5dc6fd30e0" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f5dc6fd30e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5dc6fd3460"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5dc6fd35f0"/>
        <function-ref name="start" scoped="" ref="0x7f5dc6fd3780"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc6fd3910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5dc6fce120" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f5dc6fce120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc6fce4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc6fce630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc6fce7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5dc6fcea50" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f5dc6fcea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc6fcedd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5dc6fd3ba0" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f5dc6fd3ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc6fd2020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc6fd21b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc6fd2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f5dc6fd2ba0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f5dc6fd2ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6fd1020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc6fd11b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc6fd1340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc6fd14d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5dc6fd1660"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5dc6fd17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f5dc6fd1a40" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f5dc6fd1a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f5dc6fd1dc0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f5dc6fcf020"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f5dc6fcf1b0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f5dc6fcf340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f5dc6fcf630" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f5dc6fcf630"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5dc6fcf9b0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5dc6fcfb40"/>
        <function-ref name="start" scoped="" ref="0x7f5dc6fcfcd0"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc6fcfe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5dc6fd25d0" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5dc6fd25d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc6fd2950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f5dc6fcd0a0" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f5dc6fcd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6fcd420"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc6fcd5b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc6fcd740"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc6fcd8d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5dc6fcda60"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5dc6fcdbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f5dc6105020" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f5dc6105020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f5dc61053a0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f5dc6105530"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f5dc61056c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f5dc6105850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5dc6f3fcc0" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f5dc6f3fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5dc6f3e0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5dc6f3e230"/>
        <function-ref name="start" scoped="" ref="0x7f5dc6f3e3c0"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc6f3e550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7f5dc6f3c080" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f5dc6f3c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f5dc6f3c400"/>
        <function-ref name="turnOn" scoped="" ref="0x7f5dc6f3c590"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5dc6f3c720"/>
        <function-ref name="done" scoped="" ref="0x7f5dc6f3c8b0"/>
        <function-ref name="standby" scoped="" ref="0x7f5dc6f3ca40"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5dc6f3cbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5dc6f3e7e0" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f5dc6f3e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc6f3eb60"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc6f3ecf0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc6f3ee80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f5dc6f3b730" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f5dc6f3b730"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc6f3bab0"/>
        <function-ref name="header" scoped="" ref="0x7f5dc6f3bc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5dc6f3d130" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5dc6f3d130"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc6f3d4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f5dc6f3ce20" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f5dc6f3ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc6f3b1c0"/>
        <function-ref name="ready" scoped="" ref="0x7f5dc6f3b350"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc6f3b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f5dc6f3d700" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f5dc6f3d700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f5dc6f3da80"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5dc6f3dc10"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5dc6f3dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5dc60fa590" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f5dc60fa590"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5dc60fa910"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5dc60faaa0"/>
        <function-ref name="start" scoped="" ref="0x7f5dc60fac30"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc60fadc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7f5dc60f90a0" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f5dc60f90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc60f9420"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7f5dc60f6020" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f5dc60f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f5dc60f63a0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f5dc60f6530"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5dc60f66c0"/>
        <function-ref name="done" scoped="" ref="0x7f5dc60f6850"/>
        <function-ref name="standby" scoped="" ref="0x7f5dc60f69e0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5dc60f6b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5dc60f96b0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f5dc60f96b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc60f9a30"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc60f9bc0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc60f9d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f5dc60f32f0" loc="189:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7f5dc60f32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5dc60f3670"/>
        <function-ref name="runTask" scoped="" ref="0x7f5dc60f3800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f5dc60f4270" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f5dc60f4270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc60f45f0"/>
        <function-ref name="header" scoped="" ref="0x7f5dc60f4780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x7f5dc60f3ad0" loc="144:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x7f5dc60f3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5dc60f3e50"/>
        <function-ref name="runTask" scoped="" ref="0x7f5dc60f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5dc60f8020" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5dc60f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc60f83a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x7f5dc60f4a50" loc="322:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x7f5dc60f4a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5dc60f4dd0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5dc60f3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f5dc60f5880" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f5dc60f5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc60f5c00"/>
        <function-ref name="ready" scoped="" ref="0x7f5dc60f5d90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc60f4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f5dc60f85f0" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f5dc60f85f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f5dc60f8970"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5dc60f8b00"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5dc60f8c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f5dc60f6dc0" loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f5dc60f6dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f5dc60f5180"/>
        <function-ref name="suspend" scoped="" ref="0x7f5dc60f5310"/>
        <function-ref name="resume" scoped="" ref="0x7f5dc60f54a0"/>
        <function-ref name="run" scoped="" ref="0x7f5dc60f5630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5dc6ed5310" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f5dc6ed5310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc6ed5690"/>
        <function-ref name="ready" scoped="" ref="0x7f5dc6ed5820"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc6ed59b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5dc6ed5c40" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f5dc6ed5c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc6ed4020"/>
        <function-ref name="header" scoped="" ref="0x7f5dc6ed41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f5dc6ed4400" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f5dc6ed4400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5dc6ed4780"/>
        <function-ref name="wait" scoped="" ref="0x7f5dc6ed4910"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc6ed4aa0"/>
        <function-ref name="isFree" scoped="" ref="0x7f5dc6ed4c30"/>
        <function-ref name="getNow" scoped="" ref="0x7f5dc6ed4dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f5dc6ed30a0" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f5dc6ed30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f5dc6ed3420"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f5dc6ed35b0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f5dc6ed3740"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f5dc6ed38d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f5dc6ed6ac0" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f5dc6ed6ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc6ed6e40"/>
        <function-ref name="header" scoped="" ref="0x7f5dc6ed5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f5dc6ed61d0" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f5dc6ed61d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc6ed6550"/>
        <function-ref name="ready" scoped="" ref="0x7f5dc6ed66e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc6ed6870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5dc60b6520" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f5dc60b6520"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc60b68a0"/>
        <function-ref name="ready" scoped="" ref="0x7f5dc60b6a30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc60b6bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5dc60b6e50" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f5dc60b6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc60b4210"/>
        <function-ref name="header" scoped="" ref="0x7f5dc60b43a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f5dc60b45f0" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f5dc60b45f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5dc60b4970"/>
        <function-ref name="wait" scoped="" ref="0x7f5dc60b4b00"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc60b4c90"/>
        <function-ref name="isFree" scoped="" ref="0x7f5dc60b4e20"/>
        <function-ref name="getNow" scoped="" ref="0x7f5dc60b3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f5dc60b3270" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f5dc60b3270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f5dc60b35f0"/>
        <function-ref name="rand32" scoped="" ref="0x7f5dc60b3780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f5dc60b3a10" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f5dc60b3a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f5dc60b3d90"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f5dc60b2020"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f5dc60b21b0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f5dc60b2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f5dc60b7c90" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f5dc60b7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc60b60a0"/>
        <function-ref name="header" scoped="" ref="0x7f5dc60b6230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f5dc60b73a0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f5dc60b73a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc60b7720"/>
        <function-ref name="ready" scoped="" ref="0x7f5dc60b78b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc60b7a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x7f5dc60b2610" loc="78:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x7f5dc60b2610"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5dc60b2990"/>
        <function-ref name="runTask" scoped="" ref="0x7f5dc60b2b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f5dc6ef1a20" loc="46:/usr/bin/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f5dc6ef1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f5dc6ef1da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f5dc6ef0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f5dc6eee920" loc="45:/usr/bin/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f5dc6eee920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc6ef1560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5dc6ef59b0" loc="44:/usr/bin/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5dc6ef59b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc6ef5d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f5dc6ee5a20" loc="48:/usr/bin/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f5dc6ee5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f5dc6ee5da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f5dc6ee4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f5dc6ee6940" loc="47:/usr/bin/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f5dc6ee6940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc6ee5560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5dc6ee6080" loc="46:/usr/bin/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5dc6ee6080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc6ee6400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5dc6e98020" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f5dc6e98020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc6e983a0"/>
        <function-ref name="ready" scoped="" ref="0x7f5dc6e98530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc6e986c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5dc6e98950" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f5dc6e98950"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc6e98cd0"/>
        <function-ref name="header" scoped="" ref="0x7f5dc6e98e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f5dc6e970e0" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f5dc6e970e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5dc6e97460"/>
        <function-ref name="wait" scoped="" ref="0x7f5dc6e975f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc6e97780"/>
        <function-ref name="isFree" scoped="" ref="0x7f5dc6e97910"/>
        <function-ref name="getNow" scoped="" ref="0x7f5dc6e97aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x7f5dc6e95e60" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x7f5dc6e95e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6e94210"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6e943a0"/>
        <function-ref name="setValue" scoped="" ref="0x7f5dc6e94530"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6e946c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f5dc6e97d30" loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f5dc6e97d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7f5dc6e950e0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7f5dc6e95270"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f5dc6e95400"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7f5dc6e95590"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7f5dc6e95720"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7f5dc6e958b0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f5dc6e95a40"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f5dc6e95bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f5dc6eced60" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f5dc6eced60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc6e99180"/>
        <function-ref name="header" scoped="" ref="0x7f5dc6e99310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f5dc6ece470" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f5dc6ece470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc6ece7f0"/>
        <function-ref name="ready" scoped="" ref="0x7f5dc6ece980"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc6eceb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f5dc6e99560" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5dc6e99560"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5dc6e998e0"/>
        <function-ref name="noAck" scoped="" ref="0x7f5dc6e99a70"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5dc6e99c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5dc6e78a00" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f5dc6e78a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5dc6e78d80"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5dc6e77020"/>
        <function-ref name="start" scoped="" ref="0x7f5dc6e771b0"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc6e77340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f5dc6e73400" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f5dc6e73400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f5dc6e73780"/>
        <function-ref name="request" scoped="" ref="0x7f5dc6e73910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5dc6e6fb00" loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f5dc6e6fb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc6e6fe80"/>
        <function-ref name="ready" scoped="" ref="0x7f5dc6e6e030"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc6e6e1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5dc6e6e450" loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f5dc6e6e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc6e6e7d0"/>
        <function-ref name="header" scoped="" ref="0x7f5dc6e6e960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f5dc6e76470" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f5dc6e76470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f5dc6e767f0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f5dc6e76980"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5dc6e76b10"/>
        <function-ref name="done" scoped="" ref="0x7f5dc6e76ca0"/>
        <function-ref name="standby" scoped="" ref="0x7f5dc6e76e30"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5dc6e75020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f5dc6e73b60" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f5dc6e73b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6e72020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc6e721b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc6e72340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc6e724d0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5dc6e72660"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5dc6e727f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7f5dc6e70be0" loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7f5dc6e70be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f5dc6e6f0a0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f5dc6e6f230"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5dc6e6f3c0"/>
        <function-ref name="done" scoped="" ref="0x7f5dc6e6f550"/>
        <function-ref name="standby" scoped="" ref="0x7f5dc6e6f6e0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5dc6e6f870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7f5dc6e72a80" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f5dc6e72a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f5dc6e72e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f5dc6e75b60" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f5dc6e75b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc6e73020"/>
        <function-ref name="header" scoped="" ref="0x7f5dc6e731b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7f5dc6e705d0" loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7f5dc6e705d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc6e70950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f5dc6e71120" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f5dc6e71120"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5dc6e714a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5dc6e71630"/>
        <function-ref name="start" scoped="" ref="0x7f5dc6e717c0"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc6e71950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f5dc6e6d440" loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f5dc6e6d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6e6d7c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc6e6d950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc6e6dae0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc6e6dc70"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5dc6e6de00"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5dc6e68020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f5dc6e77e80" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f5dc6e77e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc6e76220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f5dc6e682b0" loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f5dc6e682b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f5dc6e68630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7f5dc6e71be0" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7f5dc6e71be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc6e70020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc6e701b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc6e70340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f5dc6e75270" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f5dc6e75270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc6e755f0"/>
        <function-ref name="ready" scoped="" ref="0x7f5dc6e75780"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc6e75910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7f5dc6e6ebf0" loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7f5dc6e6ebf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f5dc6e6d020"/>
        <function-ref name="request" scoped="" ref="0x7f5dc6e6d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f5dc6e77590" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f5dc6e77590"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc6e77910"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc6e77aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc6e77c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7f5dc6df6760" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7f5dc6df6760"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6df6ae0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6df6c70"/>
        <function-ref name="setValue" scoped="" ref="0x7f5dc6df6e00"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6df5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f5dc6df9660" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f5dc6df9660"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6df99e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc6df9b70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc6df9d00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc6df8020"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5dc6df81b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5dc6df8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f5dc6df7800" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f5dc6df7800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6df7b80"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc6df7d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc6df6020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc6df61b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5dc6df6340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5dc6df64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f5dc6dfda60" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f5dc6dfda60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5dc77b2d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5dc6dfb020"/>
        <function-ref name="clear" scoped="" ref="0x7f5dc6dfb750"/>
        <function-ref name="isValid" scoped="" ref="0x7f5dc6dfc890"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6dfbe80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7f5dc6df8750" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5dc6df8750"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5dc77b2d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5dc6df73d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f5dc6e01b00" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5dc6e01b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bd19b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5dc7bd1d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5dc6dfe0d0"/>
        <function-ref name="clear" scoped="" ref="0x7f5dc6dfe800"/>
        <function-ref name="isValid" scoped="" ref="0x7f5dc6e00970"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6dfd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7f5dc605e640" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7f5dc605e640"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc605e9c0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc605eb50"/>
        <function-ref name="setValue" scoped="" ref="0x7f5dc605ece0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc605ee70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f5dc60607e0" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f5dc60607e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6060b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc6060cf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc6060e80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc605e030"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5dc605e1c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5dc605e350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f5dc60584c0" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f5dc60584c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6058840"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc60589d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc6058b60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc6058cf0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5dc6058e80"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5dc6057030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f5dc6063bb0" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f5dc6063bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5dc77b2d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5dc6061170"/>
        <function-ref name="clear" scoped="" ref="0x7f5dc60618a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f5dc6062a00"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6060020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7f5dc605d250" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5dc605d250"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5dc77b2d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5dc605de80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f5dc60593f0" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f5dc60593f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bd19b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5dc7bd1d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5dc6058090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f5dc6067cb0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5dc6067cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bd19b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5dc7bd1d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5dc60652e0"/>
        <function-ref name="clear" scoped="" ref="0x7f5dc6065a10"/>
        <function-ref name="isValid" scoped="" ref="0x7f5dc6066b60"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6063170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f5dc6e04080" loc="20:/usr/bin/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f5dc6e04080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bd19b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f5dc7bd1d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5dc6e04cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f5dc6def590" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f5dc6def590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6def910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc6defaa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc6defc30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc6defdc0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5dc6dc9020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5dc6dc91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f5dc6dc94a0" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f5dc6dc94a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6dc9820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc6dc99b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc6dc9b40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc6dc9cd0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5dc6dc9e60"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5dc6dc8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x7f5dc6df09b0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x7f5dc6df09b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6df0d50"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6def020"/>
        <function-ref name="setValue" scoped="" ref="0x7f5dc6def1b0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6def340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5dc6dc62b0" loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f5dc6dc62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5dc6dc6630"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5dc6dc67c0"/>
        <function-ref name="start" scoped="" ref="0x7f5dc6dc6950"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc6dc6ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f5dc6dc3b60" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f5dc6dc3b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f5dc6dc1020"/>
        <function-ref name="request" scoped="" ref="0x7f5dc6dc11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5dc6dbd440" loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f5dc6dbd440"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc6dbd7c0"/>
        <function-ref name="ready" scoped="" ref="0x7f5dc6dbd950"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc6dbdae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5dc6dbdd70" loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f5dc6dbdd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc6dbc180"/>
        <function-ref name="header" scoped="" ref="0x7f5dc6dbc310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f5dc6dc5c20" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f5dc6dc5c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f5dc6dc4020"/>
        <function-ref name="turnOn" scoped="" ref="0x7f5dc6dc41b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5dc6dc4340"/>
        <function-ref name="done" scoped="" ref="0x7f5dc6dc44d0"/>
        <function-ref name="standby" scoped="" ref="0x7f5dc6dc4660"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5dc6dc47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f5dc6dc1400" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f5dc6dc1400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6dc1780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc6dc1910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc6dc1aa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc6dc1c30"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5dc6dc1dc0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5dc6dc0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7f5dc6dbe410" loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7f5dc6dbe410"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f5dc6dbe890"/>
        <function-ref name="turnOn" scoped="" ref="0x7f5dc6dbea20"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5dc6dbebb0"/>
        <function-ref name="done" scoped="" ref="0x7f5dc6dbed40"/>
        <function-ref name="standby" scoped="" ref="0x7f5dc6dbd020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5dc6dbd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7f5dc6dc02b0" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f5dc6dc02b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f5dc6dc0630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f5dc6dc3400" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f5dc6dc3400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc6dc3780"/>
        <function-ref name="header" scoped="" ref="0x7f5dc6dc3910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7f5dc6dbfd70" loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7f5dc6dbfd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc6dbe180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f5dc6dc0920" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f5dc6dc0920"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5dc6dc0ca0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5dc6dc0e30"/>
        <function-ref name="start" scoped="" ref="0x7f5dc6dbf020"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc6dbf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f5dc6dbcd40" loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f5dc6dbcd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6dbb0e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc6dbb270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc6dbb400"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc6dbb590"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5dc6dbb720"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5dc6dbb8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f5dc6dc5650" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f5dc6dc5650"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc6dc59d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f5dc6dbbb40" loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f5dc6dbbb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f5dc6dba020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7f5dc6dbf440" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7f5dc6dbf440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc6dbf7c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc6dbf950"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc6dbfae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f5dc6dc4a40" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f5dc6dc4a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc6dc4dc0"/>
        <function-ref name="ready" scoped="" ref="0x7f5dc6dc3020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc6dc31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7f5dc6dbc5a0" loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7f5dc6dbc5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f5dc6dbc920"/>
        <function-ref name="request" scoped="" ref="0x7f5dc6dbcab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f5dc6dc6d30" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f5dc6dc6d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc6dc50e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc6dc5270"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc6dc5400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f5dc6db15c0" loc="45:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f5dc6db15c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f5dc6db1940"/>
        <function-ref name="request" scoped="" ref="0x7f5dc6db1ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f5dc6da93b0" loc="49:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f5dc6da93b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6da8ac0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6da8570"/>
        <function-ref name="isSet" scoped="" ref="0x7f5dc6da8020"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6da7090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7f5dc6d94ca0" loc="64:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7f5dc6d94ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6d930a0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6d93230"/>
        <function-ref name="setValue" scoped="" ref="0x7f5dc6d933c0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6d93550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f5dc6d982e0" loc="61:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f5dc6d982e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5dc77b2d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5dc6d97840"/>
        <function-ref name="clear" scoped="" ref="0x7f5dc6d96020"/>
        <function-ref name="isValid" scoped="" ref="0x7f5dc6d97110"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6d96750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f5dc6db5610" loc="42:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f5dc6db5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f5dc6db5990"/>
        <function-ref name="turnOn" scoped="" ref="0x7f5dc6db5b20"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5dc6db5cb0"/>
        <function-ref name="done" scoped="" ref="0x7f5dc6db5e40"/>
        <function-ref name="standby" scoped="" ref="0x7f5dc6db2020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5dc6db21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f5dc6d92470" loc="66:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f5dc6d92470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5dc6d927f0"/>
        <function-ref name="wait" scoped="" ref="0x7f5dc6d92980"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc6d92b10"/>
        <function-ref name="isFree" scoped="" ref="0x7f5dc6d92ca0"/>
        <function-ref name="getNow" scoped="" ref="0x7f5dc6d92e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f5dc6db0e80" loc="48:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f5dc6db0e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6dae5e0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6dae090"/>
        <function-ref name="isSet" scoped="" ref="0x7f5dc6dafad0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6daeb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f5dc6db1d90" loc="46:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f5dc6db1d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6db0180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc6db0310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc6db04a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc6db0630"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5dc6db07c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5dc6db0950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f5dc6d991f0" loc="60:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f5dc6d991f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc6d99670"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5dc6d99800"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5dc6d99990"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f5dc6d99b20"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f5dc6d99cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f5dc6db2dd0" loc="44:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f5dc6db2dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc6db1180"/>
        <function-ref name="header" scoped="" ref="0x7f5dc6db1310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5dc6d9fdd0" loc="55:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f5dc6d9fdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5dc77b2d20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f5dc77b1180"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5dc6d9b6e0"/>
        <function-ref name="fired" scoped="" ref="0x7f5dc6d9c6b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f5dc6d9b090"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5dc6d9cb70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5dc6d9bba0"/>
        <function-ref name="start" scoped="" ref="0x7f5dc6d9dca0"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc6d9c1f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f5dc6da7940" loc="50:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f5dc6da7940"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6da4090"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6da5af0"/>
        <function-ref name="isSet" scoped="" ref="0x7f5dc6da55a0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6da45e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f5dc6da0a40" loc="54:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5dc6da0a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5dc77b2d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5dc6d9f6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f5dc6db2460" loc="43:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f5dc6db2460"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc6db27e0"/>
        <function-ref name="ready" scoped="" ref="0x7f5dc6db2970"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc6db2b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f5dc6da4e70" loc="51:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f5dc6da4e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6da15e0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6da1090"/>
        <function-ref name="isSet" scoped="" ref="0x7f5dc6da2ad0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6da1b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7f5dc6d938d0" loc="65:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f5dc6d938d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6d93c50"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6d93de0"/>
        <function-ref name="setValue" scoped="" ref="0x7f5dc6d92020"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6d921b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7f5dc6d94110" loc="63:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f5dc6d94110"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6d94490"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6d94620"/>
        <function-ref name="setValue" scoped="" ref="0x7f5dc6d947b0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6d94940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f5dc6da01e0" loc="52:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5dc6da01e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f5dc6da0560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f5dc6d852d0" loc="52:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f5dc6d852d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f5dc6d85650"/>
        <function-ref name="request" scoped="" ref="0x7f5dc6d857e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f5dc6d64d20" loc="74:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f5dc6d64d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5dc7bce180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f5dc6d6ab60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f5dc6d800d0" loc="56:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f5dc6d800d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6d7f7f0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6d7f2a0"/>
        <function-ref name="isSet" scoped="" ref="0x7f5dc6d80d00"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6d7fd40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7f5dc6d61ca0" loc="80:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7f5dc6d61ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6d600a0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6d60230"/>
        <function-ref name="setValue" scoped="" ref="0x7f5dc6d603c0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6d60550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7f5dc6d89b60" loc="47:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f5dc6d89b60"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f5dc7cb0d40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f5dc7cb0d40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc6d87020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f5dc6d5f780" loc="83:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f5dc6d5f780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5dc77b2d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5dc6d5d020"/>
        <function-ref name="clear" scoped="" ref="0x7f5dc6d5d750"/>
        <function-ref name="isValid" scoped="" ref="0x7f5dc6d5e7c0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6d5de80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f5dc6d72980" loc="70:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f5dc6d72980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc6d72d00"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc6d6e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc6d6e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc6d6e340"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6d6e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6d6e660"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6d6e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6d6e980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f5dc6d5a2e0" loc="86:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f5dc6d5a2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5dc6d5a660"/>
        <function-ref name="wait" scoped="" ref="0x7f5dc6d5a7f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc6d5a980"/>
        <function-ref name="isFree" scoped="" ref="0x7f5dc6d5ab10"/>
        <function-ref name="getNow" scoped="" ref="0x7f5dc6d5aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f5dc6d872e0" loc="49:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f5dc6d872e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f5dc6d87660"/>
        <function-ref name="turnOn" scoped="" ref="0x7f5dc6d877f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5dc6d87980"/>
        <function-ref name="done" scoped="" ref="0x7f5dc6d87b10"/>
        <function-ref name="standby" scoped="" ref="0x7f5dc6d87ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5dc6d87e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7f5dc6d631a0" loc="75:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f5dc6d631a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5dc77b2d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5dc6d63dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f5dc6d84b90" loc="55:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f5dc6d84b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6d822e0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6d83d40"/>
        <function-ref name="isSet" scoped="" ref="0x7f5dc6d837f0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6d82830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f5dc6d85aa0" loc="53:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f5dc6d85aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6d85e20"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc6d84020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc6d841b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc6d84340"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5dc6d844d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5dc6d84660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x7f5dc6d73670" loc="69:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7f5dc6d73670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc6d739f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc6d73b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc6d73d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc6d72020"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6d721b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6d72340"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6d724d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6d72660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f5dc6d62340" loc="77:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f5dc6d62340"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc6d626c0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f5dc6d62850"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f5dc6d629e0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f5dc6d62b70"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f5dc6d62d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f5dc6d86a90" loc="51:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f5dc6d86a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc6d86e10"/>
        <function-ref name="header" scoped="" ref="0x7f5dc6d85020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x7f5dc6cc2920" loc="847:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x7f5dc6cc2920"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5dc6cc2ca0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5dc6cc2e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f5dc6d7d630" loc="57:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f5dc6d7d630"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6d7ce70"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6d7c920"/>
        <function-ref name="isSet" scoped="" ref="0x7f5dc6d7c3d0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6d7b3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f5dc6d89020" loc="46:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f5dc6d89020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f5dc7cb0d40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f5dc7cb0d40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc6d893a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f5dc6d75b50" loc="65:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f5dc6d75b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5dc6d74020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5dc6d741b0"/>
        <function-ref name="request" scoped="" ref="0x7f5dc6d74340"/>
        <function-ref name="granted" scoped="" ref="0x7f5dc6d744d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5dc6d74660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x7f5dc6d77760" loc="64:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7f5dc6d77760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc6d77be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc6d77d70"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc6d75020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc6d751b0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6d75340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6d754d0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6d75660"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6d757f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f5dc6d7bc80" loc="58:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f5dc6d7bc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6d783c0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6d79e30"/>
        <function-ref name="isSet" scoped="" ref="0x7f5dc6d798e0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6d78910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f5dc6d86120" loc="50:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f5dc6d86120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc6d864a0"/>
        <function-ref name="ready" scoped="" ref="0x7f5dc6d86630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc6d867c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x7f5dc6d66550" loc="72:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f5dc6d66550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f5dc6d668d0"/>
        <function-ref name="disable" scoped="" ref="0x7f5dc6d66a60"/>
        <function-ref name="captured" scoped="" ref="0x7f5dc6d66bf0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f5dc6d66d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x7f5dc6d6faa0" loc="67:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f5dc6d6faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f5dc6d6fe20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f5dc6d73020"/>
        <function-ref name="splitRead" scoped="" ref="0x7f5dc6d731b0"/>
        <function-ref name="write" scoped="" ref="0x7f5dc6d73340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7f5dc6d608d0" loc="81:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f5dc6d608d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6d60c50"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6d60de0"/>
        <function-ref name="setValue" scoped="" ref="0x7f5dc6d5f020"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6d5f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7f5dc6d61110" loc="79:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f5dc6d61110"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc6d61490"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6d61620"/>
        <function-ref name="setValue" scoped="" ref="0x7f5dc6d617b0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6d61940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f5dc6d77020" loc="59:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5dc6d77020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f5dc6d773a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f5dc6d5b6b0" loc="85:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f5dc6d5b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f5dc6d5ba30"/>
        <function-ref name="suspend" scoped="" ref="0x7f5dc6d5bbc0"/>
        <function-ref name="resume" scoped="" ref="0x7f5dc6d5bd50"/>
        <function-ref name="run" scoped="" ref="0x7f5dc6d5a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f5dc6c7a7f0" loc="46:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f5dc6c7a7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc6c7ab70"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc6c7ad00"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc6c79020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc6c791b0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6c79340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6c794d0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6c79660"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6c797f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x7f5dc6c7b4e0" loc="45:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7f5dc6c7b4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc6c7b860"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc6c7b9f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc6c7bb80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc6c7bd10"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6c7a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6c7a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6c7a340"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6c7a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5dc6c78ac0" loc="49:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f5dc6c78ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5dc77b2d20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5dc6c74390"/>
        <function-ref name="fired" scoped="" ref="0x7f5dc6c76360"/>
        <function-ref name="startAt" scoped="" ref="0x7f5dc6c76ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5dc6c76820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5dc6c74850"/>
        <function-ref name="start" scoped="" ref="0x7f5dc6c77970"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc6c77e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x7f5dc6c7db50" loc="42:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f5dc6c7db50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5dc6c7c020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5dc6c7c1b0"/>
        <function-ref name="request" scoped="" ref="0x7f5dc6c7c340"/>
        <function-ref name="granted" scoped="" ref="0x7f5dc6c7c4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5dc6c7c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x7f5dc6c81950" loc="41:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7f5dc6c81950"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc6c81cd0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc6c81e60"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc6c7d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc6c7d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6c7d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6c7d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6c7d660"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6c7d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7f5dc6c79b10" loc="48:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f5dc6c79b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f5dc6c78020"/>
        <function-ref name="disable" scoped="" ref="0x7f5dc6c781b0"/>
        <function-ref name="captured" scoped="" ref="0x7f5dc6c78340"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f5dc6c784d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f5dc6c7c920" loc="43:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f5dc6c7c920"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f5dc6c7cca0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f5dc6c7ce30"/>
        <function-ref name="splitRead" scoped="" ref="0x7f5dc6c7b020"/>
        <function-ref name="write" scoped="" ref="0x7f5dc6c7b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f5dc6c73020" loc="50:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f5dc6c73020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TRadio" ref="0x7f5dc77b2d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5dc6c73c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x7f5dc6c623d0" loc="46:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x7f5dc6c623d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc6c62750"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc6c628e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc6c62a70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc6c62c00"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6c62d90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6c60020"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6c601b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6c60340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x7f5dc6c657f0" loc="45:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f5dc6c657f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f5dc6c63e60"/>
        <function-ref name="test" scoped="" ref="0x7f5dc6c634e0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6c6b4c0"/>
        <function-ref name="captured" scoped="" ref="0x7f5dc6c64020"/>
        <function-ref name="reset" scoped="" ref="0x7f5dc6c64530"/>
        <function-ref name="isOn" scoped="" ref="0x7f5dc6c639a0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6c6b980"/>
        <function-ref name="start" scoped="" ref="0x7f5dc6c649f0"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc6c63020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x7f5dc6c60680" loc="47:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x7f5dc6c60680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc6c60a00"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc6c60b90"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc6c60d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc6c5f020"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6c5f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6c5f340"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6c5f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6c5f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f5dc6c6f680" loc="40:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f5dc6c6f680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc6c6fa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7f5dc6c729d0" loc="39:/usr/bin/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f5dc6c729d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f5dc6c72d50"/>
        <function-ref name="disable" scoped="" ref="0x7f5dc6c6f020"/>
        <function-ref name="captured" scoped="" ref="0x7f5dc6c6f1b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f5dc6c6f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f5dc6c44ae0" loc="84:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f5dc6c44ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc6c44e60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc6c4f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f5dc6c4e840" loc="82:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f5dc6c4e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f5dc6c4ebc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5dc6c511f0" loc="81:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5dc6c511f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc6c51570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f5dc6c50020" loc="83:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f5dc6c50020"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f5dc6c503a0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f5dc6c50530"/>
        <function-ref name="splitRead" scoped="" ref="0x7f5dc6c506c0"/>
        <function-ref name="write" scoped="" ref="0x7f5dc6c50850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5dc6c4f850" loc="85:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f5dc6c4f850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5dc6c4fbd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5dc6c4fd60"/>
        <function-ref name="request" scoped="" ref="0x7f5dc6c4d020"/>
        <function-ref name="granted" scoped="" ref="0x7f5dc6c4d1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5dc6c4d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7f5dc6bfe190" loc="296:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7f5dc6bfe190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5dc6bfe510"/>
        <function-ref name="runTask" scoped="" ref="0x7f5dc6bfe6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f5dc6c40020" loc="94:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f5dc6c40020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc6c403a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc6c40530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7f5dc6c21430" loc="99:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7f5dc6c21430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5dc6c217b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5dc6c21940"/>
        <function-ref name="request" scoped="" ref="0x7f5dc6c21ad0"/>
        <function-ref name="granted" scoped="" ref="0x7f5dc6c21c60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5dc6c21df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f5dc6c42e00" loc="92:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f5dc6c42e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f5dc6c411c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5dc6c427e0" loc="91:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5dc6c427e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc6c42b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7f5dc6c3d020" loc="98:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7f5dc6c3d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f5dc6c3d3a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f5dc6c22980"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f5dc6c3d6c0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f5dc6c22b10"/>
        <function-ref name="initMaster" scoped="" ref="0x7f5dc6c3d9e0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f5dc6c3db70"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f5dc6c3dd00"/>
        <function-ref name="read" scoped="" ref="0x7f5dc6c3c020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f5dc6c3c1b0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f5dc6c3c340"/>
        <function-ref name="setClock" scoped="" ref="0x7f5dc6c3c4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5dc6c3c660"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f5dc6c3c7f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f5dc6c3ca80"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f5dc6c3cc10"/>
        <function-ref name="write" scoped="" ref="0x7f5dc6c3cda0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5dc6c22020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f5dc6c221b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f5dc6c22340"/>
        <function-ref name="getClock" scoped="" ref="0x7f5dc6c224d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f5dc6c22660"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f5dc6c3d530"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f5dc6c3d850"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f5dc6c227f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f5dc6c41480" loc="93:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f5dc6c41480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f5dc6c41800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f5dc6c41990"/>
        <function-ref name="splitRead" scoped="" ref="0x7f5dc6c41b20"/>
        <function-ref name="write" scoped="" ref="0x7f5dc6c41cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5dc6c40d20" loc="95:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f5dc6c40d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5dc6c3f0e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5dc6c3f270"/>
        <function-ref name="request" scoped="" ref="0x7f5dc6c3f400"/>
        <function-ref name="granted" scoped="" ref="0x7f5dc6c3f590"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5dc6c3f720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f5dc6c20130" loc="100:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5dc6c20130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5dc6c204b0"/>
        <function-ref name="userId" scoped="" ref="0x7f5dc6c20640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f5dc6c20920" loc="101:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f5dc6c20920"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f5dc6c20ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7f5dc6bd23e0" loc="76:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7f5dc6bd23e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f5dc6bd2760"/>
        <function-ref name="sleep" scoped="" ref="0x7f5dc6bd0ca0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f5dc6bd2a80"/>
        <function-ref name="dataReady" scoped="" ref="0x7f5dc6bd0e30"/>
        <function-ref name="initMaster" scoped="" ref="0x7f5dc6bd2da0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f5dc6bd1020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f5dc6bd11b0"/>
        <function-ref name="read" scoped="" ref="0x7f5dc6bd1340"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f5dc6bd14d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f5dc6bd1660"/>
        <function-ref name="setClock" scoped="" ref="0x7f5dc6bd17f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5dc6bd1980"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f5dc6bd1b10"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f5dc6bd1da0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f5dc6bd0020"/>
        <function-ref name="write" scoped="" ref="0x7f5dc6bd01b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5dc6bd0340"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f5dc6bd04d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f5dc6bd0660"/>
        <function-ref name="getClock" scoped="" ref="0x7f5dc6bd07f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f5dc6bd0980"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f5dc6bd28f0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f5dc6bd2c10"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f5dc6bd0b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7f5dc6bbdb10" loc="81:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7f5dc6bbdb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc6bbb020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc6bbb1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc6bbb340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc6bbb4d0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6bbb660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6bbb7f0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6bbb980"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6bbbb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7f5dc6bc0650" loc="79:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7f5dc6bc0650"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc6bc09d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc6bc0b60"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc6bc0cf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc6bc0e80"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6bbe030"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6bbe1c0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6bbe350"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6bbe4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7f5dc6bc1390" loc="78:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7f5dc6bc1390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc6bc1710"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc6bc18a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc6bc1a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc6bc1bc0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6bc1d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6bc0020"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6bc01b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6bc0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f5dc6bbfac0" loc="75:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5dc6bbfac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5dc6bbfe40"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc6bc1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7f5dc6bbbe50" loc="82:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7f5dc6bbbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f5dc6bba210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7f5dc6bc5350" loc="74:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7f5dc6bc5350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f5dc6bc56d0"/>
        <function-ref name="sleep" scoped="" ref="0x7f5dc6bc3ca0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f5dc6bc59f0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f5dc6bc3e30"/>
        <function-ref name="initMaster" scoped="" ref="0x7f5dc6bc5d10"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f5dc6bc4020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f5dc6bc41b0"/>
        <function-ref name="read" scoped="" ref="0x7f5dc6bc4340"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f5dc6bc44d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f5dc6bc4660"/>
        <function-ref name="setClock" scoped="" ref="0x7f5dc6bc47f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5dc6bc4980"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f5dc6bc4b10"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f5dc6bc4da0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f5dc6bc3020"/>
        <function-ref name="write" scoped="" ref="0x7f5dc6bc31b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5dc6bc3340"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f5dc6bc34d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f5dc6bc3660"/>
        <function-ref name="getClock" scoped="" ref="0x7f5dc6bc37f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f5dc6bc3980"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f5dc6bc5860"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f5dc6bc5b80"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f5dc6bc3b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7f5dc6bbe800" loc="80:/usr/bin/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7f5dc6bbe800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5dc6bbeb80"/>
        <function-ref name="isInput" scoped="" ref="0x7f5dc6bbed10"/>
        <function-ref name="toggle" scoped="" ref="0x7f5dc6bbd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5dc6bbd1b0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6bbd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5dc6bbd4d0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6bbd660"/>
        <function-ref name="clr" scoped="" ref="0x7f5dc6bbd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5dc6b62020" loc="86:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5dc6b62020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5dc6b623c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5dc6b62550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5dc6b600d0" loc="89:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5dc6b600d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5dc6b60470"/>
        <function-ref name="configure" scoped="" ref="0x7f5dc6b60600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5dc6b63210" loc="85:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f5dc6b63210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5dc6b635b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5dc6b63740"/>
        <function-ref name="request" scoped="" ref="0x7f5dc6b638d0"/>
        <function-ref name="granted" scoped="" ref="0x7f5dc6b63a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5dc6b63bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5dc6b627a0" loc="87:/usr/bin/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5dc6b627a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5dc6b62b20"/>
        <function-ref name="userId" scoped="" ref="0x7f5dc6b62cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5dc600a3b0" loc="44:/usr/bin/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5dc600a3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc600a730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f5dc600a9c0" loc="45:/usr/bin/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f5dc600a9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f5dc600ad40"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f5dc6009020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f5dc60091b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5dc6009340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5dc6007850" loc="52:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5dc6007850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5dc6007bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5dc6007d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5dc6006910" loc="56:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5dc6006910"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5dc6006cb0"/>
        <function-ref name="configure" scoped="" ref="0x7f5dc6006e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f5dc6005120" loc="57:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f5dc6005120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f5dc60054a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f5dc6005630"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f5dc60057c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5dc6005950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5dc60089d0" loc="51:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f5dc60089d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5dc6008d70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5dc6007020"/>
        <function-ref name="request" scoped="" ref="0x7f5dc60071b0"/>
        <function-ref name="granted" scoped="" ref="0x7f5dc6007340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5dc60074d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5dc6006020" loc="53:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5dc6006020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5dc60063a0"/>
        <function-ref name="userId" scoped="" ref="0x7f5dc6006530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f5dc6005c20" loc="69:/usr/bin/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f5dc6005c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5dc6003020"/>
        <function-ref name="runTask" scoped="" ref="0x7f5dc60031b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f5dc6b41d80" loc="80:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f5dc6b41d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f5dc6b49180"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f5dc6b49310"/>
        <function-ref name="getControlA" scoped="" ref="0x7f5dc6b494a0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f5dc6b49630"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f5dc6b497c0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f5dc6b49950"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f5dc6b49ae0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f5dc6b49c70"/>
        <function-ref name="setControlC" scoped="" ref="0x7f5dc6b49e00"/>
        <function-ref name="setControlA" scoped="" ref="0x7f5dc6b48020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5dc6b48530" loc="81:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f5dc6b48530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f5dc6b3d9a0"/>
        <function-ref name="test" scoped="" ref="0x7f5dc6b3d020"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6b3f1b0"/>
        <function-ref name="captured" scoped="" ref="0x7f5dc6b3fb80"/>
        <function-ref name="reset" scoped="" ref="0x7f5dc6b3e0d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f5dc6b3d4e0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6b3f670"/>
        <function-ref name="start" scoped="" ref="0x7f5dc6b3e590"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc6b3ea50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5dc6b3b650" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f5dc6b3b650"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f5dc6b38110"/>
        <function-ref name="fired" scoped="" ref="0x7f5dc6b3ada0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6b3a3d0"/>
        <function-ref name="reset" scoped="" ref="0x7f5dc6b392a0"/>
        <function-ref name="isOn" scoped="" ref="0x7f5dc6b385d0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6b3a890"/>
        <function-ref name="start" scoped="" ref="0x7f5dc6b39760"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc6b39c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5dc6b58b20" loc="79:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f5dc6b58b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f5dc6b4ce60"/>
        <function-ref name="test" scoped="" ref="0x7f5dc6b4c4e0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6b55790"/>
        <function-ref name="setScale" scoped="" ref="0x7f5dc6b4a350"/>
        <function-ref name="getScale" scoped="" ref="0x7f5dc6b4a860"/>
        <function-ref name="reset" scoped="" ref="0x7f5dc6b4d670"/>
        <function-ref name="overflow" scoped="" ref="0x7f5dc6b4d1b0"/>
        <function-ref name="isOn" scoped="" ref="0x7f5dc6b4c9a0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6b55c50"/>
        <function-ref name="start" scoped="" ref="0x7f5dc6b4db30"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc6b4c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f5dc6b2e020" loc="80:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f5dc6b2e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f5dc6b2e3a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f5dc6b2e530"/>
        <function-ref name="getControlA" scoped="" ref="0x7f5dc6b2e6c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f5dc6b2e850"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f5dc6b2e9e0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f5dc6b2eb70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f5dc6b2ed00"/>
        <function-ref name="getControlB" scoped="" ref="0x7f5dc6b2d020"/>
        <function-ref name="setControlC" scoped="" ref="0x7f5dc6b2d1b0"/>
        <function-ref name="setControlA" scoped="" ref="0x7f5dc6b2d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f5dc6b225a0" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f5dc6b225a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f5dc6b1e020"/>
        <function-ref name="fired" scoped="" ref="0x7f5dc6b21c10"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6b21240"/>
        <function-ref name="reset" scoped="" ref="0x7f5dc6b1f110"/>
        <function-ref name="isOn" scoped="" ref="0x7f5dc6b1e4e0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6b21700"/>
        <function-ref name="start" scoped="" ref="0x7f5dc6b1f5d0"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc6b1fa90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5dc6b2d850" loc="81:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f5dc6b2d850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f5dc6b23e60"/>
        <function-ref name="test" scoped="" ref="0x7f5dc6b234e0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6b264c0"/>
        <function-ref name="captured" scoped="" ref="0x7f5dc6b25020"/>
        <function-ref name="reset" scoped="" ref="0x7f5dc6b25530"/>
        <function-ref name="isOn" scoped="" ref="0x7f5dc6b239a0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6b26980"/>
        <function-ref name="start" scoped="" ref="0x7f5dc6b259f0"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc6b23020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f5dc6b1eba0" loc="83:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f5dc6b1eba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f5dc6b1a550"/>
        <function-ref name="fired" scoped="" ref="0x7f5dc6b1c1f0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6b1d7f0"/>
        <function-ref name="reset" scoped="" ref="0x7f5dc6b1c6b0"/>
        <function-ref name="isOn" scoped="" ref="0x7f5dc6b1aa10"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6b1dcb0"/>
        <function-ref name="start" scoped="" ref="0x7f5dc6b1cb70"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc6b1a090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7f5dc6b19120" loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7f5dc6b19120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f5dc6b16a90"/>
        <function-ref name="fired" scoped="" ref="0x7f5dc6b18770"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6b19d50"/>
        <function-ref name="reset" scoped="" ref="0x7f5dc6b18c30"/>
        <function-ref name="isOn" scoped="" ref="0x7f5dc6b15020"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6b18260"/>
        <function-ref name="start" scoped="" ref="0x7f5dc6b16110"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc6b165d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5dc6b36b90" loc="79:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f5dc6b36b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f5dc6b2f020"/>
        <function-ref name="test" scoped="" ref="0x7f5dc6b30550"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6b337f0"/>
        <function-ref name="setScale" scoped="" ref="0x7f5dc6b2f4e0"/>
        <function-ref name="getScale" scoped="" ref="0x7f5dc6b2f9f0"/>
        <function-ref name="reset" scoped="" ref="0x7f5dc6b326b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5dc6b321f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f5dc6b30a10"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6b33cb0"/>
        <function-ref name="start" scoped="" ref="0x7f5dc6b32b70"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc6b30090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5dc6a296e0" loc="30:/usr/bin/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f5dc6a296e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TOne" ref="0x7f5dc7b7a410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5dc6a25020"/>
        <function-ref name="fired" scoped="" ref="0x7f5dc6a26020"/>
        <function-ref name="startAt" scoped="" ref="0x7f5dc6a269a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5dc6a264e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5dc6a254e0"/>
        <function-ref name="start" scoped="" ref="0x7f5dc6a285b0"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc6a28ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5dc6a7cb50" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5dc6a7cb50"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f5dc7cb09c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f5dc7cb09c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc6a70020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5dc6a70410" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f5dc6a70410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f5dc6a6c810"/>
        <function-ref name="test" scoped="" ref="0x7f5dc6a6de60"/>
        <function-ref name="get" scoped="" ref="0x7f5dc6a6f090"/>
        <function-ref name="setScale" scoped="" ref="0x7f5dc6a6ccd0"/>
        <function-ref name="getScale" scoped="" ref="0x7f5dc6a6b260"/>
        <function-ref name="reset" scoped="" ref="0x7f5dc6a6d020"/>
        <function-ref name="overflow" scoped="" ref="0x7f5dc6a6fa60"/>
        <function-ref name="isOn" scoped="" ref="0x7f5dc6a6c350"/>
        <function-ref name="set" scoped="" ref="0x7f5dc6a6f550"/>
        <function-ref name="start" scoped="" ref="0x7f5dc6a6d4e0"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc6a6d9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5dc5fbf610" loc="55:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f5dc5fbf610"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f5dc7cb0640"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f5dc7cb0640"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TOne" ref="0x7f5dc7b7a410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5dc5fbc020"/>
        <function-ref name="fired" scoped="" ref="0x7f5dc5fbd020"/>
        <function-ref name="startAt" scoped="" ref="0x7f5dc5fbd9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5dc5fbd4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5dc5fbc4e0"/>
        <function-ref name="start" scoped="" ref="0x7f5dc5fbe5b0"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc5fbeac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7f5dc5fb7db0" loc="58:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f5dc5fb7db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f5dc5fb39a0"/>
        <function-ref name="fired" scoped="" ref="0x7f5dc5fb4530"/>
        <function-ref name="get" scoped="" ref="0x7f5dc5fb5a10"/>
        <function-ref name="reset" scoped="" ref="0x7f5dc5fb49f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f5dc5fb3e60"/>
        <function-ref name="set" scoped="" ref="0x7f5dc5fb4020"/>
        <function-ref name="start" scoped="" ref="0x7f5dc5fb3020"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc5fb34e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7f5dc5fbca30" loc="57:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f5dc5fbca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f5dc5fb8e60"/>
        <function-ref name="test" scoped="" ref="0x7f5dc5fb84e0"/>
        <function-ref name="get" scoped="" ref="0x7f5dc5fba6b0"/>
        <function-ref name="setScale" scoped="" ref="0x7f5dc5fb7350"/>
        <function-ref name="getScale" scoped="" ref="0x7f5dc5fb7860"/>
        <function-ref name="reset" scoped="" ref="0x7f5dc5fb9590"/>
        <function-ref name="overflow" scoped="" ref="0x7f5dc5fb90d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f5dc5fb89a0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc5fbab70"/>
        <function-ref name="start" scoped="" ref="0x7f5dc5fb9a50"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc5fb8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f5dc6a213a0" loc="39:/usr/bin/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f5dc6a213a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5dc7bce180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5dc6a20020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5dc6a1d200" loc="24:/usr/bin/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f5dc6a1d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TOne" ref="0x7f5dc7b7a410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5dc6a1b090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5dc6a1ba10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5dc6a1b550"/>
        <function-ref name="overflow" scoped="" ref="0x7f5dc6a1a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5dc6a17020" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f5dc6a17020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TOne" ref="0x7f5dc7b7a410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5dc6a17e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5dc6a01800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5dc6a01340"/>
        <function-ref name="overflow" scoped="" ref="0x7f5dc6a01cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5dc6a00280" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f5dc6a00280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f5dc69fc810"/>
        <function-ref name="test" scoped="" ref="0x7f5dc69fde60"/>
        <function-ref name="get" scoped="" ref="0x7f5dc69fe020"/>
        <function-ref name="setScale" scoped="" ref="0x7f5dc69fccd0"/>
        <function-ref name="getScale" scoped="" ref="0x7f5dc69fa260"/>
        <function-ref name="reset" scoped="" ref="0x7f5dc69fd020"/>
        <function-ref name="overflow" scoped="" ref="0x7f5dc69fe9f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f5dc69fc350"/>
        <function-ref name="set" scoped="" ref="0x7f5dc69fe4e0"/>
        <function-ref name="start" scoped="" ref="0x7f5dc69fd4e0"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc69fd9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f5dc69d50f0" loc="63:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f5dc69d50f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5dc7bce180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5dc69d4020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5dc69d49a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5dc69d44e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5dc69d4e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5dc69f7cf0" loc="62:/usr/bin/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f5dc69f7cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5dc7bce180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5dc69d8b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5dc69d6550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5dc69d6090"/>
        <function-ref name="overflow" scoped="" ref="0x7f5dc69d6a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f5dc69d1b60" loc="48:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f5dc69d1b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5dc7bce180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5dc69d07d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f5dc69d0e40" loc="49:/usr/bin/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f5dc69d0e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5dc7bce180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5dc69cfca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5dc69ce670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5dc69ce1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5dc69ceb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f5dc69c69a0" loc="36:/usr/bin/tinyos-main/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f5dc69c69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5dc7bce180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f5dc69bf7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5dc68b5020" loc="49:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="LedToRadioAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5dc68b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc68b53a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5dc68b5530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc68b56c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc68b5850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc68b59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5dc68b5c30" loc="50:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="LedToRadioAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5dc68b5c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc68b3020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc68b31b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5dc68b3340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc68b34d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc68b3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5dc68b38b0" loc="51:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="LedToRadioAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5dc68b38b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5dc68b3c30"/>
        <function-ref name="source" scoped="" ref="0x7f5dc68b3dc0"/>
        <function-ref name="address" scoped="" ref="0x7f5dc68b2020"/>
        <function-ref name="destination" scoped="" ref="0x7f5dc68b21b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5dc68b2340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5dc68b24d0"/>
        <function-ref name="type" scoped="" ref="0x7f5dc68b2660"/>
        <function-ref name="setType" scoped="" ref="0x7f5dc68b27f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5dc68b2980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5dc68b2b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5dc68b2ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f5dc68b1020" loc="52:/usr/bin/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="LedToRadioAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f5dc68b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5dc68b13a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f5dc68b1530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5dc68b16c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5dc5f82230" loc="49:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="LedToRadioAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5dc5f82230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc5f825b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5dc5f82740"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc5f828d0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc5f82a60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc5f82bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5dc5f82e40" loc="50:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="LedToRadioAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5dc5f82e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc5f811e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc5f81370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5dc5f81500"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc5f81690"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc5f81820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5dc5f81a70" loc="51:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="LedToRadioAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5dc5f81a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5dc5f81df0"/>
        <function-ref name="source" scoped="" ref="0x7f5dc5f80020"/>
        <function-ref name="address" scoped="" ref="0x7f5dc5f801b0"/>
        <function-ref name="destination" scoped="" ref="0x7f5dc5f80340"/>
        <function-ref name="setSource" scoped="" ref="0x7f5dc5f804d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5dc5f80660"/>
        <function-ref name="type" scoped="" ref="0x7f5dc5f807f0"/>
        <function-ref name="setType" scoped="" ref="0x7f5dc5f80980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5dc5f80b10"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5dc5f80ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5dc5f80e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f5dc5f7f120" loc="52:/usr/bin/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="LedToRadioAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f5dc5f7f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5dc5f7f4a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f5dc5f7f630"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5dc5f7f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5dc5f76b20" loc="44:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="LedToRadioAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5dc5f76b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc5f75020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5dc5f751b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc5f75340"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc5f754d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc5f75660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f5dc5f75910" loc="46:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="LedToRadioAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f5dc5f75910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc5f75c90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5dc5f75e20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc5f74020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc5f741b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc5f74340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f5dc5f74590" loc="47:/usr/bin/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="LedToRadioAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5dc5f74590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5dc5f74910"/>
        <function-ref name="source" scoped="" ref="0x7f5dc5f74aa0"/>
        <function-ref name="address" scoped="" ref="0x7f5dc5f74c30"/>
        <function-ref name="destination" scoped="" ref="0x7f5dc5f74dc0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5dc5f73020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5dc5f731b0"/>
        <function-ref name="type" scoped="" ref="0x7f5dc5f73340"/>
        <function-ref name="setType" scoped="" ref="0x7f5dc5f734d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5dc5f73660"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5dc5f737f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5dc5f73980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5dc691ec20" loc="43:/usr/bin/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f5dc691ec20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc691b020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5dc691b1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc691b340"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc691b4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc691b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f5dc68cc400" loc="48:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f5dc68cc400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc68cc7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5dc68cc930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc68ccac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc68ccc50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc68ccde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5dc68cd580" loc="46:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f5dc68cd580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5dc68cd920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5dc68cdab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc68cdc40"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc68cddd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5dc68cc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f5dc68c9720" loc="50:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5dc68c9720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc68c9aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc68c9c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5dc68c9dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc68c8020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc68c81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f5dc68c8480" loc="169:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7f5dc68c8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5dc68c8800"/>
        <function-ref name="runTask" scoped="" ref="0x7f5dc68c8990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f5dc68c8c60" loc="126:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7f5dc68c8c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5dc68c7020"/>
        <function-ref name="runTask" scoped="" ref="0x7f5dc68c71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f5dc68ca060" loc="49:/usr/bin/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5dc68ca060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5dc68ca3e0"/>
        <function-ref name="source" scoped="" ref="0x7f5dc68ca570"/>
        <function-ref name="address" scoped="" ref="0x7f5dc68ca700"/>
        <function-ref name="destination" scoped="" ref="0x7f5dc68ca890"/>
        <function-ref name="setSource" scoped="" ref="0x7f5dc68caa20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5dc68cabb0"/>
        <function-ref name="type" scoped="" ref="0x7f5dc68cad40"/>
        <function-ref name="setType" scoped="" ref="0x7f5dc68c9020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5dc68c91b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5dc68c9340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5dc68c94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5dc68a7020" loc="46:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="LedToRadioAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f5dc68a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5dc68a73a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5dc68a7530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5dc68a76c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5dc68a7850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5dc68a79e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5dc68ae910" loc="45:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="LedToRadioAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f5dc68ae910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5dc68aec90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5dc68a7c30" loc="47:/usr/bin/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="LedToRadioAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f5dc68a7c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5dc68a6020"/>
        <function-ref name="source" scoped="" ref="0x7f5dc68a61b0"/>
        <function-ref name="address" scoped="" ref="0x7f5dc68a6340"/>
        <function-ref name="destination" scoped="" ref="0x7f5dc68a64d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5dc68a6660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5dc68a67f0"/>
        <function-ref name="type" scoped="" ref="0x7f5dc68a6980"/>
        <function-ref name="setType" scoped="" ref="0x7f5dc68a6b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5dc68a6ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5dc68a6e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5dc68a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f5dc68a3e00" loc="43:/usr/bin/tinyos-main/tos/platforms/micaz/DemoSensorC.nc">
      <component-ref qname="LedToRadioAppC.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f5dc68a3e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5dc68a2a80"/>
        <function-ref name="readDone" scoped="" ref="0x7f5dc66e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f5dc5f28990" loc="41:/usr/bin/tinyos-main/tos/platforms/mica/VoltageC.nc">
      <component-ref qname="LedToRadioAppC.Sensor.DemoChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f5dc5f28990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5dc5f275a0"/>
        <function-ref name="readDone" scoped="" ref="0x7f5dc5f27a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5dc5f22950" loc="25:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="LedToRadioAppC.Sensor.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5dc5f22950"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5dc5f22cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f5dc5f22e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f5dc5f24980" loc="22:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="LedToRadioAppC.Sensor.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f5dc5f24980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5dc5f235a0"/>
        <function-ref name="readDone" scoped="" ref="0x7f5dc5f23a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f5dc5f22060" loc="24:/usr/bin/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="LedToRadioAppC.Sensor.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f5dc5f22060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f5dc5f223e0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5dc5f22570"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f5dc5f22700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f5dc6895e70" loc="19:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f5dc6895e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5dc688ea90"/>
        <function-ref name="readDone" scoped="" ref="0x7f5dc688d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f5dc6888e60" loc="20:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f5dc6888e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5dc688bac0"/>
        <function-ref name="readDone" scoped="" ref="0x7f5dc688a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f5dc688ac20" loc="23:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f5dc688ac20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f5dc6886020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5dc68861b0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f5dc6886340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f5dc6886b50" loc="24:/usr/bin/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f5dc6886b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5dc6885020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5dc68851b0"/>
        <function-ref name="request" scoped="" ref="0x7f5dc6885340"/>
        <function-ref name="granted" scoped="" ref="0x7f5dc68854d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5dc6885660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5dc687faf0" loc="58:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5dc687faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5dc687fe70"/>
        <function-ref name="configure" scoped="" ref="0x7f5dc687a030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7f5dc6875c90" loc="56:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f5dc6875c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f5dc687f0a0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f5dc687f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7f5dc687bdd0" loc="55:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f5dc687bdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f5dc6880180"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc6880310"/>
        <function-ref name="dataReady" scoped="" ref="0x7f5dc68804a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5dc6882860" loc="54:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f5dc6882860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5dc6882be0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5dc6882d70"/>
        <function-ref name="request" scoped="" ref="0x7f5dc6881020"/>
        <function-ref name="granted" scoped="" ref="0x7f5dc68811b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5dc6881340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5dc6872150" loc="54:/usr/bin/tinyos-main/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5dc6872150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc68724d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7f5dc68719c0" loc="57:/usr/bin/tinyos-main/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f5dc68719c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f5dc6871d40"/>
        <function-ref name="dataReady" scoped="" ref="0x7f5dc6870020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7f5dc6871020" loc="56:/usr/bin/tinyos-main/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f5dc6871020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f5dc68713a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc6871530"/>
        <function-ref name="dataReady" scoped="" ref="0x7f5dc68716c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x7f5dc686f020" loc="60:/usr/bin/tinyos-main/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f5dc686f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f5dc686f3a0"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f5dc686f530"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f5dc686f6c0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f5dc686f850"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f5dc686f9e0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f5dc686fb70"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f5dc686fd00"/>
        <function-ref name="isComplete" scoped="" ref="0x7f5dc686e020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc686e1b0"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f5dc686e340"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f5dc686e4d0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f5dc686e660"/>
        <function-ref name="startConversion" scoped="" ref="0x7f5dc686e7f0"/>
        <function-ref name="isStarted" scoped="" ref="0x7f5dc686ea80"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f5dc686ec10"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f5dc686eda0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f5dc685e020"/>
        <function-ref name="getValue" scoped="" ref="0x7f5dc685e1b0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f5dc685e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f5dc68727c0" loc="55:/usr/bin/tinyos-main/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5dc68727c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5dc6872b40"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc6872cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7f5dc685e630" loc="61:/usr/bin/tinyos-main/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f5dc685e630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f5dc685e9b0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f5dc685eb40"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f5dc685ecd0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f5dc685ee60"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f5dc685d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7f5dc6873cc0" loc="45:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f5dc6873cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f5dc682a0a0"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f5dc682a230"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f5dc682a3c0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f5dc682a550"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f5dc682a6e0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f5dc682a870"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f5dc682aa00"/>
        <function-ref name="isComplete" scoped="" ref="0x7f5dc682ab90"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc682ad20"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f5dc6829020"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f5dc68291b0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f5dc6829340"/>
        <function-ref name="startConversion" scoped="" ref="0x7f5dc68294d0"/>
        <function-ref name="isStarted" scoped="" ref="0x7f5dc6829760"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f5dc68298f0"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f5dc6829a80"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f5dc6829c10"/>
        <function-ref name="getValue" scoped="" ref="0x7f5dc6829da0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f5dc6828020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7f5dc68251f0" loc="48:/usr/bin/tinyos-main/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f5dc68251f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f5dc6825570"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f5dc6825700"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f5dc6825890"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f5dc6825a20"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f5dc6825bb0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f5dc6825d40"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f5dc6824020"/>
        <function-ref name="isComplete" scoped="" ref="0x7f5dc68241b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc6824340"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f5dc68244d0"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f5dc6824660"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f5dc68247f0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f5dc6824980"/>
        <function-ref name="isStarted" scoped="" ref="0x7f5dc6824c10"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f5dc6824da0"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f5dc6823020"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f5dc68231b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5dc6823340"/>
        <function-ref name="dataReady" scoped="" ref="0x7f5dc68234d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f5dc68237f0" loc="49:/usr/bin/tinyos-main/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f5dc68237f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f5dc6823b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5dc67786c0" loc="92:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5dc67786c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5dc6778a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5dc6778bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5dc67763e0" loc="96:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5dc67763e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5dc6776780"/>
        <function-ref name="configure" scoped="" ref="0x7f5dc6776910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f5dc6778e40" loc="93:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5dc6778e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5dc67771e0"/>
        <function-ref name="requested" scoped="" ref="0x7f5dc6777370"/>
        <function-ref name="granted" scoped="" ref="0x7f5dc6777500"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5dc6777690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5dc6777820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5dc67797f0" loc="91:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f5dc67797f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5dc6779b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5dc6779d20"/>
        <function-ref name="request" scoped="" ref="0x7f5dc6778020"/>
        <function-ref name="granted" scoped="" ref="0x7f5dc67781b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5dc6778340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5dc6777a70" loc="94:/usr/bin/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5dc6777a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5dc6777df0"/>
        <function-ref name="userId" scoped="" ref="0x7f5dc6776020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5dc5f100e0" loc="44:/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5dc5f100e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5dc5f10460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f5dc5f106f0" loc="45:/usr/bin/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f5dc5f106f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f5dc5f10a70"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f5dc5f10c00"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f5dc5f10d90"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5dc5f0f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5dc5f0d850" loc="55:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5dc5f0d850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5dc5f0dbf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5dc5f0dd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5dc5f0b590" loc="60:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5dc5f0b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5dc5f0b930"/>
        <function-ref name="configure" scoped="" ref="0x7f5dc5f0bac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f5dc5f0bd50" loc="61:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f5dc5f0bd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f5dc5f09100"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f5dc5f09290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f5dc5f09420"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5dc5f095b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f5dc5f0c020" loc="56:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5dc5f0c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5dc5f0c3a0"/>
        <function-ref name="requested" scoped="" ref="0x7f5dc5f0c530"/>
        <function-ref name="granted" scoped="" ref="0x7f5dc5f0c6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5dc5f0c850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5dc5f0c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5dc5f09800" loc="62:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f5dc5f09800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5dc5f09b80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5dc5f09d10"/>
        <function-ref name="led1On" scoped="" ref="0x7f5dc5f08020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5dc5f081b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5dc5f08340"/>
        <function-ref name="get" scoped="" ref="0x7f5dc5f084d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5dc5f08660"/>
        <function-ref name="led0On" scoped="" ref="0x7f5dc5f08ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5dc5f08980"/>
        <function-ref name="led2On" scoped="" ref="0x7f5dc5f087f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5dc5f08b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5dc5f0e970" loc="54:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f5dc5f0e970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5dc5f0ed10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5dc5f0d020"/>
        <function-ref name="request" scoped="" ref="0x7f5dc5f0d1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f5dc5f0d340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5dc5f0d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5dc5f0cc30" loc="57:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5dc5f0cc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5dc5f0b020"/>
        <function-ref name="userId" scoped="" ref="0x7f5dc5f0b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f5dc5f07020" loc="75:/usr/bin/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f5dc5f07020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5dc5f073a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5dc5f07530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f5dc6772960" loc="72:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f5dc6772960"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f5dc6772ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f5dc675c020" loc="73:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5dc675c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5dc675c3a0"/>
        <function-ref name="requested" scoped="" ref="0x7f5dc675c530"/>
        <function-ref name="granted" scoped="" ref="0x7f5dc675c6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5dc675c850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5dc675c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f5dc6772200" loc="70:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5dc6772200"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5dc6772580"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc6772710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f5dc675cc30" loc="74:/usr/bin/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5dc675cc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5dc675b020"/>
        <function-ref name="userId" scoped="" ref="0x7f5dc675b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f5dc5ed4270" loc="62:/usr/bin/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f5dc5ed4270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f5dc5ed45f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f5dc5ed4840" loc="63:/usr/bin/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5dc5ed4840"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5dc5ed4bc0"/>
        <function-ref name="requested" scoped="" ref="0x7f5dc5ed4d50"/>
        <function-ref name="granted" scoped="" ref="0x7f5dc5ed3020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5dc5ed31b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5dc5ed3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f5dc5ed5ad0" loc="60:/usr/bin/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5dc5ed5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5dc5ed5e50"/>
        <function-ref name="stop" scoped="" ref="0x7f5dc5ed4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f5dc5ed3590" loc="64:/usr/bin/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5dc5ed3590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5dc5ed3910"/>
        <function-ref name="userId" scoped="" ref="0x7f5dc5ed3aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f5dc67458d0" loc="54:/usr/bin/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f5dc67458d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5dc7bcfd50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f5dc7bce180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f5dc6744780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f5dc674b580" loc="48:/usr/bin/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f5dc674b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5dc674a1b0"/>
        <function-ref name="readDone" scoped="" ref="0x7f5dc674a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f5dc6749300" loc="49:/usr/bin/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f5dc6749300"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5dc6748020"/>
        <function-ref name="readDone" scoped="" ref="0x7f5dc67484e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f5dc6746b90" loc="53:/usr/bin/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f5dc6746b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f5dc6745020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5dc67451b0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f5dc6745340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x7f5dc6748b80" loc="52:/usr/bin/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f5dc6748b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f5dc6746020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5dc67461b0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f5dc6746340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x7f5dc6733660" loc="104:/usr/bin/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x7f5dc6733660"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5dc67339e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5dc6733b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f5dc6717150" loc="24:/usr/bin/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f5dc6717150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5dc6717d60"/>
        <function-ref name="readDone" scoped="" ref="0x7f5dc66ff260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f5dc66ffaf0" loc="26:/usr/bin/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f5dc66ffaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5dc66fd750"/>
        <function-ref name="readDone" scoped="" ref="0x7f5dc66fdbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f5dc66fc300" loc="27:/usr/bin/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f5dc66fc300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5dc66fc6a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5dc66fc830"/>
        <function-ref name="request" scoped="" ref="0x7f5dc66fc9c0"/>
        <function-ref name="granted" scoped="" ref="0x7f5dc66fcb50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5dc66fcce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7f5dc66e7160" loc="40:/usr/bin/tinyos-main/tos/platforms/mica/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f5dc66e7160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f5dc66e74e0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5dc66e7670"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f5dc66e7800"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/usr/bin/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f5dc7b2aa60" loc="62:/usr/bin/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/usr/bin/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/usr/bin/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f5dc7b28650" loc="60:/usr/bin/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/usr/bin/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f5dc7b16e00" loc="60:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f5dc7b16b80" loc="60:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f5dc7b193e0" loc="31:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f5dc7b19e60" loc="39:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f5dc7b19be0" loc="39:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f5dc7b179a0" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f5dc7b17720" loc="46:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f5dc7b162b0" loc="53:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f5dc7b02270" loc="44:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f5dc7b029a0" loc="45:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f5dc7b04420" loc="42:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f5dc7b01820" loc="47:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5dc7b04b20" loc="43:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f5dc7b010e0" loc="46:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5dc7b05610" loc="40:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f5dc7b05ce0" loc="41:/usr/bin/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/usr/bin/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/usr/bin/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f5dc8bddc40" loc="57:/usr/bin/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/usr/bin/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f5dc7c70bf0" loc="72:/usr/bin/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/usr/bin/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f5dc7c703e0" loc="65:/usr/bin/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/usr/bin/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f5dc7c65c50" loc="67:/usr/bin/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f5dc7c604f0" loc="75:/usr/bin/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/usr/bin/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/usr/bin/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/usr/bin/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f5dc7b72ab0" loc="76:/usr/bin/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/usr/bin/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/usr/bin/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/usr/bin/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f5dc7b4e1f0" loc="62:/usr/bin/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/usr/bin/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f5dc7c0e470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/usr/bin/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f5dc7b8eb80" loc="52:/usr/bin/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f5dc7867a60" loc="61:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f5dc7866270" loc="67:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f5dc7866a50" loc="72:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f5dc7864a20" loc="83:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f5dc78621f0" loc="100:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5dc7862a00" loc="117:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f5dc7864270" loc="77:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5dc78615a0" loc="134:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f5dc7861320" loc="134:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f5dc78672d0" loc="56:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f5dc7863270" loc="89:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f5dc7863a00" loc="94:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/usr/bin/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5dc78165d0" loc="53:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5dc78165d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f5dc780d420" loc="136:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f5dc7812d60" loc="83:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f5dc780fb10" loc="114:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f5dc780f540" loc="114:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f5dc780f880" loc="114:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f5dc7810d60" loc="98:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f5dc7808460" loc="151:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f5dc780dbb0" loc="144:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f5dc7810570" loc="92:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f5dc78132a0" loc="64:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f5dc7813020" loc="64:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f5dc780eaa0" loc="129:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f5dc780e4d0" loc="129:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f5dc780e810" loc="129:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f5dc7813d60" loc="73:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f5dc7813ae0" loc="73:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5dc7812650" loc="78:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/usr/bin/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f5dc7735110" loc="113:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f5dc7739e40" loc="113:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f5dc7734600" loc="138:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f5dc7734380" loc="138:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f5dc7739460" loc="104:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5dc7735960" loc="130:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/usr/bin/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x7f5dc7767020" loc="65:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc776dc20" loc="65:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f5dc7766110" loc="78:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc7767e10" loc="78:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f5dc7762490" loc="126:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc7763e50" loc="126:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5dc77621c0" loc="126:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f5dc7763560" loc="106:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f5dc77655e0" loc="94:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc7765020" loc="94:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5dc7765350" loc="94:/usr/bin/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f5dc77462c0" loc="80:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5dc778d1d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f5dc7774800" loc="80:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5dc778d1d0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f5dc7774b80" loc="80:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5dc7746020" loc="80:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f5dc7742970" loc="135:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc7742370" loc="135:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5dc77426a0" loc="135:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f5dc7741a60" loc="123:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f5dc7745630" loc="96:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc77453b0" loc="96:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f5dc7744b80" loc="110:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc77445a0" loc="110:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f5dc77448f0" loc="110:/usr/bin/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/usr/bin/tinyos-main/tos/interfaces/Read.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f5dc7748c50" loc="49:/usr/bin/tinyos-main/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f5dc7748c50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f5dc7732540" loc="55:/usr/bin/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="50:/usr/bin/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f5dc77302b0" loc="63:/usr/bin/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f5dc7748c50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f5dc7732cc0" loc="63:/usr/bin/tinyos-main/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f5dc7730020" loc="63:/usr/bin/tinyos-main/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f5dc7748c50"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/usr/bin/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f5dc773d9c0" loc="78:/usr/bin/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/usr/bin/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
              <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc773d060" loc="78:/usr/bin/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f5dc773d3b0" loc="78:/usr/bin/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5dc773d6e0" loc="78:/usr/bin/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f5dc7751040" loc="177:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f5dc778edc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5dc7754d90" loc="177:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f5dc775dbc0" loc="88:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5dc778d1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5dc775d940" loc="88:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f5dc7761020" loc="68:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5dc778d1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f5dc7761ae0" loc="78:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5dc778d1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5dc7761860" loc="78:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f5dc7757600" loc="121:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5dc778d1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5dc7757020" loc="121:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f5dc7757370" loc="121:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5dc778d1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f5dc775e020" loc="103:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5dc778d1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5dc77599e0" loc="103:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f5dc7759d30" loc="103:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5dc778d1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f5dc7753ae0" loc="147:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5dc7753860" loc="147:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f5dc7752e60" loc="162:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5dc77528b0" loc="162:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f5dc7752bd0" loc="162:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f5dc778e9e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f5dc7755890" loc="136:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5dc7755610" loc="136:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f5dc774f600" loc="187:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f5dc778edc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5dc774f020" loc="187:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f5dc774f370" loc="187:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f5dc778edc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f5dc774e490" loc="195:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/usr/bin/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f5dc778edc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/usr/bin/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5dc76f3c40" loc="53:/usr/bin/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5dc76f3c40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f5dc76ef5a0" loc="61:/usr/bin/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/usr/bin/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5dc76ddcf0" loc="57:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5dc76ddcf0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f5dc76d7020" loc="57:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5dc76d7020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f5dc76d7940" loc="64:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5dc76d7020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f5dc76d6a50" loc="76:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f5dc76d61f0" loc="71:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f5dc76d51f0" loc="82:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/usr/bin/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5dc76e5400" loc="56:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5dc76e5400"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f5dc76e5640" loc="56:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5dc76e5640"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f5dc76e12d0" loc="109:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5dc76e5640"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f5dc76e32b0" loc="78:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f5dc76e2900" loc="103:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5dc76e5640"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5dc76e5640"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f5dc76e2330" loc="103:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5dc76e5640"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f5dc76e2670" loc="103:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5dc76e5640"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f5dc76e3a90" loc="88:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f5dc76e1ac0" loc="116:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5dc76e5640"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f5dc76e42a0" loc="66:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5dc76e5640"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f5dc76e4020" loc="66:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5dc76e5640"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5dc76e4ad0" loc="73:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/usr/bin/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f5dc76a2e50" loc="89:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f5dc76a3c40" loc="85:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f5dc76a68c0" loc="79:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f5dc76a2680" loc="86:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f5dc76a2400" loc="86:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f5dc76a3470" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f5dc76a31f0" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f5dc76a0890" loc="90:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f5dc76a0610" loc="90:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f5dc76a40e0" loc="80:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f5dc76a4a80" loc="81:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f5dc76a4800" loc="81:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x7f5dc768d350" loc="92:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x7f5dc76902d0" loc="68:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7f5dc7690a50" loc="74:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7f5dc768f2b0" loc="80:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f5dc768db60" loc="98:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7f5dc768fae0" loc="86:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f5dc7691020" loc="57:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f5dc7badda0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f5dc7baa230"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f5dc7691a60" loc="63:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f5dc7badda0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f5dc7baa230"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f5dc76917e0" loc="63:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f5dc7badda0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f5dc7baa230"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f5dc76a73d0" loc="41:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5dc76a73d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f5dc7697020" loc="74:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f5dc769a020" loc="58:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5dc76a7d10" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5dc76a73d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f5dc769a790" loc="62:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f5dc76977e0" loc="80:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5dc769d710" loc="54:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5dc76a73d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f5dc769d490" loc="54:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5dc76a73d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f5dc7699020" loc="65:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5dc7699770" loc="68:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f5dc76b7a20" loc="55:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f5dc76b7a20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f5dc76af2d0" loc="98:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f5dc76b0350" loc="87:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5dc76b4390" loc="61:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f5dc76b7a20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f5dc76afcb0" loc="104:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f5dc76afa30" loc="104:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f5dc76ae510" loc="110:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f5dc76b3c90" loc="75:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f5dc76b3500" loc="70:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f5dc76b0b10" loc="93:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5dc76b4d40" loc="67:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f5dc76b7a20"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f5dc76b4ac0" loc="67:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f5dc76b7a20"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f5dc76b2420" loc="78:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5dc76b2b70" loc="81:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/usr/bin/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/usr/bin/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f5dc74fcd40" loc="59:/usr/bin/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/usr/bin/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5dc778d1d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f5dc74fc730" loc="59:/usr/bin/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5dc778d1d0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f5dc74fcab0" loc="59:/usr/bin/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f5dc74ef2b0" loc="65:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc74f0bd0" loc="65:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f5dc74ef020" loc="65:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f5dc74ed430" loc="71:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc74ed1b0" loc="71:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f5dc74f03e0" loc="57:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f5dc74f49e0" loc="52:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f5dc74f4760" loc="52:/usr/bin/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f5dc74f65f0" loc="59:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc74f6370" loc="59:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f5dc74f57d0" loc="71:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc74f5550" loc="71:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f5dc74f3940" loc="85:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc74f36c0" loc="85:/usr/bin/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f5dc74e06c0" loc="65:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc74e0440" loc="65:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f5dc74e4790" loc="46:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc74e4170" loc="46:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f5dc74e4500" loc="46:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f5dc74e1680" loc="59:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc74e1400" loc="59:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f5dc74e3b90" loc="53:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc74e3570" loc="53:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f5dc74e3900" loc="53:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f5dc74df6c0" loc="71:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc74df440" loc="71:/usr/bin/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x7f5dc74db0e0" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f5dc74dc880" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f5dc74dc600" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f5dc74db930" loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f5dc74e5ac0" loc="35:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5dc74e5ac0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f5dc74e5d00" loc="35:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5dc74e5d00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f5dc74d6b40" loc="63:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5dc74e5d00"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc74d68c0" loc="63:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f5dc74d5cc0" loc="70:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc74d5a40" loc="70:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f5dc74d88e0" loc="49:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc74d8660" loc="49:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5dc74cd020" loc="78:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5dc74e5d00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc74cc9e0" loc="78:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f5dc74ccd40" loc="78:/usr/bin/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5dc74e5d00"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x7f5dc74b0720" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f5dc74b0720"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x7f5dc74ab8c0" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc74ab640" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5dc74acdd0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f5dc74b0720"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc74acb50" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f5dc74ac350" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc74ac0d0" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5dc74aa660" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f5dc74b0720"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc74aa060" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f5dc74aa3d0" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f5dc74b0720"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/usr/bin/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/usr/bin/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f5dc74987c0" loc="47:/usr/bin/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc7498540" loc="47:/usr/bin/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f5dc7468bf0" loc="120:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f5dc746abe0" loc="97:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f5dc746a270" loc="88:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f5dc7468420" loc="102:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f5dc74678b0" loc="128:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/usr/bin/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x7f5dc7464e80" loc="41:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f5dc77ad630"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc7464c00" loc="41:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f5dc746ba30" loc="37:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f5dc77ad630"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f5dc7464490" loc="39:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f5dc77ad630"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc7464210" loc="39:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f5dc7461990" loc="45:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f5dc77ad630"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc7461370" loc="45:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f5dc7461700" loc="45:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f5dc77ad630"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f5dc7462be0" loc="43:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f5dc77ad630"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc74625c0" loc="43:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f5dc7462950" loc="43:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f5dc77ad630"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x7f5dc7460d20" loc="49:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f5dc77ad210"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc7460aa0" loc="49:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x7f5dc745ea50" loc="51:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7f5dc77ad210"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc745e440" loc="51:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f5dc745e7c0" loc="51:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7f5dc77ad210"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f5dc7460350" loc="47:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc74600d0" loc="47:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7f5dc745d1f0" loc="53:/usr/bin/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f5dc77ad210"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f5dc7478cd0" loc="67:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f5dc77ad630"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f5dc7478380" loc="67:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f5dc77ad630"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f5dc7478700" loc="67:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5dc7478a30" loc="67:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f5dc746d660" loc="122:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc746d060" loc="122:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5dc746d390" loc="122:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f5dc746e790" loc="110:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f5dc7477c00" loc="83:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc7477980" loc="83:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f5dc7476de0" loc="97:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc7476800" loc="97:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f5dc7476b50" loc="97:/usr/bin/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x7f5dc7409750" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x7f5dc741a9b0" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc741a730" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x7f5dc74042a0" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f5dc778edc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc7404020" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x7f5dc7402a30" loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc74027b0" loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f5dc7406a50" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5dc778d1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc74067d0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f5dc74082e0" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5dc778d1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc7408060" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f5dc7405790" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5dc778d1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc74051b0" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f5dc7405500" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5dc778d1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f5dc7406050" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5dc778d1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc7408a40" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f5dc7408d90" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5dc778d1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f5dc7402020" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f5dc778edc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc74049d0" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f5dc7404d20" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f5dc778edc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x7f5dc741c960" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x7f5dc740c350" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x7f5dc740a5f0" loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc740a370" loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x7f5dc740ce60" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc740cbe0" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x7f5dc740b9a0" loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc740b720" loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x7f5dc73d5d60" loc="60:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x7f5dc73d6e10" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7f5dc77b1180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x7f5dc73d6b90" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7f5dc77b1180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f5dc73d55f0" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x7f5dc73d6350" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x7f5dc73d35b0" loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f5dc77b1180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x7f5dc73cda90" loc="70:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc73cd810" loc="70:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f5dc73d1e00" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc73d1b80" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f5dc73cf4d0" loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f5dc73d0c70" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc73d0690" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f5dc73d09e0" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7f5dc73d12a0" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc73d1020" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7f5dc73cd020" loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc73cfce0" loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f5dc7433020" loc="46:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7f5dc74356c0" loc="40:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc7435440" loc="40:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7f5dc7433b50" loc="52:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc74338d0" loc="52:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x7f5dc7432420" loc="59:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x7f5dc7431020" loc="65:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc7432d20" loc="65:/usr/bin/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x7f5dc741b2a0" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc741b020" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x7f5dc74221f0" loc="86:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x7f5dc74239d0" loc="80:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5dc74233c0" loc="80:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f5dc7423740" loc="80:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7f5dc742d3f0" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc742d170" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x7f5dc7426020" loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc742dc80" loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x7f5dc7425020" loc="69:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5dc7426910" loc="69:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f5dc7426c90" loc="69:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x7f5dc7437a80" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7f5dc742f910" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc742f370" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f5dc742f680" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7f5dc7425b90" loc="75:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc7425910" loc="75:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x7f5dc73e90b0" loc="131:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc73ebdd0" loc="131:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x7f5dc73ec680" loc="120:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc73ec400" loc="120:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x7f5dc73fedf0" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc73fe820" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x7f5dc73feb60" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x7f5dc73f4020" loc="75:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc73f5ca0" loc="75:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x7f5dc73de050" loc="156:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc73e5a40" loc="156:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f5dc73e5d90" loc="156:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x7f5dc73f5430" loc="69:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc73f51b0" loc="69:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x7f5dc73eb5e0" loc="125:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc73eb020" loc="125:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x7f5dc73eb350" loc="125:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x7f5dc73f29d0" loc="88:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5dc73f23c0" loc="88:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f5dc73f2740" loc="88:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x7f5dc73e52a0" loc="151:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc73e5020" loc="151:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x7f5dc73f6920" loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc73f66a0" loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x7f5dc73f03f0" loc="99:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc73f0170" loc="99:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x7f5dc73f18b0" loc="94:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5dc73f12a0" loc="94:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f5dc73f1620" loc="94:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x7f5dc73db820" loc="178:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f5dc77ad630"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7f5dc73dead0" loc="162:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc73de850" loc="162:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7f5dc73db020" loc="173:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f5dc77ad210"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x7f5dc73e76b0" loc="146:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc73e70d0" loc="146:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f5dc73e7420" loc="146:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x7f5dc73f4b20" loc="81:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc73f48a0" loc="81:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x7f5dc73edbf0" loc="115:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc73ed620" loc="115:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x7f5dc73ed960" loc="115:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x7f5dc73e9e40" loc="136:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc73e9870" loc="136:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x7f5dc73e9bb0" loc="136:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f5dc73da2a0" loc="185:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc73da020" loc="185:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7f5dc73ee2b0" loc="105:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc73f0bf0" loc="105:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f5dc73ee020" loc="105:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x7f5dc73fe040" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc7401da0" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7f5dc73dd680" loc="168:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc73dd400" loc="168:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x7f5dc73e8910" loc="141:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc73e8690" loc="141:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x7f5dc73eedb0" loc="110:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc73eeb30" loc="110:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x7f5dc741ee00" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc741e820" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x7f5dc741eb70" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x7f5dc741d620" loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7f5dc7420430" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc74201b0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x7f5dc741e020" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5dc778d1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc7420c40" loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x7f5dc7417c50" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc74179d0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x7f5dc7417110" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc7421e20" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x7f5dc74164d0" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x7f5dc7415020" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc7416d20" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x7f5dc733eb40" loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x7f5dc733d470" loc="72:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x7f5dc733ddf0" loc="79:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x7f5dc733e3e0" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x7f5dc72f7350" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc72f70d0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f5dc72f6dd0" loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc72f6b50" loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f5dc72f62b0" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc72f7c70" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f5dc72f6020" loc="54:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7f5dc72f08d0" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
              <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc72f0610" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f5dc72d81f0" loc="50:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5dc778d1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f5dc72d7190" loc="60:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f5dc72d89d0" loc="55:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f5dc778edc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f5dc72dd940" loc="45:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f5dc778edc0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5dc778d1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f5dc72dd360" loc="45:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f5dc778edc0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f5dc72dd6b0" loc="45:/usr/bin/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5dc778d1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/usr/bin/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f5dc720f540" loc="53:/usr/bin/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f5dc720fe70" loc="61:/usr/bin/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/usr/bin/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/usr/bin/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/usr/bin/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f5dc720a660" loc="65:/usr/bin/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f5dc7210db0" loc="59:/usr/bin/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/usr/bin/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/usr/bin/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/usr/bin/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f5dc7211c80" loc="90:/usr/bin/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/usr/bin/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f5dc720c530" loc="98:/usr/bin/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/usr/bin/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f5dc71fb020" loc="79:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f5dc7206020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f5dc71fdd20" loc="79:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f5dc7206020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f5dc71fe020" loc="53:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f5dc71feb20" loc="62:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f5dc7206020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f5dc71fe8a0" loc="62:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f5dc7206020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f5dc71fd470" loc="70:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/usr/bin/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f5dc7206020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7f5dc70877f0" loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
              <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc7087530" loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x7f5dc708ab60" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc708a8e0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f5dc70755e0" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f5dc7075360" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x7f5dc7075dc0" loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5dc70772a0" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f5dc7077020" loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5dc7077c20" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f5dc70779a0" loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x7f5dc707b0b0" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f5dc707ddf0" loc="57:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x7f5dc707a680" loc="71:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5dc778d1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f5dc707a400" loc="71:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5dc778d1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x7f5dc707bbc0" loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f5dc778d1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f5dc707b940" loc="62:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x7f5dc70792a0" loc="80:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f5dc7079020" loc="80:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x7f5dc707d5b0" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5dc778d1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f5dc707d330" loc="49:/usr/bin/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f5dc778d1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x7f5dc6fbda90" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x7f5dc6fbabb0" loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f5dc6fb86a0" loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f5dc6fb8420" loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x7f5dc6fb8e60" loc="69:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x7f5dc6fba350" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f5dc6fb7740" loc="74:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x7f5dc6fb5510" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc6fb5290" loc="48:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x7f5dc6fb4980" loc="63:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f5dc6fb4110" loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f5dc6fb5e50" loc="56:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/usr/bin/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f5dc6f22350" loc="52:/usr/bin/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f5dc6f25ad0" loc="46:/usr/bin/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/usr/bin/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5dc8b75090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/usr/bin/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f5dc6ef2600" loc="53:/usr/bin/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f5dc6ef2600"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f5dc6eee2a0" loc="64:/usr/bin/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/usr/bin/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f5dc6ef2600"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f5dc6eee020" loc="64:/usr/bin/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f5dc6ef2600"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x7f5dc6ebea00" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc6ebe780" loc="55:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5dc6ec0810" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc6ec0590" loc="40:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x7f5dc6ebf5e0" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc6ebf020" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f5dc6ebf350" loc="45:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5dc6ebe020" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc6ebfd70" loc="50:/usr/bin/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x7f5dc6e83ce0" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f5dc6e83a60" loc="52:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f5dc6e83270" loc="44:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/usr/bin/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/usr/bin/tinyos-main/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5dc6d6d910" loc="59:/usr/bin/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5dc6d6d910"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f5dc6d6db50" loc="59:/usr/bin/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5dc6d6db50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f5dc6d646b0" loc="66:/usr/bin/tinyos-main/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/usr/bin/tinyos-main/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5dc6d6db50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f5dc6d64430" loc="66:/usr/bin/tinyos-main/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5dc6d6db50"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f5dc6d67020" loc="54:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f5dc6d661f0" loc="66:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f5dc6d679c0" loc="61:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f5dc6d67740" loc="61:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f5dc6d69760" loc="53:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f5dc6d71810" loc="62:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5dc6d71590" loc="62:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f5dc6d70bf0" loc="74:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5dc6d70970" loc="74:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f5dc6d700e0" loc="68:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f5dc6d6f6c0" loc="81:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5dc6d6f440" loc="81:/usr/bin/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f5dc6c6e350" loc="40:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5dc6c6e350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7f5dc6c652a0" loc="88:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7f5dc6c65020" loc="88:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f5dc6c66020" loc="76:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5dc6c6ec90" loc="47:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5dc6c6e350"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f5dc6c68110" loc="60:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5dc6c6e350"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f5dc6c6ae10" loc="60:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5dc6c6e350"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f5dc6c688c0" loc="64:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f5dc6c667e0" loc="82:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5dc6c6a670" loc="53:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5dc6c6e350"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f5dc6c6a3f0" loc="53:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5dc6c6e350"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f5dc6c67070" loc="67:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5dc6c677c0" loc="70:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/usr/bin/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f5dc6c4a2c0" loc="70:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f5dc6c4c8b0" loc="70:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f5dc6c4cc40" loc="70:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5dc6c4a020" loc="70:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f5dc6c48800" loc="82:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f5dc6c47ae0" loc="82:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f5dc6c47e70" loc="82:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5dc6c481e0" loc="82:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f5dc6c48550" loc="83:/usr/bin/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/usr/bin/tinyos-main/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f5dc6c4e4c0" loc="45:/usr/bin/tinyos-main/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/usr/bin/tinyos-main/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f5dc6c4e240" loc="45:/usr/bin/tinyos-main/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7f5dc6c33560" loc="86:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7f5dc6c294d0" loc="126:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7f5dc6c2edd0" loc="117:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7f5dc6c27020" loc="128:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7f5dc6c29c70" loc="128:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7f5dc6c34d80" loc="83:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7f5dc6c2b9e0" loc="122:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7f5dc6c2b760" loc="122:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f5dc6c2f510" loc="113:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7f5dc6c2f290" loc="113:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f5dc6c314e0" loc="97:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7f5dc6c24c20" loc="141:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f5dc6c249a0" loc="141:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f5dc6c2fcb0" loc="114:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7f5dc6c262a0" loc="131:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7f5dc6c26020" loc="131:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f5dc6c25270" loc="136:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7f5dc6c2ac80" loc="125:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7f5dc6c2aa00" loc="125:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7f5dc6c24270" loc="140:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7f5dc6c2c7d0" loc="119:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7f5dc6c2c550" loc="119:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f5dc6c30020" loc="103:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5dc6c31c40" loc="103:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f5dc6c2e670" loc="116:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7f5dc6c2e3f0" loc="116:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7f5dc6c2a270" loc="123:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7f5dc6c27790" loc="129:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7f5dc6c26a00" loc="132:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f5dc6c25a20" loc="138:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7f5dc6c2b020" loc="120:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f5dc6c33cf0" loc="89:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f5dc6c30a20" loc="109:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5dc6c307a0" loc="109:/usr/bin/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/usr/bin/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/usr/bin/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f5dc6bc2e10" loc="95:/usr/bin/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/usr/bin/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5dc6bbf6a0" loc="105:/usr/bin/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/usr/bin/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x7f5dc6b46850" loc="81:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f5dc6b43de0" loc="87:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f5dc6b478f0" loc="79:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f5dc6b41020" loc="91:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f5dc6b42810" loc="88:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f5dc6b42590" loc="88:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f5dc6b45c40" loc="83:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f5dc6b459c0" loc="83:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f5dc6b41a20" loc="92:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f5dc6b417a0" loc="92:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f5dc6b460e0" loc="80:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x7f5dc6b43610" loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f5dc6b43390" loc="84:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f5dc6b452a0" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f5dc6b45020" loc="82:/usr/bin/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/usr/bin/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f5dc69395e0" loc="75:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc6939020" loc="75:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5dc6939350" loc="75:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f5dc6931bb0" loc="125:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc69315b0" loc="125:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5dc69318e0" loc="125:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f5dc6937d20" loc="112:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f5dc6936900" loc="89:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc6936680" loc="89:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f5dc6935e00" loc="100:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5dc6935820" loc="100:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5dc776fe30"/>
                <typename><typedef-ref name="message_t" ref="0x7f5dc776d470"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f5dc6935b70" loc="100:/usr/bin/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x7f5dc68910e0" loc="32:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f5dc6892830" loc="25:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x7f5dc6891930" loc="39:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/usr/bin/tinyos-main/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/usr/bin/tinyos-main/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f5dc688dd30" loc="52:/usr/bin/tinyos-main/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f5dc688dd30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f5dc6889660" loc="58:/usr/bin/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/usr/bin/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f5dc6888400" loc="66:/usr/bin/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/usr/bin/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f5dc688dd30"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f5dc6889e20" loc="66:/usr/bin/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f5dc6888170" loc="66:/usr/bin/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f5dc688dd30"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f5dc6878830" loc="100:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f5dc6879ad0" loc="100:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f5dc6879e50" loc="100:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f5dc6878210" loc="101:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f5dc6878580" loc="101:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f5dc68756c0" loc="119:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5dc68774b0" loc="119:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f5dc68777f0" loc="119:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7f5dc6877b50" loc="119:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x7f5dc6875020" loc="120:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x7f5dc6875400" loc="120:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f5dc687c020" loc="70:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f5dc687e1a0" loc="70:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f5dc687e520" loc="70:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f5dc687e8a0" loc="71:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f5dc687ec10" loc="71:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f5dc687b9a0" loc="91:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f5dc687b0c0" loc="81:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5dc687ca90" loc="81:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f5dc687cdd0" loc="81:/usr/bin/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x7f5dc6863480" loc="114:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x7f5dc686b020" loc="53:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5dc7be16c0"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x7f5dc7be1b90"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x7f5dc6861850" loc="140:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f5dc68615d0" loc="140:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5dc8b85a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f5dc6863d20" loc="122:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x7f5dc6868de0" loc="82:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x7f5dc686ba80" loc="58:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5dc7be16c0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7f5dc7be1b90"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x7f5dc686b800" loc="58:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5dc7be16c0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7f5dc7be1b90"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x7f5dc6867d20" loc="91:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x7f5dc6862d40" loc="133:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f5dc685f070" loc="150:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x7f5dc6867570" loc="86:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x7f5dc6866ca0" loc="99:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x7f5dc6866520" loc="95:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7f5dc68644c0" loc="106:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x7f5dc6862530" loc="127:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x7f5dc6869db0" loc="69:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5dc7bd8590"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f5dc7bd8c70"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x7f5dc6869b30" loc="69:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5dc7bd8590"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f5dc7bd8c70"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x7f5dc6864cf0" loc="110:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x7f5dc6869350" loc="64:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5dc7bd8590"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f5dc7bd8c70"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f5dc6868620" loc="75:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f5dc685fc00" loc="156:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5dc685f980" loc="156:/usr/bin/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f5dc8b7d5a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f5dc67e5420" loc="56:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5dc7c67600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f5dc67e4500" loc="73:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f5dc67e8b50" loc="46:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f5dc67e5c90" loc="65:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5dc7cb1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f5dc67e4e30" loc="81:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/usr/bin/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/usr/bin/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/usr/bin/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f5dc676d020" loc="62:/usr/bin/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/usr/bin/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
